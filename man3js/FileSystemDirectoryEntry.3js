.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "FileSystemDirectoryEntry" "JS" "February 20, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
FileSystemDirectoryEntry \- FileSystemDirectoryEntry
.SH SYNOPSIS
The \f[B]\f[CB]FileSystemDirectoryEntry\f[B]\f[R] interface of the File
and Directory Entries API represents a directory in a file system.
It provides methods which make it possible to access and manipulate the
files in a directory, as well as to access the entries within the
directory.
.SH BASIC CONCEPTS
You can create a new directory by calling \f[CR]getDirectory()\f[R].
If you want to create subdirectories, create each child directory in
sequence.
If you try creating a directory using a full path that includes parent
directories that do not exist yet, an error is returned.
So create the hierarchy by recursively adding a new path after creating
the parent directory.
.SS Example
In the following code snippet, we create a directory called
\[lq]Documents.\[rq]
.IP
.EX
\f[I]// Taking care of the browser\-specific prefixes.\f[R]
window.requestFileSystem =
  window.requestFileSystem || window.webkitRequestFileSystem;
window.directoryEntry = window.directoryEntry || window.webkitDirectoryEntry;

\f[I]// \&...\f[R]

\f[B]function\f[R] onFs(fs) {
  fs.root.getDirectory(
    \[dq]Documents\[dq],
    { create: \f[B]true\f[R] },
    (directoryEntry) \f[B]=>\f[R] {
      \f[I]//directoryEntry.isFile === false\f[R]
      \f[I]//directoryEntry.isDirectory === true\f[R]
      \f[I]//directoryEntry.name === \[aq]Documents\[aq]\f[R]
      \f[I]//directoryEntry.fullPath === \[aq]/Documents\[aq]\f[R]
    },
    onError,
  );
}

\f[I]// Opening a file system with temporary storage\f[R]
window.requestFileSystem(TEMPORARY, 1024 * 1024 \f[I]/*1MB*/\f[R], onFs, onError);
.EE
.SH INSTANCE PROPERTIES
\f[I]This interface has no properties of its own, but inherits
properties from its parent interface, \f[CI]FileSystemEntry\f[I].\f[R]
.SH INSTANCE METHODS
\f[I]This interface inherits methods from its parent interface,
\f[CI]FileSystemEntry\f[I].\f[R]
.TP
\f[B]createReader()\f[R]
Creates a \f[CR]FileSystemDirectoryReader\f[R] object which can be used
to read the entries in this directory.
.TP
\f[B]getDirectory()\f[R]
Returns a \f[CR]FileSystemDirectoryEntry\f[R] object representing a
directory located at a given path, relative to the directory on which
the method is called.
.TP
\f[B]getFile()\f[R]
Returns a \f[CR]FileSystemFileEntry\f[R] object representing a file
located within the directory\[cq]s hierarchy, given a path relative to
the directory on which the method is called.
.TP
\f[B]removeRecursively()\f[R] \f[I](deprecated)\f[R] \f[I](non\-standard)\f[R]
Removes the directory as well as all of its content, hierarchically
iterating over its entire subtree of descendant files and directories.
.SH SEE ALSO
.IP \[bu] 2
File and Directory Entries API
.IP \[bu] 2
\f[CR]FileSystemDirectoryReader\f[R]
.IP \[bu] 2
\f[CR]FileSystemEntry\f[R]
.IP \[bu] 2
\f[CR]FileSystemFileEntry\f[R]
