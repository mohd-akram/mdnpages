.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "ANIMATION.PLAY" "3JS" "July 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Animation.play \- Animation: play() method
.SH SYNOPSIS
The \f[B]\f[CB]play()\f[B]\f[R] method of the Web Animations API\(cqs
\f[CR]Animation\f[R] Interface starts or resumes playing of an
animation.
If the animation is finished, calling \f[CR]play()\f[R] restarts the
animation, playing it from the beginning.
.SH SYNTAX
.IP
.EX
play()
.EE
.SS Parameters
None.
.SS Return value
None (\f[CR]undefined\f[R]).
.SH EXAMPLES
In the \c
.UR https://codepen.io/rachelnabors/pen/PNYGZQ?editors=0010
Growing/Shrinking Alice Game
.UE \c
\ example, clicking or tapping the cake causes Alice\(cqs growing
animation (\f[CR]aliceChange\f[R]) to play forward, causing her to get
bigger, as well as triggering the cake\(cqs animation.
Two \f[CR]Animation.play()\f[R]s, one \f[CR]EventListener\f[R]:
.IP
.EX
\f[I]// The cake has its own animation:\f[R]
\f[B]const\f[R] nommingCake = document
  .getElementById(\(dqeat\-me_sprite\(dq)
  .animate(
    [{ transform: \(dqtranslateY(0)\(dq }, { transform: \(dqtranslateY(\-80%)\(dq }],
    {
      fill: \(dqforwards\(dq,
      easing: \(dqsteps(4, end)\(dq,
      duration: aliceChange.effect.timing.duration / 2,
    },
  );

\f[I]// Pause the cake\(aqs animation so it doesn\(aqt play immediately.\f[R]
nommingCake.pause();

\f[I]// This function will play when ever a user clicks or taps\f[R]
\f[B]const\f[R] growAlice = () \f[B]=>\f[R] {
  \f[I]// Play Alice\(aqs animation.\f[R]
  aliceChange.play();

  \f[I]// Play the cake\(aqs animation.\f[R]
  nommingCake.play();
};

\f[I]// When a user holds their mouse down or taps, call growAlice to make all the animations play.\f[R]
cake.addEventListener(\(dqmousedown\(dq, growAlice, \f[B]false\f[R]);
cake.addEventListener(\(dqtouchstart\(dq, growAlice, \f[B]false\f[R]);
.EE
.SH SEE ALSO
.IP \(bu 2
Web Animations API
.IP \(bu 2
\f[CR]Animation\f[R] for other methods and properties you can use to
control web page animation.
.IP \(bu 2
\f[CR]Animation.pause()\f[R] to pause an animation.
.IP \(bu 2
\f[CR]Animation.reverse()\f[R] to play an animation backwards.
.IP \(bu 2
\f[CR]Animation.finish()\f[R] to finish an animation.
.IP \(bu 2
\f[CR]Animation.cancel()\f[R] to cancel an animation.
