.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "Window.getSelection" "JS" "March 12, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Window.getSelection \- Window: getSelection() method
.SH SYNOPSIS
The \f[B]\f[CB]Window.getSelection()\f[B]\f[R] method returns a
\f[CR]Selection\f[R] object representing the range of text selected by
the user or the current position of the caret.
.SH SYNTAX
.IP
.EX
getSelection()
.EE
.SS Parameters
None.
.SS Return value
A \f[CR]Selection\f[R] object.
.PP
When cast to string, either by appending an empty string
(\f[CR]\[dq]\[dq]\f[R]) or using \f[CR]Selection.toString()\f[R], this
object returns the text selected.
.PP
When called on an \f[CR]<iframe>\f[R] that is not displayed (e.g., where
\f[CR]display: none\f[R] is set) Firefox will return \f[CR]null\f[R],
whereas other browsers will return a \f[CR]Selection\f[R] object with
\f[CR]Selection.type\f[R] set to \f[CR]None\f[R].
.SH EXAMPLES
.IP
.EX
\f[B]function\f[R] foo() {
  \f[B]const\f[R] selObj = window.getSelection();
  alert(selObj);
  \f[B]const\f[R] selRange = selObj.getRangeAt(0);
  \f[I]// do stuff with the range\f[R]
}
.EE
.SH NOTES
.SS String representation of the Selection object
In JavaScript, when an object is passed to a function expecting a string
(like \f[CR]window.alert()\f[R] or \f[CR]document.write()\f[R]), the
object\[cq]s \f[CR]toString()\f[R] method is called and the returned
value is passed to the function.
This can make the object appear to be a string when used with other
functions when it is really an object with properties and methods.
.PP
In the above example, \f[CR]selObj.toString()\f[R] is automatically
called when it is passed to \f[CR]window.alert()\f[R].
However, attempting to use a JavaScript String property or method such
as \f[CR]length\f[R] or \f[CR]substr\f[R] directly on a
\f[CR]Selection\f[R] object will result in an error if it does not have
that property or method and may return unexpected results if it does.
To use a \f[CR]Selection\f[R] object as a string, call its
\f[CR]toString()\f[R] method directly:
.IP
.EX
\f[B]const\f[R] selectedText = selObj.toString();
.EE
.IP \[bu] 2
\f[CR]selObj\f[R] is a \f[CR]Selection\f[R] object.
.IP \[bu] 2
\f[CR]selectedText\f[R] is a string (Selected text).
.SS Related objects
You can call \f[CR]Document.getSelection()\f[R], which works identically
to \f[CR]Window.getSelection()\f[R].
.PP
It is worth noting that currently \f[CR]getSelection()\f[R] doesn\[cq]t
work on the content of \f[CR]<textarea>\f[R] and \f[CR]<input>\f[R]
elements in Firefox and Edge (Legacy).
\f[CR]HTMLInputElement.setSelectionRange()\f[R] or the
\f[CR]selectionStart\f[R] and \f[CR]selectionEnd\f[R] properties could
be used to work around this.
.PP
Notice also the difference between \f[I]selection\f[R] and
\f[I]focus\f[R].
\f[CR]Document.activeElement\f[R] returns the focused element.
.SH SEE ALSO
.IP \[bu] 2
Selection API
.IP \[bu] 2
\f[CR]Selection\f[R]
.IP \[bu] 2
\f[CR]Range\f[R]
.IP \[bu] 2
\f[CR]Document.getSelection()\f[R]
.IP \[bu] 2
\f[CR]HTMLInputElement.setSelectionRange()\f[R]
