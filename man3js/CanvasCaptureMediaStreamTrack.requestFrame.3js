.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "CanvasCaptureMediaStreamTrack.requestFrame" "JS" "December 16, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
CanvasCaptureMediaStreamTrack.requestFrame \-
CanvasCaptureMediaStreamTrack: requestFrame() method
.SH SYNOPSIS
The \f[B]\f[CB]requestFrame()\f[B]\f[R] method of the
\f[CR]CanvasCaptureMediaStreamTrack\f[R] interface requests that a frame
be captured from the canvas and sent to the stream.
.PP
Applications that need to carefully control the timing of rendering and
frame capture can use \f[CR]requestFrame()\f[R] to directly specify when
it\[cq]s time to capture a frame.
.PP
To prevent automatic capture of frames, so that frames are only captured
when \f[CR]requestFrame()\f[R] is called, specify a value of 0 for the
\f[CR]captureStream()\f[R] method when creating the stream.
.SH SYNTAX
.IP
.EX
requestFrame()
.EE
.SS Return value
None (\f[CR]undefined\f[R]).
.SH USAGE NOTES
There is currently an issue flagged in the specification pointing out
that at this time, no exceptions are being thrown if the canvas
isn\[cq]t origin\-clean.
This may change in the future, so it would be wise to plan ahead and
watch for exceptions such as \f[CR]SecurityError\f[R] (although the
specific error that might be thrown is not mentioned in the spec, this
is a likely candidate).
.SH EXAMPLE
.IP
.EX
\f[I]// Find the canvas element to capture\f[R]
\f[B]const\f[R] canvasElt = document.querySelector(\[dq]canvas\[dq]);

\f[I]// Get the stream\f[R]
\f[B]const\f[R] stream = canvasElt.captureStream(25); \f[I]// 25 FPS\f[R]

\f[I]// Send the current state of the canvas as a frame to the stream\f[R]
stream.getVideoTracks()[0].requestFrame();
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]CanvasCaptureMediaStreamTrack\f[R], the interface it belongs to.
.IP \[bu] 2
\f[CR]<canvas>\f[R]
