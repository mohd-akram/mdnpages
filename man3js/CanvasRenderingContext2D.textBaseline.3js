.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "CanvasRenderingContext2D.textBaseline" "JS" "April 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
CanvasRenderingContext2D.textBaseline \- CanvasRenderingContext2D:
textBaseline property
.SH SYNOPSIS
The \f[B]\f[CB]CanvasRenderingContext2D.textBaseline\f[B]\f[R] property
of the Canvas 2D API specifies the current text baseline used when
drawing text.
.SH VALUE
Possible values:
.TP
\f[B]\[dq]top\[dq]\f[R]
The text baseline is the top of the em square.
.TP
\f[B]\[dq]hanging\[dq]\f[R]
The text baseline is the hanging baseline.
(Used by Tibetan and other Indic scripts.)
.TP
\f[B]\[dq]middle\[dq]\f[R]
The text baseline is the middle of the em square.
.TP
\f[B]\[dq]alphabetic\[dq]\f[R]
The text baseline is the normal alphabetic baseline.
Default value.
.TP
\f[B]\[dq]ideographic\[dq]\f[R]
The text baseline is the ideographic baseline; this is the bottom of the
body of the characters, if the main body of characters protrudes beneath
the alphabetic baseline.
(Used by Chinese, Japanese, and Korean scripts.)
.TP
\f[B]\[dq]bottom\[dq]\f[R]
The text baseline is the bottom of the bounding box.
This differs from the ideographic baseline in that the ideographic
baseline doesn\[cq]t consider descenders.
.PP
The default value is \f[CR]\[dq]alphabetic\[dq]\f[R].
.SH EXAMPLES
.SS Comparison of property values
This example demonstrates the various \f[CR]textBaseline\f[R] property
values.
.SS HTML
.IP
.EX
<\f[B]canvas\f[R] id=\[dq]canvas\[dq] width=\[dq]550\[dq] height=\[dq]500\[dq]></\f[B]canvas\f[R]>
.EE
.SS JavaScript
.IP
.EX
\f[B]const\f[R] canvas = document.getElementById(\[dq]canvas\[dq]);
\f[B]const\f[R] ctx = canvas.getContext(\[dq]2d\[dq]);

\f[B]const\f[R] baselines = [
  \[dq]top\[dq],
  \[dq]hanging\[dq],
  \[dq]middle\[dq],
  \[dq]alphabetic\[dq],
  \[dq]ideographic\[dq],
  \[dq]bottom\[dq],
];
ctx.font = \[dq]36px serif\[dq];
ctx.strokeStyle = \[dq]red\[dq];

baselines.forEach((baseline, index) \f[B]=>\f[R] {
  ctx.textBaseline = baseline;
  \f[B]const\f[R] y = 75 + index * 75;
  ctx.beginPath();
  ctx.moveTo(0, y + 0.5);
  ctx.lineTo(550, y + 0.5);
  ctx.stroke();
  ctx.fillText(\[ga]Abcdefghijklmnop (${baseline})\[ga], 0, y);
});
.EE
.SS Result
.SS Comparison of property values on the same line
As with the previous example, this example demonstrates the various
\f[CR]textBaseline\f[R] property values, but in this case with all of
them lined up horizontally along the same line \[em] to make it easier
to see how they differ from each other.
.SS HTML
.IP
.EX
<\f[B]canvas\f[R] id=\[dq]canvas\[dq] width=\[dq]724\[dq] height=\[dq]160\[dq]></\f[B]canvas\f[R]>
.EE
.SS JavaScript
.IP
.EX
\f[B]const\f[R] canvas = document.getElementById(\[dq]canvas\[dq]);
\f[B]const\f[R] ctx = canvas.getContext(\[dq]2d\[dq]);

\f[B]const\f[R] baselines = [
  \[dq]top\[dq],
  \[dq]hanging\[dq],
  \[dq]middle\[dq],
  \[dq]alphabetic\[dq],
  \[dq]ideographic\[dq],
  \[dq]bottom\[dq],
];
ctx.font = \[dq]20px serif\[dq];
ctx.strokeStyle = \[dq]red\[dq];

ctx.beginPath();
ctx.moveTo(0, 100);
ctx.lineTo(840, 100);
ctx.moveTo(0, 55);
ctx.stroke();

baselines.forEach((baseline, index) \f[B]=>\f[R] {
  ctx.save();
  ctx.textBaseline = baseline;
  \f[B]let\f[R] x = index * 120 + 10;
  ctx.fillText(\[dq]Abcdefghijk\[dq], x, 100);
  ctx.restore();
  ctx.fillText(baseline, x + 5, 50);
});
.EE
.SS Result
.SH SEE ALSO
.IP \[bu] 2
The interface defining this property:
\f[CR]CanvasRenderingContext2D\f[R]
