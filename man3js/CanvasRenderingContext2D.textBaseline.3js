.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "CANVASRENDERINGCONTEXT2D.TEXTBASELINE" "3JS" "February 5, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
CanvasRenderingContext2D.textBaseline \- CanvasRenderingContext2D:
textBaseline property
.SH SYNOPSIS
The \f[B]\f[CB]CanvasRenderingContext2D.textBaseline\f[B]\f[R] property
of the Canvas 2D API specifies the current text baseline used when
drawing text.
.SH VALUE
Possible values:
.TP
\f[B]\(dqtop\(dq\f[R]
The text baseline is the top of the em square.
.TP
\f[B]\(dqhanging\(dq\f[R]
The text baseline is the hanging baseline.
(Used by Tibetan and other Indic scripts.)
.TP
\f[B]\(dqmiddle\(dq\f[R]
The text baseline is the middle of the em square.
.TP
\f[B]\(dqalphabetic\(dq\f[R]
The text baseline is the normal alphabetic baseline.
Default value.
.TP
\f[B]\(dqideographic\(dq\f[R]
The text baseline is the ideographic baseline; this is the bottom of the
body of the characters, if the main body of characters protrudes beneath
the alphabetic baseline.
(Used by Chinese, Japanese, and Korean scripts.)
.TP
\f[B]\(dqbottom\(dq\f[R]
The text baseline is the bottom of the bounding box.
This differs from the ideographic baseline in that the ideographic
baseline doesn\(cqt consider descenders.
.PP
The default value is \f[CR]\(dqalphabetic\(dq\f[R].
.SH EXAMPLES
.SS Comparison of property values
This example demonstrates the various \f[CR]textBaseline\f[R] property
values.
.SS HTML
.IP
.EX
<\f[B]canvas\f[R] id=\(dqcanvas\(dq width=\(dq550\(dq height=\(dq500\(dq></\f[B]canvas\f[R]>
.EE
.SS JavaScript
.IP
.EX
\f[B]const\f[R] canvas = document.getElementById(\(dqcanvas\(dq);
\f[B]const\f[R] ctx = canvas.getContext(\(dq2d\(dq);

\f[B]const\f[R] baselines = [
  \(dqtop\(dq,
  \(dqhanging\(dq,
  \(dqmiddle\(dq,
  \(dqalphabetic\(dq,
  \(dqideographic\(dq,
  \(dqbottom\(dq,
];
ctx.font = \(dq36px serif\(dq;
ctx.strokeStyle = \(dqred\(dq;

baselines.forEach((baseline, index) \f[B]=>\f[R] {
  ctx.textBaseline = baseline;
  \f[B]const\f[R] y = 75 + index * 75;
  ctx.beginPath();
  ctx.moveTo(0, y + 0.5);
  ctx.lineTo(550, y + 0.5);
  ctx.stroke();
  ctx.fillText(\(gaAbcdefghijklmnop (${baseline})\(ga, 0, y);
});
.EE
.SS Result
.SS Comparison of property values on the same line
As with the previous example, this example demonstrates the various
\f[CR]textBaseline\f[R] property values, but in this case with all of
them lined up horizontally along the same line \(em to make it easier to
see how they differ from each other.
.SS HTML
.IP
.EX
<\f[B]canvas\f[R] id=\(dqcanvas\(dq width=\(dq724\(dq height=\(dq160\(dq></\f[B]canvas\f[R]>
.EE
.SS JavaScript
.IP
.EX
\f[B]const\f[R] canvas = document.getElementById(\(dqcanvas\(dq);
\f[B]const\f[R] ctx = canvas.getContext(\(dq2d\(dq);

\f[B]const\f[R] baselines = [
  \(dqtop\(dq,
  \(dqhanging\(dq,
  \(dqmiddle\(dq,
  \(dqalphabetic\(dq,
  \(dqideographic\(dq,
  \(dqbottom\(dq,
];
ctx.font = \(dq20px serif\(dq;
ctx.strokeStyle = \(dqred\(dq;

ctx.beginPath();
ctx.moveTo(0, 100);
ctx.lineTo(840, 100);
ctx.moveTo(0, 55);
ctx.stroke();

baselines.forEach((baseline, index) \f[B]=>\f[R] {
  ctx.save();
  ctx.textBaseline = baseline;
  \f[B]let\f[R] x = index * 120 + 10;
  ctx.fillText(\(dqAbcdefghijk\(dq, x, 100);
  ctx.restore();
  ctx.fillText(baseline, x + 5, 50);
});
.EE
.SS Result
.SH SEE ALSO
.IP \(bu 2
The interface defining this property:
\f[CR]CanvasRenderingContext2D\f[R]
