.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "GPURENDERPASSENCODER.ENDOCCLUSIONQUERY" "3JS" "June 18, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
GPURenderPassEncoder.endOcclusionQuery \- GPURenderPassEncoder:
endOcclusionQuery() method
.SH SYNOPSIS
\f[B]Secure context:\f[R] This feature is available only in secure
contexts (HTTPS).
.PP
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]endOcclusionQuery()\f[B]\f[R] method of the
\f[CR]GPURenderPassEncoder\f[R] interface ends an active occlusion query
previously started with \f[CR]beginOcclusionQuery()\f[R].
.SH SYNTAX
.IP
.EX
endOcclusionQuery()
.EE
.SS Parameters
None.
.SS Return value
None (\f[CR]Undefined\f[R]).
.SS Validation
The following criteria must be met when calling
\f[B]\f[CB]endOcclusionQuery()\f[B]\f[R], otherwise a
\f[CR]GPUValidationError\f[R] is generated and the
\f[CR]GPURenderPassEncoder\f[R] becomes invalid:
.IP \(bu 2
An occlusion query is active for this render pass (i.e., via a previous
\f[CR]beginOcclusionQuery()\f[R] call).
.SH EXAMPLES
.IP
.EX
\f[I]// \&...\f[R]

\f[I]// Create a query set to hold the occlusion queries\f[R]
\f[B]const\f[R] querySet = device.createQuerySet({
  type: \(dqocclusion\(dq,
  count: 32,
});

\f[I]// Render pass descriptor object, including the querySet\f[R]
\f[B]const\f[R] renderPassDescriptor = {
  colorAttachments: [
    {
      clearValue: clearColor,
      loadOp: \(dqclear\(dq,
      storeOp: \(dqstore\(dq,
      view: context.getCurrentTexture().createView(),
    },
  ],
  occlusionQuerySet: querySet,
};

\f[I]// Begin the render pass\f[R]
\f[B]const\f[R] passEncoder = commandEncoder.beginRenderPass(renderPassDescriptor);

\f[I]// Begin an occlusion query at index 0\f[R]
passEncoder.beginOcclusionQuery(0);

\f[I]// Run some rendering commands\f[R]
passEncoder.setPipeline(renderPipeline);
passEncoder.setVertexBuffer(0, vertexBuffer);
passEncoder.draw(3);

\f[I]// End the occlusion query\f[R]
passEncoder.endOcclusionQuery();

\f[I]// \&...\f[R]
.EE
.SH SEE ALSO
.IP \(bu 2
The WebGPU API
