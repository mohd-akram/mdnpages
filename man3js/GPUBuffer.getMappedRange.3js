.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "GPUBUFFER.GETMAPPEDRANGE" "3JS" "June 18, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
GPUBuffer.getMappedRange \- GPUBuffer: getMappedRange() method
.SH SYNOPSIS
\f[B]Secure context:\f[R] This feature is available only in secure
contexts (HTTPS).
.PP
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]getMappedRange()\f[B]\f[R] method of the
\f[CR]GPUBuffer\f[R] interface returns an \f[CR]ArrayBuffer\f[R]
containing the mapped contents of the \f[CR]GPUBuffer\f[R] in the
specified range.
.PP
This can only happen once the \f[CR]GPUBuffer\f[R] has been successfully
mapped with \f[CR]GPUBuffer.mapAsync()\f[R] (this can be checked via
\f[CR]GPUBuffer.mapState\f[R]).
While the \f[CR]GPUBuffer\f[R] is mapped it cannot be used in any GPU
commands.
.PP
When you have finished working with the \f[CR]GPUBuffer\f[R] values,
call \f[CR]GPUBuffer.unmap()\f[R] to unmap it, making it accessible to
the GPU again.
.SH SYNTAX
.IP
.EX
getMappedRange()
getMappedRange(offset)
getMappedRange(offset, size)
.EE
.SS Parameters
.TP
\f[B]offset\f[R] \f[I](optional)\f[R]
A number representing the offset, in bytes, from the start of the
\f[CR]GPUBuffer\f[R]\(cqs mapped range to the start of the range to be
returned in the \f[CR]ArrayBuffer\f[R].
If \f[CR]offset\f[R] is omitted, it defaults to 0.
.TP
\f[B]size\f[R] \f[I](optional)\f[R]
A number representing the size, in bytes, of the \f[CR]ArrayBuffer\f[R]
to return.
If \f[CR]size\f[R] is omitted, the range extends to the end of the
\f[CR]GPUBuffer\f[R]\(cqs mapped range.
.SS Return value
An \f[CR]ArrayBuffer\f[R].
.SS Validation
The following criteria must be met when calling
\f[B]\f[CB]getMappedRange()\f[B]\f[R], otherwise an
\f[CR]OperationError\f[R] \f[CR]DOMException\f[R] is thrown:
.IP \(bu 2
\f[CR]offset\f[R] is a multiple of 8.
.IP \(bu 2
The total range to be mapped (\f[CR]size\f[R] if specified, or mapped
range length \- \f[CR]offset\f[R] if not) is a multiple of 4.
.IP \(bu 2
The total range is inside the bounds of the mapped range and does not
overlap with the \f[CR]ArrayBuffer\f[R] ranges specified by any other
active \f[CR]getMappedRange()\f[R] calls.
.SS Exceptions
.TP
\f[B]TypeError\f[R] \f[B]DOMException\f[R]
Thrown if an attempt is made to detach the \f[CR]ArrayBuffer\f[R] in any
way other than via \f[CR]GPUBuffer.unmap()\f[R].
.SH EXAMPLES
See the main \f[CR]GPUBuffer\f[R] page for an example.
.SH SEE ALSO
.IP \(bu 2
The WebGPU API
