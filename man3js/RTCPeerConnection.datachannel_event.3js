.\" Automatically generated by Pandoc 3.4
.\"
.TH "RTCPeerConnection.datachannel_event" "JS" "July 26, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
RTCPeerConnection.datachannel_event \- RTCPeerConnection: datachannel
event
.SH SYNOPSIS
A \f[B]\f[CB]datachannel\f[B]\f[R] event is sent to an
\f[CR]RTCPeerConnection\f[R] instance when an \f[CR]RTCDataChannel\f[R]
has been added to the connection, as a result of the remote peer calling
\f[CR]RTCPeerConnection.createDataChannel()\f[R].
.RS
.PP
\f[B]Note:\f[R] This event is \f[I]not\f[R] dispatched when the local
end of the connection creates the channel.
.RE
.PP
This event is not cancelable and does not bubble.
.SH SYNTAX
Use the event name in methods like \f[CR]addEventListener()\f[R], or set
an event handler property.
.IP
.EX
addEventListener(\[dq]datachannel\[dq], (event) \f[B]=>\f[R] {});

ondatachannel = (event) \f[B]=>\f[R] {};
.EE
.SH EVENT TYPE
An \f[CR]RTCDataChannelEvent\f[R].
Inherits from \f[CR]Event\f[R].
.SH EVENT PROPERTIES
\f[I]Also inherits properties from \f[CI]Event\f[I].\f[R]
.TP
\f[B]channel\f[R] \f[I](read\-only)\f[R]
Returns the \f[CR]RTCDataChannel\f[R] associated with the event.
.SH EXAMPLES
This example sets up a function that handles \f[CR]datachannel\f[R]
events by gathering the information needed to communicate with the newly
added \f[CR]RTCDataChannel\f[R] and by adding event handlers for the
events that occur on that channel.
.IP
.EX
pc.addEventListener(
  \[dq]datachannel\[dq],
  (ev) \f[B]=>\f[R] {
    receiveChannel = ev.channel;
    receiveChannel.onmessage = myHandleMessage;
    receiveChannel.onopen = myHandleOpen;
    receiveChannel.onclose = myHandleClose;
  },
  \f[B]false\f[R],
);
.EE
.PP
\f[CR]receiveChannel\f[R] is set to the value of the event\[cq]s
\f[CR]channel\f[R] property, which specifies the
\f[CR]RTCDataChannel\f[R] object representing the data channel linking
the remote peer to the local one.
.PP
This same code can also instead use the \f[CR]RTCPeerConnection\f[R]
interface\[cq]s \f[CR]ondatachannel\f[R] event handler property, like
this:
.IP
.EX
pc.ondatachannel = (ev) \f[B]=>\f[R] {
  receiveChannel = ev.channel;
  receiveChannel.onmessage = myHandleMessage;
  receiveChannel.onopen = myHandleOpen;
  receiveChannel.onclose = myHandleClose;
};
.EE
.SH SEE ALSO
.IP \[bu] 2
WebRTC API
.IP \[bu] 2
Using WebRTC data channels
.IP \[bu] 2
A simple RTCDataChannel sample
.IP \[bu] 2
\f[CR]RTCDataChannelEvent\f[R]
.IP \[bu] 2
\f[CR]RTCPeerConnection.createDataChannel()\f[R]
