.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "Element.insertAdjacentElement" "JS" "February 17, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Element.insertAdjacentElement \- Element: insertAdjacentElement() method
.SH SYNOPSIS
The \f[B]\f[CB]insertAdjacentElement()\f[B]\f[R] method of the
\f[CR]Element\f[R] interface inserts a given element node at a given
position relative to the element it is invoked upon.
.SH SYNTAX
.IP
.EX
insertAdjacentElement(position, element)
.EE
.SS Parameters
.TP
\f[B]position\f[R]
A string representing the position relative to the
\f[CR]targetElement\f[R]; must match (case\-insensitively) one of the
following strings:
.RS
.IP \[bu] 2
\f[CR]\[aq]beforebegin\[aq]\f[R]: Before the \f[CR]targetElement\f[R]
itself.
.IP \[bu] 2
\f[CR]\[aq]afterbegin\[aq]\f[R]: Just inside the
\f[CR]targetElement\f[R], before its first child.
.IP \[bu] 2
\f[CR]\[aq]beforeend\[aq]\f[R]: Just inside the
\f[CR]targetElement\f[R], after its last child.
.IP \[bu] 2
\f[CR]\[aq]afterend\[aq]\f[R]: After the \f[CR]targetElement\f[R]
itself.
.RE
.TP
\f[B]element\f[R]
The element to be inserted into the tree.
.SS Return value
The element that was inserted, or \f[CR]null\f[R], if the insertion
failed.
.SS Exceptions
.TP
\f[B]SyntaxError\f[R] \f[B]DOMException\f[R]
Thrown if the \f[CR]position\f[R] specified is not a recognized value.
.TP
\f[B]TypeError\f[R]
Thrown if the \f[CR]element\f[R] specified is not a valid element.
.SS Visualization of position names
.IP
.EX
\f[I]<!\-\- beforebegin \-\->\f[R]
<\f[B]p\f[R]>
  \f[I]<!\-\- afterbegin \-\->\f[R]
  foo
  \f[I]<!\-\- beforeend \-\->\f[R]
</\f[B]p\f[R]>
\f[I]<!\-\- afterend \-\->\f[R]
.EE
.RS
.PP
\f[B]Note:\f[R] The \f[CR]beforebegin\f[R] and \f[CR]afterend\f[R]
positions work only if the node is in a tree and has an element parent.
.RE
.SH EXAMPLES
.IP
.EX
beforeBtn.addEventListener(\[dq]click\[dq], () \f[B]=>\f[R] {
  \f[B]const\f[R] tempDiv = document.createElement(\[dq]div\[dq]);
  tempDiv.style.backgroundColor = randomColor();
  \f[B]if\f[R] (activeElem) {
    activeElem.insertAdjacentElement(\[dq]beforebegin\[dq], tempDiv);
  }
  setListener(tempDiv);
});

afterBtn.addEventListener(\[dq]click\[dq], () \f[B]=>\f[R] {
  \f[B]const\f[R] tempDiv = document.createElement(\[dq]div\[dq]);
  tempDiv.style.backgroundColor = randomColor();
  \f[B]if\f[R] (activeElem) {
    activeElem.insertAdjacentElement(\[dq]afterend\[dq], tempDiv);
  }
  setListener(tempDiv);
});
.EE
.PP
Have a look at our \c
.UR https://mdn.github.io/dom-examples/insert-adjacent/insertAdjacentElement.html
insertAdjacentElement.html
.UE \c
\ demo on GitHub (see the \c
.UR https://github.com/mdn/dom-examples/blob/main/insert-adjacent/insertAdjacentElement.html
source code
.UE \c
\ too.)
Here, we have a sequence of \f[CR]<div>\f[R] elements inside a
container.
When one is clicked, it becomes selected and you can then press the
\f[I]Insert before\f[R] and \f[I]Insert after\f[R] buttons to insert new
divs before or after the selected element using
\f[CR]insertAdjacentElement()\f[R].
.SH SEE ALSO
.IP \[bu] 2
\f[CR]Element.insertAdjacentHTML()\f[R]
.IP \[bu] 2
\f[CR]Element.insertAdjacentText()\f[R]
.IP \[bu] 2
\f[CR]Node.insertBefore()\f[R] (similar to \f[CR]beforebegin\f[R], with
different arguments)
.IP \[bu] 2
\f[CR]Node.appendChild()\f[R] (same effect as \f[CR]beforeend\f[R])
