.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "AbortSignal.any_static" "JS" "April 9, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
AbortSignal.any_static \- AbortSignal: any() static method
.SH SYNOPSIS
The \f[B]\f[CB]AbortSignal.any()\f[B]\f[R] static method takes an
iterable of abort signals and returns an \f[CR]AbortSignal\f[R].
The returned abort signal is aborted when any of the input iterable
abort signals are aborted.
The abort reason will be set to the reason of the first signal that is
aborted.
If any of the given abort signals are already aborted then so will be
the returned \f[CR]AbortSignal\f[R].
.SH SYNTAX
.IP
.EX
AbortSignal.any(iterable)
.EE
.SS Parameters
.TP
\f[B]iterable\f[R]
An iterable (such as an \f[CR]Array\f[R]) of abort signals.
.SS Return value
A \f[CR]AbortSignal\f[R] that is:
.IP \[bu] 2
\f[B]Already aborted\f[R], if any of the abort signals given is already
aborted.
The returned \f[CR]AbortSignal\f[R]\[cq]s reason will be already set to
the \f[CR]reason\f[R] of the first abort signal that was already
aborted.
.IP \[bu] 2
\f[B]Asynchronously aborted\f[R], when any abort signal in
\f[CR]iterable\f[R] aborts.
The \f[CR]reason\f[R] will be set to the reason of the first abort
signal that is aborted.
.SH EXAMPLES
.SS Using \f[CR]AbortSignal.any()\f[R]
This example demonstrates combining both a signal from an
\f[CR]AbortController\f[R], and a timeout signal from
\f[CR]AbortSignal.timeout\f[R].
.IP
.EX
\f[B]const\f[R] cancelDownloadButton = document.getElementById(\[dq]cancelDownloadButton\[dq]);

\f[B]const\f[R] userCancelController = \f[B]new\f[R] AbortController();

cancelDownloadButton.addEventListener(\[dq]click\[dq], () \f[B]=>\f[R] {
  userCancelController.abort();
});

\f[I]// Timeout after 5 minutes\f[R]
\f[B]const\f[R] timeoutSignal = AbortSignal.timeout(1_000 * 60 * 5);

\f[I]// This signal will abort when either the user clicks the cancel button or 5 minutes is up\f[R]
\f[I]// whichever is sooner\f[R]
\f[B]const\f[R] combinedSignal = AbortSignal.any([
  userCancelController.signal,
  timeoutSignal,
]);

\f[B]try\f[R] {
  \f[B]const\f[R] res = \f[B]await\f[R] fetch(someUrlToDownload, {
    \f[I]// Stop the fetch when any of the signals aborts\f[R]
    signal: combinedSignal,
  });
  \f[B]const\f[R] body = \f[B]await\f[R] res.blob();
  \f[I]// Do something with downloaded content:\f[R]
  \f[I]// ...\f[R]
} \f[B]catch\f[R] (e) {
  \f[B]if\f[R] (e.name === \[dq]AbortError\[dq]) {
    \f[I]// Cancelled by the user\f[R]
  } \f[B]else\f[R] \f[B]if\f[R] (e.name === \[dq]TimeoutError\[dq]) {
    \f[I]// Show user that download timed out\f[R]
  } \f[B]else\f[R] {
    \f[I]// Other error, e.g. network error\f[R]
  }
}
.EE
