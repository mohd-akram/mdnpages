.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "BigInt64Array.BigInt64Array" "JS" "June 12, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
BigInt64Array.BigInt64Array \- BigInt64Array() constructor
.SH SYNOPSIS
The \f[B]\f[CB]BigInt64Array()\f[B]\f[R] constructor creates
\f[CR]BigInt64Array\f[R] objects.
The contents are initialized to \f[CR]0n\f[R] unless initialization data
is explicitly provided.
.SH SYNTAX
.IP
.EX
new BigInt64Array()
new BigInt64Array(length)
new BigInt64Array(typedArray)
new BigInt64Array(object)

new BigInt64Array(buffer)
new BigInt64Array(buffer, byteOffset)
new BigInt64Array(buffer, byteOffset, length)
.EE
.RS
.PP
\f[B]Note:\f[R] \f[CR]BigInt64Array()\f[R] can only be constructed with
\f[CR]new\f[R].
Attempting to call it without \f[CR]new\f[R] throws a
\f[CR]TypeError\f[R].
.RE
.SS Parameters
See \f[CR]TypedArray\f[R].
.SS Exceptions
See \f[CR]TypedArray\f[R].
.SH EXAMPLES
.SS Different ways to create a BigInt64Array
.IP
.EX
\f[I]// From a length\f[R]
\f[B]const\f[R] bigint64 = \f[B]new\f[R] BigInt64Array(2);
bigint64[0] = 42n;
console.log(bigint64[0]); \f[I]// 42n\f[R]
console.log(bigint64.length); \f[I]// 2\f[R]
console.log(bigint64.BYTES_PER_ELEMENT); \f[I]// 8\f[R]

\f[I]// From an array\f[R]
\f[B]const\f[R] x = \f[B]new\f[R] BigInt64Array([21n, 31n]);
console.log(x[1]); \f[I]// 31n\f[R]

\f[I]// From another TypedArray\f[R]
\f[B]const\f[R] y = \f[B]new\f[R] BigInt64Array(x);
console.log(y[0]); \f[I]// 21n\f[R]

\f[I]// From an ArrayBuffer\f[R]
\f[B]const\f[R] buffer = \f[B]new\f[R] ArrayBuffer(64);
\f[B]const\f[R] z = \f[B]new\f[R] BigInt64Array(buffer, 8, 4);
console.log(z.byteOffset); \f[I]// 8\f[R]

\f[I]// From an iterable\f[R]
\f[B]const\f[R] iterable = (\f[B]function\f[R]* () {
  \f[B]yield\f[R]* [1n, 2n, 3n];
})();
\f[B]const\f[R] bigint64FromIterable = \f[B]new\f[R] BigInt64Array(iterable);
console.log(bigint64FromIterable);
\f[I]// BigInt64Array [1n, 2n, 3n]\f[R]
.EE
.SH SEE ALSO
.IP \[bu] 2
JavaScript typed arrays guide
.IP \[bu] 2
\f[CR]TypedArray\f[R]
.IP \[bu] 2
\f[CR]ArrayBuffer\f[R]
.IP \[bu] 2
\f[CR]DataView\f[R]
