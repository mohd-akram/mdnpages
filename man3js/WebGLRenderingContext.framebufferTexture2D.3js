.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "WEBGLRENDERINGCONTEXT.FRAMEBUFFERTEXTURE2D" "3JS" "September 28, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
WebGLRenderingContext.framebufferTexture2D \- WebGLRenderingContext:
framebufferTexture2D() method
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]WebGLRenderingContext.framebufferTexture2D()\f[B]\f[R]
method of the WebGL API attaches a texture to a
\f[CR]WebGLFramebuffer\f[R].
.SH SYNTAX
.IP
.EX
framebufferTexture2D(target, attachment, textarget, texture, level)
.EE
.SS Parameters
.TP
\f[B]target\f[R]
A \f[CR]GLenum\f[R] specifying the binding point (target).
Possible values:
.RS
.TP
\f[B]gl.FRAMEBUFFER\f[R]
Collection buffer data storage of color, alpha, depth and stencil
buffers used to render an image.
.PP
When using a WebGL 2 context, the following values are available
additionally:
.TP
\f[B]gl.DRAW_FRAMEBUFFER\f[R]
Used as a destination for drawing, rendering, clearing, and writing
operations.
.TP
\f[B]gl.READ_FRAMEBUFFER\f[R]
Used as a source for reading operations.
.PP
When binding, \f[CR]gl.FRAMEBUFFER\f[R] sets both the
\f[CR]gl.DRAW_FRAMEBUFFER\f[R] and \f[CR]gl.READ_FRAMEBUFFER\f[R]
binding points.
When referencing, \f[CR]gl.FRAMEBUFFER\f[R] refers to the
\f[CR]gl.DRAW_FRAMEBUFFER\f[R] binding
.RE
.TP
\f[B]attachment\f[R]
A \f[CR]GLenum\f[R] specifying the attachment point for the
\f[CR]texture\f[R].
Possible values:
.RS
.IP \(bu 2
\f[CR]gl.COLOR_ATTACHMENT0\f[R]: Attaches the texture to the
framebuffer\(cqs color buffer.
.IP \(bu 2
\f[CR]gl.DEPTH_ATTACHMENT\f[R]: Attaches the texture to the
framebuffer\(cqs depth buffer.
.IP \(bu 2
\f[CR]gl.STENCIL_ATTACHMENT\f[R]: Attaches the texture to the
framebuffer\(cqs stencil buffer.
.PP
When using a WebGL 2 context, the following values are available
additionally:
.IP \(bu 2
\f[CR]gl.DEPTH_STENCIL_ATTACHMENT\f[R]: depth and stencil buffer.
.IP \(bu 2
\f[CR]gl.COLOR_ATTACHMENT1 gl.COLOR_ATTACHMENT2 gl.COLOR_ATTACHMENT3 gl.COLOR_ATTACHMENT4 gl.COLOR_ATTACHMENT5 gl.COLOR_ATTACHMENT6 gl.COLOR_ATTACHMENT7 gl.COLOR_ATTACHMENT8 gl.COLOR_ATTACHMENT9 gl.COLOR_ATTACHMENT10 gl.COLOR_ATTACHMENT11 gl.COLOR_ATTACHMENT12 gl.COLOR_ATTACHMENT13 gl.COLOR_ATTACHMENT14 gl.COLOR_ATTACHMENT15\f[R]
.PP
When using the \f[CR]WEBGL_draw_buffers\f[R] extension:
.IP \(bu 2
\f[CR]ext.COLOR_ATTACHMENT0_WEBGL\f[R] (same as
\f[CR]gl.COLOR_ATTACHMENT0\f[R])
.IP \(bu 2
\f[CR]ext.COLOR_ATTACHMENT1_WEBGL ext.COLOR_ATTACHMENT2_WEBGL ext.COLOR_ATTACHMENT3_WEBGL ext.COLOR_ATTACHMENT4_WEBGL ext.COLOR_ATTACHMENT5_WEBGL ext.COLOR_ATTACHMENT6_WEBGL ext.COLOR_ATTACHMENT7_WEBGL ext.COLOR_ATTACHMENT8_WEBGL ext.COLOR_ATTACHMENT9_WEBGL ext.COLOR_ATTACHMENT10_WEBGL ext.COLOR_ATTACHMENT11_WEBGL ext.COLOR_ATTACHMENT12_WEBGL ext.COLOR_ATTACHMENT13_WEBGL ext.COLOR_ATTACHMENT14_WEBGL ext.COLOR_ATTACHMENT15_WEBGL\f[R]
.PP
When using the \f[CR]WEBGL_depth_texture\f[R] extension:
.IP \(bu 2
\f[CR]gl.DEPTH_STENCIL_ATTACHMENT\f[R]: Depth and stencil buffer data
storage.
.RE
.TP
\f[B]textarget\f[R]
A \f[CR]GLenum\f[R] specifying the texture target.
Possible values:
.RS
.IP \(bu 2
\f[CR]gl.TEXTURE_2D\f[R]: A 2D image.
.IP \(bu 2
\f[CR]gl.TEXTURE_CUBE_MAP_POSITIVE_X\f[R]: Image for the positive X face
of the cube.
.IP \(bu 2
\f[CR]gl.TEXTURE_CUBE_MAP_NEGATIVE_X\f[R]: Image for the negative X face
of the cube.
.IP \(bu 2
\f[CR]gl.TEXTURE_CUBE_MAP_POSITIVE_Y\f[R]: Image for the positive Y face
of the cube.
.IP \(bu 2
\f[CR]gl.TEXTURE_CUBE_MAP_NEGATIVE_Y\f[R]: Image for the negative Y face
of the cube.
.IP \(bu 2
\f[CR]gl.TEXTURE_CUBE_MAP_POSITIVE_Z\f[R]: Image for the positive Z face
of the cube.
.IP \(bu 2
\f[CR]gl.TEXTURE_CUBE_MAP_NEGATIVE_Z\f[R]: Image for the negative Z face
of the cube.
.RE
.TP
\f[B]texture\f[R]
A \f[CR]WebGLTexture\f[R] object whose image to attach.
.TP
\f[B]level\f[R]
A \f[CR]GLint\f[R] specifying the mipmap level of the texture image to
be attached.
Must be 0.
.SS Return value
None (\f[CR]undefined\f[R]).
.SS Exceptions
.IP \(bu 2
A \f[CR]gl.INVALID_ENUM\f[R] error is thrown if
.RS 2
.IP \(bu 2
\f[CR]target\f[R] is not \f[CR]gl.FRAMEBUFFER\f[R].
.IP \(bu 2
\f[CR]attachment\f[R] is not one of the accepted attachment points.
.IP \(bu 2
\f[CR]textarget\f[R] is not one of the accepted texture targets.
.RE
.IP \(bu 2
A \f[CR]gl.INVALID_VALUE\f[R] error is thrown if \f[CR]level\f[R] is not
0.
.IP \(bu 2
A \f[CR]gl.INVALID_OPERATION\f[R] error is thrown if \f[CR]texture\f[R]
isn\(cqt 0 or the name of an existing texture object.
.SH EXAMPLES
.IP
.EX
gl.framebufferTexture2D(
  gl.FRAMEBUFFER,
  gl.COLOR_ATTACHMENT0,
  gl.TEXTURE_2D,
  texture,
  0,
);
.EE
.SH SEE ALSO
.IP \(bu 2
\f[CR]WebGLRenderingContext.createFramebuffer()\f[R]
.IP \(bu 2
\f[CR]WebGLRenderingContext.deleteFramebuffer()\f[R]
.IP \(bu 2
\f[CR]WebGLRenderingContext.isFramebuffer()\f[R]
.IP \(bu 2
Other buffers: \f[CR]WebGLBuffer\f[R], \f[CR]WebGLRenderbuffer\f[R]
.IP \(bu 2
\f[CR]WEBGL_depth_texture\f[R]
.IP \(bu 2
\f[CR]WEBGL_draw_buffers\f[R]
