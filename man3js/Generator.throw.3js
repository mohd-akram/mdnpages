.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "GENERATOR.THROW" "3JS" "March 6, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Generator.throw \- Generator.prototype.throw()
.SH SYNOPSIS
The \f[B]\f[CB]throw()\f[B]\f[R] method of \f[CR]Generator\f[R]
instances acts as if a \f[CR]throw\f[R] statement is inserted in the
generator\(cqs body at the current suspended position, which informs the
generator of an error condition and allows it to handle the error, or
perform cleanup and close itself.
.SH SYNTAX
.IP
.EX
generatorInstance.throw(exception)
.EE
.SS Parameters
.TP
\f[B]exception\f[R]
The exception to throw.
For debugging purposes, it is useful to make it an \f[CR]instanceof\f[R]
\f[CR]Error\f[R].
.SS Return value
If the thrown exception is caught by a \f[CR]try...catch\f[R] and the
generator resumes to yield more values, it will return an
\f[CR]Object\f[R] with two properties:
.TP
\f[B]done\f[R]
A boolean value:
.RS
.IP \(bu 2
\f[CR]true\f[R] if the generator function\(cqs control flow has reached
the end.
.IP \(bu 2
\f[CR]false\f[R] if the generator function is able to produce more
values.
.RE
.TP
\f[B]value\f[R]
The value yielded from the next \f[CR]yield\f[R] expression.
.SS Exceptions
.TP
\f[B]TypeError\f[R]
Thrown if the generator is already running.
.PP
If the \f[CR]exception\f[R] is not caught by a \f[CR]try...catch\f[R]
within the generator function, it is also thrown to the caller of
\f[CR]throw()\f[R].
.SH DESCRIPTION
The \f[CR]throw()\f[R] method, when called, can be seen as if a
\f[CR]throw exception;\f[R] statement is inserted in the generator\(cqs
body at the current suspended position, where \f[CR]exception\f[R] is
the exception passed to the \f[CR]throw()\f[R] method.
Therefore, in a typical flow, calling \f[CR]throw(exception)\f[R] will
cause the generator to throw.
However, if the \f[CR]yield\f[R] expression is wrapped in a
\f[CR]try...catch\f[R] block, the error may be caught and control flow
can either resume after error handling, or exit gracefully.
.SH EXAMPLES
.SS Using throw()
The following example shows a generator and an error that is thrown
using the \f[CR]throw\f[R] method.
An error can be caught by a \f[CR]try...catch\f[R] block as usual.
.IP
.EX
\f[B]function\f[R]* gen() {
  \f[B]while\f[R] (\f[B]true\f[R]) {
    \f[B]try\f[R] {
      \f[B]yield\f[R] 42;
    } \f[B]catch\f[R] (e) {
      console.log(\(dqError caught!\(dq);
    }
  }
}

\f[B]const\f[R] g = gen();
g.next();
\f[I]// { value: 42, done: false }\f[R]
g.throw(\f[B]new\f[R] Error(\(dqSomething went wrong\(dq));
\f[I]// \(dqError caught!\(dq\f[R]
\f[I]// { value: 42, done: false }\f[R]
.EE
.SH SEE ALSO
.IP \(bu 2
\f[CR]function*\f[R]
