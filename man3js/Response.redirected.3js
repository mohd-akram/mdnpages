.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "Response.redirected" "JS" "October 8, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Response.redirected \- Response: redirected property
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]redirected\f[B]\f[R] read\-only property of the
\f[CR]Response\f[R] interface indicates whether or not the response is
the result of a request you made which was redirected.
.RS
.PP
\f[B]Note:\f[R] Relying on redirected to filter out redirects makes it
easy for a forged redirect to prevent your content from working as
expected.
Instead, you should do the filtering when you call \f[CR]fetch()\f[R].
See the example Disallowing redirects, which shows this being done.
.RE
.SH VALUE
A boolean value which is \f[CR]true\f[R] if the response indicates that
your request was redirected.
.SH EXAMPLES
.SS Detecting redirects
Checking to see if the response comes from a redirected request is as
simple as checking this flag on the \f[CR]Response\f[R] object.
In the code below, a textual message is inserted into an element when a
redirect occurred during the fetch operation.
Note, however, that this isn\[cq]t as safe as outright rejecting
redirects if they\[cq]re unexpected, as described under Disallowing
redirects below.
.PP
The \f[CR]url\f[R] property returns the final URL after redirects.
.IP
.EX
fetch(\[dq]awesome\-picture.jpg\[dq])
  .then((response) \f[B]=>\f[R] {
    \f[B]const\f[R] elem = document.getElementById(\[dq]warning\-message\-box\[dq]);
    elem.textContent = response.redirected ? \[dq]Unexpected redirect\[dq] : \[dq]\[dq];
    \f[I]// final url obtained after redirects\f[R]
    console.log(response.url);
    \f[B]return\f[R] response.blob();
  })
  .then((imageBlob) \f[B]=>\f[R] {
    \f[B]const\f[R] imgObjectURL = URL.createObjectURL(imageBlob);
    document.getElementById(\[dq]img\-element\-id\[dq]).src = imgObjectURL;
  });
.EE
.SS Disallowing redirects
Because using redirected to manually filter out redirects can allow
forgery of redirects, you should instead set the redirect mode to
\f[CR]\[dq]error\[dq]\f[R] in the \f[CR]init\f[R] parameter when calling
\f[CR]fetch()\f[R], like this:
.IP
.EX
fetch(\[dq]awesome\-picture.jpg\[dq], { redirect: \[dq]error\[dq] })
  .then((response) \f[B]=>\f[R] response.blob())
  .then((imageBlob) \f[B]=>\f[R] {
    \f[B]const\f[R] imgObjectURL = URL.createObjectURL(imageBlob);
    document.getElementById(\[dq]img\-element\-id\[dq]).src = imgObjectURL;
  });
.EE
.SH SEE ALSO
.IP \[bu] 2
Fetch API
.IP \[bu] 2
ServiceWorker API
.IP \[bu] 2
HTTP access control (CORS)
.IP \[bu] 2
HTTP
