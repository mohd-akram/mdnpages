.\" Automatically generated by Pandoc 3.4
.\"
.TH "Event.eventPhase" "JS" "July 26, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Event.eventPhase \- Event: eventPhase property
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]eventPhase\f[B]\f[R] read\-only property of the
\f[CR]Event\f[R] interface indicates which phase of the event flow is
currently being evaluated.
.SH VALUE
Returns an integer value which specifies the current evaluation phase of
the event flow.
Possible values are:
.TP
\f[B]Event.NONE\f[R] (0)
The event is not being processed at this time.
.TP
\f[B]Event.CAPTURING_PHASE\f[R] (1)
The event is being propagated through the target\[cq]s ancestor objects.
This process starts with the \f[CR]Window\f[R], then
\f[CR]Document\f[R], then the \f[CR]HTMLHtmlElement\f[R], and so on
through the elements until the target\[cq]s parent is reached.
Event listeners registered for capture mode when
\f[CR]EventTarget.addEventListener()\f[R] was called are triggered
during this phase.
.TP
\f[B]Event.AT_TARGET\f[R] (2)
The event has arrived at the event\[cq]s target.
Event listeners registered for this phase are called at this time.
If \f[CR]Event.bubbles\f[R] is \f[CR]false\f[R], processing the event is
finished after this phase is complete.
.TP
\f[B]Event.BUBBLING_PHASE\f[R] (3)
The event is propagating back up through the target\[cq]s ancestors in
reverse order, starting with the parent, and eventually reaching the
containing \f[CR]Window\f[R].
This is known as \f[I]bubbling\f[R], and occurs only if
\f[CR]Event.bubbles\f[R] is \f[CR]true\f[R].
Event listeners registered for this phase are triggered during this
process.
.SH EXAMPLE
.SS HTML
.IP
.EX
<\f[B]h4\f[R]>Event Propagation Chain</\f[B]h4\f[R]>
<\f[B]ul\f[R]>
  <\f[B]li\f[R]>Click \[aq]d1\[aq]</\f[B]li\f[R]>
  <\f[B]li\f[R]>Analyze event propagation chain</\f[B]li\f[R]>
  <\f[B]li\f[R]>Click next div and repeat the experience</\f[B]li\f[R]>
  <\f[B]li\f[R]>Change Capturing mode</\f[B]li\f[R]>
  <\f[B]li\f[R]>Repeat the experience</\f[B]li\f[R]>
</\f[B]ul\f[R]>
<\f[B]input\f[R] type=\[dq]checkbox\[dq] id=\[dq]chCapture\[dq] />
<\f[B]label\f[R] for=\[dq]chCapture\[dq]>Use Capturing</\f[B]label\f[R]>
<\f[B]div\f[R] id=\[dq]d1\[dq]>
  d1
  <\f[B]div\f[R] id=\[dq]d2\[dq]>
    d2
    <\f[B]div\f[R] id=\[dq]d3\[dq]>
      d3
      <\f[B]div\f[R] id=\[dq]d4\[dq]>d4</\f[B]div\f[R]>
    </\f[B]div\f[R]>
  </\f[B]div\f[R]>
</\f[B]div\f[R]>
<\f[B]div\f[R] id=\[dq]divInfo\[dq]></\f[B]div\f[R]>
.EE
.SS CSS
.IP
.EX
div {
  \f[B]margin\f[R]: 20px;
  \f[B]padding\f[R]: 4px;
  \f[B]border\f[R]: thin black solid;
}

divInfo {
  \f[B]margin\f[R]: 18px;
  \f[B]padding\f[R]: 8px;
  \f[B]background\-color\f[R]: white;
  \f[B]font\-size\f[R]: 80%;
}
.EE
.SS JavaScript
.IP
.EX
\f[B]let\f[R] clear = \f[B]false\f[R];
\f[B]let\f[R] divInfo = \f[B]null\f[R];
\f[B]let\f[R] divs = \f[B]null\f[R];
\f[B]let\f[R] chCapture = \f[B]null\f[R];

window.onload = () \f[B]=>\f[R] {
  divInfo = document.getElementById(\[dq]divInfo\[dq]);
  divs = document.getElementsByTagName(\[dq]div\[dq]);
  chCapture = document.getElementById(\[dq]chCapture\[dq]);
  chCapture.onclick = () \f[B]=>\f[R] {
    removeListeners();
    addListeners();
    clearDivs();
  };
  clearDivs();
  addListeners();
};

\f[B]function\f[R] removeListeners() {
  \f[B]for\f[R] (\f[B]const\f[R] div \f[B]of\f[R] divs) {
    \f[B]if\f[R] (div.id !== \[dq]divInfo\[dq]) {
      div.removeEventListener(\[dq]click\[dq], onDivClick, \f[B]true\f[R]);
      div.removeEventListener(\[dq]click\[dq], onDivClick, \f[B]false\f[R]);
    }
  }
}

\f[B]function\f[R] addListeners() {
  \f[B]for\f[R] (\f[B]const\f[R] div \f[B]of\f[R] divs) {
    \f[B]if\f[R] (div.id !== \[dq]divInfo\[dq]) {
      \f[B]if\f[R] (chCapture.checked) {
        div.addEventListener(\[dq]click\[dq], onDivClick, \f[B]true\f[R]);
      } \f[B]else\f[R] {
        div.addEventListener(\[dq]click\[dq], onDivClick, \f[B]false\f[R]);
        div.onmousemove = () \f[B]=>\f[R] {
          clear = \f[B]true\f[R];
        };
      }
    }
  }
}

\f[B]function\f[R] onDivClick(e) {
  \f[B]if\f[R] (clear) {
    clearDivs();
    clear = \f[B]false\f[R];
  }
  \f[B]if\f[R] (e.eventPhase === 2) {
    e.currentTarget.style.backgroundColor = \[dq]red\[dq];
  }
  \f[B]const\f[R] level =
    [\[dq]none\[dq], \[dq]capturing\[dq], \[dq]target\[dq], \[dq]bubbling\[dq]][e.eventPhase] ?? \[dq]error\[dq];
  \f[B]const\f[R] para = document.createElement(\[dq]p\[dq]);
  para.textContent = \[ga]${e.currentTarget.id}; eventPhase: ${level}\[ga];
  divInfo.appendChild(para);
}

\f[B]function\f[R] clearDivs() {
  \f[B]for\f[R] (\f[B]let\f[R] i = 0; i < divs.length; i++) {
    \f[B]if\f[R] (divs[i].id !== \[dq]divInfo\[dq]) {
      divs[i].style.backgroundColor = i % 2 !== 0 ? \[dq]#f6eedb\[dq] : \[dq]#cceeff\[dq];
    }
  }
  divInfo.textContent = \[dq]\[dq];
}
.EE
.SS Result
