'\" t
.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "HTMLINPUTELEMENT.STEPUP" "3JS" "April 10, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
HTMLInputElement.stepUp \- HTMLInputElement: stepUp() method
.SH SYNOPSIS
The \f[B]\f[CB]HTMLInputElement.stepUp()\f[B]\f[R] method increments the
value of a numeric type of \f[CR]<input>\f[R] element by the value of
the \f[CR]step\f[R] attribute, or the default \f[CR]step\f[R] value if
the step attribute is not explicitly set.
The method, when invoked, increments the \f[CR]value\f[R] by
(\f[CR]step\f[R] * n), where \f[CR]n\f[R] defaults to \f[CR]1\f[R] if
not specified, and \f[CR]step\f[R] defaults to the default value for
\f[CR]step\f[R] if not specified.
.PP
.TS
tab(@);
lw(23.3n) lw(23.3n) lw(23.3n).
T{
Input type
T}@T{
Default step value
T}@T{
Example step declaration
T}
_
T{
\(gadate\(ga
T}@T{
\f[CR]1\f[R] (day)
T}@T{
7 day (one week) increments:
.PD 0
.P
.PD
\f[CR]<input type=\(dqdate\(dq min=\(dq2019\-12\-25\(dq step=\(dq7\(dq>\f[R]
T}
T{
\(gamonth\(ga
T}@T{
\f[CR]1\f[R] (month)
T}@T{
12 month (one year) increments:
.PD 0
.P
.PD
\f[CR]<input type=\(dqmonth\(dq min=\(dq2019\-12\(dq step=\(dq12\(dq>\f[R]
T}
T{
\(gaweek\(ga
T}@T{
\f[CR]1\f[R] (week)
T}@T{
Two week increments:
.PD 0
.P
.PD
\f[CR]<input type=\(dqweek\(dq min=\(dq2019\-W23\(dq step=\(dq2\(dq>\f[R]
T}
T{
\(gatime\(ga
T}@T{
\f[CR]60\f[R] (seconds)
T}@T{
900 second (15 minute) increments:
.PD 0
.P
.PD
\f[CR]<input type=\(dqtime\(dq min=\(dq09:00\(dq step=\(dq900\(dq>\f[R]
T}
T{
\(gadatetime\-local\(ga
T}@T{
\f[CR]1\f[R] (day)
T}@T{
Same day of the week:
.PD 0
.P
.PD
\f[CR]<input type=\(dqdatetime\-local\(dq min=\(dq019\-12\-25T19:30\(dq step=\(dq7\(dq>\f[R]
T}
T{
\(ganumber\(ga
T}@T{
\f[CR]1\f[R]
T}@T{
0.1 increments
.PD 0
.P
.PD
\f[CR]<input type=\(dqnumber\(dq min=\(dq0\(dq step=\(dq0.1\(dq max=\(dq10\(dq>\f[R]
T}
T{
\(garange\(ga
T}@T{
\f[CR]1\f[R]
T}@T{
Increments by 2:
.PD 0
.P
.PD
\f[CR]<input type=\(dqrange\(dq min=\(dq0\(dq step=\(dq2\(dq max=\(dq10\(dq>\f[R]
T}
.TE
.PP
The method, when invoked, changes the form control\(cqs value by the
value given in the \f[CR]step\f[R] attribute, multiplied by the
parameter, within the constraints set on the form control.
The default value for the parameter, if no value is passed, is
\f[CR]1\f[R].
The method will not cause the value to exceed the set \f[CR]max\f[R]
value, or defy the constraints set by the \f[CR]step\f[R] attribute.
.PP
If the value before invoking the \f[CR]stepUp()\f[R] method is
invalid\(emfor example, if it doesn\(cqt match the constraints set by
the step attribute\(eminvoking the \f[CR]stepUp()\f[R] method will
return a value that does match the form controls constraints.
.PP
If the form control is non time, date, or numeric in nature, and
therefore does not support the \f[CR]step\f[R] attribute (see the list
of supported input types in the table above), or if the step value is
set to \f[CR]any\f[R], an \f[CR]InvalidStateError\f[R] exception is
thrown.
.SH SYNTAX
.IP
.EX
stepUp()
stepUp(stepIncrement)
.EE
.SS Parameters
.TP
\f[B]stepIncrement\f[R] \f[I](optional)\f[R]
A numeric value.
If no parameter is passed, \f[CR]stepIncrement\f[R] defaults to
\f[CR]1\f[R].
.SS Return value
None (\f[CR]undefined\f[R]).
.SH EXAMPLES
Click the button in this example to increment the \f[CR]number\f[R]
input type:
.SS HTML
.IP
.EX
<\f[B]p\f[R]>
  <\f[B]label\f[R] for=\(dqtheNumber\(dq>
    Enter a number between 0 and 400 that is divisible by 5:
  </\f[B]label\f[R]>
  <\f[B]input\f[R] type=\(dqnumber\(dq step=\(dq5\(dq id=\(dqtheNumber\(dq min=\(dq0\(dq max=\(dq400\(dq />
</\f[B]p\f[R]>
<\f[B]p\f[R]>
  <\f[B]label\f[R]>
    Enter how many values of step you would like to increment by or leave it
    blank:
  </\f[B]label\f[R]>
  <\f[B]input\f[R] type=\(dqnumber\(dq step=\(dq1\(dq id=\(dqincrementInput\(dq min=\(dq0\(dq max=\(dq25\(dq />
</\f[B]p\f[R]>
<\f[B]input\f[R] type=\(dqbutton\(dq value=\(dqIncrement\(dq id=\(dqtheButton\(dq />
.EE
.SS JavaScript
.IP
.EX
\f[I]/* make the button call the function */\f[R]
\f[B]const\f[R] button = document.getElementById(\(dqtheButton\(dq);
button.addEventListener(\(dqclick\(dq, () \f[B]=>\f[R] {
  stepOnUp();
});

\f[B]function\f[R] stepOnUp() {
  \f[B]let\f[R] input = document.getElementById(\(dqtheNumber\(dq);
  \f[B]let\f[R] val = document.getElementById(\(dqincrementInput\(dq).value;

  \f[B]if\f[R] (val) {
    \f[I]/* increment with a parameter */\f[R]
    input.stepUp(val);
  } \f[B]else\f[R] {
    \f[I]/* or without a parameter. Try it with 0 */\f[R]
    input.stepUp();
  }
}
.EE
.SS CSS
.IP
.EX
input\f[BI]:invalid\f[R] {
  \f[B]border\f[R]: red solid 3px;
}
.EE
.SS Result
Note if you don\(cqt pass a parameter to the \f[CR]stepUp\f[R] method,
it defaults to \f[CR]1\f[R].
Any other value is a multiplier of the \f[CR]step\f[R] attribute value,
which in this case is \f[CR]5\f[R].
If you pass \f[CR]4\f[R] as the \f[CR]stepIncrement\f[R], the input will
\f[CR]stepUp\f[R] by \f[CR]4 * 5\f[R], or \f[CR]20\f[R].
If the parameter is \f[CR]0\f[R], the number will not be incremented.
The stepUp will not allow the input to out of range, in this case
stopping when it reaches \f[CR]400\f[R], and rounding down any floats
that are passed as a parameter.
.PP
Try setting the step increment input to \f[CR]1.2\f[R].
What happens when you invoke the method?
.PP
Try setting the value to \f[CR]4\f[R], which is not valid.
What happens when you invoke the method?
.SH SEE ALSO
.IP \(bu 2
\f[CR]<input>\f[R]
.IP \(bu 2
\f[CR]HTMLInputElement\f[R]
.IP \(bu 2
\f[CR]HTMLInputElement.stepDown\f[R]
.IP \(bu 2
\f[CR]step\f[R], \f[CR]min\f[R] and \f[CR]max\f[R] attributes
