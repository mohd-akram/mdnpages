.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "AudioScheduledSourceNode.start" "JS" "March 12, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
AudioScheduledSourceNode.start \- AudioScheduledSourceNode: start()
method
.SH SYNOPSIS
The \f[CR]start()\f[R] method on \f[CR]AudioScheduledSourceNode\f[R]
schedules a sound to begin playback at the specified time.
If no time is specified, then the sound begins playing immediately.
.SH SYNTAX
.IP
.EX
start()
start(when)
.EE
.SS Parameters
.TP
\f[B]when\f[R] \f[I](optional)\f[R]
The time, in seconds, at which the sound should begin to play.
This value is specified in the same time coordinate system as the
\f[CR]AudioContext\f[R] is using for its \f[CR]currentTime\f[R]
attribute.
A value of 0 (or omitting the \f[CR]when\f[R] parameter entirely) causes
the sound to start playback immediately.
.SS Return value
None (\f[CR]undefined\f[R]).
.SS Exceptions
.TP
\f[B]InvalidStateNode\f[R] \f[B]DOMException\f[R]
Thrown if the node has already been started.
This error occurs even if the node is no longer running because of a
prior call to \f[CR]stop()\f[R].
.TP
\f[B]RangeError\f[R]
Thrown if the value specified for \f[CR]when\f[R] is negative.
.SH EXAMPLES
This example demonstrates how to create an \f[CR]OscillatorNode\f[R]
which is scheduled to start playing in 2 seconds and stop playing 1
second after that.
The times are calculated by adding the desired number of seconds to the
context\[cq]s current time stamp returned by
\f[CR]AudioContext.currentTime\f[R].
.IP
.EX
context = \f[B]new\f[R] AudioContext();
osc = context.createOscillator();
osc.connect(context.destination);

\f[I]/* Schedule the start and stop times for the oscillator */\f[R]

osc.start(context.currentTime + 2);
osc.stop(context.currentTime + 3);
.EE
.SH SEE ALSO
.IP \[bu] 2
Using the Web Audio API
.IP \[bu] 2
\f[CR]stop()\f[R]
.IP \[bu] 2
\f[CR]AudioScheduledSourceNode\f[R]
.IP \[bu] 2
\f[CR]AudioBufferSourceNode\f[R]
.IP \[bu] 2
\f[CR]ConstantSourceNode\f[R]
.IP \[bu] 2
\f[CR]OscillatorNode\f[R]
