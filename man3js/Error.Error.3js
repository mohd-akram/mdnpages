.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "Error.Error" "JS" "September 12, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Error.Error \- Error() constructor
.SH SYNOPSIS
The \f[B]\f[CB]Error()\f[B]\f[R] constructor creates \f[CR]Error\f[R]
objects.
.SH SYNTAX
.IP
.EX
new Error()
new Error(message)
new Error(message, options)
new Error(message, fileName)
new Error(message, fileName, lineNumber)

Error()
Error(message)
Error(message, options)
Error(message, fileName)
Error(message, fileName, lineNumber)
.EE
.RS
.PP
\f[B]Note:\f[R] \f[CR]Error()\f[R] can be called with or without
\f[CR]new\f[R].
Both create a new \f[CR]Error\f[R] instance.
.RE
.SS Parameters
.TP
\f[B]message\f[R] \f[I](optional)\f[R]
A human\-readable description of the error.
.TP
\f[B]options\f[R] \f[I](optional)\f[R]
An object that has the following properties:
.RS
.TP
\f[B]cause\f[R] \f[I](optional)\f[R]
A value indicating the specific cause of the error, reflected in the
\f[CR]cause\f[R] property.
When catching and re\-throwing an error with a more\-specific or useful
error message, this property can be used to pass the original error.
.RE
.TP
\f[B]fileName\f[R] \f[I](optional)\f[R] \f[I](non\-standard)\f[R]
The path to the file that raised this error, reflected in the
\f[CR]fileName\f[R] property.
Defaults to the name of the file containing the code that called the
\f[CR]Error()\f[R] constructor.
.TP
\f[B]lineNumber\f[R] \f[I](optional)\f[R] \f[I](non\-standard)\f[R]
The line number within the file on which the error was raised, reflected
in the \f[CR]lineNumber\f[R] property.
Defaults to the line number containing the \f[CR]Error()\f[R]
constructor invocation.
.SH EXAMPLES
.SS Function call or new construction
When \f[CR]Error\f[R] is used like a function, that is without
\f[CR]new\f[R], it will return an \f[CR]Error\f[R] object.
Therefore, a mere call to \f[CR]Error\f[R] will produce the same output
that constructing an \f[CR]Error\f[R] object via the \f[CR]new\f[R]
keyword would.
.IP
.EX
\f[B]const\f[R] x = Error(\[dq]I was created using a function call!\[dq]);

\f[I]// above has the same functionality as following\f[R]
\f[B]const\f[R] y = \f[B]new\f[R] Error(\[aq]I was constructed via the \[dq]new\[dq] keyword!\[aq]);
.EE
.SS Rethrowing an error with a cause
It is sometimes useful to catch an error and re\-throw it with a new
message.
In this case you should pass the original error into the constructor for
the new \f[CR]Error\f[R], as shown.
.IP
.EX
\f[B]try\f[R] {
  frameworkThatCanThrow();
} \f[B]catch\f[R] (err) {
  \f[B]throw\f[R] \f[B]new\f[R] Error(\[dq]New error message\[dq], { cause: err });
}
.EE
.PP
For a more detailed example see Error > Differentiate between similar
errors.
.SS Omitting options argument
JavaScript only tries to read \f[CR]options.cause\f[R] if
\f[CR]options\f[R] is an object \[em] this avoids ambiguity with the
other non\-standard \f[CR]Error(message, fileName, lineNumber)\f[R]
signature, which requires the second parameter to be a string.
If you omit \f[CR]options\f[R], pass a primitive value as
\f[CR]options\f[R], or pass an object without the \f[CR]cause\f[R]
property, then the created \f[CR]Error\f[R] object will have no
\f[CR]cause\f[R] property.
.IP
.EX
\f[I]// Omitting options\f[R]
\f[B]const\f[R] error1 = \f[B]new\f[R] Error(\[dq]Error message\[dq]);
console.log(\[dq]cause\[dq] \f[B]in\f[R] error1); \f[I]// false\f[R]

\f[I]// Passing a primitive value\f[R]
\f[B]const\f[R] error2 = \f[B]new\f[R] Error(\[dq]Error message\[dq], \[dq]\[dq]);
console.log(\[dq]cause\[dq] \f[B]in\f[R] error2); \f[I]// false\f[R]

\f[I]// Passing an object without a cause property\f[R]
\f[B]const\f[R] error3 = \f[B]new\f[R] Error(\[dq]Error message\[dq], { details: \[dq]http error\[dq] });
console.log(\[dq]cause\[dq] \f[B]in\f[R] error3); \f[I]// false\f[R]
.EE
.SH SEE ALSO
.IP \[bu] 2
\c
.UR https://github.com/zloirock/core-js#ecmascript-error
Polyfill of \f[CR]Error\f[R] with \f[CR]cause\f[R] support in
\f[CR]core\-js\f[R]
.UE \c
.IP \[bu] 2
\f[CR]throw\f[R]
.IP \[bu] 2
\f[CR]try...catch\f[R]
.IP \[bu] 2
\c
.UR https://v8.dev/features/error-cause
Error causes
.UE \c
\ on v8.dev (2021)
