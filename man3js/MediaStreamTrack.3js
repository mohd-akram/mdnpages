.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "MediaStreamTrack" "JS" "October 9, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
MediaStreamTrack \- MediaStreamTrack
.SH SYNOPSIS
The \f[B]\f[CB]MediaStreamTrack\f[B]\f[R] interface of the Media Capture
and Streams API represents a single media track within a stream;
typically, these are audio or video tracks, but other track types may
exist as well.
.PP
Some user agents subclass this interface to provide more precise
information or functionality, such as
\f[CR]CanvasCaptureMediaStreamTrack\f[R].
.SH INSTANCE PROPERTIES
In addition to the properties listed below, \f[CR]MediaStreamTrack\f[R]
has constrainable properties which can be set using
\f[CR]applyConstraints()\f[R] and accessed using
\f[CR]getConstraints()\f[R] and \f[CR]getSettings()\f[R].
See Capabilities, constraints, and settings to learn how to correctly
work with constrainable properties.
Not doing so correctly will result in your code being unreliable.
.TP
\f[B]MediaStreamTrack.contentHint\f[R]
A string that may be used by the web application to provide a hint as to
what type of content the track contains to guide how it should be
treated by API consumers.
Allowable values depend on the value of the
\f[CR]MediaStreamTrack.kind\f[R] property.
.TP
\f[B]MediaStreamTrack.enabled\f[R]
A Boolean whose value of \f[CR]true\f[R] if the track is enabled, that
is allowed to render the media source stream; or \f[CR]false\f[R] if it
is disabled, that is not rendering the media source stream but silence
and blackness.
If the track has been disconnected, this value can be changed but has no
more effect.
.RS
.RS
.PP
\f[B]Note:\f[R] You can implement standard \[lq]mute\[rq] functionality
by setting \f[CR]enabled\f[R] to \f[CR]false\f[R].
The \f[CR]muted\f[R] property refers to a condition in which there\[cq]s
no media because of a technical issue.
.RE
.RE
.TP
\f[B]MediaStreamTrack.id\f[R] \f[I](read\-only)\f[R]
Returns a string containing a unique identifier (GUID) for the track; it
is generated by the browser.
.TP
\f[B]MediaStreamTrack.kind\f[R] \f[I](read\-only)\f[R]
Returns a string set to \f[CR]\[dq]audio\[dq]\f[R] if the track is an
audio track and to \f[CR]\[dq]video\[dq]\f[R], if it is a video track.
It doesn\[cq]t change if the track is disassociated from its source.
.TP
\f[B]MediaStreamTrack.label\f[R] \f[I](read\-only)\f[R]
Returns a string containing a user agent\-assigned label that identifies
the track source, as in \f[CR]\[dq]internal microphone\[dq]\f[R].
The string may be left empty and is empty as long as no source has been
connected.
When the track is disassociated from its source, the label is not
changed.
.TP
\f[B]MediaStreamTrack.muted\f[R] \f[I](read\-only)\f[R]
Returns a Boolean value indicating whether the track is unable to
provide media data due to a technical issue.
.RS
.RS
.PP
\f[B]Note:\f[R] You can implement standard \[lq]mute\[rq] functionality
by setting \f[CR]enabled\f[R] to \f[CR]false\f[R], and unmute the media
by setting it back to \f[CR]true\f[R] again.
.RE
.RE
.TP
\f[B]MediaStreamTrack.readyState\f[R] \f[I](read\-only)\f[R]
Returns an enumerated string giving the status of the track.
This will be one of the following values:
.RS
.IP \[bu] 2
\f[CR]\[dq]live\[dq]\f[R] which indicates that an input is connected and
does its best\-effort in providing real\-time data.
In that case, the output of data can be switched on or off using the
\f[CR]enabled\f[R] attribute.
.IP \[bu] 2
\f[CR]\[dq]ended\[dq]\f[R] which indicates that the input is not giving
any more data and will never provide new data.
.RE
.SH INSTANCE METHODS
.TP
\f[B]MediaStreamTrack.applyConstraints()\f[R]
Lets the application specify the ideal and/or ranges of acceptable
values for any number of the available constrainable properties of the
\f[CR]MediaStreamTrack\f[R].
.TP
\f[B]MediaStreamTrack.clone()\f[R]
Returns a duplicate of the \f[CR]MediaStreamTrack\f[R].
.TP
\f[B]MediaStreamTrack.getCapabilities()\f[R]
Returns an object detailing the accepted values or value range for each
constrainable property of the associated \f[CR]MediaStreamTrack\f[R].
.TP
\f[B]MediaStreamTrack.getConstraints()\f[R]
Returns a \f[CR]MediaTrackConstraints\f[R] object containing the
currently set constraints for the track; the returned value matches the
constraints last set using \f[CR]applyConstraints()\f[R].
.TP
\f[B]MediaStreamTrack.getSettings()\f[R]
Returns a \f[CR]MediaTrackSettings\f[R] object containing the current
values of each of the \f[CR]MediaStreamTrack\f[R]\[cq]s constrainable
properties.
.TP
\f[B]MediaStreamTrack.stop()\f[R]
Stops playing the source associated to the track, both the source and
the track are disassociated.
The track state is set to \f[CR]ended\f[R].
.SH EVENTS
Listen to these events using \f[CR]addEventListener()\f[R] or by
assigning an event listener to the \f[CR]oneventname\f[R] property of
this interface:
.TP
\f[B]ended\f[R]
Sent when playback of the track ends (when the value
\f[CR]readyState\f[R] changes to \f[CR]ended\f[R]), except when the
track is ended by calling \f[CR]MediaStreamTrack.stop\f[R].
.TP
\f[B]mute\f[R]
Sent to the \f[CR]MediaStreamTrack\f[R] when the value of the
\f[CR]muted\f[R] property is changed to \f[CR]true\f[R], indicating that
the track is unable to provide data temporarily (such as when the
network is experiencing a service malfunction).
.TP
\f[B]unmute\f[R]
Sent to the track when data becomes available again, ending the
\f[CR]muted\f[R] state.
.SH SEE ALSO
.IP \[bu] 2
Media Capture and Streams API
.IP \[bu] 2
\f[CR]MediaStream\f[R]
