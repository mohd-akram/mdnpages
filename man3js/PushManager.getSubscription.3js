.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "PUSHMANAGER.GETSUBSCRIPTION" "3JS" "April 22, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
PushManager.getSubscription \- PushManager: getSubscription() method
.SH SYNOPSIS
\f[B]Secure context:\f[R] This feature is available only in secure
contexts (HTTPS).
.PP
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]PushManager.getSubscription()\f[B]\f[R] method of the
\f[CR]PushManager\f[R] interface retrieves an existing push
subscription.
.PP
It returns a \f[CR]Promise\f[R] that resolves to a
\f[CR]PushSubscription\f[R] object containing details of an existing
subscription.
If no existing subscription exists, this resolves to a \f[CR]null\f[R]
value.
.SH SYNTAX
.IP
.EX
getSubscription()
.EE
.SS Parameters
None.
.SS Return value
A \f[CR]Promise\f[R] that resolves to a \f[CR]PushSubscription\f[R]
object or \f[CR]null\f[R].
.SH EXAMPLES
This code snippet is taken from a \c
.UR https://github.com/GoogleChrome/samples/tree/gh-pages/push-messaging-and-notifications
push messaging and notification sample
.UE \c
\&.
(No live demo is available.)
.IP
.EX
\f[I]// We need the service worker registration to check for a subscription\f[R]
navigator.serviceWorker.ready.then((serviceWorkerRegistration) \f[B]=>\f[R] {
  \f[I]// Do we already have a push message subscription?\f[R]
  serviceWorkerRegistration.pushManager
    .getSubscription()
    .then((subscription) \f[B]=>\f[R] {
      \f[I]// Enable any UI which subscribes / unsubscribes from\f[R]
      \f[I]// push messages.\f[R]
      \f[B]const\f[R] pushButton = document.querySelector(\(dq.js\-push\-button\(dq);
      pushButton.disabled = \f[B]false\f[R];

      \f[B]if\f[R] (!subscription) {
        \f[I]// We aren\(aqt subscribed to push, so set UI\f[R]
        \f[I]// to allow the user to enable push\f[R]
        \f[B]return\f[R];
      }

      \f[I]// Keep your server in sync with the latest subscriptionId\f[R]
      sendSubscriptionToServer(subscription);

      showCurlCommand(subscription);

      \f[I]// Set your UI to show they have subscribed for\f[R]
      \f[I]// push messages\f[R]
      pushButton.textContent = \(dqDisable Push Messages\(dq;
      isPushEnabled = \f[B]true\f[R];
    })
    .catch((err) \f[B]=>\f[R] {
      console.error(\(gaError during getSubscription(): ${err}\(ga);
    });
});
.EE
