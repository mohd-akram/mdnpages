.\" Automatically generated by Pandoc 3.4
.\"
.TH "ShadowRoot.adoptedStyleSheets" "JS" "July 26, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
ShadowRoot.adoptedStyleSheets \- ShadowRoot: adoptedStyleSheets property
.SH SYNOPSIS
The \f[B]\f[CB]adoptedStyleSheets\f[B]\f[R] property of the
\f[CR]ShadowRoot\f[R] interface sets an array of constructed stylesheets
to be used by the shadow DOM subtree.
.RS
.PP
\f[B]Note:\f[R] A constructed stylesheet is a stylesheet created
programmatically using the \f[CR]CSSStyleSheet()\f[R] constructor (as
compared to one created by a user\-agent when importing a stylesheet
from a script, imported using \f[CR]<style>\f[R] and
\f[CR]\[at]import\f[R], or linked to via \f[CR]<link>\f[R]).
.RE
.PP
The same constructed stylesheet can be adopted by multiple
\f[CR]ShadowRoot\f[R] instances, and by the parent document (using the
\f[CR]Document.adoptedStyleSheets\f[R] property).
Changing an adopted stylesheet will affect all the adopting objects.
.PP
Stylesheets in the \f[CR]adoptedStyleSheets\f[R] property are considered
along with the shadow DOM\[cq]s other stylesheets.
For the purpose of determining the final computed CSS of any element,
they are considered to have been added \f[I]after\f[R] the other
stylesheets in the shadow DOM (\f[CR]ShadowRoot.styleSheets\f[R]).
.PP
Only stylesheets created using the \f[CR]CSSStyleSheet()\f[R]
constructor, and from within the same parent \f[CR]Document\f[R] as the
shadow root, may be adopted.
.SH VALUE
The value is an array of \f[CR]CSSStyleSheet\f[R] instances that must
have been created using the \f[CR]CSSStyleSheet()\f[R] constructor
within the context of the shadow root\[cq]s parent \f[CR]Document\f[R].
.PP
If the array needs to be modified, use in\-place mutations like
\f[CR]push()\f[R].
The \f[CR]CSSStyleSheet\f[R] instances themselves can also be modified,
and these changes will apply wherever the stylesheet is adopted.
.PP
In an earlier version of the specification, the array was not
modifiable, so the only way to add new stylesheets was to assign a new
array to \f[CR]adoptedStyleSheets\f[R].
.SH EXAMPLES
.SS Adopting a stylesheet
The code below first shows a stylesheet being constructed, and then
\f[CR]CSSStyleSheet.replaceSync()\f[R] is called to add a rule to the
sheet.
.IP
.EX
\f[I]// Create an empty \[dq]constructed\[dq] stylesheet\f[R]
\f[B]const\f[R] sheet = \f[B]new\f[R] CSSStyleSheet();
\f[I]// Apply a rule to the sheet\f[R]
sheet.replaceSync(\[dq]a { color: red; }\[dq]);
.EE
.PP
We then create a \f[CR]ShadowRoot\f[R] and pass the sheet object to
\f[CR]adoptedStyleSheets\f[R] inside an array.
.IP
.EX
\f[I]// Create an element in the document and then create a shadow root:\f[R]
\f[B]const\f[R] node = document.createElement(\[dq]div\[dq]);
\f[B]const\f[R] shadow = node.attachShadow({ mode: \[dq]open\[dq] });

\f[I]// Adopt the sheet into the shadow DOM\f[R]
shadow.adoptedStyleSheets = [sheet];
.EE
.PP
We can still modify the stylesheets after they have been added to the
array.
Below we append a new rule to the same sheet using
\f[CR]CSSStyleSheet.insertRule()\f[R].
.IP
.EX
sheet.insertRule(\[dq]* { background\-color: blue; }\[dq]);
\f[I]// The document will now have blue background.\f[R]
.EE
.SS Append a new stylesheet
New stylesheets can be \f[I]appended\f[R] to the document or shadow root
by using \f[CR]adoptedStyleSheets.push()\f[R]:
.IP
.EX
\f[B]const\f[R] extraSheet = \f[B]new\f[R] CSSStyleSheet();
extraSheet.replaceSync(\[dq]p { color: green; }\[dq]);

\f[I]// Concat the new sheet.\f[R]
shadow.adoptedStyleSheets.push(extraSheet);
.EE
.SH SEE ALSO
.IP \[bu] 2
\c
.UR https://web.dev/articles/constructable-stylesheets
Constructable Stylesheets
.UE \c
\ (web.dev)
.IP \[bu] 2
Using the Shadow DOM
.IP \[bu] 2
\f[CR]CSSStyleSheet()\f[R] constructor
.IP \[bu] 2
\f[CR]CSSStyleSheet.replaceSync()\f[R]
.IP \[bu] 2
\f[CR]CSSStyleSheet.replace()\f[R]
.IP \[bu] 2
\f[CR]CSSStyleSheet.insertRule()\f[R]
.IP \[bu] 2
\f[CR]CSSStyleSheet.deleteRule()\f[R]
