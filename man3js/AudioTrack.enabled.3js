.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "AudioTrack.enabled" "JS" "April 6, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
AudioTrack.enabled \- AudioTrack: enabled property
.SH SYNOPSIS
The \f[B]\f[CB]AudioTrack\f[B]\f[R] property
\f[B]\f[CB]enabled\f[B]\f[R] specifies whether or not the described
audio track is currently enabled for use.
If the track is disabled by setting \f[CR]enabled\f[R] to
\f[CR]false\f[R], the track is muted and does not produce audio.
.SH VALUE
The \f[CR]enabled\f[R] property is a Boolean whose value is
\f[CR]true\f[R] if the track is enabled; enabled tracks produce audio
while the media is playing.
Setting \f[CR]enabled\f[R] to \f[CR]false\f[R] effectively mutes the
audio track, preventing it from contributing to the media\[cq]s audio
performance.
.SH EXAMPLE
This example switches between the main and commentary audio tracks of a
media element.
.IP
.EX
\f[B]function\f[R] swapCommentaryMain() {
  \f[B]const\f[R] videoElem = document.getElementById(\[dq]main\-video\[dq]);
  \f[B]let\f[R] audioTrackMain;
  \f[B]let\f[R] audioTrackCommentary;

  videoElem.audioTracks.forEach((track) \f[B]=>\f[R] {
    \f[B]if\f[R] (track.kind === \[dq]main\[dq]) {
      audioTrackMain = track;
    } \f[B]else\f[R] \f[B]if\f[R] (track.kind === \[dq]commentary\[dq]) {
      audioTrackCommentary = track;
    }
  });

  \f[B]if\f[R] (audioTrackMain && audioTrackCommentary) {
    \f[B]const\f[R] commentaryEnabled = audioTrackCommentary.enabled;
    audioTrackCommentary.enabled = audioTrackMain.enabled;
    audioTrackMain.enabled = commentaryEnabled;
  }
}
.EE
.PP
The \f[CR]swapCommentaryMain()\f[R] function above finds within the
audio tracks of the \f[CR]<video>\f[R] element
\f[CR]\[dq]main\-video\[dq]\f[R] the audio tracks whose \f[CR]kind\f[R]
values are \f[CR]\[dq]main\[dq]\f[R] and
\f[CR]\[dq]commentary\[dq]\f[R].
These represent the primary audio track and the commentary track.
.RS
.PP
\f[B]Note:\f[R] This example assumes that there is only one of each kind
of track in the video, but this is not necessarily the case.
.RE
.PP
The element\[cq]s audio tracks are then scanned through using the
JavaScript \f[CR]forEach()\f[R] method (although the
\f[CR]audioTracks\f[R] property of a media element isn\[cq]t actually a
JavaScript array, it can be accessed like one for the most part).
.PP
The scan looks for the tracks whose \f[CR]kind\f[R] values are
\f[CR]\[dq]main\[dq]\f[R] and \f[CR]\[dq]commentary\[dq]\f[R] and
remembers those \f[CR]AudioTrack\f[R] objects.
Once those have been found, the values of the two tracks\[cq]
\f[CR]enabled\f[R] properties are exchanged, which results in swapping
which of the two tracks is currently active.
