.\" Automatically generated by Pandoc 3.4
.\"
.TH "WebGLRenderingContext.bindRenderbuffer" "JS" "September 28, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
WebGLRenderingContext.bindRenderbuffer \- WebGLRenderingContext:
bindRenderbuffer() method
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]WebGLRenderingContext.bindRenderbuffer()\f[B]\f[R] method
of the WebGL API binds a given \f[CR]WebGLRenderbuffer\f[R] to a target,
which must be \f[CR]gl.RENDERBUFFER\f[R].
.SH SYNTAX
.IP
.EX
bindRenderbuffer(target, renderbuffer)
.EE
.SS Parameters
.TP
\f[B]target\f[R]
A \f[CR]GLenum\f[R] specifying the binding point (target).
Possible values:
.RS
.TP
\f[B]gl.RENDERBUFFER\f[R]
Buffer data storage for single images in a renderable internal format.
.RE
.TP
\f[B]renderbuffer\f[R]
A \f[CR]WebGLRenderbuffer\f[R] object to bind.
.SS Return value
None (\f[CR]undefined\f[R]).
.SS Exceptions
A \f[CR]gl.INVALID_ENUM\f[R] error is thrown if \f[CR]target\f[R] is not
\f[CR]gl.RENDERBUFFER\f[R].
.SH EXAMPLES
.SS Binding a renderbuffer
.IP
.EX
\f[B]const\f[R] canvas = document.getElementById(\[dq]canvas\[dq]);
\f[B]const\f[R] gl = canvas.getContext(\[dq]webgl\[dq]);
\f[B]const\f[R] renderbuffer = gl.createRenderbuffer();

gl.bindRenderbuffer(gl.RENDERBUFFER, renderbuffer);
.EE
.SS Getting current bindings
To check the current renderbuffer binding, query the
\f[CR]RENDERBUFFER_BINDING\f[R] constant.
.IP
.EX
gl.getParameter(gl.RENDERBUFFER_BINDING);
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]WebGLRenderingContext.createRenderbuffer()\f[R]
.IP \[bu] 2
\f[CR]WebGLRenderingContext.deleteRenderbuffer()\f[R]
.IP \[bu] 2
\f[CR]WebGLRenderingContext.isRenderbuffer()\f[R]
.IP \[bu] 2
Other buffers: \f[CR]WebGLBuffer\f[R], \f[CR]WebGLFramebuffer\f[R]
