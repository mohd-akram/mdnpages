.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "RTCCERTIFICATESTATS" "3JS" "April 2, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
RTCCertificateStats \- RTCCertificateStats
.SH SYNOPSIS
The \f[B]\f[CB]RTCCertificateStats\f[B]\f[R] dictionary of the WebRTC
API is used to report information about a certificate used by an
\f[CR]RTCDtlsTransport\f[R] and its underlying
\f[CR]RTCIceTransport\f[R].
.PP
The report can be obtained by iterating the \f[CR]RTCStatsReport\f[R]
returned by \f[CR]RTCPeerConnection.getStats()\f[R] until you find an
entry with the \f[CR]type\f[R] of \f[CR]certificate\f[R].
.SH INSTANCE PROPERTIES
.TP
\f[B]fingerprint\f[R]
A string containing the certificate fingerprint, which is calculated
using the hash function specified in \f[CR]fingerprintAlgorithm\f[R].
.TP
\f[B]fingerprintAlgorithm\f[R]
A string containing the hash function used to compute the certificate
\f[CR]fingerprint\f[R], such as \(lqsha\-256\(rq.
.TP
\f[B]base64Certificate\f[R]
A string containing the base\-64 representation of the DER\-encoded
certificate.
.SS Common instance properties
The following properties are common to all WebRTC statistics objects
(See \f[CR]RTCStatsReport\f[R] for more information).
.TP
\f[B]id\f[R]
A string that uniquely identifies the object that is being monitored to
produce this set of statistics.
.TP
\f[B]timestamp\f[R]
A \f[CR]DOMHighResTimeStamp\f[R] object indicating the time at which the
sample was taken for this statistics object.
.TP
\f[B]type\f[R]
A string with the value \f[CR]\(dqcertificate\(dq\f[R], indicating the
type of statistics that the object contains.
.SH EXAMPLES
Given a variable \f[CR]myPeerConnection\f[R], which is an instance of
\f[CR]RTCPeerConnection\f[R], the code below uses \f[CR]await\f[R] to
wait for the statistics report, and then iterates it using
\f[CR]RTCStatsReport.forEach()\f[R].
It then filters the dictionaries for just those reports that have the
type of \f[CR]certificate\f[R] and logs the result.
.IP
.EX
\f[B]const\f[R] stats = \f[B]await\f[R] myPeerConnection.getStats();

stats.forEach((report) \f[B]=>\f[R] {
  \f[B]if\f[R] (report.type === \(dqcertificate\(dq) {
    \f[I]// Log the certificate information\f[R]
    console.log(report);
  }
});
.EE
.SH SEE ALSO
.IP \(bu 2
\f[CR]RTCStatsReport\f[R]
.IP \(bu 2
\f[CR]RTCCertificate\f[R]
