.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "CSSIMAGEVALUE" "3JS" "October 8, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
CSSImageValue \- CSSImageValue
.SH SYNOPSIS
The \f[B]\f[CB]CSSImageValue\f[B]\f[R] interface of the CSS Typed Object
Model API represents values for properties that take an image, for
example \f[CR]background\-image\f[R], \f[CR]list\-style\-image\f[R], or
\f[CR]border\-image\-source\f[R].
.PP
The CSSImageValue object represents an \f[CR]<image>\f[R] that involves
a URL, such as \f[CR]url()\f[R] or \f[CR]image()\f[R], but not
\f[CR]linear\-gradient()\f[R] or \f[CR]element()\f[R].
.SH INSTANCE PROPERTIES
None.
.SH INSTANCE METHODS
\f[I]Inherits methods from \f[CI]CSSStyleValue\f[I].\f[R]
.SH EXAMPLES
We create an element
.IP
.EX
<\f[B]button\f[R]>Magic Wand</\f[B]button\f[R]>
.EE
.PP
We add some CSS, including a background image requesting a binary file:
.IP
.EX
button {
  \f[B]display\f[R]: inline\-block;
  \f[B]min\-height\f[R]: 100px;
  \f[B]min\-width\f[R]: 100px;
  \f[B]background\f[R]: no\-repeat 5% center url(magic\-wand.png) aqua;
}
.EE
.PP
We get the element\(cqs style map.
We then get() the background\-image from the style map and stringify it:
.IP
.EX
\f[I]// get the element\f[R]
\f[B]const\f[R] button = document.querySelector(\(dqbutton\(dq);

\f[I]// Retrieve all computed styles with computedStyleMap()\f[R]
\f[B]const\f[R] allComputedStyles = button.computedStyleMap();

\f[I]// Return the CSSImageValue Example\f[R]
console.log(allComputedStyles.get(\(dqbackground\-image\(dq));
console.log(allComputedStyles.get(\(dqbackground\-image\(dq).toString());
.EE
.SH SEE ALSO
.IP \(bu 2
\f[CR]CSSKeywordValue\f[R]
.IP \(bu 2
\f[CR]CSSNumericValue\f[R]
.IP \(bu 2
\f[CR]CSSPositionValue\f[R]
.IP \(bu 2
\f[CR]CSSTransformValue\f[R]
.IP \(bu 2
\f[CR]CSSUnparsedValue\f[R]
