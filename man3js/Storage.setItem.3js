.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "STORAGE.SETITEM" "3JS" "July 26, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Storage.setItem \- Storage: setItem() method
.SH SYNOPSIS
The \f[B]\f[CB]setItem()\f[B]\f[R] method of the \f[CR]Storage\f[R]
interface, when passed a key name and value, will add that key to the
given \f[CR]Storage\f[R] object, or update that key\(cqs value if it
already exists.
.SH SYNTAX
.IP
.EX
setItem(keyName, keyValue)
.EE
.SS Parameters
.TP
\f[B]keyName\f[R]
A string containing the name of the key you want to create/update.
.TP
\f[B]keyValue\f[R]
A string containing the value you want to give the key you are
creating/updating.
.SS Return value
None (\f[CR]undefined\f[R]).
.SS Exceptions
.TP
\f[B]QuotaExceededError\f[R] \f[B]DOMException\f[R]
Thrown if the storage run out of disk quota or the user declined to
grant you more space.
.SH EXAMPLES
The following function creates three data items inside local storage.
.IP
.EX
\f[B]function\f[R] populateStorage() {
  localStorage.setItem(\(dqbgcolor\(dq, \(dqred\(dq);
  localStorage.setItem(\(dqfont\(dq, \(dqHelvetica\(dq);
  localStorage.setItem(\(dqimage\(dq, \(dqmyCat.png\(dq);
}
.EE
.RS
.PP
\f[B]Note:\f[R] To see this used within a real\-world example, see our
\c
.UR https://mdn.github.io/dom-examples/web-storage/
Web Storage Demo
.UE \c
\&.
.RE
.PP
\f[CR]Storage\f[R] only supports storing and retrieving strings.
If you want to save other data types, you have to convert them to
strings.
For plain objects and arrays, you can use \f[CR]JSON.stringify()\f[R].
.IP
.EX
\f[B]const\f[R] person = { name: \(dqAlex\(dq };
localStorage.setItem(\(dquser\(dq, person);
console.log(localStorage.getItem(\(dquser\(dq)); \f[I]// \(dq[object Object]\(dq; not useful!\f[R]
localStorage.setItem(\(dquser\(dq, JSON.stringify(person));
console.log(JSON.parse(localStorage.getItem(\(dquser\(dq))); \f[I]// { name: \(dqAlex\(dq }\f[R]
.EE
.PP
However, there\(cqs no generic way to store arbitrary data types.
Furthermore, the retrieved object is a deep copy of the original object
and mutations to it do not affect the original object.
.SH SEE ALSO
.IP \(bu 2
Storage.getItem()
.IP \(bu 2
Storage.removeItem()
.IP \(bu 2
Using the Web Storage API
