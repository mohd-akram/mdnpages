.\" Automatically generated by Pandoc 3.4
.\"
.TH "CountQueuingStrategy" "JS" "April 22, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
CountQueuingStrategy \- CountQueuingStrategy
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]CountQueuingStrategy\f[B]\f[R] interface of the Streams
API provides a built\-in chunk counting queuing strategy that can be
used when constructing streams.
.SH CONSTRUCTOR
.TP
\f[B]CountQueuingStrategy()\f[R]
Creates a new \f[CR]CountQueuingStrategy\f[R] object instance.
.SH INSTANCE PROPERTIES
.TP
\f[B]CountQueuingStrategy.highWaterMark\f[R] \f[I](read\-only)\f[R]
The total number of chunks that can be contained in the internal queue
before backpressure is applied.
.SH INSTANCE METHODS
.TP
\f[B]CountQueuingStrategy.size()\f[R]
Always returns \f[CR]1\f[R].
.SH EXAMPLES
.IP
.EX
\f[B]const\f[R] queueingStrategy = \f[B]new\f[R] CountQueuingStrategy({ highWaterMark: 1 });

\f[B]const\f[R] writableStream = \f[B]new\f[R] WritableStream(
  {
    \f[I]// Implement the sink\f[R]
    write(chunk) {
      \f[I]// \&...\f[R]
    },
    close() {
      \f[I]// \&...\f[R]
    },
    abort(err) {
      console.log(\[dq]Sink error:\[dq], err);
    },
  },
  queueingStrategy,
);

\f[B]const\f[R] size = queueingStrategy.size();
.EE
.SH SEE ALSO
.IP \[bu] 2
Streams API
.IP \[bu] 2
\f[CR]CountQueuingStrategy()\f[R] constructor
.IP \[bu] 2
Internal queues and queuing strategies
