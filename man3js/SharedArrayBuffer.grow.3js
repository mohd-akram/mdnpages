.\" Automatically generated by Pandoc 3.4
.\"
.TH "SharedArrayBuffer.grow" "JS" "December 11, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
SharedArrayBuffer.grow \- SharedArrayBuffer.prototype.grow()
.SH SYNOPSIS
The \f[B]\f[CB]grow()\f[B]\f[R] method of \f[CR]SharedArrayBuffer\f[R]
instances grows the \f[CR]SharedArrayBuffer\f[R] to the specified size,
in bytes.
.SH SYNTAX
.IP
.EX
grow(newLength)
.EE
.SS Parameters
.TP
\f[B]newLength\f[R]
The new length, in bytes, to resize the \f[CR]SharedArrayBuffer\f[R] to.
.SS Return value
None (\f[CR]undefined\f[R]).
.SS Exceptions
.TP
\f[B]TypeError\f[R]
Thrown if the \f[CR]SharedArrayBuffer\f[R] is not growable.
.TP
\f[B]RangeError\f[R]
Thrown if \f[CR]newLength\f[R] is larger than the
\f[CR]maxByteLength\f[R] of the \f[CR]SharedArrayBuffer\f[R] or smaller
than the \f[CR]byteLength\f[R].
.SH DESCRIPTION
The \f[CR]grow()\f[R] method grows a \f[CR]SharedArrayBuffer\f[R] to the
size specified by the \f[CR]newLength\f[R] parameter, provided that the
\f[CR]SharedArrayBuffer\f[R] is growable and the new size is less than
or equal to the \f[CR]maxByteLength\f[R] of the
\f[CR]SharedArrayBuffer\f[R].
New bytes are initialized to 0.
.SH EXAMPLES
.SS Using grow()
In this example, we create a 8\-byte buffer that is growable to a max
length of 16 bytes, then check its \f[CR]growable\f[R] property, growing
it if \f[CR]growable\f[R] returns \f[CR]true\f[R]:
.IP
.EX
\f[B]const\f[R] buffer = \f[B]new\f[R] SharedArrayBuffer(8, { maxByteLength: 16 });

\f[B]if\f[R] (buffer.growable) {
  console.log(\[dq]SAB is growable!\[dq]);
  buffer.grow(12);
}
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]SharedArrayBuffer\f[R]
.IP \[bu] 2
\f[CR]SharedArrayBuffer.prototype.growable\f[R]
.IP \[bu] 2
\f[CR]SharedArrayBuffer.prototype.maxByteLength\f[R]
