.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "TrustedTypePolicyFactory.emptyScript" "JS" "May 13, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
TrustedTypePolicyFactory.emptyScript \- TrustedTypePolicyFactory:
emptyScript property
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]emptyScript\f[B]\f[R] read\-only property of the
\f[CR]TrustedTypePolicyFactory\f[R] interface returns a
\f[CR]TrustedScript\f[R] object containing an empty string.
.PP
This object can be used when the application requires an empty string to
be inserted into an injection sink which is expecting a
\f[CR]TrustedScript\f[R] object.
.SH VALUE
A \f[CR]TrustedScript\f[R] object.
.SH EXAMPLES
The \c
.UR https://w3c.github.io/trusted-types/dist/spec/#dom-trustedtypepolicyfactory-emptyscript
specification
.UE \c
\ explains that the \f[CR]emptyScript\f[R] object can be used to detect
support for dynamic code compilation.
.PP
Native Trusted Types implementations can support
\f[CR]eval(TrustedScript)\f[R], therefore in the below example a native
implementation will return false for
\f[CR]eval(trustedTypes.emptyScript)\f[R].
A polyfill will return a truthy object.
.IP
.EX
\f[B]const\f[R] supportsTS = !eval(trustedTypes.emptyScript);
eval(supportsTS ? myTrustedScriptObj : myTrustedScriptObj.toString());
.EE
