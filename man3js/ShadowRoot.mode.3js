.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "ShadowRoot.mode" "JS" "May 17, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
ShadowRoot.mode \- ShadowRoot: mode property
.SH SYNOPSIS
The \f[B]\f[CB]mode\f[B]\f[R] read\-only property of the
\f[CR]ShadowRoot\f[R] specifies its mode \[em] either \f[CR]open\f[R] or
\f[CR]closed\f[R].
This defines whether or not the shadow root\[cq]s internal features are
accessible from JavaScript.
.PP
When the \f[CR]mode\f[R] of a shadow root is
\[lq]\f[CR]closed\f[R]\[rq], the shadow root\[cq]s implementation
internals are inaccessible and unchangeable from JavaScript\[em]in the
same way the implementation internals of, for example, the
\f[CR]<video>\f[R] element are inaccessible and unchangeable from
JavaScript.
.PP
The property value is set using the \f[CR]options.mode\f[R] property of
the object passed to \f[CR]Element.attachShadow()\f[R], or using the
\f[CR]shadowrootmode\f[R] attribute of the \f[CR]<template>\f[R] element
when a shadow root is created declaratively.
.SH VALUE
A string value that can have either of the values:
.TP
\f[B]open\f[R]
Elements of the shadow root are accessible from JavaScript outside the
root.
.TP
\f[B]closed\f[R]
Nodes inside the closed shadow tree cannot be accessed by JavaScript
outside of the root.
.SH EXAMPLES
.IP
.EX
\f[I]// We create a closed shadow root, that is not accessible\f[R]
\f[B]let\f[R] element = document.createElement(\[dq]div\[dq]);
element.attachShadow({ mode: \[dq]closed\[dq] });
element.shadowRoot; \f[I]// null as the shadow root is closed\f[R]

\f[I]// We create an open shadow root, that is accessible\f[R]
\f[B]let\f[R] element2 = document.createElement(\[dq]div\[dq]);
element2.attachShadow({ mode: \[dq]open\[dq] });
console.log(\[ga]The shadow is ${element2.shadowRoot.mode}\[ga]); \f[I]// logs \[dq]The shadow is open\[dq]\f[R]
element2.shadowRoot.textContent(\[dq]Opened shadow\[dq]); \f[I]// The shadow is open, we can access it from outside\f[R]
.EE
