.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "HTMLImageElement.loading" "JS" "July 26, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
HTMLImageElement.loading \- HTMLImageElement: loading property
.SH SYNOPSIS
The \f[CR]HTMLImageElement\f[R] property \f[B]\f[CB]loading\f[B]\f[R] is
a string whose value provides a hint to the user agent on how to handle
the loading of the image which is currently outside the window\[cq]s
visual viewport.
.PP
This helps to optimize the loading of the document\[cq]s contents by
postponing loading the image until it\[cq]s expected to be needed,
rather than immediately during the initial page load.
.SH VALUE
A string providing a hint to the user agent as to how to best schedule
the loading of the image to optimize page performance.
The possible values are:
.TP
\f[B]eager\f[R]
The default behavior, \f[CR]eager\f[R] tells the browser to load the
image as soon as the \f[CR]<img>\f[R] element is processed.
.TP
\f[B]lazy\f[R]
Tells the user agent to hold off on loading the image until the browser
estimates that it will be needed imminently.
For instance, if the user is scrolling through the document, a value of
\f[CR]lazy\f[R] will cause the image to only be loaded shortly before it
will appear in the window\[cq]s visual viewport.
.SH USAGE NOTES
.RS
.PP
\f[B]Note:\f[R] In Firefox, the \f[CR]loading\f[R] attribute must be
defined before the \f[CR]src\f[R] attribute, otherwise it has no effect
(\c
.UR https://bugzil.la/1647077
Firefox bug 1647077
.UE \c
).
.RE
.SS JavaScript must be enabled
Loading is only deferred when JavaScript is enabled.
This is an anti\-tracking measure, because if a user agent supported
lazy loading when scripting is disabled, it would still be possible for
a site to track a user\[cq]s approximate scroll position throughout a
session, by strategically placing images in a page\[cq]s markup such
that a server can track how many images are requested and when.
.SS Timing of the load event
The \f[CR]load\f[R] event is fired when the document has been fully
processed.
When images are loaded eagerly (which is the default), every image in
the document must be fetched before the \f[CR]load\f[R] event can fire.
.PP
By specifying the value \f[CR]lazy\f[R] for \f[CR]loading\f[R], you
prevent the image from delaying the \f[CR]load\f[R] attribute by the
amount of time it takes to request, fetch, and process the image.
.PP
Images whose \f[CR]loading\f[R] attribute is set to \f[CR]lazy\f[R] but
are located within the visual viewport immediately upon initial page
load are loaded as soon as the layout is known, but their loads do not
delay the firing of the \f[CR]load\f[R] event.
In other words, these images aren\[cq]t loaded immediately when
processing the \f[CR]<img>\f[R] element, but are still loaded as part of
the initial page load.
They just don\[cq]t affect the timing of the \f[CR]load\f[R] event.
.PP
That means that when \f[CR]load\f[R] fires, it\[cq]s possible that any
lazy\-loaded images located in the visual viewport may not yet be
visible.
.SS Preventing element shift during image lazy loads
When an image whose loading has been delayed by the \f[CR]loading\f[R]
attribute being set to \f[CR]lazy\f[R] is finally loaded, the browser
will determine the final size of the \f[CR]<img>\f[R] element based on
the style and intrinsic size of the image, then reflow the document as
needed to update the positions of elements based on any size change made
to the element to fit the image.
.PP
To prevent this reflow from occurring, you should explicitly specify the
size of the image\[cq]s presentation using the image element\[cq]s
\f[CR]width\f[R] and \f[CR]height\f[R] attributes.
By establishing the intrinsic aspect ratio in this manner, you prevent
elements from shifting around while the document loads, which can be
disconcerting or off\-putting at best and can cause users to click the
wrong thing at worst, depending on the exact timing of the deferred
loads and reflows.
.SH EXAMPLES
The \f[CR]addImageToList()\f[R] function shown below adds a photo
thumbnail to a list of items, using lazy\-loading to avoid loading the
image from the network until it\[cq]s actually needed.
.IP
.EX
\f[B]function\f[R] addImageToList(url) {
  \f[B]const\f[R] list = document.querySelector(\[dq]div.photo\-list\[dq]);

  \f[B]let\f[R] newItem = document.createElement(\[dq]div\[dq]);
  newItem.className = \[dq]photo\-item\[dq];

  \f[B]let\f[R] newImg = document.createElement(\[dq]img\[dq]);
  newImg.loading = \[dq]lazy\[dq];
  newImg.width = 320;
  newImg.height = 240;
  newImg.src = url;

  newItem.appendChild(newImg);
  list.appendChild(newItem);
}
.EE
.SH SEE ALSO
.IP \[bu] 2
The \f[CR]<img>\f[R] element
.IP \[bu] 2
Web performance in the MDN Learning Area
.IP \[bu] 2
Lazy loading in the MDN web performance guide
