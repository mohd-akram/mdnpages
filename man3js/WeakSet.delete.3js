.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "WEAKSET.DELETE" "3JS" "February 11, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
WeakSet.delete \- WeakSet.prototype.delete()
.SH SYNOPSIS
The \f[B]\f[CB]delete()\f[B]\f[R] method of \f[CR]WeakSet\f[R] instances
removes the specified element from this \f[CR]WeakSet\f[R].
.IP
.EX
\f[B]const\f[R] weakset1 = \f[B]new\f[R] WeakSet();
\f[B]const\f[R] object1 = {};

weakset1.add(object1);

console.log(weakset1.has(object1));
\f[I]// Expected output: true\f[R]

weakset1.delete(object1);

console.log(weakset1.has(object1));
\f[I]// Expected output: false\f[R]
.EE
.SH SYNTAX
.IP
.EX
weakSetInstance.delete(value)
.EE
.SS Parameters
.TP
\f[B]value\f[R]
The value to remove from the \f[CR]WeakSet\f[R] object.
.SS Return value
\f[CR]true\f[R] if an element in the \f[CR]WeakSet\f[R] object has been
removed successfully.
\f[CR]false\f[R] if the \f[CR]value\f[R] is not found in the
\f[CR]WeakSet\f[R].
Always returns \f[CR]false\f[R] if \f[CR]value\f[R] is not an object or
a non\-registered symbol.
.SH EXAMPLES
.SS Using the delete() method
.IP
.EX
\f[B]const\f[R] ws = \f[B]new\f[R] WeakSet();
\f[B]const\f[R] obj = {};

ws.add(window);

ws.delete(obj); \f[I]// Returns false. No obj found to be deleted.\f[R]
ws.delete(window); \f[I]// Returns true. Successfully removed.\f[R]

ws.has(window); \f[I]// Returns false. The window is no longer present in the WeakSet.\f[R]
.EE
.SH SEE ALSO
.IP \(bu 2
\f[CR]WeakSet\f[R]
.IP \(bu 2
\f[CR]WeakSet.prototype.add()\f[R]
.IP \(bu 2
\f[CR]WeakSet.prototype.has()\f[R]
