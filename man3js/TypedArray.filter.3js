.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "TypedArray.filter" "JS" "September 14, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
TypedArray.filter \- TypedArray.prototype.filter()
.SH SYNOPSIS
The \f[B]\f[CB]filter()\f[B]\f[R] method of \f[CR]TypedArray\f[R]
instances creates a copy of a portion of a given typed array, filtered
down to just the elements from the given typed array that pass the test
implemented by the provided function.
This method has the same algorithm as
\f[CR]Array.prototype.filter()\f[R].
.SH SYNTAX
.IP
.EX
filter(callbackFn)
filter(callbackFn, thisArg)
.EE
.SS Parameters
.TP
\f[B]callbackFn\f[R]
A function to execute for each element in the typed array.
It should return a truthy value to keep the element in the resulting
typed array, and a falsy value otherwise.
The function is called with the following arguments:
.RS
.TP
\f[B]element\f[R]
The current element being processed in the typed array.
.TP
\f[B]index\f[R]
The index of the current element being processed in the typed array.
.TP
\f[B]array\f[R]
The typed array \f[CR]filter()\f[R] was called upon.
.RE
.TP
\f[B]thisArg\f[R] \f[I](optional)\f[R]
A value to use as \f[CR]this\f[R] when executing \f[CR]callbackFn\f[R].
See iterative methods.
.SS Return value
A copy of the given typed array containing just the elements that pass
the test.
If no elements pass the test, an empty typed array is returned.
.SH DESCRIPTION
See \f[CR]Array.prototype.filter()\f[R] for more details.
This method is not generic and can only be called on typed array
instances.
.SH EXAMPLES
.SS Filtering out all small values
The following example uses \f[CR]filter()\f[R] to create a filtered
typed array that has all elements with values less than 10 removed.
.IP
.EX
\f[B]function\f[R] isBigEnough(element, index, array) {
  \f[B]return\f[R] element >= 10;
}
\f[B]new\f[R] Uint8Array([12, 5, 8, 130, 44]).filter(isBigEnough);
\f[I]// Uint8Array [ 12, 130, 44 ]\f[R]
.EE
.SH SEE ALSO
.IP \[bu] 2
\c
.UR https://github.com/zloirock/core-js#ecmascript-typed-arrays
Polyfill of \f[CR]TypedArray.prototype.filter\f[R] in
\f[CR]core\-js\f[R]
.UE \c
.IP \[bu] 2
JavaScript typed arrays guide
.IP \[bu] 2
\f[CR]TypedArray\f[R]
.IP \[bu] 2
\f[CR]TypedArray.prototype.forEach()\f[R]
.IP \[bu] 2
\f[CR]TypedArray.prototype.every()\f[R]
.IP \[bu] 2
\f[CR]TypedArray.prototype.map()\f[R]
.IP \[bu] 2
\f[CR]TypedArray.prototype.some()\f[R]
.IP \[bu] 2
\f[CR]TypedArray.prototype.reduce()\f[R]
.IP \[bu] 2
\f[CR]Array.prototype.filter()\f[R]
