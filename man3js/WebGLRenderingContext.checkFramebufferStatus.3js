.\" Automatically generated by Pandoc 3.4
.\"
.TH "WebGLRenderingContext.checkFramebufferStatus" "JS" "September 28, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
WebGLRenderingContext.checkFramebufferStatus \- WebGLRenderingContext:
checkFramebufferStatus() method
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]WebGLRenderingContext.checkFramebufferStatus()\f[B]\f[R]
method of the WebGL API returns the completeness status of the
\f[CR]WebGLFramebuffer\f[R] object.
.SH SYNTAX
.IP
.EX
checkFramebufferStatus(target)
.EE
.SS Parameters
.TP
\f[B]target\f[R]
A \f[CR]GLenum\f[R] specifying the binding point (target).
Possible values:
.RS
.TP
\f[B]gl.FRAMEBUFFER\f[R]
Collection buffer data storage of color, alpha, depth and stencil
buffers used to render an image.
.PP
When using a WebGL 2 context, the following values are available
additionally:
.TP
\f[B]gl.DRAW_FRAMEBUFFER\f[R]
Equivalent to \f[CR]gl.FRAMEBUFFER\f[R].
Used as a destination for drawing, rendering, clearing, and writing
operations.
.TP
\f[B]gl.READ_FRAMEBUFFER\f[R]
Used as a source for reading operations.
.RE
.SS Return value
A \f[CR]GLenum\f[R] indicating the completeness status of the
framebuffer or \f[CR]0\f[R] if an error occurs.
Possible enum return values:
.IP \[bu] 2
\f[CR]gl.FRAMEBUFFER_COMPLETE\f[R]: The framebuffer is ready to display.
.IP \[bu] 2
\f[CR]gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT\f[R]: The attachment types
are mismatched or not all framebuffer attachment points are framebuffer
attachment complete.
.IP \[bu] 2
\f[CR]gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT\f[R]: There is no
attachment.
.IP \[bu] 2
\f[CR]gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS\f[R]: Height and width of the
attachment are not the same.
.IP \[bu] 2
\f[CR]gl.FRAMEBUFFER_UNSUPPORTED\f[R]: The format of the attachment is
not supported or if depth and stencil attachments are not the same
renderbuffer.
.IP \[bu] 2
When using a WebGL 2 context, the following values can be returned
additionally:
.RS 2
.IP \[bu] 2
\f[CR]gl.FRAMEBUFFER_INCOMPLETE_MULTISAMPLE\f[R]: The values of
\f[CR]gl.RENDERBUFFER_SAMPLES\f[R] are different among attached
renderbuffers, or are non\-zero if the attached images are a mix of
renderbuffers and textures.
.RE
.IP \[bu] 2
When using the \f[CR]OVR_multiview2\f[R] extension, the following value
can be returned additionally:
.RS 2
.IP \[bu] 2
\f[CR]ext.FRAMEBUFFER_INCOMPLETE_VIEW_TARGETS_OVR\f[R]: If
\f[CR]baseViewIndex\f[R] is not the same for all framebuffer attachment
points where the value of \f[CR]FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE\f[R]
is not \f[CR]NONE\f[R], the framebuffer is considered incomplete.
.RE
.SH EXAMPLES
.IP
.EX
\f[B]const\f[R] canvas = document.getElementById(\[dq]canvas\[dq]);
\f[B]const\f[R] gl = canvas.getContext(\[dq]webgl\[dq]);
\f[B]const\f[R] framebuffer = gl.createFramebuffer();

\f[I]// \&...\f[R]

gl.checkFramebufferStatus(gl.FRAMEBUFFER);
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]WebGLRenderingContext.createFramebuffer()\f[R]
.IP \[bu] 2
\f[CR]WebGLRenderingContext.deleteFramebuffer()\f[R]
.IP \[bu] 2
\f[CR]WebGLRenderingContext.isFramebuffer()\f[R]
.IP \[bu] 2
Other buffers: \f[CR]WebGLBuffer\f[R], \f[CR]WebGLRenderbuffer\f[R]
