.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "HTMLInputElement.value" "JS" "August 23, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
HTMLInputElement.value \- HTMLInputElement: value property
.SH SYNOPSIS
The \f[B]\f[CB]value\f[B]\f[R] property of the
\f[CR]HTMLInputElement\f[R] interface represents the current value of
the \f[CR]<input>\f[R] element as a string.
.PP
This property can also be set directly, for example to set a default
value based on some condition.
.SH VALUE
A string containing the value of the \f[CR]<input>\f[R] element, or the
empty string if the input element has no value set.
.SH EXAMPLES
.SS Retrieving a text input\[cq]s value
In this example, the log displays the current value as the user enters
data into the input.
.SS HTML
We include an \f[CR]<input>\f[R] and an associated \f[CR]<label>\f[R],
with a \f[CR]<pre>\f[R] container for our output.
.IP
.EX
<\f[B]label\f[R] for=\[dq]givenname\[dq]>Your name:</\f[B]label\f[R]>

<\f[B]input\f[R] name=\[dq]givenname\[dq] id=\[dq]givenname\[dq] />

<\f[B]pre\f[R] id=\[dq]log\[dq]></\f[B]pre\f[R]>
.EE
.SS JavaScript
The \f[CR]<pre>\f[R] element\[cq]s \f[CR]innerText\f[R] is updated to
the current value of the \f[CR]<input>\f[R] every time a
\f[CR]keyup\f[R] event is fired.
.IP
.EX
\f[B]const\f[R] logElement = document.getElementById(\[dq]log\[dq]);
\f[B]const\f[R] inputElement = document.getElementById(\[dq]givenname\[dq]);

inputElement.addEventListener(\[dq]keyup\[dq], () \f[B]=>\f[R] {
  logElement.innerText = \[ga]Name: ${inputElement.value}\[ga];
});
.EE
.SS Results
.SS Retrieving a color value
This example demonstrates that the \f[CR]value\f[R] property with an
\f[CR]<input>\f[R] of type \f[CR]color\f[R].
.SS HTML
We include an \f[CR]<input>\f[R] of type \f[CR]color\f[R]:
.IP
.EX
<\f[B]label\f[R] for=\[dq]color\[dq]>Pick a color:</\f[B]label\f[R]>

<\f[B]input\f[R] name=\[dq]color\[dq] id=\[dq]color\[dq] type=\[dq]color\[dq] />

<\f[B]pre\f[R] id=\[dq]log\[dq]></\f[B]pre\f[R]>
.EE
.SS JavaScript
The \f[CR]<pre>\f[R] element\[cq]s \f[CR]innerText\f[R] is updated with
the default color value (\f[CR]#000000\f[R]) and then updated every time
a \f[CR]change\f[R] event is fired.
.IP
.EX
\f[B]const\f[R] logElement = document.getElementById(\[dq]log\[dq]);
\f[B]const\f[R] inputElement = document.getElementById(\[dq]color\[dq]);

logElement.innerText = \[ga]Color: ${inputElement.value}\[ga];

inputElement.addEventListener(\[dq]change\[dq], () \f[B]=>\f[R] {
  logElement.innerText = \[ga]Color: ${inputElement.value}\[ga];
});
.EE
.SS Results
.SH SEE ALSO
.IP \[bu] 2
\f[CR]<input>\f[R]
.IP \[bu] 2
\f[CR]HTMLInputElement.valueAsDate\f[R]
.IP \[bu] 2
\f[CR]HTMLInputElement.valueAsNumber\f[R]
