.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "HTMLSTYLEELEMENT.DISABLED" "3JS" "April 27, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
HTMLStyleElement.disabled \- HTMLStyleElement: disabled property
.SH SYNOPSIS
The \f[B]\f[CB]HTMLStyleElement.disabled\f[B]\f[R] property can be used
to get and set whether the stylesheet is disabled (\f[CR]true\f[R]) or
not (\f[CR]false\f[R]).
.PP
Note that there is no corresponding \f[CR]disabled\f[R] attribute on the
HTML \f[CR]<style>\f[R] element.
.SH VALUE
Returns \f[CR]true\f[R] if the stylesheet is disabled, or there is no
associated stylesheet; otherwise \f[CR]false\f[R].
The value is \f[CR]false\f[R] by default (if there is an associated
stylesheet).
.PP
The property can be used to enable or disable an associated stylesheet.
Setting the property to \f[CR]true\f[R] when there is no associated
stylesheet has no effect.
.SH EXAMPLES
.SS Disabling an inline style
This example demonstrates programmatically setting the disabled property
on a style that was defined in the HTML using the HTML
\f[CR]<style>\f[R] element.
Note that you can also access any/all stylesheets in the document using
\f[CR]Document.styleSheets\f[R].
.SS HTML
The HTML contains an HTML \f[CR]<style>\f[R] element that makes
paragraph elements blue, a paragraph element, and a button that will be
used to enabled and disable the style.
.IP
.EX
<\f[B]button\f[R]>Enable</\f[B]button\f[R]>
<\f[B]style\f[R] id=\(dqInlineStyle\(dq>
  p {
    \f[B]color\f[R]: blue;
  }
</\f[B]style\f[R]>
<\f[B]p\f[R]>Text is black when style is disabled; blue when enabled.</\f[B]p\f[R]>
<\f[B]p\f[R]></\f[B]p\f[R]>
.EE
.SS JavaScript
The code below gets the \f[CR]style\f[R] element using its id, and then
sets it as disabled.
As the style already exists, as it is defined in the SVG, this should
succeed.
.IP
.EX
\f[B]const\f[R] style = document.getElementById(\(dqInlineStyle\(dq);
style.disabled = \f[B]true\f[R];
.EE
.PP
We then add an event handler for the button that toggles the
\f[CR]disabled\f[R] value and button text.
.IP
.EX
\f[B]const\f[R] button = document.querySelector(\(dqbutton\(dq);

button.addEventListener(\(dqclick\(dq, () \f[B]=>\f[R] {
  style.disabled = !style.disabled;
  \f[B]const\f[R] buttonText = style.disabled ? \(dqEnable\(dq : \(dqDisable\(dq;
  button.innerText = buttonText;
});
.EE
.SS Result
The result is shown below.
Press the button to toggle the \f[CR]disabled\f[R] property value on the
style used for the paragraph text.
.SS Disabling a programmatically defined style
This example is very similar to the one above, except that the style is
defined programmatically.
.SS HTML
The HTML is similar to the previous case, but the definition does not
include any default styling.
.IP
.EX
<\f[B]button\f[R]>Enable</\f[B]button\f[R]>
<\f[B]p\f[R]>Text is black when style is disabled; blue when enabled.</\f[B]p\f[R]>
<\f[B]p\f[R]></\f[B]p\f[R]>
.EE
.SS JavaScript
First we create the new style element on the HTML.
This is done by first creating a style element using
\f[CR]Document.createElement()\f[R], creating and appending a text node
with the style definition, and then appending the style element to the
document body.
.IP
.EX
\f[I]// Create the \(gastyle\(ga element\f[R]
\f[B]const\f[R] style = document.createElement(\(dqstyle\(dq);
\f[B]const\f[R] node = document.createTextNode(\(dqp { color: blue; }\(dq);
style.appendChild(node);
document.body.appendChild(style);
.EE
.PP
We can then disable the style as shown below.
Note that this is the earliest point at which setting the property to
\f[CR]true\f[R] will succeed.
Before this point the document did not have an associated style, and so
the value defaults to \f[CR]false\f[R].
.IP
.EX
\f[I]// Disable the style\f[R]
style.disabled = \f[B]true\f[R];
.EE
.PP
Last of all we add an event handler for the button that toggles the
disabled state and button text (this is the same as in the previous
example).
.IP
.EX
\f[B]const\f[R] button = document.querySelector(\(dqbutton\(dq);

button.addEventListener(\(dqclick\(dq, () \f[B]=>\f[R] {
  style.disabled = !style.disabled;
  \f[B]const\f[R] buttonText = style.disabled ? \(dqEnable\(dq : \(dqDisable\(dq;
  button.innerText = buttonText;
});
.EE
.SS Result
The result is shown below.
Press the button to toggle the \f[CR]disabled\f[R] state on the style
used for the text.
.SH SEE ALSO
.IP \(bu 2
\f[CR]SVGStyleElement.disabled\f[R]
