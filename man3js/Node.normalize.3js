.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "Node.normalize" "JS" "April 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Node.normalize \- Node: normalize() method
.SH SYNOPSIS
The \f[B]\f[CB]normalize()\f[B]\f[R] method of the \f[CR]Node\f[R]
interface puts the specified node and all of its sub\-tree into a
\f[I]normalized\f[R] form.
In a normalized sub\-tree, no text nodes in the sub\-tree are empty and
there are no adjacent text nodes.
.SH SYNTAX
.IP
.EX
normalize()
.EE
.SS Parameters
None.
.SS Return value
None.
.SH EXAMPLE
.IP
.EX
<\f[B]output\f[R] id=\[dq]result\[dq]></\f[B]output\f[R]>
.EE
.IP
.EX
\f[B]const\f[R] wrapper = document.createElement(\[dq]div\[dq]);

wrapper.appendChild(document.createTextNode(\[dq]Part 1 \[dq]));
wrapper.appendChild(document.createTextNode(\[dq]Part 2 \[dq]));

\f[B]let\f[R] node = wrapper.firstChild;
\f[B]let\f[R] result = \[dq]Before normalization:<br/>\[dq];
\f[B]while\f[R] (node) {
  result += \[ga] ${node.nodeName}: ${node.nodeValue}<br/>\[ga];
  node = node.nextSibling;
}

wrapper.normalize();

node = wrapper.firstChild;
result += \[dq]<br/><br/>After normalization:<br/>\[dq];
\f[B]while\f[R] (node) {
  result += \[ga] ${node.nodeName}: ${node.nodeValue}<br/>\[ga];
  node = node.nextSibling;
}

\f[B]const\f[R] output = document.getElementById(\[dq]result\[dq]);
output.innerHTML = result;
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]Text.splitText()\f[R], its opposite.
