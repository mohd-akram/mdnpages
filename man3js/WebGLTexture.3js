.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "WebGLTexture" "JS" "March 16, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
WebGLTexture \- WebGLTexture
.SH SYNOPSIS
The \f[B]WebGLTexture\f[R] interface is part of the WebGL API and
represents an opaque texture object providing storage and state for
texturing operations.
.SH WEBGL TEXTURES
The \f[CR]WebGLTexture\f[R] object does not define any methods or
properties of its own and its content is not directly accessible.
When working with \f[CR]WebGLTexture\f[R] objects, the following methods
of the \f[CR]WebGLRenderingContext\f[R] are useful:
.IP \[bu] 2
\f[CR]WebGLRenderingContext.bindTexture()\f[R]
.IP \[bu] 2
\f[CR]WebGLRenderingContext.createTexture()\f[R]
.IP \[bu] 2
\f[CR]WebGLRenderingContext.deleteTexture()\f[R]
.IP \[bu] 2
\f[CR]WebGLRenderingContext.isTexture()\f[R]
.PP
See also the WebGL tutorial on Using textures in WebGL.
.SH WEBXR OPAQUE TEXTURES
When using WebXR layers, the \f[CR]XRWebGLBinding\f[R] object will
return instances of an \f[I]opaque\f[R] \f[CR]WebGLTexture\f[R] for the
color and depth/stencil attachments.
.PP
WebXR methods that return \f[I]opaque\f[R] \f[CR]WebGLTexture\f[R]
objects:
.IP \[bu] 2
\f[CR]XRWebGLBinding.getSubImage()\f[R]
.IP \[bu] 2
\f[CR]XRWebGLBinding.getViewSubImage()\f[R]
.PP
The WebXR \f[I]opaque texture\f[R] is identical to the standard
\f[CR]WebGLTexture\f[R] with the following exceptions:
.IP \[bu] 2
A WebXR opaque texture is invalid outside a WebXR
\f[CR]requestAnimationFrame()\f[R] callback for its session.
.IP \[bu] 2
A WebXR opaque texture is invalid until it is returned by
\f[CR]XRWebGLBinding.getSubImage()\f[R] or
\f[CR]XRWebGLBinding.getViewSubImage()\f[R].
.IP \[bu] 2
A WebXR opaque texture for the color attachment contains colors with
premultiplied alpha.
.IP \[bu] 2
At the end of a \f[CR]requestAnimationFrame()\f[R] callback a WebXR
opaque texture is unbounded and detached from all \f[CR]WebGLShader\f[R]
objects.
.IP \[bu] 2
A WebXR opaque texture behaves as though it was allocated with
\f[CR]texStorage2D\f[R] or \f[CR]texStorage3D\f[R], as appropriate, even
when using a WebGL 1.0 context.
.IP \[bu] 2
If a WebXR opaque texture calls
\f[CR]WebGLRenderingContext.deleteTexture()\f[R], an
\f[CR]INVALID_OPERATION\f[R] error is thrown.
.IP \[bu] 2
Changes to the dimension or format of a WebXR opaque texture are not
allowed.
GL functions may only alter the texel values and texture parameters.
.SH EXAMPLES
.SS Creating a texture
.IP
.EX
\f[B]const\f[R] canvas = document.getElementById(\[dq]canvas\[dq]);
\f[B]const\f[R] gl = canvas.getContext(\[dq]webgl\[dq]);
\f[B]const\f[R] texture = gl.createTexture();
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]WebGLRenderingContext.bindTexture()\f[R]
.IP \[bu] 2
\f[CR]WebGLRenderingContext.createTexture()\f[R]
.IP \[bu] 2
\f[CR]WebGLRenderingContext.deleteTexture()\f[R]
.IP \[bu] 2
\f[CR]WebGLRenderingContext.isTexture()\f[R]
.IP \[bu] 2
\f[CR]WebGLRenderingContext.compressedTexImage2D()\f[R]
.IP \[bu] 2
\f[CR]WebGLRenderingContext.compressedTexSubImage2D()\f[R]
.IP \[bu] 2
\f[CR]WebGLRenderingContext.copyTexImage2D()\f[R]
.IP \[bu] 2
\f[CR]WebGLRenderingContext.copyTexSubImage2D()\f[R]
.IP \[bu] 2
\f[CR]WebGLRenderingContext.generateMipmap()\f[R]
.IP \[bu] 2
\f[CR]WebGLRenderingContext.getTexParameter()\f[R]
.IP \[bu] 2
\f[CR]WebGLRenderingContext.texImage2D()\f[R]
.IP \[bu] 2
\f[CR]WebGLRenderingContext.texSubImage2D()\f[R]
.IP \[bu] 2
\f[CR]WebGLRenderingContext.texParameterf()\f[R]
.IP \[bu] 2
\f[CR]WebGLRenderingContext.texParameteri()\f[R]
