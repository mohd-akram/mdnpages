.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "INTL.DISPLAYNAMES.DISPLAYNAMES" "3JS" "March 14, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Intl.DisplayNames.DisplayNames \- Intl.DisplayNames() constructor
.SH SYNOPSIS
The \f[B]\f[CB]Intl.DisplayNames()\f[B]\f[R] constructor creates
\f[CR]Intl.DisplayNames\f[R] objects.
.IP
.EX
\f[B]const\f[R] regionNamesInEnglish = \f[B]new\f[R] Intl.DisplayNames([\(dqen\(dq], { type: \(dqregion\(dq });
\f[B]const\f[R] regionNamesInTraditionalChinese = \f[B]new\f[R] Intl.DisplayNames([\(dqzh\-Hant\(dq], {
  type: \(dqregion\(dq,
});

console.log(regionNamesInEnglish.of(\(dqUS\(dq));
\f[I]// Expected output: \(dqUnited States\(dq\f[R]

console.log(regionNamesInTraditionalChinese.of(\(dqUS\(dq));
\f[I]// Expected output: \(dq美國\(dq\f[R]
.EE
.SH SYNTAX
.IP
.EX
new Intl.DisplayNames(locales, options)
.EE
.RS
.PP
\f[B]Note:\f[R] \f[CR]Intl.DisplayNames()\f[R] can only be constructed
with \f[CR]new\f[R].
Attempting to call it without \f[CR]new\f[R] throws a
\f[CR]TypeError\f[R].
.RE
.SS Parameters
.TP
\f[B]locales\f[R]
A string with a BCP 47 language tag or an \f[CR]Intl.Locale\f[R]
instance, or an array of such locale identifiers.
The runtime\(cqs default locale is used when \f[CR]undefined\f[R] is
passed or when none of the specified locale identifiers is supported.
For the general form and interpretation of the \f[CR]locales\f[R]
argument, see the parameter description on the \f[CR]Intl\f[R] main
page.
.TP
\f[B]options\f[R]
An object containing the following properties, in the order they are
retrieved:
.RS
.TP
\f[B]localeMatcher\f[R] \f[I](optional)\f[R]
The locale matching algorithm to use.
Possible values are \f[CR]\(dqlookup\(dq\f[R] and
\f[CR]\(dqbest fit\(dq\f[R]; the default is \f[CR]\(dqbest fit\(dq\f[R].
For information about this option, see Locale identification and
negotiation.
.TP
\f[B]style\f[R] \f[I](optional)\f[R]
The formatting style to use.
Possible values are \f[CR]\(dqnarrow\(dq\f[R], \f[CR]\(dqshort\(dq\f[R],
and \f[CR]\(dqlong\(dq\f[R]; the default is \f[CR]\(dqlong\(dq\f[R].
.TP
\f[B]type\f[R]
The type of display names to return from \f[CR]of()\f[R].
Possible values are \f[CR]\(dqlanguage\(dq\f[R],
\f[CR]\(dqregion\(dq\f[R], \f[CR]\(dqscript\(dq\f[R],
\f[CR]\(dqcurrency\(dq\f[R], \f[CR]\(dqcalendar\(dq\f[R], and
\f[CR]\(dqdateTimeField\(dq\f[R].
.TP
\f[B]fallback\f[R] \f[I](optional)\f[R]
What to return from \f[CR]of()\f[R] if the input is structurally valid
but there\(cqs no matching display name.
Possible values are:
.RS
.TP
\f[B]\(dqcode\(dq\f[R] (default)
Return the input code itself.
.TP
\f[B]\(dqnone\(dq\f[R]
Return \f[CR]undefined\f[R].
.RE
.TP
\f[B]languageDisplay\f[R] \f[I](optional)\f[R]
How language names should be displayed.
Only usable along with \f[CR]type: \(dqlanguage\(dq\f[R].
Possible values are:
.RS
.TP
\f[B]\(dqdialect\(dq\f[R] (default)
Display special regional dialects using their own name.
E.g.
\f[CR]\(dqnl\-BE\(dq\f[R] will be displayed as
\f[CR]\(dqFlemish\(dq\f[R].
.TP
\f[B]\(dqstandard\(dq\f[R]
Display all languages using standard format.
E.g.
\f[CR]\(dqnl\-BE\(dq\f[R] will be displayed as
\f[CR]\(dqDutch (Belgium)\(dq\f[R].
.RE
.RE
.SS Exceptions
.TP
\f[B]TypeError\f[R]
Thrown if \f[CR]options.type\f[R] is not provided.
.TP
\f[B]RangeError\f[R]
Thrown if \f[CR]locales\f[R] or \f[CR]options\f[R] contain invalid
values.
.SH EXAMPLES
.SS Basic usage
In basic use without specifying a locale, a formatted string in the
default locale and with default options is returned.
.IP
.EX
console.log(\f[B]new\f[R] Intl.DisplayNames([], { type: \(dqlanguage\(dq }).of(\(dqUS\(dq));
\f[I]// \(aqus\(aq\f[R]
.EE
.SS Using type \f[CR]dateTimeField\f[R]
Example using \f[CR]dateTimeField\f[R] as a type option, will return the
localized date time names strings.
.IP
.EX
\f[B]const\f[R] dn = \f[B]new\f[R] Intl.DisplayNames(\(dqpt\(dq, { type: \(dqdateTimeField\(dq });
console.log(dn.of(\(dqera\(dq)); \f[I]// \(aqera\(aq\f[R]
console.log(dn.of(\(dqyear\(dq)); \f[I]// \(aqano\(aq\f[R]
console.log(dn.of(\(dqmonth\(dq)); \f[I]// \(aqmês\(aq\f[R]
console.log(dn.of(\(dqquarter\(dq)); \f[I]// \(aqtrimestre\(aq\f[R]
console.log(dn.of(\(dqweekOfYear\(dq)); \f[I]// \(aqsemana\(aq\f[R]
console.log(dn.of(\(dqweekday\(dq)); \f[I]// \(aqdia da semana\(aq\f[R]
console.log(dn.of(\(dqdayPeriod\(dq)); \f[I]// \(aqAM/PM\(aq\f[R]
console.log(dn.of(\(dqday\(dq)); \f[I]// \(aqdia\(aq\f[R]
console.log(dn.of(\(dqhour\(dq)); \f[I]// \(aqhora\(aq\f[R]
console.log(dn.of(\(dqminute\(dq)); \f[I]// \(aqminuto\(aq\f[R]
console.log(dn.of(\(dqsecond\(dq)); \f[I]// \(aqsegundo\(aq\f[R]
.EE
.SS Using type \f[CR]calendar\f[R]
Example using \f[CR]calendar\f[R] as a type option, will return the
localized calendar names strings.
.IP
.EX
\f[B]const\f[R] dn = \f[B]new\f[R] Intl.DisplayNames(\(dqen\(dq, { type: \(dqcalendar\(dq });
console.log(dn.of(\(dqroc\(dq)); \f[I]// \(aqMinguo Calendar\(aq\f[R]
console.log(dn.of(\(dqgregory\(dq)); \f[I]// \(aqGregorian Calendar\(aq\f[R]
console.log(dn.of(\(dqchinese\(dq)); \f[I]// \(aqChinese Calendar\(aq\f[R]
.EE
.SS Using type \f[CR]language\f[R] with \f[CR]languageDisplay\f[R]
Example using \f[CR]language\f[R] as a type with
\f[CR]languageDisplay\f[R] options.
.IP
.EX
\f[I]// Using \(gadialect\(ga option\f[R]
\f[B]const\f[R] dnDialect = \f[B]new\f[R] Intl.DisplayNames(\(dqen\(dq, {
  type: \(dqlanguage\(dq,
  languageDisplay: \(dqdialect\(dq,
});
console.log(dnDialect.of(\(dqen\-GB\(dq)); \f[I]// \(aqBritish English\(aq\f[R]

\f[I]// Using \(gastandard\(ga option\f[R]
\f[B]const\f[R] dnStd = \f[B]new\f[R] Intl.DisplayNames(\(dqen\(dq, {
  type: \(dqlanguage\(dq,
  languageDisplay: \(dqstandard\(dq,
});
console.log(dnStd.of(\(dqen\-GB\(dq)); \f[I]// \(aqEnglish (United Kingdom)\(aq\f[R]
.EE
.SH SEE ALSO
.IP \(bu 2
\f[CR]Intl.DisplayNames\f[R]
.IP \(bu 2
\f[CR]Intl.supportedValuesOf()\f[R]
.IP \(bu 2
\f[CR]Intl\f[R]
