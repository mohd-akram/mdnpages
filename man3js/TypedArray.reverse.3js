.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "TypedArray.reverse" "JS" "February 11, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
TypedArray.reverse \- TypedArray.prototype.reverse()
.SH SYNOPSIS
The \f[B]\f[CB]reverse()\f[B]\f[R] method of \f[CR]TypedArray\f[R]
instances reverses a typed array \f[I]\c
.UR https://en.wikipedia.org/wiki/In-place_algorithm
in place
.UE \c
\f[R] and returns the reference to the same typed array, the first typed
array element now becoming the last, and the last typed array element
becoming the first.
In other words, elements order in the typed array will be turned towards
the direction opposite to that previously stated.
This method has the same algorithm as
\f[CR]Array.prototype.reverse()\f[R].
.IP
.EX
\f[B]const\f[R] uint8 = \f[B]new\f[R] Uint8Array([1, 2, 3]);
uint8.reverse();

console.log(uint8);
\f[I]// Expected output: Uint8Array [3, 2, 1]\f[R]
.EE
.SH SYNTAX
.IP
.EX
reverse()
.EE
.SS Parameters
None.
.SS Return value
The reference to the original typed array, now reversed.
Note that the typed array is reversed \f[I]\c
.UR https://en.wikipedia.org/wiki/In-place_algorithm
in place
.UE \c
\f[R], and no copy is made.
.SH DESCRIPTION
See \f[CR]Array.prototype.reverse()\f[R] for more details.
This method is not generic and can only be called on typed array
instances.
.SH EXAMPLES
.SS Using reverse()
.IP
.EX
\f[B]const\f[R] uint8 = \f[B]new\f[R] Uint8Array([1, 2, 3]);
uint8.reverse();

console.log(uint8); \f[I]// Uint8Array [3, 2, 1]\f[R]
.EE
.SH SEE ALSO
.IP \[bu] 2
\c
.UR https://github.com/zloirock/core-js#ecmascript-typed-arrays
Polyfill of \f[CR]TypedArray.prototype.reverse\f[R] in
\f[CR]core\-js\f[R]
.UE \c
.IP \[bu] 2
JavaScript typed arrays guide
.IP \[bu] 2
\f[CR]TypedArray\f[R]
.IP \[bu] 2
\f[CR]TypedArray.prototype.join()\f[R]
.IP \[bu] 2
\f[CR]TypedArray.prototype.sort()\f[R]
.IP \[bu] 2
\f[CR]TypedArray.prototype.toReversed()\f[R]
.IP \[bu] 2
\f[CR]Array.prototype.reverse()\f[R]
