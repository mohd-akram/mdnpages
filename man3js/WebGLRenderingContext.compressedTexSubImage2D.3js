.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "WebGLRenderingContext.compressedTexSubImage2D" "JS" "July 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
WebGLRenderingContext.compressedTexSubImage2D \- WebGLRenderingContext:
compressedTexSubImage2D() method
.SH SYNOPSIS
The \f[B]\f[CB]WebGLRenderingContext.compressedTexSubImage2D()\f[B]\f[R]
method of the WebGL API specifies a two\-dimensional sub\-rectangle for
a texture image in a compressed format.
.PP
Compressed image formats must be enabled by WebGL extensions before
using this method or a \f[CR]WebGL2RenderingContext\f[R] must be used.
.SH SYNTAX
.IP
.EX
// WebGL 1:
compressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, srcData)

// Additionally available in WebGL 2:
compressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, imageSize, offset)
compressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, srcData)
compressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, srcData, srcOffset)
compressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, srcData, srcOffset, srcLengthOverride)
.EE
.SS Parameters
.TP
\f[B]target\f[R]
A \f[CR]GLenum\f[R] specifying the binding point (target) of the active
compressed texture.
Possible values:
.RS
.IP \[bu] 2
\f[CR]gl.TEXTURE_2D\f[R]: A two\-dimensional texture.
.IP \[bu] 2
\f[CR]gl.TEXTURE_CUBE_MAP_POSITIVE_X\f[R]: Positive X face for a
cube\-mapped texture.
.IP \[bu] 2
\f[CR]gl.TEXTURE_CUBE_MAP_NEGATIVE_X\f[R]: Negative X face for a
cube\-mapped texture.
.IP \[bu] 2
\f[CR]gl.TEXTURE_CUBE_MAP_POSITIVE_Y\f[R]: Positive Y face for a
cube\-mapped texture.
.IP \[bu] 2
\f[CR]gl.TEXTURE_CUBE_MAP_NEGATIVE_Y\f[R]: Negative Y face for a
cube\-mapped texture.
.IP \[bu] 2
\f[CR]gl.TEXTURE_CUBE_MAP_POSITIVE_Z\f[R]: Positive Z face for a
cube\-mapped texture.
.IP \[bu] 2
\f[CR]gl.TEXTURE_CUBE_MAP_NEGATIVE_Z\f[R]: Negative Z face for a
cube\-mapped texture.
.RE
.TP
\f[B]level\f[R]
A \f[CR]GLint\f[R] specifying the level of detail.
Level 0 is the base image level and level \f[I]n\f[R] is the n\-th
mipmap reduction level.
.TP
\f[B]xoffset\f[R]
A \f[CR]GLint\f[R] specifying the horizontal offset within the
compressed texture image.
.TP
\f[B]yoffset\f[R]
A \f[CR]GLint\f[R] specifying the vertical offset within the compressed
texture image.
.TP
\f[B]width\f[R]
A \f[CR]GLsizei\f[R] specifying the width of the compressed texture.
.TP
\f[B]height\f[R]
A \f[CR]GLsizei\f[R] specifying the height of the compressed texture.
.TP
\f[B]format\f[R]
A \f[CR]GLenum\f[R] specifying the compressed image format.
Compressed image formats must be enabled by WebGL extensions before
using this method.
Possible values:
.RS
.IP \[bu] 2
When using the \f[CR]WEBGL_compressed_texture_s3tc\f[R] extension:
.RS 2
.IP \[bu] 2
\f[CR]ext.COMPRESSED_RGB_S3TC_DXT1_EXT\f[R]
.IP \[bu] 2
\f[CR]ext.COMPRESSED_RGBA_S3TC_DXT1_EXT\f[R]
.IP \[bu] 2
\f[CR]ext.COMPRESSED_RGBA_S3TC_DXT3_EXT\f[R]
.IP \[bu] 2
\f[CR]ext.COMPRESSED_RGBA_S3TC_DXT5_EXT\f[R]
.RE
.IP \[bu] 2
When using the \f[CR]WEBGL_compressed_texture_s3tc_srgb\f[R] extension:
.RS 2
.IP \[bu] 2
\f[CR]ext.COMPRESSED_SRGB_S3TC_DXT1_EXT\f[R]
.IP \[bu] 2
\f[CR]ext.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT\f[R]
.IP \[bu] 2
\f[CR]ext.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT\f[R]
.IP \[bu] 2
\f[CR]ext.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT\f[R]
.RE
.IP \[bu] 2
When using the \f[CR]WEBGL_compressed_texture_etc\f[R] extension:
.RS 2
.IP \[bu] 2
\f[CR]ext.COMPRESSED_R11_EAC\f[R]
.IP \[bu] 2
\f[CR]ext.COMPRESSED_SIGNED_R11_EAC\f[R]
.IP \[bu] 2
\f[CR]ext.COMPRESSED_RG11_EAC\f[R]
.IP \[bu] 2
\f[CR]ext.COMPRESSED_SIGNED_RG11_EAC\f[R]
.IP \[bu] 2
\f[CR]ext.COMPRESSED_RGB8_ETC2\f[R]
.IP \[bu] 2
\f[CR]ext.COMPRESSED_RGBA8_ETC2_EAC\f[R]
.IP \[bu] 2
\f[CR]ext.COMPRESSED_SRGB8_ETC2\f[R]
.IP \[bu] 2
\f[CR]ext.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC\f[R]
.IP \[bu] 2
\f[CR]ext.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2\f[R]
.IP \[bu] 2
\f[CR]ext.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2\f[R]
.RE
.IP \[bu] 2
When using the \f[CR]WEBGL_compressed_texture_pvrtc\f[R] extension:
.RS 2
.IP \[bu] 2
\f[CR]ext.COMPRESSED_RGB_PVRTC_4BPPV1_IMG\f[R]
.IP \[bu] 2
\f[CR]ext.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG\f[R]
.IP \[bu] 2
\f[CR]ext.COMPRESSED_RGB_PVRTC_2BPPV1_IMG\f[R]
.IP \[bu] 2
\f[CR]ext.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG\f[R]
.RE
.IP \[bu] 2
When using the \f[CR]WEBGL_compressed_texture_astc\f[R] extension:
.RS 2
.IP \[bu] 2
\f[CR]ext.COMPRESSED_RGBA_ASTC_4x4_KHR ext.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR\f[R]
.IP \[bu] 2
\f[CR]ext.COMPRESSED_RGBA_ASTC_5x4_KHR ext.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR\f[R]
.IP \[bu] 2
\f[CR]ext.COMPRESSED_RGBA_ASTC_5x5_KHR ext.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR\f[R]
.IP \[bu] 2
\f[CR]ext.COMPRESSED_RGBA_ASTC_6x5_KHR ext.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR\f[R]
.IP \[bu] 2
\f[CR]ext.COMPRESSED_RGBA_ASTC_6x6_KHR ext.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR\f[R]
.IP \[bu] 2
\f[CR]ext.COMPRESSED_RGBA_ASTC_8x5_KHR ext.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR\f[R]
.IP \[bu] 2
\f[CR]ext.COMPRESSED_RGBA_ASTC_8x6_KHR ext.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR\f[R]
.IP \[bu] 2
\f[CR]ext.COMPRESSED_RGBA_ASTC_8x8_KHR ext.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR\f[R]
.IP \[bu] 2
\f[CR]ext.COMPRESSED_RGBA_ASTC_10x5_KHR ext.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR\f[R]
.IP \[bu] 2
\f[CR]ext.COMPRESSED_RGBA_ASTC_10x6_KHR ext.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR\f[R]
.IP \[bu] 2
\f[CR]ext.COMPRESSED_RGBA_ASTC_10x6_KHR ext.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR\f[R]
.IP \[bu] 2
\f[CR]ext.COMPRESSED_RGBA_ASTC_10x10_KHR ext.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR\f[R]
.IP \[bu] 2
\f[CR]ext.COMPRESSED_RGBA_ASTC_12x10_KHR ext.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR\f[R]
.IP \[bu] 2
\f[CR]ext.COMPRESSED_RGBA_ASTC_12x12_KHR ext.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR\f[R]
.RE
.IP \[bu] 2
When using the \f[CR]EXT_texture_compression_bptc\f[R] extension:
.RS 2
.IP \[bu] 2
\f[CR]ext.COMPRESSED_RGBA_BPTC_UNORM_EXT\f[R]
.IP \[bu] 2
\f[CR]ext.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT\f[R]
.IP \[bu] 2
\f[CR]ext.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT\f[R]
.IP \[bu] 2
\f[CR]ext.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT\f[R]
.RE
.IP \[bu] 2
When using the \f[CR]EXT_texture_compression_rgtc\f[R] extension:
.RS 2
.IP \[bu] 2
\f[CR]ext.COMPRESSED_RED_RGTC1_EXT\f[R]
.IP \[bu] 2
\f[CR]ext.COMPRESSED_SIGNED_RED_RGTC1_EXT\f[R]
.IP \[bu] 2
\f[CR]ext.COMPRESSED_RED_GREEN_RGTC2_EXT\f[R]
.IP \[bu] 2
\f[CR]ext.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT\f[R]
.RE
.RE
.TP
\f[B]imageSize\f[R]
A \f[CR]GLsizei\f[R] specifying the number of bytes to read from the
buffer bound to \f[CR]gl.PIXEL_UNPACK_BUFFER\f[R].
.TP
\f[B]offset\f[R]
A \f[CR]GLintptr\f[R] specifying the offset in bytes from which to read
from the buffer bound to \f[CR]gl.PIXEL_UNPACK_BUFFER\f[R].
.TP
\f[B]srcData\f[R]
A \f[CR]TypedArray\f[R] or a \f[CR]DataView\f[R] that will be used as a
data store for the compressed image data in memory.
.SS Return value
None (\f[CR]undefined\f[R]).
.SH EXAMPLES
.IP
.EX
\f[B]const\f[R] ext =
  gl.getExtension(\[dq]WEBGL_compressed_texture_s3tc\[dq]) ||
  gl.getExtension(\[dq]MOZ_WEBGL_compressed_texture_s3tc\[dq]) ||
  gl.getExtension(\[dq]WEBKIT_WEBGL_compressed_texture_s3tc\[dq]);
gl.compressedTexSubImage2D(
  gl.TEXTURE_2D,
  0,
  256,
  256,
  512,
  512,
  ext.COMPRESSED_RGBA_S3TC_DXT5_EXT,
  textureData,
);
.EE
.SH SEE ALSO
.IP \[bu] 2
Using WebGL extensions
.IP \[bu] 2
\f[CR]WebGLRenderingContext.getExtension()\f[R]
.IP \[bu] 2
\f[CR]WebGLRenderingContext.compressedTexImage2D()\f[R]
.IP \[bu] 2
\f[CR]WEBGL_compressed_texture_s3tc\f[R]
.IP \[bu] 2
\f[CR]WEBGL_compressed_texture_s3tc_srgb\f[R]
.IP \[bu] 2
\f[CR]WEBGL_compressed_texture_etc\f[R]
.IP \[bu] 2
\f[CR]WEBGL_compressed_texture_pvrtc\f[R]
.IP \[bu] 2
\f[CR]WEBGL_compressed_texture_astc\f[R]
.IP \[bu] 2
\f[CR]EXT_texture_compression_bptc\f[R]
.IP \[bu] 2
\f[CR]EXT_texture_compression_rgtc\f[R]
