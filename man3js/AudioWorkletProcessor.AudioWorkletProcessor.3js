.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "AudioWorkletProcessor.AudioWorkletProcessor" "JS" "July 26, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
AudioWorkletProcessor.AudioWorkletProcessor \- AudioWorkletProcessor:
AudioWorkletProcessor() constructor
.SH SYNOPSIS
The \f[B]\f[CB]AudioWorkletProcessor()\f[B]\f[R] constructor creates a
new \f[CR]AudioWorkletProcessor\f[R] object, which represents an
underlying audio processing mechanism of an \f[CR]AudioWorkletNode\f[R].
.SH SYNTAX
.RS
.PP
\f[B]Note:\f[R] The \f[CR]AudioWorkletProcessor\f[R] and classes that
derive from it cannot be instantiated directly from a user\-supplied
code.
Instead, they are created only internally by the creation of an
associated \f[CR]AudioWorkletNode\f[R]s.
.RE
.IP
.EX
new AudioWorkletProcessor(options)
.EE
.SS Parameters
.TP
\f[B]options\f[R]
An object that is passed as \f[I]options\f[R] parameter to the
\f[CR]AudioWorkletNode()\f[R] constructor and passed through the
structured clone algorithm.
Available properties are as follows:
.RS
.TP
\f[B]numberOfInputs\f[R] \f[I](optional)\f[R]
The value to initialize the \f[CR]numberOfInputs\f[R] property to.
Defaults to 1.
.TP
\f[B]numberOfOutputs\f[R] \f[I](optional)\f[R]
The value to initialize the \f[CR]numberOfOutputs\f[R] property to.
Defaults to 1.
.TP
\f[B]outputChannelCount\f[R] \f[I](optional)\f[R]
An \f[B]array\f[R] defining the number of channels for each output.
For example, \f[I]outputChannelCount: [n, m]\f[R] specifies the number
of channels in the first output to be \f[I]n\f[R] and the second output
to be \f[I]m\f[R].
The array length must match \f[CR]numberOfOutputs\f[R].
.TP
\f[B]parameterData\f[R] \f[I](optional)\f[R]
An object containing the initial values of custom \f[CR]AudioParam\f[R]
objects on this node (in its \f[CR]parameters\f[R] property), with
\f[CR]key\f[R] being the name of a custom parameter and \f[CR]value\f[R]
being its initial value.
.TP
\f[B]processorOptions\f[R] \f[I](optional)\f[R]
Any additional data that can be used for custom initialization of the
underlying \f[CR]AudioWorkletProcessor\f[R].
.PP
Note that there are default values for the first two properties, so even
if there are no \f[I]options\f[R] object passed to the
\f[CR]AudioWorkletNode()\f[R] constructor, the \f[I]options\f[R] object
passed by the node to the \f[CR]AudioWorkletProcessor\f[R] constructor
will exist and at minimum have \f[CR]numberOfInputs\f[R] and
\f[CR]numberOfOutputs\f[R].
.RE
.SS Return value
The newly constructed \f[CR]AudioWorkletProcessor\f[R] instance.
.SH EXAMPLES
In this example we pass custom options to the
\f[CR]AudioWorkletNode()\f[R] constructor and observe how a structured
clone of them gets passed to our \f[CR]AudioWorkletProcessor\f[R]
constructor.
.PP
First, we need to define a custom \f[CR]AudioWorkletProcessor\f[R] and
register it.
Note that this should be done in a separate file.
.IP
.EX
\f[I]// test\-processor.js\f[R]
\f[B]class\f[R] TestProcessor \f[B]extends\f[R] AudioWorkletProcessor {
  constructor(options) {
    \f[B]super\f[R]();
    console.log(options.numberOfInputs);
    console.log(options.processorOptions.someUsefulVariable);
  }
  process(inputs, outputs, parameters) {
    \f[B]return\f[R] \f[B]true\f[R];
  }
}

registerProcessor(\[dq]test\-processor\[dq], TestProcessor);
.EE
.PP
Next, in our main script file we\[cq]ll load the processor, create an
instance of \f[CR]AudioWorkletNode\f[R] passing it the name of the
processor and \f[I]options\f[R] object.
.PP
In the \f[I]options\f[R] object we pass \f[CR]processorOptions\f[R] with
a \f[CR]Map\f[R] instance under \f[CR]someUsefulVariable\f[R] key.
We don\[cq]t pass \f[CR]numberOfInputs\f[R] and see how it gets its
default value.
.IP
.EX
\f[B]const\f[R] audioContext = \f[B]new\f[R] AudioContext();
\f[B]await\f[R] audioContext.audioWorklet.addModule(\[dq]test\-processor.js\[dq]);
\f[B]const\f[R] testNode = \f[B]new\f[R] AudioWorkletNode(audioContext, \[dq]test\-processor\[dq], {
  processorOptions: {
    someUsefulVariable: \f[B]new\f[R] Map([
      [1, \[dq]one\[dq]],
      [2, \[dq]two\[dq]],
    ]),
  },
});
.EE
.PP
The console output will be as follows:
.IP
.EX
> 1 // AudioWorkletNode options.numberOfInputs set to default
> Map(2) { 1 => \[dq]one\[dq], 2 => \[dq]two\[dq] } // A cloned map under someUsefulVariable
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]AudioWorkletNode\f[R] interface
