.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "Object.toLocaleString" "JS" "August 9, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Object.toLocaleString \- Object.prototype.toLocaleString()
.SH SYNOPSIS
The \f[B]\f[CB]toLocaleString()\f[B]\f[R] method of \f[CR]Object\f[R]
instances returns a string representing this object.
This method is meant to be overridden by derived objects for
locale\-specific purposes.
.SH SYNTAX
.IP
.EX
toLocaleString()
.EE
.SS Parameters
None.
However, all objects that override this method are expected to accept at
most two parameters, corresponding to \f[CR]locales\f[R] and
\f[CR]options\f[R], such as \f[CR]Date.prototype.toLocaleString\f[R].
The parameter positions should not be used for any other purpose.
.SS Return value
The return value of calling \f[CR]this.toString()\f[R].
.SH DESCRIPTION
All objects that inherit from \f[CR]Object.prototype\f[R] (that is, all
except \f[CR]null\f[R]\-prototype objects) inherit the
\f[CR]toLocaleString()\f[R] method.
\f[CR]Object\f[R]\[cq]s \f[CR]toLocaleString\f[R] returns the result of
calling \f[CR]this.toString()\f[R].
.PP
This function is provided to give objects a generic
\f[CR]toLocaleString\f[R] method, even though not all may use it.
In the core language, these built\-in objects override
\f[CR]toLocaleString\f[R] to provide locale\-specific formatting:
.IP \[bu] 2
\f[CR]Array\f[R]: \f[CR]Array.prototype.toLocaleString()\f[R]
.IP \[bu] 2
\f[CR]Number\f[R]: \f[CR]Number.prototype.toLocaleString()\f[R]
.IP \[bu] 2
\f[CR]Date\f[R]: \f[CR]Date.prototype.toLocaleString()\f[R]
.IP \[bu] 2
\f[CR]TypedArray\f[R]: \f[CR]TypedArray.prototype.toLocaleString()\f[R]
.IP \[bu] 2
\f[CR]BigInt\f[R]: \f[CR]BigInt.prototype.toLocaleString()\f[R]
.SH EXAMPLES
.SS Using the base toLocaleString() method
The base \f[CR]toLocaleString()\f[R] method simply calls
\f[CR]toString()\f[R].
.IP
.EX
\f[B]const\f[R] obj = {
  toString() {
    \f[B]return\f[R] \[dq]My Object\[dq];
  },
};
console.log(obj.toLocaleString()); \f[I]// \[dq]My Object\[dq]\f[R]
.EE
.SS Array toLocaleString() override
\f[CR]Array.prototype.toLocaleString()\f[R] is used to print array
values as a string by invoking each element\[cq]s
\f[CR]toLocaleString()\f[R] method and joining the results with a
locale\-specific separator.
For example:
.IP
.EX
\f[B]const\f[R] testArray = [4, 7, 10];

\f[B]const\f[R] euroPrices = testArray.toLocaleString(\[dq]fr\[dq], {
  style: \[dq]currency\[dq],
  currency: \[dq]EUR\[dq],
});
\f[I]// \[dq]4,00 €,7,00 €,10,00 €\[dq]\f[R]
.EE
.SS Date toLocaleString() override
\f[CR]Date.prototype.toLocaleString()\f[R] is used to print out date
displays more suitable for specific locales.
For example:
.IP
.EX
\f[B]const\f[R] testDate = \f[B]new\f[R] Date();
\f[I]// \[dq]Fri May 29 2020 18:04:24 GMT+0100 (British Summer Time)\[dq]\f[R]

\f[B]const\f[R] deDate = testDate.toLocaleString(\[dq]de\[dq]);
\f[I]// \[dq]29.5.2020, 18:04:24\[dq]\f[R]

\f[B]const\f[R] frDate = testDate.toLocaleString(\[dq]fr\[dq]);
\f[I]// \[dq]29/05/2020, 18:04:24\[dq]\f[R]
.EE
.SS Number toLocaleString() override
\f[CR]Number.prototype.toLocaleString()\f[R] is used to print out number
displays more suitable for specific locales, e.g.\ with the correct
separators.
For example:
.IP
.EX
\f[B]const\f[R] testNumber = 2901234564;
\f[I]// \[dq]2901234564\[dq]\f[R]

\f[B]const\f[R] deNumber = testNumber.toLocaleString(\[dq]de\[dq]);
\f[I]// \[dq]2.901.234.564\[dq]\f[R]

\f[B]const\f[R] frNumber = testNumber.toLocaleString(\[dq]fr\[dq]);
\f[I]// \[dq]2 901 234 564\[dq]\f[R]
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]Object.prototype.toString()\f[R]
