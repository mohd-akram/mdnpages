.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "CookieChangeEvent" "JS" "January 31, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
CookieChangeEvent \- CookieChangeEvent
.SH SYNOPSIS
\f[B]Secure context\f[R]: This feature is available only in secure
contexts (HTTPS).
.PP
The \f[B]\f[CB]CookieChangeEvent\f[B]\f[R] interface of the Cookie Store
API is the event type of the \f[CR]change\f[R] event fired at a
\f[CR]CookieStore\f[R] when any cookie changes occur.
A cookie change consists of a cookie and a type (either
\[lq]changed\[rq] or \[lq]deleted\[rq]).
.PP
Cookie changes that will cause the \f[CR]CookieChangeEvent\f[R] to be
dispatched are:
.IP \[bu] 2
A cookie is newly created and not immediately removed.
In this case \f[CR]type\f[R] is \[lq]changed\[rq].
.IP \[bu] 2
A cookie is newly created and immediately removed.
In this case \f[CR]type\f[R] is \[lq]deleted\[rq].
.IP \[bu] 2
A cookie is removed.
In this case \f[CR]type\f[R] is \[lq]deleted\[rq].
.RS
.PP
\f[B]Note:\f[R] A cookie that is replaced due to the insertion of
another cookie with the same name, domain, and path, is ignored and does
not trigger a change event.
.RE
.SH CONSTRUCTOR
.TP
\f[B]CookieChangeEvent()\f[R]
Creates a new \f[CR]CookieChangeEvent\f[R].
.SH INSTANCE PROPERTIES
\f[I]This interface also inherits properties from \f[CI]Event\f[I].\f[R]
.TP
\f[B]CookieChangeEvent.changed\f[R] \f[I](read\-only)\f[R]
Returns an array containing one or more changed cookies.
.TP
\f[B]CookieChangeEvent.deleted\f[R] \f[I](read\-only)\f[R]
Returns an array containing one or more deleted cookies.
.SH INSTANCE METHODS
\f[I]This interface also inherits methods from \f[CI]Event\f[I].\f[R]
.SH EXAMPLES
In this example when the cookie is set, the event listener logs the
event to the console.
This is a \f[CR]CookieChangeEvent\f[R] object with the
\f[CR]changed\f[R] property containing an object representing the cookie
that has just been set.
.IP
.EX
cookieStore.addEventListener(\[dq]change\[dq], (event) \f[B]=>\f[R] {
  console.log(event);
});

\f[B]const\f[R] one_day = 24 * 60 * 60 * 1000;
cookieStore.set({
  name: \[dq]cookie1\[dq],
  value: \[dq]cookie1\-value\[dq],
  expires: Date.now() + one_day,
  domain: \[dq]example.com\[dq],
});
.EE
