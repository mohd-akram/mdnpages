.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "Window.self" "JS" "April 8, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Window.self \- Window: self property
.SH SYNOPSIS
The \f[B]\f[CB]Window.self\f[B]\f[R] read\-only property returns the
window itself, as a WindowProxy.
It can be used with dot notation on a \f[CR]window\f[R] object (that is,
\f[CR]window.self\f[R]) or standalone (\f[CR]self\f[R]).
The advantage of the standalone notation is that a similar notation
exists for non\-window contexts, such as in Web Workers.
By using \f[CR]self\f[R], you can refer to the global scope in a way
that will work not only in a window context (\f[CR]self\f[R] will
resolve to \f[CR]window.self\f[R]) but also in a worker context
(\f[CR]self\f[R] will then resolve to
\f[CR]WorkerGlobalScope.self\f[R]).
.SH VALUE
A WindowProxy object.
.SH EXAMPLES
Uses of \f[CR]window.self\f[R] like the following could just as well be
replaced by \f[CR]window\f[R].
.IP
.EX
\f[B]if\f[R] (window.parent.frames[0] !== window.self) {
  \f[I]// this window is not the first frame in the list\f[R]
}
.EE
.PP
Furthermore, when executing in the active document of a browsing
context, \f[CR]window\f[R] is a reference to the current global object
and thus all of the following are equivalent:
.IP
.EX
\f[B]const\f[R] w1 = window;
\f[B]const\f[R] w2 = self;
\f[B]const\f[R] w3 = window.window;
\f[B]const\f[R] w4 = window.self;
\f[I]// w1, w2, w3, w4 all strictly equal, but only w2 will function in workers\f[R]
.EE
.SH SEE ALSO
.IP \[bu] 2
Its \f[CR]Worker\f[R] equivalent, \f[CR]WorkerGlobalScope.self\f[R].
