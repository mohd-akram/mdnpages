.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "DataView.byteOffset" "JS" "February 11, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
DataView.byteOffset \- DataView.prototype.byteOffset
.SH SYNOPSIS
The \f[B]\f[CB]byteOffset\f[B]\f[R] accessor property of
\f[CR]DataView\f[R] instances returns the offset (in bytes) of this view
from the start of its \f[CR]ArrayBuffer\f[R] or
\f[CR]SharedArrayBuffer\f[R].
.IP
.EX
\f[I]// Create an ArrayBuffer with a size in bytes\f[R]
\f[B]const\f[R] buffer = \f[B]new\f[R] ArrayBuffer(16);

\f[B]const\f[R] view = \f[B]new\f[R] DataView(buffer, 12, 4); \f[I]// From byte 12 for the next 4 bytes\f[R]

console.log(view.byteOffset);
\f[I]// Expected output: 12\f[R]
.EE
.SH DESCRIPTION
The \f[CR]byteOffset\f[R] property is an accessor property whose set
accessor function is \f[CR]undefined\f[R], meaning that you can only
read this property.
The value is established when an \f[CR]DataView\f[R] is constructed and
cannot be changed.
.SH EXAMPLES
.SS Using the byteOffset property
.IP
.EX
\f[B]const\f[R] buffer = \f[B]new\f[R] ArrayBuffer(8);
\f[B]const\f[R] dataview = \f[B]new\f[R] DataView(buffer);
dataview.byteOffset; \f[I]// 0 (no offset specified)\f[R]

\f[B]const\f[R] dataview2 = \f[B]new\f[R] DataView(buffer, 3);
dataview2.byteOffset; \f[I]// 3 (as specified when constructing the DataView)\f[R]
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]DataView\f[R]
.IP \[bu] 2
\f[CR]ArrayBuffer\f[R]
.IP \[bu] 2
\f[CR]SharedArrayBuffer\f[R]
