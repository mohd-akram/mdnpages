.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "FetchEvent.respondWith" "JS" "September 24, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
FetchEvent.respondWith \- FetchEvent: respondWith() method
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is only available in Service Workers.
.PP
The \f[B]\f[CB]respondWith()\f[B]\f[R] method of \f[CR]FetchEvent\f[R]
prevents the browser\[cq]s default fetch handling, and allows you to
provide a promise for a \f[CR]Response\f[R] yourself.
.PP
In most cases you can provide any response that the receiver
understands.
For example, if an \f[CR]<img>\f[R] initiates the request, the response
body needs to be image data.
For security reasons, there are a few global rules:
.IP \[bu] 2
You can only return \f[CR]Response\f[R] objects of \f[CR]type\f[R]
\f[CR]\[dq]opaque\[dq]\f[R] if the \f[CR]fetchEvent.request\f[R]
object\[cq]s \f[CR]mode\f[R] is \f[CR]\[dq]no\-cors\[dq]\f[R].
This prevents the leaking of private data.
.IP \[bu] 2
You can only return \f[CR]Response\f[R] objects of \f[CR]type\f[R]
\f[CR]\[dq]opaqueredirect\[dq]\f[R] if the \f[CR]fetchEvent.request\f[R]
object\[cq]s \f[CR]mode\f[R] is \f[CR]\[dq]manual\[dq]\f[R].
.IP \[bu] 2
You cannot return \f[CR]Response\f[R] objects of \f[CR]type\f[R]
\f[CR]\[dq]cors\[dq]\f[R] if the \f[CR]fetchEvent.request\f[R]
object\[cq]s \f[CR]mode\f[R] is \f[CR]\[dq]same\-origin\[dq]\f[R].
.SS Specifying the final URL of a resource
From Firefox 59 onwards, when a service worker provides a
\f[CR]Response\f[R] to \f[CR]FetchEvent.respondWith()\f[R], the
\f[CR]Response.url\f[R] value will be propagated to the intercepted
network request as the final resolved URL.
If the \f[CR]Response.url\f[R] value is the empty string, then the
\f[CR]FetchEvent.request.url\f[R] is used as the final URL.
.PP
In the past the \f[CR]FetchEvent.request.url\f[R] was used as the final
URL in all cases.
The provided \f[CR]Response.url\f[R] was effectively ignored.
.PP
This means, for example, if a service worker intercepts a stylesheet or
worker script, then the provided \f[CR]Response.url\f[R] will be used to
resolve any relative \f[CR]\[at]import\f[R] or
\f[CR]importScripts()\f[R] subresource loads (\c
.UR https://bugzil.la/1222008
Firefox bug 1222008
.UE \c
).
.PP
For most types of network request this change has no impact because you
can\[cq]t observe the final URL.
There are a few, though, where it does matter:
.IP \[bu] 2
If a \f[CR]fetch()\f[R] is intercepted, then you can observe the final
URL on the result\[cq]s \f[CR]Response.url\f[R].
.IP \[bu] 2
If a worker script is intercepted, then the final URL is used to set
\f[CR]self.location\f[R] and used as the base URL for relative URLs in
the worker script.
.IP \[bu] 2
If a stylesheet is intercepted, then the final URL is used as the base
URL for resolving relative \f[CR]\[at]import\f[R] loads.
.PP
Note that navigation requests for \f[CR]Windows\f[R] and
\f[CR]iframes\f[R] do NOT use the final URL.
The way the HTML specification handles redirects for navigations ends up
using the request URL for the resulting \f[CR]Window.location\f[R].
This means sites can still provide an \[lq]alternate\[rq] view of a web
page when offline without changing the user\-visible URL.
.SH SYNTAX
.IP
.EX
respondWith(response)
.EE
.SS Parameters
.TP
\f[B]response\f[R]
A \f[CR]Response\f[R] or a \f[CR]Promise\f[R] that resolves to a
\f[CR]Response\f[R].
Otherwise, a network error is returned to Fetch.
.SS Return value
None (\f[CR]undefined\f[R]).
.SS Exceptions
.TP
\f[B]NetworkError\f[R] \f[B]DOMException\f[R]
Returned if a network error is triggered on certain combinations of
\f[CR]FetchEvent.request.mode\f[R] and \f[CR]Response.type\f[R] values,
as hinted at in the \[lq]global rules\[rq] listed above.
.TP
\f[B]InvalidStateError\f[R] \f[B]DOMException\f[R]
Returned if the event has not been dispatched or
\f[CR]respondWith()\f[R] has already been invoked.
.SH EXAMPLES
This fetch event tries to return a response from the cache API, falling
back to the network otherwise.
.IP
.EX
addEventListener(\[dq]fetch\[dq], (event) \f[B]=>\f[R] {
  \f[I]// Prevent the default, and handle the request ourselves.\f[R]
  event.respondWith(
    (\f[B]async\f[R] () \f[B]=>\f[R] {
      \f[I]// Try to get the response from a cache.\f[R]
      \f[B]const\f[R] cachedResponse = \f[B]await\f[R] caches.match(event.request);
      \f[I]// Return it if we found one.\f[R]
      \f[B]if\f[R] (cachedResponse) \f[B]return\f[R] cachedResponse;
      \f[I]// If we didn\[aq]t find a match in the cache, use the network.\f[R]
      \f[B]return\f[R] fetch(event.request);
    })(),
  );
});
.EE
.RS
.PP
\f[B]Note:\f[R] \f[CR]caches.match()\f[R] is a convenience method.
Equivalent functionality is to call \f[CR]cache.match()\f[R] on each
cache (in the order returned by \f[CR]caches.keys()\f[R]) until a
\f[CR]Response\f[R] is returned.
.RE
.SH SEE ALSO
.IP \[bu] 2
Using Service Workers
.IP \[bu] 2
Fetch API
