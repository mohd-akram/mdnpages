.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "EXT_texture_filter_anisotropic" "JS" "July 26, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
EXT_texture_filter_anisotropic \- EXT_texture_filter_anisotropic
extension
.SH SYNOPSIS
The \f[B]\f[CB]EXT_texture_filter_anisotropic\f[B]\f[R] extension is
part of the WebGL API and exposes two constants for \c
.UR https://en.wikipedia.org/wiki/Anisotropic_filtering
anisotropic filtering (AF)
.UE \c
\&.
.PP
AF improves the quality of mipmapped texture access when viewing a
textured primitive at an oblique angle.
Using just mipmapping, these lookups have a tendency to average to grey.
.PP
WebGL extensions are available using the
\f[CR]WebGLRenderingContext.getExtension()\f[R] method.
For more information, see also Using Extensions in the WebGL tutorial.
.RS
.PP
\f[B]Note:\f[R] This extension is available to both, WebGL1 and WebGL2
contexts.
.RE
.SH CONSTANTS
.TP
\f[B]ext.MAX_TEXTURE_MAX_ANISOTROPY_EXT\f[R]
This is the \f[CR]pname\f[R] argument to the
\f[CR]gl.getParameter()\f[R] call, and it returns the maximum available
anisotropy.
.TP
\f[B]ext.TEXTURE_MAX_ANISOTROPY_EXT\f[R]
This is the \f[CR]pname\f[R] argument to the
\f[CR]gl.getTexParameter()\f[R] and \f[CR]gl.texParameterf()\f[R] /
\f[CR]gl.texParameteri()\f[R] calls and sets the desired maximum
anisotropy for a texture.
.SH EXAMPLES
.IP
.EX
\f[B]const\f[R] texture = gl.createTexture();
gl.bindTexture(gl.TEXTURE_2D, texture);
\f[B]const\f[R] ext =
  gl.getExtension(\[dq]EXT_texture_filter_anisotropic\[dq]) ||
  gl.getExtension(\[dq]MOZ_EXT_texture_filter_anisotropic\[dq]) ||
  gl.getExtension(\[dq]WEBKIT_EXT_texture_filter_anisotropic\[dq]);
\f[B]if\f[R] (ext) {
  \f[B]const\f[R] max = gl.getParameter(ext.MAX_TEXTURE_MAX_ANISOTROPY_EXT);
  gl.texParameterf(gl.TEXTURE_2D, ext.TEXTURE_MAX_ANISOTROPY_EXT, max);
}
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]WebGLRenderingContext.getExtension()\f[R]
