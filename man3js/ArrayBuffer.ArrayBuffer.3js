.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "ArrayBuffer.ArrayBuffer" "JS" "September 12, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
ArrayBuffer.ArrayBuffer \- ArrayBuffer() constructor
.SH SYNOPSIS
The \f[B]\f[CB]ArrayBuffer()\f[B]\f[R] constructor creates
\f[CR]ArrayBuffer\f[R] objects.
.SH SYNTAX
.IP
.EX
new ArrayBuffer(length)
new ArrayBuffer(length, options)
.EE
.RS
.PP
\f[B]Note:\f[R] \f[CR]ArrayBuffer()\f[R] can only be constructed with
\f[CR]new\f[R].
Attempting to call it without \f[CR]new\f[R] throws a
\f[CR]TypeError\f[R].
.RE
.SS Parameters
.TP
\f[B]length\f[R]
The size, in bytes, of the array buffer to create.
.TP
\f[B]options\f[R] \f[I](optional)\f[R]
An object, which can contain the following properties:
.RS
.TP
\f[B]maxByteLength\f[R] \f[I](optional)\f[R]
The maximum size, in bytes, that the array buffer can be resized to.
.RE
.SS Return value
A new \f[CR]ArrayBuffer\f[R] object of the specified size, with its
\f[CR]maxByteLength\f[R] property set to the specified
\f[CR]maxByteLength\f[R] if one was specified.
Its contents are initialized to 0.
.SS Exceptions
.TP
\f[B]RangeError\f[R]
Thrown in one of the following cases:
.RS
.IP \[bu] 2
\f[CR]length\f[R] or \f[CR]maxByteLength\f[R] is larger than
\f[CR]Number.MAX_SAFE_INTEGER\f[R] (â‰¥ 2\[ha]53) or negative.
.IP \[bu] 2
\f[CR]length\f[R] is larger than \f[CR]maxByteLength\f[R].
.RE
.SH EXAMPLES
.SS Creating an ArrayBuffer
In this example, we create a 8\-byte buffer with a \f[CR]Int32Array\f[R]
view referring to the buffer:
.IP
.EX
\f[B]const\f[R] buffer = \f[B]new\f[R] ArrayBuffer(8);
\f[B]const\f[R] view = \f[B]new\f[R] Int32Array(buffer);
.EE
.SS Creating a resizable ArrayBuffer
In this example, we create a 8\-byte buffer that is resizable to a max
length of 16 bytes, then \f[CR]resize()\f[R] it to 12 bytes:
.IP
.EX
\f[B]const\f[R] buffer = \f[B]new\f[R] ArrayBuffer(8, { maxByteLength: 16 });

buffer.resize(12);
.EE
.RS
.PP
\f[B]Note:\f[R] It is recommended that \f[CR]maxByteLength\f[R] is set
to the smallest value possible for your use case.
It should never exceed \f[CR]1073741824\f[R] (1GB) to reduce the risk of
out\-of\-memory errors.
.RE
.SH SEE ALSO
.IP \[bu] 2
\c
.UR https://github.com/zloirock/core-js#ecmascript-typed-arrays
Polyfill of \f[CR]ArrayBuffer\f[R] in \f[CR]core\-js\f[R]
.UE \c
.IP \[bu] 2
JavaScript typed arrays guide
.IP \[bu] 2
\f[CR]SharedArrayBuffer\f[R]
