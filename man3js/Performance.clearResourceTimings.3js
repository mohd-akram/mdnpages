.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "PERFORMANCE.CLEARRESOURCETIMINGS" "3JS" "October 12, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Performance.clearResourceTimings \- Performance: clearResourceTimings()
method
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]clearResourceTimings()\f[B]\f[R] method removes all
performance entries with an \f[CR]entryType\f[R] of
\f[CR]\(dqresource\(dq\f[R] from the browser\(cqs performance timeline
and sets the size of the performance resource data buffer to zero.
.PP
To set the size of the browser\(cqs performance resource data buffer,
use the \f[CR]Performance.setResourceTimingBufferSize()\f[R] method.
.PP
To get notified when the browser\(cqs resource timing buffer is full,
listen for the \f[CR]resourcetimingbufferfull\f[R] event.
.SH SYNTAX
.IP
.EX
clearResourceTimings()
.EE
.SS Parameters
None.
.SS Return value
None (\f[CR]undefined\f[R]).
.SH EXAMPLES
.SS Clearing the performance resource data buffer
To remove all resource performance entries from the buffer, call the
\f[CR]clearResourceTimings()\f[R] at an appropriate point in your code
or paste it into the console.
.IP
.EX
performance.clearResourceTimings();
performance.getEntriesByType(\(dqresource\(dq).length; \f[I]// 0\f[R]
.EE
.SS Taking records and emptying performance observers
When using \f[CR]PerformanceObserver\f[R] objects (especially with the
\f[CR]buffered\f[R] flag set to \f[CR]true\f[R]), the performance
resource buffer might get full quickly.
However, instead of clearing the buffer, you can also store the current
list of performance entries and empty the performance observer using the
\f[CR]PerformanceObserver.takeRecords()\f[R] method.
This works with all kinds of performance entry types, not just
\f[CR]\(dqresource\(dq\f[R] entries.
.IP
.EX
\f[B]function\f[R] perfObserver(list, observer) {
  list.getEntries().forEach((entry) \f[B]=>\f[R] {
    \f[I]// do something with the entries\f[R]
  });
}
\f[B]const\f[R] observer = \f[B]new\f[R] PerformanceObserver(perfObserver);
observer.observe({ type: \(dqresource\(dq, buffered: \f[B]true\f[R] });

\f[I]// Store entries and empty performance observer\f[R]
\f[B]const\f[R] records = observer.takeRecords();
.EE
.SH SEE ALSO
.IP \(bu 2
\f[CR]Performance.setResourceTimingBufferSize()\f[R]
.IP \(bu 2
\f[CR]resourcetimingbufferfull\f[R]
