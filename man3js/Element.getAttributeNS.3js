.\" Automatically generated by Pandoc 3.4
.\"
.TH "Element.getAttributeNS" "JS" "July 26, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Element.getAttributeNS \- Element: getAttributeNS() method
.SH SYNOPSIS
The \f[B]\f[CB]getAttributeNS()\f[B]\f[R] method of the
\f[CR]Element\f[R] interface returns the string value of the attribute
with the specified namespace and name.
If the named attribute does not exist, the value returned will either be
\f[CR]null\f[R] or \f[CR]\[dq]\[dq]\f[R] (the empty string); see Notes
for details.
.PP
If you are working with HTML documents and you don\[cq]t need to specify
the requested attribute as being part of a specific namespace, use the
\f[CR]getAttribute()\f[R] method instead.
.SH SYNTAX
.IP
.EX
getAttributeNS(namespace, name)
.EE
.SS Parameters
.TP
\f[B]namespace\f[R]
The namespace in which to look for the specified attribute.
.TP
\f[B]name\f[R]
The name of the attribute to look for.
.SS Return value
The string value of the specified attribute.
If the attribute doesn\[cq]t exist, the result is \f[CR]null\f[R].
.RS
.PP
\f[B]Note:\f[R] Earlier versions of the DOM specification had this
method described as returning an empty string for non\-existent
attributes, but it was not typically implemented this way since null
makes more sense.
The DOM4 specification now says this method should return null for
non\-existent attributes.
.RE
.SH EXAMPLES
The following SVG document reads the value of the \f[CR]foo\f[R]
attribute in a custom namespace.
.IP
.EX
<\f[B]svg\f[R] xmlns=\[dq]http://www.w3.org/2000/svg\[dq]
    xmlns:test=\[dq]http://www.example.com/2014/test\[dq] width=\[dq]40\[dq] height=\[dq]40\[dq]>

  <\f[B]circle\f[R] id=\[dq]target\[dq] cx=\[dq]12\[dq] cy=\[dq]12\[dq] r=\[dq]10\[dq] stroke=\[dq]#444\[dq]
      stroke\-width=\[dq]2\[dq] fill=\[dq]none\[dq] test:foo=\[dq]Hello namespaced attribute!\[dq]/>

  <\f[B]script\f[R]>
    const ns = \[aq]http://www.example.com/2014/test\[aq];
    const circle = document.getElementById(\[aq]target\[aq]);

    console.log(\[ga]attribute test:foo: \[dq]${circle.getAttributeNS(ns, \[aq]foo\[aq])}\[dq]\[ga]);
  </\f[B]script\f[R]>
</\f[B]svg\f[R]>
.EE
.PP
In an HTML document, the attribute has to be accessed with
\f[CR]test:foo\f[R] since namespaces are not supported.
.IP
.EX
<!doctype html>
<\f[B]html\f[R] lang=\[dq]en\-US\[dq]>
  <\f[B]head\f[R]>
    <\f[B]meta\f[R] charset=\[dq]UTF\-8\[dq] />
    <\f[B]title\f[R]>getAttributeNS() test page</\f[B]title\f[R]>
  </\f[B]head\f[R]>
  <\f[B]body\f[R]>
    <\f[B]svg\f[R]
      xmlns=\[dq]http://www.w3.org/2000/svg\[dq]
      xmlns:test=\[dq]http://www.example.com/2014/test\[dq]
      width=\[dq]40\[dq]
      height=\[dq]40\[dq]>
      <\f[B]circle\f[R]
        id=\[dq]target\[dq]
        cx=\[dq]12\[dq]
        cy=\[dq]12\[dq]
        r=\[dq]10\[dq]
        stroke=\[dq]#444\[dq]
        stroke\-width=\[dq]2\[dq]
        fill=\[dq]none\[dq]
        test:foo=\[dq]Foo value\[dq] />
    </\f[B]svg\f[R]>

    <\f[B]script\f[R]>
      \f[B]const\f[R] ns = \[dq]http://www.example.com/2014/test\[dq];
      \f[B]const\f[R] circle = document.getElementById(\[dq]target\[dq]);
      console.log(\[ga]Attribute value: ${circle.getAttribute(\[dq]test:foo\[dq])}\[ga]);
    </\f[B]script\f[R]>
  </\f[B]body\f[R]>
</\f[B]html\f[R]>
.EE
.SH NOTES
\f[CR]getAttributeNS()\f[R] differs from \f[CR]getAttribute()\f[R] in
that it allows you to further specify the requested attribute as being
part of a particular namespace, as in the example above, where the
attribute is part of the fictional \[lq]test\[rq] namespace.
.PP
Prior to the DOM4 specification, this method was specified to return an
empty string rather than null for non\-existent attributes.
However, most browsers instead returned null.
Starting with DOM4, the specification now says to return null.
However, some older browsers return an empty string.
For that reason, you should use \f[CR]hasAttributeNS()\f[R] to check for
an attribute\[cq]s existence prior to calling
\f[CR]getAttributeNS()\f[R] if it is possible that the requested
attribute does not exist on the specified element.
.SH SEE ALSO
.IP \[bu] 2
\f[CR]Element.hasAttributeNS()\f[R]
.IP \[bu] 2
\f[CR]Element.setAttributeNS()\f[R]
.IP \[bu] 2
\f[CR]Element.removeAttributeNS()\f[R]
