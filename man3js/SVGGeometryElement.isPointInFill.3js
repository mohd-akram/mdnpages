.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "SVGGeometryElement.isPointInFill" "JS" "January 16, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
SVGGeometryElement.isPointInFill \- SVGGeometryElement: isPointInFill()
method
.SH SYNOPSIS
The \f[B]\f[CB]SVGGeometryElement.isPointInFill()\f[B]\f[R] method
determines whether a given point is within the fill shape of an element.
Normal hit testing rules apply; the value of the
\f[CR]pointer\-events\f[R] property on the element determines whether a
point is considered to be within the fill.
The \f[CR]point\f[R] argument is interpreted as a point in the local
coordinate system of the element.
.SH SYNTAX
.IP
.EX
isPointInFill(point)
.EE
.SS Parameters
.TP
\f[B]point\f[R]
A DOMPointInit object interpreted as a point in the local coordinate
system of the element.
.SS Return value
A boolean indicating whether the given point is within the fill or not.
.SH EXAMPLES
.SS SVG
.IP
.EX
<\f[B]svg\f[R]
  viewBox=\[dq]0 0 100 100\[dq]
  width=\[dq]150\[dq]
  height=\[dq]150\[dq]
  xmlns=\[dq]http://www.w3.org/2000/svg\[dq]>
  <\f[B]circle\f[R]
    id=\[dq]circle\[dq]
    cx=\[dq]50\[dq]
    cy=\[dq]50\[dq]
    r=\[dq]45\[dq]
    fill=\[dq]white\[dq]
    stroke=\[dq]black\[dq]
    stroke\-width=\[dq]10\[dq] />
</\f[B]svg\f[R]>
.EE
.SS JavaScript
.IP
.EX
\f[B]const\f[R] svg = document.getElementsByTagName(\[dq]svg\[dq])[0];
\f[B]const\f[R] circle = document.getElementById(\[dq]circle\[dq]);
\f[B]const\f[R] points = [
  [\[dq]10\[dq], \[dq]10\[dq]],
  [\[dq]40\[dq], \[dq]30\[dq]],
  [\[dq]70\[dq], \[dq]40\[dq]],
  [\[dq]15\[dq], \[dq]75\[dq]],
  [\[dq]83\[dq], \[dq]83\[dq]],
];

\f[B]for\f[R] (\f[B]const\f[R] point \f[B]of\f[R] points) {
  \f[B]let\f[R] isPointInFill;

  \f[B]try\f[R] {
    \f[B]const\f[R] pointObj = \f[B]new\f[R] DOMPoint(point[0], point[1]);
    isPointInFill = circle.isPointInFill(pointObj);
  } \f[B]catch\f[R] (e) {
    \f[I]// Fallback for browsers that don\[aq]t support DOMPoint as an argument\f[R]
    \f[B]const\f[R] pointObj = svg.createSVGPoint();
    pointObj.x = point[0];
    pointObj.y = point[1];
    isPointInFill = circle.isPointInFill(pointObj);
  }

  console.log(\[ga]Point at ${point[0]},${point[1]}: ${isPointInFill}\[ga]);

  \f[B]const\f[R] pointEl = document.createElementNS(
    \[dq]http://www.w3.org/2000/svg\[dq],
    \[dq]circle\[dq],
  );
  pointEl.style.cx = point[0];
  pointEl.style.cy = point[1];
  pointEl.style.r = 5;
  pointEl.style.fill = isPointInFill ? \[dq]seagreen\[dq] : \[dq]rgb(255 0 0 / 50%)\[dq];
  svg.appendChild(pointEl);
}
.EE
.SS Result
