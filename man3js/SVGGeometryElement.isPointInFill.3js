.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "SVGGeometryElement.isPointInFill" "JS" "February 3, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
SVGGeometryElement.isPointInFill \- SVGGeometryElement: isPointInFill()
method
.SH SYNOPSIS
The \f[B]\f[CB]isPointInFill()\f[B]\f[R] method of the
\f[CR]SVGGeometryElement\f[R] interface determines whether a given point
is within the fill shape of an element.
The \f[CR]point\f[R] argument is interpreted as a point in the local
coordinate system of the element.
.SH SYNTAX
.IP
.EX
isPointInFill(point)
.EE
.SS Parameters
.TP
\f[B]point\f[R]
An object representing a point interpreted in the local coordinate
system of the element.
It is converted to a \f[CR]DOMPoint\f[R] object using the same algorithm
as \f[CR]DOMPoint.fromPoint()\f[R].
.SS Return value
A boolean indicating whether the given point is within the fill or not.
.SH EXAMPLES
.SS SVG
.IP
.EX
<\f[B]svg\f[R]
  viewBox=\[dq]0 0 100 100\[dq]
  width=\[dq]150\[dq]
  height=\[dq]150\[dq]
  xmlns=\[dq]http://www.w3.org/2000/svg\[dq]>
  <\f[B]circle\f[R]
    id=\[dq]circle\[dq]
    cx=\[dq]50\[dq]
    cy=\[dq]50\[dq]
    r=\[dq]45\[dq]
    fill=\[dq]rgb(0 0 0 / 25%)\[dq]
    stroke=\[dq]rgb(0 0 0 / 50%)\[dq]
    stroke\-width=\[dq]10\[dq] />
</\f[B]svg\f[R]>
.EE
.SS JavaScript
.IP
.EX
\f[B]const\f[R] svg = document.getElementsByTagName(\[dq]svg\[dq])[0];
\f[B]const\f[R] circle = document.getElementById(\[dq]circle\[dq]);
\f[B]const\f[R] points = [
  [10, 10],
  [40, 30],
  [70, 40],
  [15, 75],
  [83, 83],
];

\f[B]for\f[R] (\f[B]const\f[R] point \f[B]of\f[R] points) {
  \f[B]let\f[R] isPointInFill;

  \f[B]try\f[R] {
    \f[B]const\f[R] pointObj = { x: point[0], y: point[1] };
    isPointInFill = circle.isPointInFill(pointObj);
  } \f[B]catch\f[R] {
    \f[I]// Fallback for browsers that don\[aq]t support DOMPoint as an argument\f[R]
    \f[B]const\f[R] pointObj = svg.createSVGPoint();
    pointObj.x = point[0];
    pointObj.y = point[1];
    isPointInFill = circle.isPointInFill(pointObj);
  }

  console.log(\[ga]Point at ${point[0]},${point[1]}: ${isPointInFill}\[ga]);

  \f[B]const\f[R] pointEl = document.createElementNS(
    \[dq]http://www.w3.org/2000/svg\[dq],
    \[dq]circle\[dq],
  );
  pointEl.cx.baseVal.value = point[0];
  pointEl.cy.baseVal.value = point[1];
  pointEl.r.baseVal.value = 5;
  \f[B]const\f[R] pathEl = document.createElementNS(\[dq]http://www.w3.org/2000/svg\[dq], \[dq]path\[dq]);
  \f[B]if\f[R] (isPointInFill) {
    pointEl.setAttribute(\[dq]fill\[dq], \[dq]rgb(0 170 0 / 50%)\[dq]);
    pointEl.setAttribute(\[dq]stroke\[dq], \[dq]rgb(0 170 0)\[dq]);
    pathEl.setAttribute(\[dq]stroke\[dq], \[dq]rgb(0 170 0)\[dq]);
    pathEl.setAttribute(\[dq]d\[dq], \[ga]M ${point[0] \- 5} ${point[1]} h 10 m \-5 \-5 v 10\[ga]);
  } \f[B]else\f[R] {
    pointEl.setAttribute(\[dq]fill\[dq], \[dq]rgb(170 0 0 / 50%)\[dq]);
    pointEl.setAttribute(\[dq]stroke\[dq], \[dq]rgb(170 0 0)\[dq]);
    pathEl.setAttribute(\[dq]stroke\[dq], \[dq]rgb(170 0 0)\[dq]);
    pathEl.setAttribute(\[dq]d\[dq], \[ga]M ${point[0] \- 5} ${point[1]} h 10\[ga]);
  }
  svg.append(pointEl, pathEl);
}
.EE
.SS Result
