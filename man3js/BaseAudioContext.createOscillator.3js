.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "BaseAudioContext.createOscillator" "JS" "November 28, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
BaseAudioContext.createOscillator \- BaseAudioContext:
createOscillator() method
.SH SYNOPSIS
The \f[CR]createOscillator()\f[R] method of the
\f[CR]BaseAudioContext\f[R] interface creates an
\f[CR]OscillatorNode\f[R], a source representing a periodic waveform.
It basically generates a constant tone.
.RS
.PP
\f[B]Note:\f[R] The \f[CR]OscillatorNode()\f[R] constructor is the
recommended way to create a \f[CR]OscillatorNode\f[R]; see Creating an
AudioNode.
.RE
.SH SYNTAX
.IP
.EX
createOscillator()
.EE
.SS Parameters
None.
.SS Return value
An \f[CR]OscillatorNode\f[R].
.SH EXAMPLES
The following example shows basic usage of an AudioContext to create an
oscillator node.
For applied examples/information, check out our \c
.UR https://mdn.github.io/webaudio-examples/violent-theremin/
Violent Theremin demo
.UE \c
\ (\c
.UR https://github.com/mdn/webaudio-examples/blob/main/violent-theremin/scripts/app.js
see app.js
.UE \c
\ for relevant code); also see our \f[CR]OscillatorNode\f[R] page for
more information.
.IP
.EX
\f[I]// create web audio api context\f[R]
\f[B]const\f[R] audioCtx = \f[B]new\f[R] AudioContext();

\f[I]// create Oscillator node\f[R]
\f[B]const\f[R] oscillator = audioCtx.createOscillator();

oscillator.type = \[dq]square\[dq];
oscillator.frequency.setValueAtTime(3000, audioCtx.currentTime); \f[I]// value in hertz\f[R]
oscillator.connect(audioCtx.destination);
oscillator.start();
.EE
.SH SEE ALSO
.IP \[bu] 2
Using the Web Audio API
