.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "PerformanceNavigationTiming.domInteractive" "JS" "July 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
PerformanceNavigationTiming.domInteractive \-
PerformanceNavigationTiming: domInteractive property
.SH SYNOPSIS
The \f[B]\f[CB]domInteractive\f[B]\f[R] read\-only property returns a
\f[CR]DOMHighResTimeStamp\f[R] representing the time immediately before
the user agent sets the document\[cq]s \f[CR]readyState\f[R] to
\f[CR]\[dq]interactive\[dq]\f[R].
.RS
.PP
\f[B]Note:\f[R] This property is \f[B]not\f[R] Time to interactive
(TTI).
This property refers to the time when DOM construction is finished and
interaction to it from JavaScript is possible.
See also the \f[CR]interactive\f[R] state of
\f[CR]Document.readyState\f[R] which corresponds to this property.
.RE
.PP
Measuring DOM processing time may not be consequential unless your site
has a very large HTML source to a construct a Document Object Model
from.
.PP
If there is no parser\-blocking JavaScript then the
\f[CR]DOMContentLoaded\f[R] event (see
\f[CR]domContentLoadedEventStart\f[R] for the timestamp) will fire
immediately after \f[CR]domInteractive\f[R].
.SH VALUE
A \f[CR]DOMHighResTimeStamp\f[R] representing the time immediately
before the user agent sets the document\[cq]s \f[CR]readyState\f[R] to
\f[CR]\[dq]interactive\[dq]\f[R].
.SH EXAMPLES
.SS Logging DOM interaction time
The \f[CR]domInteractive\f[R] property can be used to log the time when
the DOM construction has finished and interaction with it is possible.
.PP
Example using a \f[CR]PerformanceObserver\f[R], which notifies of new
\f[CR]navigation\f[R] performance entries as they are recorded in the
browser\[cq]s performance timeline.
Use the \f[CR]buffered\f[R] option to access entries from before the
observer creation.
.IP
.EX
\f[B]const\f[R] observer = \f[B]new\f[R] PerformanceObserver((list) \f[B]=>\f[R] {
  list.getEntries().forEach((entry) \f[B]=>\f[R] {
    console.log(
      \[ga]${entry.name}: domInteractive time: ${entry.domInteractive}ms\[ga],
    );
  });
});

observer.observe({ type: \[dq]navigation\[dq], buffered: \f[B]true\f[R] });
.EE
.PP
Example using \f[CR]Performance.getEntriesByType()\f[R], which only
shows \f[CR]navigation\f[R] performance entries present in the
browser\[cq]s performance timeline at the time you call this method:
.IP
.EX
\f[B]const\f[R] entries = performance.getEntriesByType(\[dq]navigation\[dq]);
entries.forEach((entry) \f[B]=>\f[R] {
  console.log(\[ga]${entry.name}: domInteractive time: ${entry.domInteractive}ms\[ga]);
});
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]Document.readyState\f[R]
