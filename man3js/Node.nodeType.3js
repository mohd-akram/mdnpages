.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "Node.nodeType" "JS" "August 13, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Node.nodeType \- Node: nodeType property
.SH SYNOPSIS
The read\-only \f[B]\f[CB]nodeType\f[B]\f[R] property of a
\f[CR]Node\f[R] interface is an integer that identifies what the node
is.
It distinguishes different kind of nodes from each other, such as
\f[CR]elements\f[R], \f[CR]text\f[R] and \f[CR]comments\f[R].
.SH VALUE
An integer which specifies the type of the node.
Possible values are:
.TP
\f[B]Node.ELEMENT_NODE\f[R] (\f[B]1\f[R])
An \f[CR]Element\f[R] node like \f[CR]<p>\f[R] or \f[CR]<div>\f[R].
.TP
\f[B]Node.ATTRIBUTE_NODE\f[R] (\f[B]2\f[R])
An \f[CR]Attribute\f[R] of an \f[CR]Element\f[R].
.TP
\f[B]Node.TEXT_NODE\f[R] (\f[B]3\f[R])
The actual \f[CR]Text\f[R] inside an \f[CR]Element\f[R] or
\f[CR]Attr\f[R].
.TP
\f[B]Node.CDATA_SECTION_NODE\f[R] (\f[B]4\f[R])
A \f[CR]CDATASection\f[R], such as \f[CR]<!CDATA[[ \&... ]]>\f[R]
.TP
\f[B]Node.PROCESSING_INSTRUCTION_NODE\f[R] (\f[B]7\f[R])
A \f[CR]ProcessingInstruction\f[R] of an XML document, such as
\f[CR]<?xml\-stylesheet \&... ?>\f[R].
.TP
\f[B]Node.COMMENT_NODE\f[R] (\f[B]8\f[R])
A \f[CR]Comment\f[R] node, such as \f[CR]<!\-\- \&... \-\->\f[R].
.TP
\f[B]Node.DOCUMENT_NODE\f[R] (\f[B]9\f[R])
A \f[CR]Document\f[R] node.
.TP
\f[B]Node.DOCUMENT_TYPE_NODE\f[R] (\f[B]10\f[R])
A \f[CR]DocumentType\f[R] node, such as \f[CR]<!DOCTYPE html>\f[R].
.TP
\f[B]Node.DOCUMENT_FRAGMENT_NODE\f[R] (\f[B]11\f[R])
A \f[CR]DocumentFragment\f[R] node.
.PP
The following constants have been deprecated and are not in use anymore:
\f[CR]Node.ENTITY_REFERENCE_NODE\f[R] (\f[CR]5\f[R]),
\f[CR]Node.ENTITY_NODE\f[R] (\f[CR]6\f[R]), and
\f[CR]Node.NOTATION_NODE\f[R] (\f[CR]12\f[R]).
.SH EXAMPLES
.SS Different types of nodes
.IP
.EX
document.nodeType === Node.DOCUMENT_NODE; \f[I]// true\f[R]
document.doctype.nodeType === Node.DOCUMENT_TYPE_NODE; \f[I]// true\f[R]

document.createDocumentFragment().nodeType === Node.DOCUMENT_FRAGMENT_NODE; \f[I]// true\f[R]

\f[B]const\f[R] p = document.createElement(\[dq]p\[dq]);
p.textContent = \[dq]Once upon a time\&...\[dq];

p.nodeType === Node.ELEMENT_NODE; \f[I]// true\f[R]
p.firstChild.nodeType === Node.TEXT_NODE; \f[I]// true\f[R]
.EE
.SS Comments
This example checks if the first node inside the document element is a
comment, and displays a message if not.
.IP
.EX
\f[B]const\f[R] node = document.documentElement.firstChild;
\f[B]if\f[R] (node.nodeType !== Node.COMMENT_NODE) {
  console.warn(\[dq]You should comment your code!\[dq]);
}
.EE
