.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "SharedArrayBuffer.growable" "JS" "December 11, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
SharedArrayBuffer.growable \- SharedArrayBuffer.prototype.growable
.SH SYNOPSIS
The \f[B]\f[CB]growable\f[B]\f[R] accessor property of
\f[CR]SharedArrayBuffer\f[R] instances returns whether this
\f[CR]SharedArrayBuffer\f[R] can be grow or not.
.SH DESCRIPTION
The \f[CR]growable\f[R] property is an accessor property whose set
accessor function is \f[CR]undefined\f[R], meaning that you can only
read this property.
The value is established when the array is constructed.
If a \f[CR]maxByteLength\f[R] option was set in the constructor,
\f[CR]growable\f[R] will return \f[CR]true\f[R]; if not, it will return
\f[CR]false\f[R].
.SH EXAMPLES
.SS Using growable
In this example, we create a 8\-byte buffer that is growable to a max
length of 16 bytes, then check its \f[CR]growable\f[R] property, growing
it if \f[CR]growable\f[R] returns \f[CR]true\f[R]:
.IP
.EX
\f[B]const\f[R] buffer = \f[B]new\f[R] SharedArrayBuffer(8, { maxByteLength: 16 });

\f[B]if\f[R] (buffer.growable) {
  console.log(\[dq]SAB is growable!\[dq]);
  buffer.grow(12);
}
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]SharedArrayBuffer\f[R]
.IP \[bu] 2
\f[CR]SharedArrayBuffer.prototype.grow()\f[R]
.IP \[bu] 2
\f[CR]SharedArrayBuffer.prototype.maxByteLength\f[R]
