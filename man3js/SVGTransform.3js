.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "SVGTRANSFORM" "3JS" "May 2, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
SVGTransform \- SVGTransform
.SH SYNOPSIS
The \f[B]\f[CB]SVGTransform\f[B]\f[R] interface reflects one of the
component transformations within an \f[CR]SVGTransformList\f[R]; thus,
an \f[CR]SVGTransform\f[R] object corresponds to a single component
(e.g., \f[CR]scale(\&...)\f[R] or \f[CR]matrix(\&...)\f[R]) within a
\f[CR]transform\f[R] attribute.
.PP
An \f[CR]SVGTransform\f[R] object can be designated as read only, which
means that attempts to modify the object will result in an exception
being thrown.
.SH INSTANCE PROPERTIES
.TP
\f[B]type\f[R]
The type of the value as specified by one of the
\f[CR]SVG_TRANSFORM_*\f[R] constants defined on this interface.
.TP
\f[B]angle\f[R]
The angle as a floating point value.
A convenience attribute for \f[CR]SVG_TRANSFORM_ROTATE\f[R],
\f[CR]SVG_TRANSFORM_SKEWX\f[R] and \f[CR]SVG_TRANSFORM_SKEWY\f[R].
For \f[CR]SVG_TRANSFORM_MATRIX\f[R], \f[CR]SVG_TRANSFORM_TRANSLATE\f[R]
and \f[CR]SVG_TRANSFORM_SCALE\f[R], \f[CR]angle\f[R] will be zero.
.TP
\f[B]matrix\f[R]
The matrix as a \f[CR]DOMMatrix\f[R] that represents this
transformation.
The matrix object is live, meaning that any changes made to the
\f[CR]SVGTransform\f[R] object are immediately reflected in the matrix
object and vice versa.
In case the matrix object is changed directly (i.e., without using the
methods on the \f[CR]SVGTransform\f[R] interface itself) then the type
of the \f[CR]SVGTransform\f[R] changes to
\f[CR]SVG_TRANSFORM_MATRIX\f[R].
.SH INSTANCE METHODS
.TP
\f[B]setMatrix()\f[R]
Sets the transform type to \f[CR]SVG_TRANSFORM_MATRIX\f[R], with
parameter matrix defining the new transformation.
Note that the values from the parameter \f[CR]matrix\f[R] are copied.
.TP
\f[B]setTranslate()\f[R]
Sets the transform type to \f[CR]SVG_TRANSFORM_TRANSLATE\f[R], with
parameters \f[CR]tx\f[R] and \f[CR]ty\f[R] defining the translation
amounts.
.TP
\f[B]setScale()\f[R]
Sets the transform type to \f[CR]SVG_TRANSFORM_SCALE\f[R], with
parameters \f[CR]sx\f[R] and \f[CR]sy\f[R] defining the scale amounts.
.TP
\f[B]setRotate()\f[R]
Sets the transform type to \f[CR]SVG_TRANSFORM_ROTATE\f[R], with
parameter \f[CR]angle\f[R] defining the rotation angle and parameters
\f[CR]cx\f[R] and \f[CR]cy\f[R] defining the optional center of
rotation.
.TP
\f[B]setSkewX()\f[R]
Sets the transform type to \f[CR]SVG_TRANSFORM_SKEWX\f[R], with
parameter \f[CR]angle\f[R] defining the amount of skew.
.TP
\f[B]setSkewY()\f[R]
Sets the transform type to \f[CR]SVG_TRANSFORM_SKEWY\f[R], with
parameter \f[CR]angle\f[R] defining the amount of skew.
.SH STATIC PROPERTIES
.TP
\f[B]SVG_TRANSFORM_UNKNOWN\f[R] (0)
The unit type is not one of predefined unit types.
It is invalid to attempt to define a new value of this type or to
attempt to switch an existing value to this type.
.TP
\f[B]SVG_TRANSFORM_MATRIX\f[R] (1)
A \f[CR]matrix(\&...)\f[R] transformation.
.TP
\f[B]SVG_TRANSFORM_TRANSLATE\f[R] (2)
A \f[CR]translate(\&...)\f[R] transformation.
.TP
\f[B]SVG_TRANSFORM_SCALE\f[R] (3)
A \f[CR]scale(\&...)\f[R] transformation.
.TP
\f[B]SVG_TRANSFORM_ROTATE\f[R] (4)
A \f[CR]rotate(\&...)\f[R] transformation.
.TP
\f[B]SVG_TRANSFORM_SKEWX\f[R] (5)
A \f[CR]skewx(\&...)\f[R] transformation.
.TP
\f[B]SVG_TRANSFORM_SKEWY\f[R] (6)
A \f[CR]skewy(\&...)\f[R] transformation.
