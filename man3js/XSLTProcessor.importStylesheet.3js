.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "XSLTPROCESSOR.IMPORTSTYLESHEET" "3JS" "June 10, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
XSLTProcessor.importStylesheet \- XSLTProcessor: importStylesheet()
method
.SH SYNOPSIS
The \f[CR]importStylesheet()\f[R] method of the \f[CR]XSLTProcessor\f[R]
interface imports an XSLT stylesheet for the processor.
.SH SYNTAX
.IP
.EX
importStylesheet(style)
.EE
.SS Parameters
.TP
\f[B]style\f[R]
The \f[CR]Node\f[R] to import.
It can be an XML document (that is a \f[CR]Document\f[R] with
\f[CR]doctype\f[R] whose \f[CR]name\f[R] of \f[CR]\(dqxml\(dq\f[R])
containing an XSLT stylesheet or a \c
.UR https://www.w3.org/TR/xslt-30/#literal-result-element
literal result element transform
.UE \c
, or an \f[CR]Element\f[R] representing an \f[CR]<xsl:stylesheet>\f[R]
or \f[CR]<xsl:transform>\f[R].
.SS Return value
None (\f[CR]undefined\f[R]).
.SH EXAMPLES
.SS Using importStylesheet()
This example shows how \f[CR]importStylesheet()\f[R] loads an XSLT
stylesheet into an \f[CR]XSLTProcessor\f[R] for use in transforming XML
data.
.SS HTML
.IP
.EX
<\f[B]div\f[R] id=\(dqresult\(dq></\f[B]div\f[R]>
.EE
.SS JavaScript
.IP
.EX
\f[B]const\f[R] xmlString = \(ga
<items>
  <item>Item 1</item>
  <item>Item 2</item>
</items>
\(ga;

\f[B]const\f[R] xsltString = \(ga
<xsl:stylesheet version=\(dq1.0\(dq xmlns:xsl=\(dqhttp://www.w3.org/1999/XSL/Transform\(dq>
  <xsl:template match=\(dq/\(dq>
    <ul>
      <xsl:for\-each select=\(dqitems/item\(dq>
        <li><xsl:value\-of select=\(dq.\(dq/></li>
      </xsl:for\-each>
    </ul>
  </xsl:template>
</xsl:stylesheet>
\(ga;

\f[B]const\f[R] parser = \f[B]new\f[R] DOMParser();
\f[B]const\f[R] xmlDoc = parser.parseFromString(xmlString, \(dqapplication/xml\(dq);
\f[B]const\f[R] xsltDoc = parser.parseFromString(xsltString, \(dqapplication/xml\(dq);

\f[B]const\f[R] xsltProcessor = \f[B]new\f[R] XSLTProcessor();

\f[I]// Import the XSLT stylesheet into the XSLTProcessor\f[R]
xsltProcessor.importStylesheet(xsltDoc);

\f[I]// Perform the transformation from XML to HTML\f[R]
\f[B]const\f[R] resultFragment = xsltProcessor.transformToFragment(xmlDoc, document);

\f[I]// Display the transformed result in the page\f[R]
document.getElementById(\(dqresult\(dq).appendChild(resultFragment);
.EE
.SS Result
