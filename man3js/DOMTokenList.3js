.\" Automatically generated by Pandoc 3.4
.\"
.TH "DOMTokenList" "JS" "December 21, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
DOMTokenList \- DOMTokenList
.SH SYNOPSIS
The \f[B]\f[CB]DOMTokenList\f[B]\f[R] interface represents a set of
space\-separated tokens.
Such a set is returned by \f[CR]Element.classList\f[R] or
\f[CR]HTMLLinkElement.relList\f[R], and many others.
.PP
A \f[CR]DOMTokenList\f[R] is indexed beginning with \f[CR]0\f[R] as with
JavaScript \f[CR]Array\f[R] objects.
\f[CR]DOMTokenList\f[R] is always case\-sensitive.
.SH INSTANCE PROPERTIES
.TP
\f[B]DOMTokenList.length\f[R] \f[I](read\-only)\f[R]
An \f[CR]integer\f[R] representing the number of objects stored in the
object.
.TP
\f[B]DOMTokenList.value\f[R]
A stringifier property that returns the value of the list as a string.
.SH INSTANCE METHODS
.TP
\f[B]DOMTokenList.item()\f[R]
Returns the item in the list by its index, or \f[CR]null\f[R] if the
index is greater than or equal to the list\[cq]s \f[CR]length\f[R].
.TP
\f[B]DOMTokenList.contains()\f[R]
Returns \f[CR]true\f[R] if the list contains the given token, otherwise
\f[CR]false\f[R].
.TP
\f[B]DOMTokenList.add()\f[R]
Adds the specified tokens to the list.
.TP
\f[B]DOMTokenList.remove()\f[R]
Removes the specified tokens from the list.
.TP
\f[B]DOMTokenList.replace()\f[R]
Replaces the token with another one.
.TP
\f[B]DOMTokenList.supports()\f[R]
Returns \f[CR]true\f[R] if the given token is in the associated
attribute\[cq]s supported tokens.
.TP
\f[B]DOMTokenList.toggle()\f[R]
Removes the token from the list if it exists, or adds it to the list if
it doesn\[cq]t.
Returns a boolean indicating whether the token is in the list after the
operation.
.TP
\f[B]DOMTokenList.entries()\f[R]
Returns an iterator, allowing you to go through all key/value pairs
contained in this object.
.TP
\f[B]DOMTokenList.forEach()\f[R]
Executes a provided callback function once for each
\f[CR]DOMTokenList\f[R] element.
.TP
\f[B]DOMTokenList.keys()\f[R]
Returns an iterator, allowing you to go through all keys of the
key/value pairs contained in this object.
.TP
\f[B]DOMTokenList.toString()\f[R]
Returns the \f[CR]DOMTokenList.value\f[R], the space\-separated values
of the list as a string.
.TP
\f[B]DOMTokenList.values()\f[R]
Returns an iterator, allowing you to go through all values of the
key/value pairs contained in this object.
.SH EXAMPLES
In the following simple example, we retrieve the list of classes set on
a \f[CR]<p>\f[R] element as a \f[CR]DOMTokenList\f[R] using
\f[CR]Element.classList\f[R], add a class using
\f[CR]DOMTokenList.add()\f[R], and then update the
\f[CR]Node.textContent\f[R] of the \f[CR]<p>\f[R] to equal the
\f[CR]DOMTokenList\f[R].
.PP
First, the HTML:
.IP
.EX
<\f[B]p\f[R] class=\[dq]a b c\[dq]></\f[B]p\f[R]>
.EE
.PP
Now the JavaScript:
.IP
.EX
\f[B]let\f[R] para = document.querySelector(\[dq]p\[dq]);
\f[B]let\f[R] classes = para.classList;
para.classList.add(\[dq]d\[dq]);
para.textContent = \[ga]paragraph classList is \[dq]${classes}\[dq]\[ga];
.EE
.PP
The output looks like this:
.SH TRIMMING OF WHITESPACE AND REMOVAL OF DUPLICATES
Methods that modify the \f[CR]DOMTokenList\f[R] (such as
\f[CR]DOMTokenList.add()\f[R]) automatically trim any excess Whitespace
and remove duplicate values from the list.
For example:
.IP
.EX
<\f[B]span\f[R] class=\[dq]    d   d e f\[dq]></\f[B]span\f[R]>
.EE
.IP
.EX
\f[B]let\f[R] span = document.querySelector(\[dq]span\[dq]);
\f[B]let\f[R] classes = span.classList;
span.classList.add(\[dq]x\[dq]);
span.textContent = \[ga]span classList is \[dq]${classes}\[dq]\[ga];
.EE
.PP
The output looks like this:
