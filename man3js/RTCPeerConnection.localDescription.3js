.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "RTCPeerConnection.localDescription" "JS" "March 25, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
RTCPeerConnection.localDescription \- RTCPeerConnection:
localDescription property
.SH SYNOPSIS
The \f[B]\f[CB]localDescription\f[B]\f[R] read\-only property of the
\f[CR]RTCPeerConnection\f[R] interface returns an
\f[CR]RTCSessionDescription\f[R] describing the session for the local
end of the connection.
If it has not yet been set, this is \f[CR]null\f[R].
.SH SYNTAX
.IP
.EX
const sessionDescription = peerConnection.localDescription
.EE
.PP
On a more fundamental level, the returned value is the value of
\f[CR]RTCPeerConnection.pendingLocalDescription\f[R] if that property
isn\[cq]t \f[CR]null\f[R]; otherwise, the value of
\f[CR]RTCPeerConnection.currentLocalDescription\f[R] is returned.
See Pending and current descriptions in the WebRTC Connectivity page for
details on this algorithm and why it\[cq]s used.
.SH EXAMPLE
This example looks at the \f[CR]localDescription\f[R] and displays an
alert containing the \f[CR]RTCSessionDescription\f[R] object\[cq]s
\f[CR]type\f[R] and \f[CR]sdp\f[R] fields.
.IP
.EX
\f[B]const\f[R] pc = \f[B]new\f[R] RTCPeerConnection();
\f[I]// ...\f[R]
\f[B]const\f[R] sd = pc.localDescription;
\f[B]if\f[R] (sd) {
  alert(\[ga]Local session: type=\[aq]${sd.type}\[aq]; sdp description=\[aq]${sd.sdp}\[aq]\[ga]);
} \f[B]else\f[R] {
  alert(\[dq]No local session yet.\[dq]);
}
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]RTCPeerConnection.setLocalDescription()\f[R],
\f[CR]RTCPeerConnection.pendingLocalDescription\f[R],
\f[CR]RTCPeerConnection.currentLocalDescription\f[R]
.IP \[bu] 2
\f[CR]RTCPeerConnection.setRemoteDescription()\f[R],
\f[CR]RTCPeerConnection.remoteDescription\f[R],
\f[CR]RTCPeerConnection.pendingRemoteDescription\f[R],
\f[CR]RTCPeerConnection.currentRemoteDescription\f[R]
.IP \[bu] 2
WebRTC
