.\" Automatically generated by Pandoc 3.4
.\"
.TH "CanvasRenderingContext2D.fillStyle" "JS" "July 26, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
CanvasRenderingContext2D.fillStyle \- CanvasRenderingContext2D:
fillStyle property
.SH SYNOPSIS
The \f[B]\f[CB]CanvasRenderingContext2D.fillStyle\f[B]\f[R] property of
the Canvas 2D API specifies the color, gradient, or pattern to use
inside shapes.
The default style is \f[CR]#000\f[R] (black).
.RS
.PP
\f[B]Note:\f[R] For more examples of fill and stroke styles, see
Applying styles and color in the Canvas tutorial.
.RE
.SH VALUE
One of the following:
.IP \[bu] 2
A string parsed as CSS \f[CR]&lt;color&gt;\f[R] value.
.IP \[bu] 2
A \f[CR]CanvasGradient\f[R] object (a linear or radial gradient).
.IP \[bu] 2
A \f[CR]CanvasPattern\f[R] object (a repeating image).
.SH EXAMPLES
.SS Changing the fill color of a shape
This example applies a blue fill color to a rectangle.
.SS HTML
.IP
.EX
<\f[B]canvas\f[R] id=\[dq]canvas\[dq]></\f[B]canvas\f[R]>
.EE
.SS JavaScript
.IP
.EX
\f[B]const\f[R] canvas = document.getElementById(\[dq]canvas\[dq]);
\f[B]const\f[R] ctx = canvas.getContext(\[dq]2d\[dq]);

ctx.fillStyle = \[dq]blue\[dq];
ctx.fillRect(10, 10, 100, 100);
.EE
.SS Result
.SS Creating multiple fill colors using loops
In this example, we use two \f[CR]for\f[R] loops to draw a grid of
rectangles, each having a different fill color.
To achieve this, we use the two variables \f[CR]i\f[R] and \f[CR]j\f[R]
to generate a unique RGB color for each square, and only modify the red
and green values.
(The blue channel has a fixed value.)
By modifying the channels, you can generate all kinds of palettes.
.IP
.EX
\f[B]const\f[R] canvas = document.getElementById(\[dq]canvas\[dq]);
\f[B]const\f[R] ctx = canvas.getContext(\[dq]2d\[dq]);

\f[B]for\f[R] (\f[B]let\f[R] i = 0; i < 6; i++) {
  \f[B]for\f[R] (\f[B]let\f[R] j = 0; j < 6; j++) {
    ctx.fillStyle = \[ga]rgb(
        ${Math.floor(255 \- 42.5 * i)}
        ${Math.floor(255 \- 42.5 * j)}
        0)\[ga];
    ctx.fillRect(j * 25, i * 25, 25, 25);
  }
}
.EE
.PP
The result looks like this:
.SS WebKit/Blink\-specific note
In WebKit\- and Blink\-based browsers, the non\-standard and deprecated
method \f[CR]ctx.setFillColor()\f[R] is implemented in addition to this
property.
.IP
.EX
setFillColor(color, \f[I]/* (optional) */\f[R] alpha);
setFillColor(grayLevel, \f[I]/* (optional) */\f[R] alpha);
setFillColor(r, g, b, a);
setFillColor(c, m, y, k, a);
.EE
.SH SEE ALSO
.IP \[bu] 2
Canvas API
.IP \[bu] 2
The interface defining this property:
\f[CR]CanvasRenderingContext2D\f[R]
.IP \[bu] 2
Values used by this property:
.RS 2
.IP \[bu] 2
\f[CR]&lt;color&gt;\f[R] CSS data type
.IP \[bu] 2
\f[CR]CanvasGradient\f[R] object
.IP \[bu] 2
\f[CR]CanvasPattern\f[R] object
.RE
