.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "RTCDTMFSender.insertDTMF" "JS" "August 12, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
RTCDTMFSender.insertDTMF \- RTCDTMFSender: insertDTMF() method
.SH SYNOPSIS
The \f[B]\f[CB]insertDTMF()\f[B]\f[R] method of the
\f[CR]RTCDTMFSender\f[R] interface sends DTMF tones to the remote peer
over the \f[CR]RTCPeerConnection\f[R].
.PP
Tones are sent asynchronously.
Every time a tone starts or ends, a \f[CR]tonechange\f[R] event is sent
to the \f[CR]RTCDTMFSender\f[R].
.PP
You can call \f[CR]insertDTMF()\f[R] at any time while the connection is
active.
Each call to \f[CR]insertDTMF()\f[R] replaces any pending tones in the
\f[CR]toneBuffer\f[R].
You can abort sending queued tones by specifying an empty string
(\f[CR]\[dq]\[dq]\f[R]) as the set of tones to play.
Since \f[CR]insertDTMF()\f[R] replaces the tone buffer, in order to add
to the DTMF tones being played, it is necessary to call
\f[CR]insertDTMF()\f[R] with a string containing both the remaining
tones (stored in the \f[CR]toneBuffer\f[R]) and the new tones appended
together.
.SH SYNTAX
.IP
.EX
insertDTMF(tones)
insertDTMF(tones, duration)
insertDTMF(tones, duration, interToneGap)
.EE
.SS Parameters
.TP
\f[B]tones\f[R]
A string containing the DTMF codes to be transmitted to the recipient.
Specifying an empty string as the \f[CR]tones\f[R] parameter clears the
tone buffer, aborting any currently queued tones.
A comma character \f[CR],\f[R] in the string inserts a two\-second
delay.
For example \f[CR]\[dq]12,34\[dq]\f[R] will send tones for \f[CR]1\f[R]
and \f[CR]2\f[R], pause for two seconds, and then send \f[CR]3\f[R] and
\f[CR]4\f[R].
Multiple commas add a longer delay, so \f[CR],,\f[R] will add four
seconds.
.TP
\f[B]duration\f[R] \f[I](optional)\f[R]
The amount of time, in milliseconds, that each DTMF tone should last.
This value must be between 40 ms and 6000 ms (6 seconds), inclusive.
The default is 100 ms.
.TP
\f[B]interToneGap\f[R] \f[I](optional)\f[R]
The length of time, in milliseconds, to wait between tones.
The browser will enforce a minimum value of 30 ms (that is, if you
specify a lower value, 30 ms will be used instead).
The default is 70 ms.
.SS Return value
None (\f[CR]undefined\f[R]).
.SS Exceptions
.TP
\f[B]InvalidStateError\f[R] \f[B]DOMException\f[R]
Thrown if the DTMF tones cannot be sent because the track has been
stopped or is in a read\-only or inactive state.
.TP
\f[B]InvalidCharacterError\f[R] \f[B]DOMException\f[R]
Thrown if one or more of the characters in \f[CR]tones\f[R] is not valid
DTMF (\f[CR]0\-9\f[R], \f[CR]A\-Z\f[R], \f[CR]#\f[R], or \f[CR],\f[R]).
.SH EXAMPLES
.SS Using insertDTMF to send DTMF tones
This example shows how to use the \f[CR]insertDTMF()\f[R] method to send
tones over a WebRTC connection.
.PP
The code first checks if the \f[CR]canInsertDTMF\f[R] property is
defined, and if so, uses it to check whether inserting DTMF tones is
supported.
If the feature is supported, \f[CR]insertDTMF()\f[R] is called to insert
a tone.
.IP
.EX
\f[B]if\f[R] (sender.dtmf.canInsertDTMF) {
  \f[B]const\f[R] duration = 500;
  sender.dtmf.insertDTMF(\[dq]1234\[dq], duration);
} \f[B]else\f[R] {
  console.log(\[dq]DTMF function not available\[dq]);
}
.EE
.SH SEE ALSO
.IP \[bu] 2
WebRTC API
.IP \[bu] 2
Using DTMF with WebRTC
.IP \[bu] 2
\f[CR]RTCPeerConnection\f[R]
.IP \[bu] 2
\f[CR]RTCDTMFSender\f[R]
.IP \[bu] 2
\f[CR]RTCRtpSender\f[R]
