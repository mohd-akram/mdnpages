.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "TextMetrics" "JS" "April 22, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
TextMetrics \- TextMetrics
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]TextMetrics\f[B]\f[R] interface represents the dimensions
of a piece of text in the canvas; a \f[CR]TextMetrics\f[R] instance can
be retrieved using the \f[CR]CanvasRenderingContext2D.measureText()\f[R]
method.
.SH INSTANCE PROPERTIES
.TP
\f[B]TextMetrics.width\f[R] \f[I](read\-only)\f[R]
Returns the width of a segment of inline text in CSS pixels.
It takes into account the current font of the context.
.TP
\f[B]TextMetrics.actualBoundingBoxLeft\f[R] \f[I](read\-only)\f[R]
Distance parallel to the baseline from the alignment point given by the
\f[CR]CanvasRenderingContext2D.textAlign\f[R] property to the left side
of the bounding rectangle of the given text, in CSS pixels; positive
numbers indicating a distance going left from the given alignment point.
.TP
\f[B]TextMetrics.actualBoundingBoxRight\f[R] \f[I](read\-only)\f[R]
Returns the distance from the alignment point given by the
\f[CR]CanvasRenderingContext2D.textAlign\f[R] property to the right side
of the bounding rectangle of the given text, in CSS pixels.
The distance is measured parallel to the baseline.
.TP
\f[B]TextMetrics.fontBoundingBoxAscent\f[R] \f[I](read\-only)\f[R]
Returns the distance from the horizontal line indicated by the
\f[CR]CanvasRenderingContext2D.textBaseline\f[R] attribute to the top of
the highest bounding rectangle of all the fonts used to render the text,
in CSS pixels.
.TP
\f[B]TextMetrics.fontBoundingBoxDescent\f[R] \f[I](read\-only)\f[R]
Returns the distance from the horizontal line indicated by the
\f[CR]CanvasRenderingContext2D.textBaseline\f[R] attribute to the bottom
of the bounding rectangle of all the fonts used to render the text, in
CSS pixels.
.TP
\f[B]TextMetrics.actualBoundingBoxAscent\f[R] \f[I](read\-only)\f[R]
Returns the distance from the horizontal line indicated by the
\f[CR]CanvasRenderingContext2D.textBaseline\f[R] attribute to the top of
the bounding rectangle used to render the text, in CSS pixels.
.TP
\f[B]TextMetrics.actualBoundingBoxDescent\f[R] \f[I](read\-only)\f[R]
Returns the distance from the horizontal line indicated by the
\f[CR]CanvasRenderingContext2D.textBaseline\f[R] attribute to the bottom
of the bounding rectangle used to render the text, in CSS pixels.
.TP
\f[B]TextMetrics.emHeightAscent\f[R] \f[I](read\-only)\f[R]
Returns the distance from the horizontal line indicated by the
\f[CR]CanvasRenderingContext2D.textBaseline\f[R] property to the top of
the \f[I]em\f[R] square in the line box, in CSS pixels.
.TP
\f[B]TextMetrics.emHeightDescent\f[R] \f[I](read\-only)\f[R]
Returns the distance from the horizontal line indicated by the
\f[CR]CanvasRenderingContext2D.textBaseline\f[R] property to the bottom
of the \f[I]em\f[R] square in the line box, in CSS pixels.
.TP
\f[B]TextMetrics.hangingBaseline\f[R] \f[I](read\-only)\f[R]
Returns the distance from the horizontal line indicated by the
\f[CR]CanvasRenderingContext2D.textBaseline\f[R] property to the hanging
baseline of the line box, in CSS pixels.
.TP
\f[B]TextMetrics.alphabeticBaseline\f[R] \f[I](read\-only)\f[R]
Returns the distance from the horizontal line indicated by the
\f[CR]CanvasRenderingContext2D.textBaseline\f[R] property to the
alphabetic baseline of the line box, in CSS pixels.
.TP
\f[B]TextMetrics.ideographicBaseline\f[R] \f[I](read\-only)\f[R]
Returns the distance from the horizontal line indicated by the
\f[CR]CanvasRenderingContext2D.textBaseline\f[R] property to the
ideographic baseline of the line box, in CSS pixels.
.SH EXAMPLES
.SS Baselines illustrated
This example demonstrates the baselines the \f[CR]TextMetrics\f[R]
object holds.
The default baseline is the \f[CR]alphabeticBaseline\f[R].
See also the \f[CR]CanvasRenderingContext2D.textBaseline\f[R] property.
.SS HTML
.IP
.EX
<\f[B]canvas\f[R] id=\[dq]canvas\[dq] width=\[dq]550\[dq] height=\[dq]500\[dq]></\f[B]canvas\f[R]>
.EE
.SS JavaScript
.IP
.EX
\f[B]const\f[R] canvas = document.getElementById(\[dq]canvas\[dq]);
\f[B]const\f[R] ctx = canvas.getContext(\[dq]2d\[dq]);

\f[B]const\f[R] baselinesAboveAlphabetic = [
  \[dq]fontBoundingBoxAscent\[dq],
  \[dq]actualBoundingBoxAscent\[dq],
  \[dq]emHeightAscent\[dq],
  \[dq]hangingBaseline\[dq],
];
\f[B]const\f[R] baselinesBelowAlphabetic = [
  \[dq]ideographicBaseline\[dq],
  \[dq]emHeightDescent\[dq],
  \[dq]actualBoundingBoxDescent\[dq],
  \[dq]fontBoundingBoxDescent\[dq],
];
\f[B]const\f[R] baselines = [...baselinesAboveAlphabetic, ...baselinesBelowAlphabetic];
ctx.font = \[dq]25px serif\[dq];
ctx.strokeStyle = \[dq]red\[dq];

baselines.forEach((baseline, index) \f[B]=>\f[R] {
  \f[B]const\f[R] text = \[ga]Abcdefghijklmnop (${baseline})\[ga];
  \f[B]const\f[R] textMetrics = ctx.measureText(text);
  \f[B]const\f[R] y = 50 + index * 50;
  ctx.beginPath();
  ctx.fillText(text, 0, y);

  \f[B]const\f[R] baselineMetricValue = textMetrics[baseline];
  \f[B]if\f[R] (baselineMetricValue === \f[B]undefined\f[R]) {
    \f[B]return\f[R];
  }

  \f[B]const\f[R] lineY = baselinesBelowAlphabetic.includes(baseline)
    ? y + Math.abs(baselineMetricValue)
    : y \- Math.abs(baselineMetricValue);
  ctx.moveTo(0, lineY);
  ctx.lineTo(550, lineY);
  ctx.stroke();
});
.EE
.SS Result
.SS Measuring text width
When measuring the x\-direction of a piece of text, the sum of
\f[CR]actualBoundingBoxLeft\f[R] and \f[CR]actualBoundingBoxRight\f[R]
can be wider than the width of the inline box (\f[CR]width\f[R]), due to
slanted/italic fonts where characters overhang their advance width.
.PP
It can therefore be useful to use the sum of
\f[CR]actualBoundingBoxLeft\f[R] and \f[CR]actualBoundingBoxRight\f[R]
as a more accurate way to get the absolute text width:
.IP
.EX
\f[B]const\f[R] canvas = document.getElementById(\[dq]canvas\[dq]);
\f[B]const\f[R] ctx = canvas.getContext(\[dq]2d\[dq]);
\f[B]const\f[R] text = \[dq]Abcdefghijklmnop\[dq];
ctx.font = \[dq]italic 50px serif\[dq];
\f[B]const\f[R] textMetrics = ctx.measureText(text);

console.log(textMetrics.width);
\f[I]// 459.8833312988281\f[R]

console.log(
  textMetrics.actualBoundingBoxRight + textMetrics.actualBoundingBoxLeft,
);
\f[I]// 462.8833333333333\f[R]
.EE
.SH SEE ALSO
.IP \[bu] 2
Creator method in \f[CR]CanvasRenderingContext2D\f[R]
.IP \[bu] 2
The \f[CR]<canvas>\f[R] element and its associated interface,
\f[CR]HTMLCanvasElement\f[R]
