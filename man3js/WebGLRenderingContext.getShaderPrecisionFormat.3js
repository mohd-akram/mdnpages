.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "WebGLRenderingContext.getShaderPrecisionFormat" "JS" "April 8, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
WebGLRenderingContext.getShaderPrecisionFormat \- WebGLRenderingContext:
getShaderPrecisionFormat() method
.SH SYNOPSIS
The
\f[B]\f[CB]WebGLRenderingContext.getShaderPrecisionFormat()\f[B]\f[R]
method of the WebGL API returns a new
\f[CR]WebGLShaderPrecisionFormat\f[R] object describing the range and
precision for the specified shader numeric format.
.SH SYNTAX
.IP
.EX
getShaderPrecisionFormat(shaderType, precisionType)
.EE
.SS Parameters
.TP
\f[B]shaderType\f[R]
Either a \f[CR]gl.FRAGMENT_SHADER\f[R] or a \f[CR]gl.VERTEX_SHADER\f[R].
.TP
\f[B]precisionType\f[R]
A precision type value.
Either \f[CR]gl.LOW_FLOAT\f[R], \f[CR]gl.MEDIUM_FLOAT\f[R],
\f[CR]gl.HIGH_FLOAT\f[R], \f[CR]gl.LOW_INT\f[R],
\f[CR]gl.MEDIUM_INT\f[R], or \f[CR]gl.HIGH_INT\f[R].
.SS Return value
A \f[CR]WebGLShaderPrecisionFormat\f[R] object or \f[CR]null\f[R], if an
error occurs.
.SS Exceptions
.IP \[bu] 2
\f[CR]gl.INVALID_ENUM\f[R] if the shader or precision types aren\[cq]t
recognized.
.IP \[bu] 2
\f[CR]gl.INVALID_OPERATION\f[R] if the shader compiler isn\[cq]t
supported.
.SH EXAMPLES
The following code gets the precision format of a
\f[CR]gl.VERTEX_SHADER\f[R] with a \f[CR]gl.MEDIUM_FLOAT\f[R] precision
type.
.IP
.EX
\f[B]const\f[R] canvas = document.getElementById(\[dq]canvas\[dq]);
\f[B]const\f[R] gl = canvas.getContext(\[dq]webgl\[dq]);

gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_FLOAT);
\f[I]// WebGLShaderPrecisionFormat { rangeMin: 127, rangeMax: 127, precision: 23 }\f[R]
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]WebGLShaderPrecisionFormat\f[R]
