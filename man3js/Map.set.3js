.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "Map.set" "JS" "August 9, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Map.set \- Map.prototype.set()
.SH SYNOPSIS
The \f[B]\f[CB]set()\f[B]\f[R] method of \f[CR]Map\f[R] instances adds
or updates an entry in this map with a specified key and a value.
.SH SYNTAX
.IP
.EX
set(key, value)
.EE
.SS Parameters
.TP
\f[B]key\f[R]
The key of the element to add to the \f[CR]Map\f[R] object.
The key may be any JavaScript type (any primitive value or any type of
JavaScript object).
.TP
\f[B]value\f[R]
The value of the element to add to the \f[CR]Map\f[R] object.
The value may be any JavaScript type (any primitive value or any type of
JavaScript object).
.SS Return value
The \f[CR]Map\f[R] object.
.SH EXAMPLES
.SS Using set()
.IP
.EX
\f[B]const\f[R] myMap = \f[B]new\f[R] Map();

\f[I]// Add new elements to the map\f[R]
myMap.set(\[dq]bar\[dq], \[dq]foo\[dq]);
myMap.set(1, \[dq]foobar\[dq]);

\f[I]// Update an element in the map\f[R]
myMap.set(\[dq]bar\[dq], \[dq]baz\[dq]);
.EE
.SS Using the set() with chaining
Since the \f[CR]set()\f[R] method returns back the same \f[CR]Map\f[R]
object, you can chain the method call like below:
.IP
.EX
\f[I]// Add new elements to the map with chaining.\f[R]
myMap.set(\[dq]bar\[dq], \[dq]foo\[dq]).set(1, \[dq]foobar\[dq]).set(2, \[dq]baz\[dq]);
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]Map\f[R]
.IP \[bu] 2
\f[CR]Map.prototype.get()\f[R]
.IP \[bu] 2
\f[CR]Map.prototype.has()\f[R]
