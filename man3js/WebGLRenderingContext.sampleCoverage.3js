.\" Automatically generated by Pandoc 3.4
.\"
.TH "WebGLRenderingContext.sampleCoverage" "JS" "September 28, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
WebGLRenderingContext.sampleCoverage \- WebGLRenderingContext:
sampleCoverage() method
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]WebGLRenderingContext.sampleCoverage()\f[B]\f[R] method
of the WebGL API specifies multi\-sample coverage parameters for
anti\-aliasing effects.
.SH SYNTAX
.IP
.EX
sampleCoverage(value, invert)
.EE
.SS Parameters
.TP
\f[B]value\f[R]
A \f[CR]GLclampf\f[R] which sets a single floating\-point coverage value
clamped to the range [0,1].
The default value is 1.0.
.TP
\f[B]invert\f[R]
A \f[CR]GLboolean\f[R] which sets whether or not the coverage masks
should be inverted.
The default value is \f[CR]false\f[R].
.SS Return value
None (\f[CR]undefined\f[R]).
.SH EXAMPLES
Multi\-sampling is disabled by default.
To enable or disable multi\-sampling, use the \f[CR]enable()\f[R] and
\f[CR]disable()\f[R] methods with the argument
\f[CR]gl.SAMPLE_COVERAGE\f[R] and
\f[CR]gl.SAMPLE_ALPHA_TO_COVERAGE\f[R].
.IP
.EX
gl.enable(gl.SAMPLE_COVERAGE);
gl.sampleCoverage(0.5, \f[B]false\f[R]);
.EE
.PP
To check the sample coverage values, query the
\f[CR]SAMPLE_COVERAGE_VALUE\f[R] and \f[CR]SAMPLE_COVERAGE_INVERT\f[R]
constants.
.IP
.EX
gl.getParameter(gl.SAMPLE_COVERAGE_VALUE); \f[I]// 0.5\f[R]
gl.getParameter(gl.SAMPLE_COVERAGE_INVERT); \f[I]// false\f[R]
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]HTMLCanvasElement.getContext()\f[R] \[en] \f[CR]antialias\f[R]
parameter for the context.
