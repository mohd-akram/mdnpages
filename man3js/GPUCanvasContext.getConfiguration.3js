.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "GPUCANVASCONTEXT.GETCONFIGURATION" "3JS" "June 18, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
GPUCanvasContext.getConfiguration \- GPUCanvasContext:
getConfiguration() method
.SH SYNOPSIS
\f[B]Secure context:\f[R] This feature is available only in secure
contexts (HTTPS).
.PP
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]getConfiguration()\f[B]\f[R] method of the
\f[CR]GPUCanvasContext\f[R] interface returns the current configuration
set for the context.
.SH SYNTAX
.IP
.EX
getConfiguration()
.EE
.SS Parameters
None.
.SS Return value
An object containing the configuration options set on the context (i.e.,
via the \f[CR]GPUCanvasContext.configure()\f[R] method), or
\f[CR]null\f[R] if no configuration is set (either no configuration was
previously set, or a configuration was set and then
\f[CR]GPUCanvasContext.unconfigure()\f[R] was called on the context).
.SH EXAMPLES
.IP
.EX
\f[B]const\f[R] canvas = document.querySelector(\(dqcanvas\(dq);
\f[B]const\f[R] context = canvas.getContext(\(dqwebgpu\(dq);

\f[B]if\f[R] (!navigator.gpu) {
  \f[B]throw\f[R] Error(\(dqWebGPU not supported.\(dq);
}

\f[B]const\f[R] adapter = \f[B]await\f[R] navigator.gpu.requestAdapter();
\f[B]if\f[R] (!adapter) {
  \f[B]throw\f[R] Error(\(dqCouldn\(aqt request WebGPU adapter.\(dq);
}

\f[B]const\f[R] device = \f[B]await\f[R] adapter.requestDevice();

context.configure({
  device,
  format: navigator.gpu.getPreferredCanvasFormat(),
  alphaMode: \(dqpremultiplied\(dq,
});

console.log(context.getConfiguration());
\f[I]/* Logs something like:\f[R]

\f[I]{\f[R]
\f[I]  \(dqalphaMode\(dq: \(dqpremultiplied\(dq,\f[R]
\f[I]  \(dqcolorSpace\(dq: \(dqsrgb\(dq,\f[R]
\f[I]  \(dqdevice\(dq: { ... },\f[R]
\f[I]  \(dqformat\(dq: \(dqbgra8unorm\(dq,\f[R]
\f[I]  \(dqtoneMapping\(dq: {\f[R]
\f[I]      \(dqmode\(dq: \(dqstandard\(dq\f[R]
\f[I]  },\f[R]
\f[I]  \(dqusage\(dq: 16,\f[R]
\f[I]  \(dqviewFormats\(dq: []\f[R]
\f[I]}\f[R]
\f[I]*/\f[R]
.EE
.SH SEE ALSO
.IP \(bu 2
\f[CR]GPUCanvasContext.configure()\f[R]
.IP \(bu 2
The WebGPU API
