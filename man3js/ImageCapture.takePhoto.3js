.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "IMAGECAPTURE.TAKEPHOTO" "3JS" "February 26, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
ImageCapture.takePhoto \- ImageCapture: takePhoto() method
.SH SYNOPSIS
The \f[B]\f[CB]takePhoto()\f[B]\f[R] method of the
\f[CR]ImageCapture\f[R] interface takes a single exposure using the
video capture device sourcing a \f[CR]MediaStreamTrack\f[R] and returns
a \f[CR]Promise\f[R] that resolves with a \f[CR]Blob\f[R] containing the
data.
.SH SYNTAX
.IP
.EX
takePhoto()
takePhoto(photoSettings)
.EE
.SS Parameters
.TP
\f[B]photoSettings\f[R] \f[I](optional)\f[R]
An object that sets options for the photo to be taken.
The available options are:
.RS
.TP
\f[B]fillLightMode\f[R]
The flash setting of the capture device, one of \f[CR]\(dqauto\(dq\f[R],
\f[CR]\(dqoff\(dq\f[R], or \f[CR]\(dqflash\(dq\f[R].
.TP
\f[B]imageHeight\f[R]
The desired image height as an integer.
The user agent selects the closest height value to this setting if it
only supports discrete heights.
.TP
\f[B]imageWidth\f[R]
The desired image width as an integer.
The user agent selects the closest width value to this setting if it
only supports discrete widths.
.TP
\f[B]redEyeReduction\f[R]
A boolean indicating whether the red\-eye reduction should be used if it
is available.
.RE
.SS Return value
A \f[CR]Promise\f[R] that resolves with a \f[CR]Blob\f[R].
.SS Exceptions
.TP
\f[B]InvalidStateError\f[R] \f[B]DOMException\f[R]
Thrown if \f[CR]readyState\f[R] property of the
\f[CR]MediaStreamTrack\f[R] passing in the constructor is not
\f[CR]live\f[R].
.TP
\f[B]UnknownError\f[R] \f[B]DOMException\f[R]
Thrown if the operation can\(cqt complete for any reason.
.SH EXAMPLES
This example is extracted from this \c
.UR https://simpl.info/imagecapture/
Simple Image Capture demo
.UE \c
\&.
It shows how to use the \f[CR]Promise\f[R] returned by
\f[CR]takePhoto()\f[R] to copy the returned \f[CR]Blob\f[R] to an
\f[CR]<img>\f[R] element.
For simplicity it does not show how to instantiate the
\f[CR]ImageCapture\f[R] object.
.IP
.EX
\f[B]let\f[R] takePhotoButton = document.querySelector(\(dqbutton#takePhoto\(dq);
\f[B]let\f[R] canvas = document.querySelector(\(dqcanvas\(dq);

takePhotoButton.onclick = takePhoto;

\f[B]function\f[R] takePhoto() {
  imageCapture
    .takePhoto()
    .then((blob) \f[B]=>\f[R] {
      console.log(\(dqTook photo:\(dq, blob);
      img.classList.remove(\(dqhidden\(dq);
      img.src = URL.createObjectURL(blob);
    })
    .catch((error) \f[B]=>\f[R] {
      console.error(\(dqtakePhoto() error: \(dq, error);
    });
}
.EE
