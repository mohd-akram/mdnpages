.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "HTMLAllCollection" "JS" "August 5, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
HTMLAllCollection \- HTMLAllCollection
.SH SYNOPSIS
\f[B]Deprecated\f[R]: This feature is no longer recommended.
.PP
The \f[B]\f[CB]HTMLAllCollection\f[B]\f[R] interface represents a
collection of \f[I]all\f[R] of the document\[cq]s elements, accessible
by index (like an array) and by the element\[cq]s \f[CR]id\f[R].
It is returned by the \f[CR]document.all\f[R] property.
.PP
\f[CR]HTMLAllCollection\f[R] has a very similar shape to
\f[CR]HTMLCollection\f[R], but there are many subtle behavior
differences \[em] for example, \f[CR]HTMLAllCollection\f[R] can be
called as a function, and its \f[CR]item()\f[R] method can be called
with a string representing an element\[cq]s \f[CR]id\f[R] or
\f[CR]name\f[R] attribute.
.SH INSTANCE PROPERTIES
.TP
\f[B]HTMLAllCollection.length\f[R] \f[I](read\-only)\f[R]
Returns the number of items in the collection.
.SH INSTANCE METHODS
.TP
\f[B]HTMLAllCollection.item()\f[R]
Returns the element located at the specified offset into the collection,
or the element with the specified value for its \f[CR]id\f[R] or
\f[CR]name\f[R] attribute.
Returns \f[CR]null\f[R] if no element is found.
.TP
\f[B]HTMLAllCollection.namedItem()\f[R]
Returns the first element in the collection whose \f[CR]id\f[R] or
\f[CR]name\f[R] attribute match the given string name, or
\f[CR]null\f[R] if no element matches.
.SH USAGE IN JAVASCRIPT
.SS Indexed access
In addition to the methods above, elements in an
\f[CR]HTMLAllCollection\f[R] can be accessed by integer indices and
string property names.
The HTML \f[CR]id\f[R] attribute may contain \f[CR]:\f[R] and
\f[CR].\f[R] as valid characters, which would necessitate using bracket
notation for property access.
\f[CR]collection[i]\f[R] is equivalent to \f[CR]collection.item(i)\f[R],
where \f[CR]i\f[R] can be an integer, a string containing an integer, or
a string representing an \f[CR]id\f[R].
.SS Calling as a function
An \f[CR]HTMLAllCollection\f[R] object is callable.
When it\[cq]s called with no arguments or with \f[CR]undefined\f[R], it
returns \f[CR]null\f[R].
Otherwise, it returns the same value as the \f[CR]item()\f[R] method
when given the same arguments.
.SS Special type conversion behavior
For historical reasons, \f[CR]document.all\f[R] is an object that in the
following ways behaves like \f[CR]undefined\f[R]:
.IP \[bu] 2
It is loosely equal to \f[CR]undefined\f[R] and \f[CR]null\f[R].
.IP \[bu] 2
It is falsy in boolean contexts.
.IP \[bu] 2
Its \f[CR]typeof\f[R] is \f[CR]\[dq]undefined\[dq]\f[R].
.PP
These special behaviors ensure that code like:
.IP
.EX
\f[B]if\f[R] (document.all) {
  \f[I]// Assume that we are in IE; provide special logic\f[R]
}
\f[I]// Assume that we are in a modern browser\f[R]
.EE
.PP
Will continue to provide modern behavior even if the code is run in a
browser that implements \f[CR]document.all\f[R] for compatibility
reasons.
.PP
However, in all other contexts, \f[CR]document.all\f[R] remains an
object.
For example:
.IP \[bu] 2
It is not strictly equal to either \f[CR]undefined\f[R] or
\f[CR]null\f[R].
.IP \[bu] 2
When used on the left\-hand side of the nullish coalescing operator
(\f[CR]??\f[R]) or the optional chaining operator (\f[CR]?.\f[R]), it
will not cause the expression to short\-circuit.
.SH SEE ALSO
.IP \[bu] 2
\f[CR]HTMLCollection\f[R]
