'\" t
.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "VALIDITYSTATE.TYPEMISMATCH" "3JS" "April 10, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
ValidityState.typeMismatch \- ValidityState: typeMismatch property
.SH SYNOPSIS
The read\-only \f[B]\f[CB]typeMismatch\f[B]\f[R] property of the
\f[CR]ValidityState\f[R] interface indicates if the value of an
\f[CR]<input>\f[R], after having been edited by the user, does not
conform to the constraints set by the element\(cqs \f[CR]type\f[R]
attribute.
.PP
If the \f[CR]type\f[R] attribute expects specific strings, such as the
\f[CR]email\f[R] and \f[CR]url\f[R] types and the value doesn\(cqt
conform to the constraints set by the type, the \f[CR]typeMismatch\f[R]
property will be true.
.PP
The \f[CR]email\f[R] input type expects one or more valid email
addresses, depending on whether the \f[CR]multiple\f[R] attribute is
present.
A valid email address includes an email prefix and a domain, with or
without a top level domain.
If the value of the email input is not an empty string, a single valid
email address, or one or more comma separated email address if the
\f[CR]multiple\f[R] attribute is present, there is a
\f[CR]typeMismatch\f[R].
.PP
The \f[CR]url\f[R] input type expects one or more valid URLs, depending
on whether the \f[CR]multiple\f[R] attribute is present.
A valid URL includes a protocol, optionally with an IP address, or an
optional subdomain, domain, and top level domain combination.
If the value of the URL input is not an empty string, a single valid
URL, or one or more comma separated URLS if the \f[CR]multiple\f[R]
attribute is present, there is a \f[CR]typeMismatch\f[R].
.PP
.TS
tab(@);
lw(23.1n) lw(10.1n) lw(36.8n).
T{
Input type
T}@T{
Value
T}@T{
Expected value
T}
_
T{
\f[CR]email\f[R]
T}@T{
\f[CR]x\(aty\f[R] or \f[CR]x\(aty.z\f[R]
T}@T{
email address, with or without TLD
T}
T{
\f[CR]url\f[R]
T}@T{
\f[CR]x:\f[R] or \f[CR]x://y.z\f[R]
T}@T{
protocol or full URL with protocol
T}
.TE
.SH VALUE
A boolean that is \f[CR]true\f[R] if the \f[CR]ValidityState\f[R] does
not conform to the constraints.
.SH EXAMPLES
.SS Type mismatch on input element
The \f[CR]typeMismatch\f[R] occurs when there is a disconnect between
the \f[CR]value\f[R] expected via the \f[CR]type\f[R] attribute and the
data that is actually present.
The \f[CR]typeMismatch\f[R] is only one of the many possible errors and
is only relevant for the \f[CR]email\f[R] and \f[CR]url\f[R] types.
When the value provided doesn\(cqt match the expected value based on the
type for other input types, you get different errors.
For example, if the \f[CR]number\f[R] input value is not a floating
point number, the \f[CR]badInput\f[R] is \f[CR]true\f[R].
If the email is \f[CR]required\f[R] but is empty, the
\f[CR]valueMissing\f[R] will be \f[CR]true\f[R].
.IP
.EX
<\f[B]pre\f[R] id=\(dqlog\(dq>Validation logged here...</\f[B]pre\f[R]>
<\f[B]p\f[R]>
  <\f[B]label\f[R]>
    Enter an email address:
    <\f[B]input\f[R] id=\(dqemailInput\(dq type=\(dqemail\(dq value=\(dqexample.com\(dq required />
  </\f[B]label\f[R]>
</\f[B]p\f[R]>
.EE
.IP
.EX
input\f[BI]:invalid\f[R] {
  \f[B]border\f[R]: red solid 3px;
}
.EE
.IP
.EX
\f[B]const\f[R] emailInput = document.getElementById(\(dqemailInput\(dq);
\f[B]const\f[R] logElement = document.getElementById(\(dqlog\(dq);

\f[B]function\f[R] log(text) {
  logElement.innerText = text;
}

emailInput.addEventListener(\(dqinput\(dq, () \f[B]=>\f[R] {
  emailInput.reportValidity();
  \f[B]if\f[R] (emailInput.validity.valid) {
    log(\(dqInput OK\&...\(dq);
  } \f[B]else\f[R] \f[B]if\f[R] (emailInput.validity.typeMismatch) {
    log(\(dqInput is not an email.\(dq);
  } \f[B]else\f[R] {
    log(\(dqValidation failed: \(dq + emailInput.validationMessage);
  }
});
.EE
.SH SEE ALSO
.IP \(bu 2
ValidityState badInput, valid, customError properties.
.IP \(bu 2
Constraint validation
.IP \(bu 2
Forms: Data form validation
.IP \(bu 2
Regular Expressions
