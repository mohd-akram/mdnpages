.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "WeakRef.deref" "JS" "August 25, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
WeakRef.deref \- WeakRef.prototype.deref()
.SH SYNOPSIS
The \f[B]\f[CB]deref()\f[B]\f[R] method of \f[CR]WeakRef\f[R] instances
returns this \f[CR]WeakRef\f[R]\[cq]s target value, or
\f[CR]undefined\f[R] if the target value has been garbage\-collected.
.SH SYNTAX
.IP
.EX
deref()
.EE
.SS Parameters
None.
.SS Return value
The target value of the WeakRef, which is either an object or a
non\-registered symbol.
Returns \f[CR]undefined\f[R] if the value has been garbage\-collected.
.SH DESCRIPTION
See the Notes on WeakRefs section of the \f[CR]WeakRef\f[R] page for
some important notes.
.SH EXAMPLES
.SS Using deref()
See the Examples section of the \f[CR]WeakRef\f[R] page for the complete
example.
.IP
.EX
\f[B]const\f[R] tick = () \f[B]=>\f[R] {
  \f[I]// Get the element from the weak reference, if it still exists\f[R]
  \f[B]const\f[R] element = \f[B]this\f[R].ref.deref();
  \f[B]if\f[R] (element) {
    element.textContent = ++\f[B]this\f[R].count;
  } \f[B]else\f[R] {
    \f[I]// The element doesn\[aq]t exist anymore\f[R]
    console.log(\[dq]The element is gone.\[dq]);
    \f[B]this\f[R].stop();
    \f[B]this\f[R].ref = \f[B]null\f[R];
  }
};
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]WeakRef\f[R]
