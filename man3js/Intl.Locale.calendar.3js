.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "Intl.Locale.calendar" "JS" "August 21, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Intl.Locale.calendar \- Intl.Locale.prototype.calendar
.SH SYNOPSIS
The \f[B]\f[CB]calendar\f[B]\f[R] accessor property of
\f[CR]Intl.Locale\f[R] instances returns the calendar type for this
locale.
.SH DESCRIPTION
While most of the world uses the Gregorian calendar, there are several
regional calendar eras used around the world.
The \f[CR]calendar\f[R] property\[cq]s value is set at construction
time, either through the \f[CR]ca\f[R] key of the locale identifier or
through the \f[CR]calendar\f[R] option of the \f[CR]Intl.Locale()\f[R]
constructor.
The latter takes priority if they are both present; and if neither is
present, the property has value \f[CR]undefined\f[R].
.PP
For a list of supported calendar types, see
\f[CR]Intl.Locale.prototype.getCalendars()\f[R].
.PP
The set accessor of \f[CR]calendar\f[R] is \f[CR]undefined\f[R].
You cannot change this property directly.
.SH EXAMPLES
Like other locale subtags, the calendar type can be added to the
\f[CR]Intl.Locale\f[R] object via the locale string, or a configuration
object argument to the constructor.
.SS Adding a calendar type via the locale string
In the \c
.UR https://www.unicode.org/reports/tr35/
Unicode locale string spec
.UE \c
, calendar era types are locale key \[lq]extension subtags\[rq].
These subtags add additional data about the locale, and are added to
locale identifiers by using the \f[CR]\-u\f[R] extension.
Thus, the calendar era type can be added to the initial locale
identifier string that is passed into the \f[CR]Intl.Locale()\f[R]
constructor.
To add the calendar type, first add the \f[CR]\-u\f[R] extension to the
string.
Next, add the \f[CR]\-ca\f[R] extension to indicate that you are adding
a calendar type.
Finally, add the calendar era type to the string.
.IP
.EX
\f[B]const\f[R] locale = \f[B]new\f[R] Intl.Locale(\[dq]fr\-FR\-u\-ca\-buddhist\[dq]);
console.log(locale.calendar); \f[I]// Prints \[dq]buddhist\[dq]\f[R]
.EE
.SS Adding a calendar type via the configuration object argument
The \f[CR]Intl.Locale()\f[R] constructor has an optional configuration
object argument, which can contain any of several extension types,
including calendars.
Set the \f[CR]calendar\f[R] property of the configuration object to your
desired calendar era, and then pass it into the constructor.
.IP
.EX
\f[B]const\f[R] locale = \f[B]new\f[R] Intl.Locale(\[dq]fr\-FR\[dq], { calendar: \[dq]buddhist\[dq] });
console.log(locale.calendar); \f[I]// \[dq]buddhist\[dq]\f[R]
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]Intl.Locale\f[R]
.IP \[bu] 2
\f[CR]Intl.Locale.prototype.getCalendars()\f[R]
.IP \[bu] 2
\c
.UR https://www.unicode.org/reports/tr35/#UnicodeCalendarIdentifier
Unicode Calendar Identifier
.UE \c
\ in the Unicode locale data markup language spec
