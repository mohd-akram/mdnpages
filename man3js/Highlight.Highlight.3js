.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "Highlight.Highlight" "JS" "December 2, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Highlight.Highlight \- Highlight: Highlight() constructor
.SH SYNOPSIS
The \f[B]\f[CB]Highlight()\f[B]\f[R] constructor returns a newly created
\f[CR]Highlight\f[R] object which can hold a collection of
\f[CR]Range\f[R] objects to be styled using the CSS Custom Highlight
API.
.SH SYNTAX
.IP
.EX
new Highlight()
new Highlight(range)
new Highlight(range1, range2, /* \&..., */ rangeN)
.EE
.SS Parameters
.TP
\f[B]range1, /* \&..., */ rangeN\f[R] \f[I](optional)\f[R]
One ore more initial \f[CR]Range\f[R] objects to add in the new
highlight.
.SS Return value
A new \f[CR]Highlight\f[R] object.
.SH EXAMPLES
The example code below demonstrates how to create an empty highlight
object, and then add ranges to it:
.IP
.EX
\f[B]const\f[R] highlight = \f[B]new\f[R] Highlight();
highlight.add(range1);
highlight.add(range2);
.EE
.PP
The example code below demonstrates how to create a new highlight object
and add ranges to it during instantiation:
.IP
.EX
\f[B]const\f[R] highlight = \f[B]new\f[R] Highlight(range1, range2);
.EE
.SH SEE ALSO
.IP \[bu] 2
The CSS Custom Highlight API
.IP \[bu] 2
\c
.UR https://css-tricks.com/css-custom-highlight-api-early-look/
CSS Custom Highlight API: The Future of Highlighting Text Ranges on the
Web
.UE \c
