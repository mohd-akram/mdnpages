'\" t
.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "SYMBOL.TOPRIMITIVE" "3JS" "March 6, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Symbol.toPrimitive \- Symbol.toPrimitive
.SH SYNOPSIS
The \f[B]\f[CB]Symbol.toPrimitive\f[B]\f[R] static data property
represents the well\-known symbol \f[CR]Symbol.toPrimitive\f[R].
All type coercion algorithms look up this symbol on objects for the
method that accepts a preferred type and returns a primitive
representation of the object, before falling back to using the
object\(cqs \f[CR]valueOf()\f[R] and \f[CR]toString()\f[R] methods.
.IP
.EX
\f[B]const\f[R] object1 = {
  [Symbol.toPrimitive](hint) {
    \f[B]if\f[R] (hint === \(dqnumber\(dq) {
      \f[B]return\f[R] 42;
    }
    \f[B]return\f[R] \f[B]null\f[R];
  },
};

console.log(+object1);
\f[I]// Expected output: 42\f[R]
.EE
.SH VALUE
The well\-known symbol \f[CR]Symbol.toPrimitive\f[R].
.PP
.TS
tab(@);
l l.
T{
Writable
T}@T{
no
T}
T{
Enumerable
T}@T{
no
T}
T{
Configurable
T}@T{
no
T}
.TE
.SH DESCRIPTION
With the help of the \f[CR]Symbol.toPrimitive\f[R] property (used as a
function value), an object can be converted to a primitive value.
The function is called with a string argument \f[CR]hint\f[R], which
specifies the preferred type of the result primitive value.
The \f[CR]hint\f[R] argument can be one of \f[CR]\(dqnumber\(dq\f[R],
\f[CR]\(dqstring\(dq\f[R], and \f[CR]\(dqdefault\(dq\f[R].
.PP
The \f[CR]\(dqnumber\(dq\f[R] hint is used by numeric coercion
algorithms.
The \f[CR]\(dqstring\(dq\f[R] hint is used by the string coercion
algorithm.
The \f[CR]\(dqdefault\(dq\f[R] hint is used by the primitive coercion
algorithm.
The \f[CR]hint\f[R] only acts as a weak signal of preference, and the
implementation is free to ignore it (as
\f[CR]Symbol.prototype[Symbol.toPrimitive]()\f[R] does).
The language does not enforce alignment between the \f[CR]hint\f[R] and
the result type, although \f[CR][Symbol.toPrimitive]()\f[R] must return
a primitive, or a \f[CR]TypeError\f[R] is thrown.
.PP
Objects without the \f[CR][Symbol.toPrimitive]\f[R] property are
converted to primitives by calling the \f[CR]valueOf()\f[R] and
\f[CR]toString()\f[R] methods in different orders, which is explained in
more detail in the type coercion section.
\f[CR][Symbol.toPrimitive]()\f[R] allows full control over the primitive
conversion process.
For example, \f[CR]Date.prototype[Symbol.toPrimitive]()\f[R] treats
\f[CR]\(dqdefault\(dq\f[R] as if it\(cqs \f[CR]\(dqstring\(dq\f[R] and
calls \f[CR]toString()\f[R] instead of \f[CR]valueOf()\f[R].
\f[CR]Symbol.prototype[Symbol.toPrimitive]()\f[R] ignores the hint and
always returns a symbol, which means even in string contexts,
\f[CR]Symbol.prototype.toString()\f[R] won\(cqt be called, and
\f[CR]Symbol\f[R] objects must always be explicitly converted to strings
through \f[CR]String()\f[R].
.SH EXAMPLES
.SS Modifying primitive values converted from an object
Following example describes how \f[CR]Symbol.toPrimitive\f[R] property
can modify the primitive value converted from an object.
.IP
.EX
\f[I]// An object without Symbol.toPrimitive property.\f[R]
\f[B]const\f[R] obj1 = {};
console.log(+obj1); \f[I]// NaN\f[R]
console.log(\(ga${obj1}\(ga); \f[I]// \(dq[object Object]\(dq\f[R]
console.log(obj1 + \(dq\(dq); \f[I]// \(dq[object Object]\(dq\f[R]

\f[I]// An object with Symbol.toPrimitive property.\f[R]
\f[B]const\f[R] obj2 = {
  [Symbol.toPrimitive](hint) {
    \f[B]if\f[R] (hint === \(dqnumber\(dq) {
      \f[B]return\f[R] 10;
    }
    \f[B]if\f[R] (hint === \(dqstring\(dq) {
      \f[B]return\f[R] \(dqhello\(dq;
    }
    \f[B]return\f[R] \f[B]true\f[R];
  },
};
console.log(+obj2); \f[I]// 10        \(em hint is \(dqnumber\(dq\f[R]
console.log(\(ga${obj2}\(ga); \f[I]// \(dqhello\(dq   \(em hint is \(dqstring\(dq\f[R]
console.log(obj2 + \(dq\(dq); \f[I]// \(dqtrue\(dq    \(em hint is \(dqdefault\(dq\f[R]
.EE
.SH SEE ALSO
.IP \(bu 2
\c
.UR https://github.com/zloirock/core-js#ecmascript-symbol
Polyfill of \f[CR]Symbol.toPrimitive\f[R] in \f[CR]core\-js\f[R]
.UE \c
.IP \(bu 2
\f[CR]Date.prototype[Symbol.toPrimitive]()\f[R]
.IP \(bu 2
\f[CR]Symbol.prototype[Symbol.toPrimitive]()\f[R]
.IP \(bu 2
\f[CR]Object.prototype.toString()\f[R]
.IP \(bu 2
\f[CR]Object.prototype.valueOf()\f[R]
