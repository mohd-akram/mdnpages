.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "Element.matches" "JS" "July 22, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Element.matches \- Element: matches() method
.SH SYNOPSIS
The \f[B]\f[CB]matches()\f[B]\f[R] method of the \f[CR]Element\f[R]
interface tests whether the element would be selected by the specified
CSS selector.
.SH SYNTAX
.IP
.EX
matches(selectors)
.EE
.SS Parameters
.TP
\f[B]selectors\f[R]
A string containing valid CSS selectors to test the \f[CR]Element\f[R]
against.
.SS Return value
\f[CR]true\f[R] if the \f[CR]Element\f[R] matches the
\f[CR]selectors\f[R].
Otherwise, \f[CR]false\f[R].
.SS Exceptions
.TP
\f[B]SyntaxError\f[R] \f[B]DOMException\f[R]
Thrown if \f[CR]selectors\f[R] cannot be parsed as a CSS selector list.
.SH EXAMPLES
.SS HTML
.IP
.EX
<\f[B]ul\f[R] id=\[dq]birds\[dq]>
  <\f[B]li\f[R]>Orange\-winged parrot</\f[B]li\f[R]>
  <\f[B]li\f[R] class=\[dq]endangered\[dq]>Philippine eagle</\f[B]li\f[R]>
  <\f[B]li\f[R]>Great white pelican</\f[B]li\f[R]>
</\f[B]ul\f[R]>
.EE
.SS JavaScript
.IP
.EX
\f[B]const\f[R] birds = document.querySelectorAll(\[dq]li\[dq]);

\f[B]for\f[R] (\f[B]const\f[R] bird \f[B]of\f[R] birds) {
  \f[B]if\f[R] (bird.matches(\[dq].endangered\[dq])) {
    console.log(\[ga]The ${bird.textContent} is endangered!\[ga]);
  }
}
.EE
.PP
This will log \[lq]The Philippine eagle is endangered!\[rq] to the
console, since the element has indeed a \f[CR]class\f[R] attribute with
value \f[CR]endangered\f[R].
.SH SEE ALSO
.IP \[bu] 2
CSS selectors module
.IP \[bu] 2
Other \f[CR]Element\f[R] methods that take selectors:
\f[CR]Element.querySelector()\f[R],
\f[CR]Element.querySelectorAll()\f[R], and \f[CR]element.closest()\f[R].
