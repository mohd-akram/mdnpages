.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "CanvasRenderingContext2D.fillRect" "JS" "April 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
CanvasRenderingContext2D.fillRect \- CanvasRenderingContext2D:
fillRect() method
.SH SYNOPSIS
The \f[B]\f[CB]CanvasRenderingContext2D.fillRect()\f[B]\f[R] method of
the Canvas 2D API draws a rectangle that is filled according to the
current \f[CR]fillStyle\f[R].
.PP
This method draws directly to the canvas without modifying the current
path, so any subsequent \f[CR]fill()\f[R] or \f[CR]stroke()\f[R] calls
will have no effect on it.
.SH SYNTAX
.IP
.EX
fillRect(x, y, width, height)
.EE
.PP
The \f[CR]fillRect()\f[R] method draws a filled rectangle whose starting
point is at \f[CR](x, y)\f[R] and whose size is specified by
\f[CR]width\f[R] and \f[CR]height\f[R].
The fill style is determined by the current \f[CR]fillStyle\f[R]
attribute.
.SS Parameters
.TP
\f[B]x\f[R]
The x\-axis coordinate of the rectangle\[cq]s starting point.
.TP
\f[B]y\f[R]
The y\-axis coordinate of the rectangle\[cq]s starting point.
.TP
\f[B]width\f[R]
The rectangle\[cq]s width.
Positive values are to the right, and negative to the left.
.TP
\f[B]height\f[R]
The rectangle\[cq]s height.
Positive values are down, and negative are up.
.SS Return value
None (\f[CR]undefined\f[R]).
.SH EXAMPLES
.SS A simple filled rectangle
This example draws a filled green rectangle using the
\f[CR]fillRect()\f[R] method.
.SS HTML
.IP
.EX
<\f[B]canvas\f[R] id=\[dq]canvas\[dq]></\f[B]canvas\f[R]>
.EE
.SS JavaScript
The rectangle\[cq]s top\-left corner is at (20, 10).
It has a width of 150 and a height of 100.
.IP
.EX
\f[B]const\f[R] canvas = document.getElementById(\[dq]canvas\[dq]);
\f[B]const\f[R] ctx = canvas.getContext(\[dq]2d\[dq]);
ctx.fillStyle = \[dq]green\[dq];
ctx.fillRect(20, 10, 150, 100);
.EE
.SS Result
.SS Filling the whole canvas
This code snippet fills the entire canvas with a rectangle.
This is often useful for creating a background, on top of which other
things may then be drawn.
To achieve this, the dimensions of the rectangle are set to equal the
\f[CR]<canvas>\f[R] element\[cq]s \f[CR]width\f[R] and \f[CR]height\f[R]
attributes.
.IP
.EX
\f[B]const\f[R] canvas = document.getElementById(\[dq]canvas\[dq]);
\f[B]const\f[R] ctx = canvas.getContext(\[dq]2d\[dq]);
ctx.fillRect(0, 0, canvas.width, canvas.height);
.EE
.SH SEE ALSO
.IP \[bu] 2
The interface defining this method: \f[CR]CanvasRenderingContext2D\f[R]
.IP \[bu] 2
\f[CR]CanvasRenderingContext2D.fillStyle\f[R]
.IP \[bu] 2
\f[CR]CanvasRenderingContext2D.clearRect()\f[R]
.IP \[bu] 2
\f[CR]CanvasRenderingContext2D.strokeRect()\f[R]
