.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "BASEAUDIOCONTEXT.CREATEDELAY" "3JS" "November 21, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
BaseAudioContext.createDelay \- BaseAudioContext: createDelay() method
.SH SYNOPSIS
The \f[CR]createDelay()\f[R] method of the \f[CR]BaseAudioContext\f[R]
Interface is used to create a \f[CR]DelayNode\f[R], which is used to
delay the incoming audio signal by a certain amount of time.
.RS
.PP
\f[B]Note:\f[R] The \f[CR]DelayNode()\f[R] constructor is the
recommended way to create a \f[CR]DelayNode\f[R]; see Creating an
AudioNode.
.RE
.SH SYNTAX
.IP
.EX
createDelay(maxDelayTime)
.EE
.SS Parameters
.TP
\f[B]maxDelayTime\f[R] \f[I](optional)\f[R]
The maximum amount of time, in seconds, that the audio signal can be
delayed by.
Must be less than 180 seconds, and defaults to 1 second if not
specified.
.SS Return value
A \f[CR]DelayNode\f[R].
The default \f[CR]DelayNode.delayTime\f[R] is 0 seconds.
.SH EXAMPLES
We have created an example that allows you to play three different
samples on a constant loop \(em see \c
.UR https://chrisdavidmills.github.io/create-delay/
create\-delay
.UE \c
\ (you can also \c
.UR https://github.com/chrisdavidmills/create-delay
view the source code
.UE \c
).
If you just press the play buttons, the loops will start immediately; if
you slide the sliders up to the right, then press the play buttons, a
delay will be introduced, so the looping sounds don\(cqt start playing
for a short amount of time.
.IP
.EX
\f[B]const\f[R] audioCtx = \f[B]new\f[R] AudioContext();

\f[B]const\f[R] synthDelay = audioCtx.createDelay(5.0);

\f[I]// \&...\f[R]

\f[B]let\f[R] synthSource;

playSynth.onclick = () \f[B]=>\f[R] {
  synthSource = audioCtx.createBufferSource();
  synthSource.buffer = buffers[2];
  synthSource.loop = \f[B]true\f[R];
  synthSource.start();
  synthSource.connect(synthDelay);
  synthDelay.connect(destination);
  \f[B]this\f[R].setAttribute(\(dqdisabled\(dq, \(dqdisabled\(dq);
};

stopSynth.onclick = () \f[B]=>\f[R] {
  synthSource.disconnect(synthDelay);
  synthDelay.disconnect(destination);
  synthSource.stop();
  playSynth.removeAttribute(\(dqdisabled\(dq);
};

\f[I]// \&...\f[R]

\f[B]let\f[R] delay1;
rangeSynth.oninput = () \f[B]=>\f[R] {
  delay1 = rangeSynth.value;
  synthDelay.delayTime.setValueAtTime(delay1, audioCtx.currentTime);
};
.EE
.SH SEE ALSO
.IP \(bu 2
Using the Web Audio API
