.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "INTL.RELATIVETIMEFORMAT.FORMAT" "3JS" "March 14, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Intl.RelativeTimeFormat.format \-
Intl.RelativeTimeFormat.prototype.format()
.SH SYNOPSIS
The \f[B]\f[CB]format()\f[B]\f[R] method of
\f[CR]Intl.RelativeTimeFormat\f[R] instances formats a \f[CR]value\f[R]
and \f[CR]unit\f[R] according to the locale and formatting options of
this \f[CR]Intl.RelativeTimeFormat\f[R] object.
.IP
.EX
\f[B]const\f[R] rtf1 = \f[B]new\f[R] Intl.RelativeTimeFormat(\(dqen\(dq, { style: \(dqshort\(dq });

console.log(rtf1.format(3, \(dqquarter\(dq));
\f[I]// Expected output: \(dqin 3 qtrs.\(dq\f[R]

console.log(rtf1.format(\-1, \(dqday\(dq));
\f[I]// Expected output: \(dq1 day ago\(dq\f[R]

console.log(rtf1.format(10, \(dqseconds\(dq));
\f[I]// Expected output: \(dqin 10 sec.\(dq\f[R]
.EE
.SH SYNTAX
.IP
.EX
format(value, unit)
.EE
.SS Parameters
.TP
\f[B]value\f[R]
Numeric value to use in the internationalized relative time message.
.TP
\f[B]unit\f[R]
Unit to use in the relative time internationalized message.
Possible values are: \f[CR]\(dqyear\(dq\f[R],
\f[CR]\(dqquarter\(dq\f[R], \f[CR]\(dqmonth\(dq\f[R],
\f[CR]\(dqweek\(dq\f[R], \f[CR]\(dqday\(dq\f[R],
\f[CR]\(dqhour\(dq\f[R], \f[CR]\(dqminute\(dq\f[R],
\f[CR]\(dqsecond\(dq\f[R].
Plural forms are also permitted.
.SS Return value
A string representing the given \f[CR]value\f[R] and \f[CR]unit\f[R]
formatted according to the locale and formatting options of this
\f[CR]Intl.RelativeTimeFormat\f[R] object.
.RS
.PP
\f[B]Note:\f[R] Most of the time, the formatting returned by
\f[CR]format()\f[R] is consistent.
However, the output may vary between implementations, even within the
same locale \(em output variations are by design and allowed by the
specification.
It may also not be what you expect.
For example, the string may use non\-breaking spaces or be surrounded by
bidirectional control characters.
You should not compare the results of \f[CR]format()\f[R] to hardcoded
constants.
.RE
.SH EXAMPLES
.SS Basic format usage
The following example shows how to create a relative time formatter
using the English language.
.IP
.EX
\f[I]// Create a relative time formatter in your locale\f[R]
\f[I]// with default values explicitly passed in.\f[R]
\f[B]const\f[R] rtf = \f[B]new\f[R] Intl.RelativeTimeFormat(\(dqen\(dq, {
  localeMatcher: \(dqbest fit\(dq, \f[I]// other values: \(dqlookup\(dq\f[R]
  numeric: \(dqalways\(dq, \f[I]// other values: \(dqauto\(dq\f[R]
  style: \(dqlong\(dq, \f[I]// other values: \(dqshort\(dq or \(dqnarrow\(dq\f[R]
});

\f[I]// Format relative time using negative value (\-1).\f[R]
rtf.format(\-1, \(dqday\(dq); \f[I]// \(dq1 day ago\(dq\f[R]

\f[I]// Format relative time using positive value (1).\f[R]
rtf.format(1, \(dqday\(dq); \f[I]// \(dqin 1 day\(dq\f[R]
.EE
.SS Using the auto option
If \f[CR]numeric:auto\f[R] option is passed, it will produce the string
\f[CR]yesterday\f[R], \f[CR]today\f[R], or \f[CR]tomorrow\f[R] instead
of \f[CR]1 day ago\f[R], \f[CR]in 0 days\f[R], or \f[CR]in 1 day\f[R].
This allows to not always have to use numeric values in the output.
.IP
.EX
\f[I]// Create a relative time formatter in your locale\f[R]
\f[I]// with numeric: \(dqauto\(dq option value passed in.\f[R]
\f[B]const\f[R] rtf = \f[B]new\f[R] Intl.RelativeTimeFormat(\(dqen\(dq, { numeric: \(dqauto\(dq });

\f[I]// Format relative time using negative value (\-1).\f[R]
rtf.format(\-1, \(dqday\(dq); \f[I]// \(dqyesterday\(dq\f[R]

rtf.format(0, \(dqday\(dq); \f[I]// \(dqtoday\(dq\f[R]

\f[I]// Format relative time using positive day unit (1).\f[R]
rtf.format(1, \(dqday\(dq); \f[I]// \(dqtomorrow\(dq\f[R]
.EE
.SH SEE ALSO
.IP \(bu 2
\f[CR]Intl.RelativeTimeFormat\f[R]
