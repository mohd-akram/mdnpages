.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "WINDOW.PROMPT" "3JS" "February 20, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Window.prompt \- Window: prompt() method
.SH SYNOPSIS
\f[CR]window.prompt()\f[R] instructs the browser to display a dialog
with an optional message prompting the user to input some text, and to
wait until the user either submits the text or cancels the dialog.
.PP
Under some conditions (when the user switches tabs, for example) the
browser may not display a dialog, or may not wait for the user to submit
text or to cancel the dialog.
.SH SYNTAX
.IP
.EX
prompt()
prompt(message)
prompt(message, defaultValue)
.EE
.SS Parameters
.TP
\f[B]message\f[R] \f[I](optional)\f[R]
A string of text to display to the user.
Can be omitted if there is nothing to show in the prompt window.
.TP
\f[B]defaultValue\f[R] \f[I](optional)\f[R]
A string containing the default value displayed in the text input field.
.SS Return value
A string containing the text entered by the user, or \f[CR]null\f[R].
.SH EXAMPLES
.SS Using a prompt with a message and default value
The following example shows how to check the returned value of a prompt.
When the user clicks the OK button, text entered in the input field is
returned.
If the user clicks OK without entering any text, an empty string is
returned.
If the user clicks the Cancel button, this function returns
\f[CR]null\f[R].
.IP
.EX
<button id=\(dqsignButton\(dq>Check star sign</button>
<pre id=\(dqlog\(dq></pre>
.EE
.IP
.EX
const signButton = document.querySelector(\(dq#signButton\(dq);
const log = document.querySelector(\(dq#log\(dq);

signButton.addEventListener(\(dqclick\(dq, () => {
  let sign = prompt(\(dqWhat\(aqs your sign?\(dq);

  if (sign === null) {
    log.innerText = \(dqOK, maybe next time.\(dq;
  } else if (sign.toLowerCase() === \(dq\(dq) {
    log.innerText = \(dqDon\(aqt be shy, enter your sign!\(dq;
  } else if (sign.toLowerCase() === \(dqscorpio\(dq) {
    log.innerText = \(dqWow! I\(aqm a Scorpio too!\(dq;
  } else {
    log.innerText = \(ga${sign} is my favorite!\(ga;
  }
});
.EE
.SS Prompt messages and default values
There are multiple ways to use a prompt, using \f[CR]prompt\f[R],
\f[CR]window.prompt\f[R], and providing a message and default values:
.IP
.EX
\f[I]// open a blank prompt window\f[R]
sign = prompt();
\f[I]// open a blank prompt window\f[R]
sign = window.prompt();
\f[I]// open a prompt with the text \(dqAre you feeling lucky\(dq\f[R]
sign = window.prompt(\(dqAre you feeling lucky\(dq);
\f[I]// open a prompt with the text \(dqAre you feeling lucky\(dq and \(dqsure\(dq as the default value\f[R]
sign = prompt(\(dqAre you feeling lucky\(dq, \(dqsure\(dq);
.EE
.SH NOTES
Dialog boxes are modal windows \(em they prevent the user from accessing
the rest of the program\(cqs interface until the dialog box is closed.
For this reason, you should not overuse any function that creates a
dialog box or a modal window.
Alternatively, a \f[CR]<dialog>\f[R] element can be used for
confirmations.
.PP
A prompt dialog contains a single\-line textbox, a Cancel button, and an
OK button, and returns the (possibly empty) text the user entered into
that textbox.
The result is a string, which means you should sometimes cast the value
given by the user.
For example, if their answer should be a Number, you should cast the
value to Number.
.IP
.EX
\f[B]const\f[R] aNumber = Number(window.prompt(\(dqType a number\(dq, \(dq\(dq));
.EE
.SH SEE ALSO
.IP \(bu 2
\f[CR]<dialog>\f[R] element
.IP \(bu 2
\f[CR]alert\f[R]
.IP \(bu 2
\f[CR]confirm\f[R]
.IP \(bu 2
\c
.UR https://alistapart.com/article/neveruseawarning/
Never Use a Warning When you Mean Undo
.UE \c
\ on A List Apart (2017)
