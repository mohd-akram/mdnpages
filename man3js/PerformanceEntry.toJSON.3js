.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "PerformanceEntry.toJSON" "JS" "April 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
PerformanceEntry.toJSON \- PerformanceEntry: toJSON() method
.SH SYNOPSIS
The \f[B]\f[CB]toJSON()\f[B]\f[R] method is a serializer; it returns a
JSON representation of the \f[CR]PerformanceEntry\f[R] object.
.SH SYNTAX
.IP
.EX
toJSON()
.EE
.SS Parameters
None.
.SS Return value
A \f[CR]JSON\f[R] object that is the serialization of the
\f[CR]PerformanceEntry\f[R] object.
.SH EXAMPLES
.SS Using the toJSON method
In this example, calling \f[CR]entry.toJSON()\f[R] returns a JSON
representation of the \f[CR]PerformanceMark\f[R] object.
.IP
.EX
performance.mark(\[dq]debug\-marker\[dq], {
  detail: \[dq]debugging\-marker\-123\[dq],
});

\f[B]const\f[R] observer = \f[B]new\f[R] PerformanceObserver((list) \f[B]=>\f[R] {
  list.getEntries().forEach((entry) \f[B]=>\f[R] {
    console.log(entry.toJSON());
  });
});

observer.observe({ entryTypes: [\[dq]mark\[dq]] });
.EE
.PP
This would log a JSON object like so:
.IP
.EX
{
  \[dq]name\[dq]: \[dq]debug\-marker\[dq],
  \[dq]entryType\[dq]: \[dq]mark\[dq],
  \[dq]startTime\[dq]: 158361,
  \[dq]duration\[dq]: 0
}
.EE
.PP
Note that it doesn\[cq]t contain \f[CR]PerformanceMark\f[R]\[cq]s
\f[CR]detail\f[R] property.
.PP
To get a JSON string, you can use \f[CR]JSON.stringify(entry)\f[R]
directly; it will call \f[CR]toJSON()\f[R] automatically.
.SH SEE ALSO
.IP \[bu] 2
\f[CR]JSON\f[R]
