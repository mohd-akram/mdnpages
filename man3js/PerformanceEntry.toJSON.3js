.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "PERFORMANCEENTRY.TOJSON" "3JS" "October 12, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
PerformanceEntry.toJSON \- PerformanceEntry: toJSON() method
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]toJSON()\f[B]\f[R] method is a serializer; it returns a
JSON representation of the \f[CR]PerformanceEntry\f[R] object.
.SH SYNTAX
.IP
.EX
toJSON()
.EE
.SS Parameters
None.
.SS Return value
A \f[CR]JSON\f[R] object that is the serialization of the
\f[CR]PerformanceEntry\f[R] object.
.SH EXAMPLES
.SS Using the toJSON method
In this example, calling \f[CR]entry.toJSON()\f[R] returns a JSON
representation of the \f[CR]PerformanceMark\f[R] object.
.IP
.EX
performance.mark(\(dqdebug\-marker\(dq, {
  detail: \(dqdebugging\-marker\-123\(dq,
});

\f[B]const\f[R] observer = \f[B]new\f[R] PerformanceObserver((list) \f[B]=>\f[R] {
  list.getEntries().forEach((entry) \f[B]=>\f[R] {
    console.log(entry.toJSON());
  });
});

observer.observe({ entryTypes: [\(dqmark\(dq] });
.EE
.PP
This would log a JSON object like so:
.IP
.EX
{
  \(dqname\(dq: \(dqdebug\-marker\(dq,
  \(dqentryType\(dq: \(dqmark\(dq,
  \(dqstartTime\(dq: 158361,
  \(dqduration\(dq: 0
}
.EE
.PP
Note that it doesn\(cqt contain \f[CR]PerformanceMark\f[R]\(cqs
\f[CR]detail\f[R] property.
.PP
To get a JSON string, you can use \f[CR]JSON.stringify(entry)\f[R]
directly; it will call \f[CR]toJSON()\f[R] automatically.
.SH SEE ALSO
.IP \(bu 2
\f[CR]JSON\f[R]
