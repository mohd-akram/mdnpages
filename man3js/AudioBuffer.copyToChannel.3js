.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "AudioBuffer.copyToChannel" "JS" "April 6, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
AudioBuffer.copyToChannel \- AudioBuffer: copyToChannel() method
.SH SYNOPSIS
The \f[CR]copyToChannel()\f[R] method of the \f[CR]AudioBuffer\f[R]
interface copies the samples to the specified channel of the
\f[CR]AudioBuffer\f[R], from the source array.
.SH SYNTAX
.IP
.EX
copyToChannel(source, channelNumber)
copyToChannel(source, channelNumber, startInChannel)
.EE
.SS Parameters
.TP
\f[B]source\f[R]
A \f[CR]Float32Array\f[R] that the channel data will be copied from.
.TP
\f[B]channelNumber\f[R]
The channel number of the current \f[CR]AudioBuffer\f[R] to copy the
channel data to.
If \f[I]channelNumber\f[R] is greater than or equal to
\f[CR]AudioBuffer.numberOfChannels\f[R], an \f[CR]INDEX_SIZE_ERR\f[R]
will be thrown.
.TP
\f[B]startInChannel\f[R] \f[I](optional)\f[R]
An optional offset to copy the data to.
If \f[I]startInChannel\f[R] is greater than
\f[CR]AudioBuffer.length\f[R], an \f[CR]INDEX_SIZE_ERR\f[R] will be
thrown.
.SS Return value
None (\f[CR]undefined\f[R]).
.SH EXAMPLES
.IP
.EX
\f[B]const\f[R] myArrayBuffer = audioCtx.createBuffer(2, frameCount, audioCtx.sampleRate);
\f[B]const\f[R] anotherArray = \f[B]new\f[R] Float32Array();
\f[I]// Copy channel data from second channel of myArrayBuffer.\f[R]
myArrayBuffer.copyFromChannel(anotherArray, 1, 0);
\f[I]// Copy data from anotherArray to first channel of myArrayBuffer. Both channels have the same data now.\f[R]
myArrayBuffer.copyToChannel(anotherArray, 0, 0);
.EE
.SH SEE ALSO
.IP \[bu] 2
Using the Web Audio API
