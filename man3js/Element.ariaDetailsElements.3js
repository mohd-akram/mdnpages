.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "ELEMENT.ARIADETAILSELEMENTS" "3JS" "May 3, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Element.ariaDetailsElements \- Element: ariaDetailsElements property
.SH SYNOPSIS
The \f[B]\f[CB]ariaDetailsElements\f[B]\f[R] property of the
\f[CR]Element\f[R] interface is an array containing the element (or
elements) that provide an accessible details for the element it is
applied to.
The accessible details are similar to the accessible description (see
\f[CR]ariaDescribedByElements\f[R]), but provides more verbose
information.
.PP
The \f[CR]aria\-details\f[R] topic contains additional information about
how the attribute and property should be used.
.SH VALUE
An array of subclasses of \f[CR]HTMLElement\f[R].
The inner text of these elements can be joined with spaces to get the
accessible details.
.PP
When read, the returned array is a static and read\-only.
When written, the assigned array is copied: subsequent changes to the
array do not affect the value of the property.
.SH DESCRIPTION
The property is a flexible alternative to using the
\f[CR]aria\-details\f[R] attribute to set the accessible details
information.
Unlike \f[CR]aria\-details\f[R], the elements assigned to this property
do not have to have an \f[CR]id\f[R] attribute.
.PP
The property reflects the element\(cqs \f[CR]aria\-details\f[R]
attribute when it is defined, but only for listed reference
\f[CR]id\f[R] values that match valid in\-scope elements.
If the property is set, then the corresponding attribute is cleared.
For more information about reflected element references and scope see
Reflected element references in the \f[I]Reflected attributes\f[R]
guide.
.SH EXAMPLES
.SS Get the accessible details
This example shows how \f[CR]ariaDetailsElements\f[R] can be used to get
the information defined using the \f[CR]aria\-details\f[R] attribute in
HTML.
.SS HTML
The HTML defines two \f[CR]<span>\f[R] elements and references their ids
in the \f[CR]aria\-details\f[R] attribute of a \f[CR]<button>\f[R].
.IP
.EX
<\f[B]button\f[R] aria\-details=\(dqdetails1 details2\(dq>Button text</\f[B]button\f[R]>
\&...
<\f[B]span\f[R] id=\(dqdetails1\(dq>Details 1 information about the element.</\f[B]span\f[R]>
<\f[B]span\f[R] id=\(dqdetails2\(dq>Details 2 information about the element.</\f[B]span\f[R]>
.EE
.SS JavaScript
The code below first logs the value of the \f[CR]aria\-details\f[R]
attribute from \f[CR]Element.getAttribute()\f[R] (a string listing the
\f[CR]id\f[R] values of the referenced elements).
It then checks whether the \f[CR]ariaDetailsElements\f[R] is supported,
and if so, logs its value.
Finally it returns the accessible string, calculated by iterating
through the returned elements and concatenating their inner text.
.IP
.EX
\f[B]const\f[R] buttonElement = document.querySelector(\(dqbutton\(dq);
log(\(gaaria\-details: ${buttonElement.getAttribute(\(dqaria\-details\(dq)}\(ga);
\f[I]// Feature test for ariaDetailsElements\f[R]
\f[B]if\f[R] (\(dqariaDetailsElements\(dq \f[B]in\f[R] Element.prototype) {
  \f[I]// Get ariaDetailsElements\f[R]
  \f[B]const\f[R] buttonElements = buttonElement.ariaDetailsElements;
  log(\(gaariaDetailsElements: ${buttonElements}\(ga);

  \f[I]// Accessible details from ariaDetailsElements\f[R]
  \f[B]const\f[R] text = buttonElements.map((e) \f[B]=>\f[R] e.textContent.trim()).join(\(dq \(dq);
  log(\(gaAccessible details: ${text.trim()}\(ga);
} \f[B]else\f[R] {
  log(\(dqelement.ariaDetailsElements: not supported by browser\(dq);
}
.EE
.SS Result
The log below shows the original element references, the
associated/returned elements, and the accessible details.
.SH SEE ALSO
.IP \(bu 2
\f[CR]aria\-details\f[R] attribute
.IP \(bu 2
\f[CR]ElementInternals.ariaDetailsElements\f[R]
.IP \(bu 2
Reflected element references in the \f[I]Attribute reflection\f[R]
guide.
