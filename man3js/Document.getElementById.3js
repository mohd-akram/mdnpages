.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "DOCUMENT.GETELEMENTBYID" "3JS" "October 16, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Document.getElementById \- Document: getElementById() method
.SH SYNOPSIS
The \f[B]\f[CB]getElementById()\f[B]\f[R] method of the
\f[CR]Document\f[R] interface returns an \f[CR]Element\f[R] object
representing the element whose \f[CR]id\f[R] property matches the
specified string.
Since element IDs are required to be unique if specified, they\(cqre a
useful way to get access to a specific element quickly.
.PP
If you need to get access to an element which doesn\(cqt have an ID, you
can use \f[CR]querySelector()\f[R] to find the element using any
selector.
.RS
.PP
\f[B]Note:\f[R] IDs should be unique inside a document.
If two or more elements in a document have the same ID, this method
returns the first element found.
.RE
.SH SYNTAX
.IP
.EX
getElementById(id)
.EE
.RS
.PP
\f[B]Note:\f[R] The capitalization of \f[CR]\(dqId\(dq\f[R] in the name
of this method \f[I]must\f[R] be correct for the code to function;
\f[CR]getElementByID()\f[R] is \f[I]not\f[R] valid and will not work,
however natural it may seem.
.RE
.SS Parameters
.TP
\f[B]id\f[R]
The ID of the element to locate.
The ID is a case\-sensitive string which is unique within the document;
only one element should have any given ID.
.SS Return value
An \f[CR]Element\f[R] object describing the DOM element object matching
the specified ID, or \f[CR]null\f[R] if no matching element was found in
the document.
.SH EXAMPLES
.SS HTML
.IP
.EX
<\f[B]html\f[R] lang=\(dqen\(dq>
  <\f[B]head\f[R]>
    <\f[B]title\f[R]>getElementById example</\f[B]title\f[R]>
  </\f[B]head\f[R]>
  <\f[B]body\f[R]>
    <\f[B]p\f[R] id=\(dqpara\(dq>Some text here</\f[B]p\f[R]>
    <\f[B]button\f[R] onclick=\(dqchangeColor(\(aqblue\(aq);\(dq>blue</\f[B]button\f[R]>
    <\f[B]button\f[R] onclick=\(dqchangeColor(\(aqred\(aq);\(dq>red</\f[B]button\f[R]>
  </\f[B]body\f[R]>
</\f[B]html\f[R]>
.EE
.SS JavaScript
.IP
.EX
\f[B]function\f[R] changeColor(newColor) {
  \f[B]const\f[R] elem = document.getElementById(\(dqpara\(dq);
  elem.style.color = newColor;
}
.EE
.SS Result
.SH USAGE NOTES
Unlike some other element\-lookup methods such as
\f[CR]Document.querySelector()\f[R] and
\f[CR]Document.querySelectorAll()\f[R], \f[CR]getElementById()\f[R] is
only available as a method of the global \f[CR]document\f[R] object, and
\f[I]not\f[R] available as a method on all element objects in the DOM.
Because ID values must be unique throughout the entire document, there
is no need for \(lqlocal\(rq versions of the function.
.SS Example
.IP
.EX
<!doctype html>
<\f[B]html\f[R] lang=\(dqen\-US\(dq>
  <\f[B]head\f[R]>
    <\f[B]meta\f[R] charset=\(dqUTF\-8\(dq />
    <\f[B]title\f[R]>Document</\f[B]title\f[R]>
  </\f[B]head\f[R]>
  <\f[B]body\f[R]>
    <\f[B]div\f[R] id=\(dqparent\-id\(dq>
      <\f[B]p\f[R]>hello word1</\f[B]p\f[R]>
      <\f[B]p\f[R] id=\(dqtest1\(dq>hello word2</\f[B]p\f[R]>
      <\f[B]p\f[R]>hello word3</\f[B]p\f[R]>
      <\f[B]p\f[R]>hello word4</\f[B]p\f[R]>
    </\f[B]div\f[R]>
    <\f[B]script\f[R]>
      \f[B]const\f[R] parentDOM = document.getElementById(\(dqparent\-id\(dq);
      \f[B]const\f[R] test1 = parentDOM.getElementById(\(dqtest1\(dq);
      \f[I]// throw error\f[R]
      \f[I]// Uncaught TypeError: parentDOM.getElementById is not a function\f[R]
    </\f[B]script\f[R]>
  </\f[B]body\f[R]>
</\f[B]html\f[R]>
.EE
.PP
If there is no element with the given \f[CR]id\f[R], this function
returns \f[CR]null\f[R].
Note that the \f[CR]id\f[R] parameter is case\-sensitive, so
\f[CR]document.getElementById(\(dqMain\(dq)\f[R] will return
\f[CR]null\f[R] instead of the element \f[CR]<div id=\(dqmain\(dq>\f[R]
because \(lqM\(rq and \(lqm\(rq are different for the purposes of this
method.
.PP
Elements not in the document are not searched by
\f[CR]getElementById()\f[R].
When creating an element and assigning it an ID, you have to insert the
element into the document tree with \f[CR]Node.insertBefore()\f[R] or a
similar method before you can access it with
\f[CR]getElementById()\f[R]:
.IP
.EX
\f[B]const\f[R] element = document.createElement(\(dqdiv\(dq);
element.id = \(dqtest\(dq;
\f[B]const\f[R] el = document.getElementById(\(dqtest\(dq); \f[I]// el will be null!\f[R]
.EE
.PP
In non\-HTML documents, the DOM implementation must have information on
which attributes are of type ID.
Attributes with the name \(lqid\(rq are not of type ID unless so defined
in the document\(cqs DTD.
The \f[CR]id\f[R] attribute is defined to be of ID type in the common
cases of XHTML, XUL, and others.
Implementations that do not know whether attributes are of type ID or
not are expected to return \f[CR]null\f[R].
.SH SEE ALSO
.IP \(bu 2
\f[CR]Document\f[R] reference for other methods and properties you can
use to get references to elements in the document.
.IP \(bu 2
\f[CR]Document.querySelector()\f[R] for selectors via queries like
\f[CR]\(aqdiv.myclass\(aq\f[R]
.IP \(bu 2
\f[CR]Document.evaluate()\f[R] \- has a utility method for selecting by
\f[CR]xml:id\f[R] in XML documents
