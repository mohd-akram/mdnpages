.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "Window.localStorage" "JS" "April 8, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Window.localStorage \- Window: localStorage property
.SH SYNOPSIS
The \f[B]\f[CB]localStorage\f[B]\f[R] read\-only property of the
\f[CR]window\f[R] interface allows you to access a \f[CR]Storage\f[R]
object for the \f[CR]Document\f[R]\[cq]s origin; the stored data is
saved across browser sessions.
.PP
\f[CR]localStorage\f[R] is similar to \f[CR]sessionStorage\f[R], except
that while \f[CR]localStorage\f[R] data has no expiration time,
\f[CR]sessionStorage\f[R] data gets cleared when the page session ends
\[em] that is, when the page is closed.
(\f[CR]localStorage\f[R] data for a document loaded in a \[lq]private
browsing\[rq] or \[lq]incognito\[rq] session is cleared when the last
\[lq]private\[rq] tab is closed.)
.SH VALUE
A \f[CR]Storage\f[R] object which can be used to access the current
origin\[cq]s local storage space.
.SS Exceptions
.TP
\f[B]SecurityError\f[R]
Thrown in one of the following cases:
.RS
.IP \[bu] 2
The origin is not a valid scheme/host/port tuple.
This can happen if the origin uses the \f[CR]file:\f[R] or
\f[CR]data:\f[R] schemes, for example.
.IP \[bu] 2
The request violates a policy decision.
For example, the user has configured the browsers to prevent the page
from persisting data.
.PP
Note that if the user blocks cookies, browsers will probably interpret
this as an instruction to prevent the page from persisting data.
.RE
.SH DESCRIPTION
The keys and the values stored with \f[CR]localStorage\f[R] are
\f[I]always\f[R] in the UTF\-16 string format, which uses two bytes per
character.
As with objects, integer keys are automatically converted to strings.
.PP
\f[CR]localStorage\f[R] data \f[B]is specific to the protocol of the
document\f[R].
In particular, for a site loaded over HTTP (e.g.,
\f[CR]http://example.com\f[R]), \f[CR]localStorage\f[R] returns a
different object than \f[CR]localStorage\f[R] for the corresponding site
loaded over HTTPS (e.g., \f[CR]https://example.com\f[R]).
.PP
For documents loaded from \f[CR]file:\f[R] URLs (that is, files opened
in the browser directly from the user\[cq]s local filesystem, rather
than being served from a web server) the requirements for
\f[CR]localStorage\f[R] behavior are undefined and may vary among
different browsers.
.PP
In all current browsers, \f[CR]localStorage\f[R] seems to return a
different object for each \f[CR]file:\f[R] URL.
In other words, each \f[CR]file:\f[R] URL seems to have its own unique
local\-storage area.
But there are no guarantees about that behavior, so you shouldn\[cq]t
rely on it because, as mentioned above, the requirements for
\f[CR]file:\f[R] URLs remain undefined.
So it\[cq]s possible that browsers may change their \f[CR]file:\f[R] URL
handling for \f[CR]localStorage\f[R] at any time.
In fact some browsers \f[I]have\f[R] changed their handling for it over
time.
.SH EXAMPLES
The following snippet accesses the current domain\[cq]s local
\f[CR]Storage\f[R] object and adds a data item to it using
\f[CR]Storage.setItem()\f[R].
.IP
.EX
localStorage.setItem(\[dq]myCat\[dq], \[dq]Tom\[dq]);
.EE
.PP
The syntax for reading the \f[CR]localStorage\f[R] item is as follows:
.IP
.EX
\f[B]const\f[R] cat = localStorage.getItem(\[dq]myCat\[dq]);
.EE
.PP
The syntax for removing the \f[CR]localStorage\f[R] item is as follows:
.IP
.EX
localStorage.removeItem(\[dq]myCat\[dq]);
.EE
.PP
The syntax for removing all the \f[CR]localStorage\f[R] items is as
follows:
.IP
.EX
localStorage.clear();
.EE
.RS
.PP
\f[B]Note:\f[R] Please refer to the Using the Web Storage API article
for a full example.
.RE
.SH SEE ALSO
.IP \[bu] 2
Using the Web Storage API
.IP \[bu] 2
\f[CR]Window.sessionStorage\f[R]
