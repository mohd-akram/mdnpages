.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "XRRigidTransform.XRRigidTransform" "JS" "February 5, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
XRRigidTransform.XRRigidTransform \- XRRigidTransform:
XRRigidTransform() constructor
.SH SYNOPSIS
\f[B]Secure context:\f[R] This feature is available only in secure
contexts (HTTPS).
.PP
The \f[B]\f[CB]XRRigidTransform()\f[B]\f[R] constructor creates a new
\f[CR]XRRigidTransform\f[R] object, representing the position and
orientation of a point or object.
Among other things, \f[CR]XRRigidTransform\f[R] is used when providing a
transform to translate between coordinate systems across spaces.
.SH SYNTAX
.IP
.EX
new XRRigidTransform()
new XRRigidTransform(position)
new XRRigidTransform(position, orientation)
.EE
.SS Parameters
.TP
\f[B]position\f[R] \f[I](optional)\f[R]
An object which specifies the coordinates at which the point or object
is located.
These dimensions are specified in meters.
If this parameter is left out or is invalid, the position used is
assumed to be \f[CR]{x: 0, y: 0, z: 0, w: 1}\f[R].
\f[CR]w\f[R] must \f[I]always\f[R] be 1.
.TP
\f[B]orientation\f[R] \f[I](optional)\f[R]
An object which specifies the direction in which the object is facing.
The default value for \f[CR]orientation\f[R] is
\f[CR]{x: 0, y: 0, z: 0, w: 1}\f[R].
The specified orientation gets normalized if it\[cq]s not already.
.SS Return value
A new \f[CR]XRRigidTransform\f[R] object which has been initialized to
represent a transform matrix that would adjust the position and
orientation of an object from the origin to the specified
\f[CR]position\f[R] and facing in the direction indicated by
\f[CR]orientation\f[R].
.SS Exceptions
.TP
\f[B]TypeError\f[R]
Thrown if the value of the \f[CR]w\f[R] coordinate in the specified
\f[CR]position\f[R] is not 1.0.
.SH EXAMPLES
In this example, the beginning of the animation of a scene is shown,
starting with a request for a reference space of a given type, then
shifting the coordinate system based on a transform before requesting
the first animation frame.
.IP
.EX
\f[B]let\f[R] animationFrameRequestID = 0;

xrSession.requestReferenceSpace(\[dq]local\-floor\[dq]).then((refSpace) \f[B]=>\f[R] {
  xrReferenceSpace = refSpace.getOffsetReferenceSpace(
    \f[B]new\f[R] XRRigidTransform(viewerPosition, viewerOrientation),
  );
  animationFrameRequestID = xrSession.requestAnimationFrame(drawFrame);
});
.EE
.PP
After requesting a reference space of type \f[CR]local\-floor\f[R], the
returned promise is eventually resolved, at which time we receive a new
reference space object, \f[CR]refSpace\f[R].
After creating an \f[CR]XRRigidTransform\f[R] from the viewer\[cq]s
initial position and orientation, we pass the new transform into
\f[CR]getOffsetReferenceSpace()\f[R] to create \f[I]another\f[R]
reference space, now offset so that its origin is located at the same
place in space as the coordinates given by \f[CR]viewerPosition\f[R],
with the orientation also revised in the same fashion.
.PP
Then \f[CR]requestAnimationFrame()\f[R] is called to ask for a new
animation frame to draw into.
The \f[CR]drawFrame()\f[R] callback will be executed when the system is
ready to draw the next frame.
.PP
You can find more examples in Movement, orientation, and motion.
