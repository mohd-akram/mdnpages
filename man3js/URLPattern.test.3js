.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "URLPATTERN.TEST" "3JS" "June 18, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
URLPattern.test \- URLPattern: test() method
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]test()\f[B]\f[R] method of the \f[CR]URLPattern\f[R]
interface takes a URL or object of URL parts, and returns a boolean
indicating if the given input matches the current pattern.
.SH SYNTAX
.IP
.EX
test(input)
test(input, baseURL)
.EE
.SS Parameters
.TP
\f[B]input\f[R]
The URL or URL parts to match against.
This can either be a string, or an object providing the individual URL
parts.
The object members can be any of \f[CR]protocol\f[R],
\f[CR]username\f[R], \f[CR]password\f[R], \f[CR]hostname\f[R],
\f[CR]port\f[R], \f[CR]pathname\f[R], \f[CR]search\f[R],
\f[CR]hash\f[R], or \f[CR]baseURL\f[R].
Omitted parts in the object will be treated as empty strings.
If the input cannot be parsed, or a relative URL without a base is
provided, the method will return \f[CR]null\f[R].
.TP
\f[B]baseURL\f[R] \f[I](optional)\f[R]
A string representing the base URL to use in cases where
\f[CR]input\f[R] is a relative URL.
If not specified, it defaults to \f[CR]undefined\f[R].
If this parameter cannot be parsed, the method will return
\f[CR]false\f[R].
.SS Return value
A \f[CR]boolean\f[R].
.SH EXAMPLES
This example shows how to use the \f[CR]test()\f[R] method to match a
URL against a pattern.
The example prints the result of the \f[CR]test()\f[R] calls to the
console.
.IP
.EX
\f[B]const\f[R] pattern = \f[B]new\f[R] URLPattern(\(dqhttp{s}?://*.example.com/books/:id\(dq);

\f[I]// Absolute URL strings\f[R]
console.log(pattern.test(\(dqhttps://store.example.com/books/123\(dq)); \f[I]// true\f[R]
console.log(pattern.test(\(dqhttps://example.com/books/123\(dq)); \f[I]// false\f[R]

\f[I]// Relative URL strings\f[R]
console.log(pattern.test(\(dq/books/123\(dq, \(dqhttp://store.example.com\(dq)); \f[I]// true\f[R]
console.log(pattern.test(\(dq/books/123\(dq, \(dqdata:text/plain,hello world!\(dq)); \f[I]// false\f[R]
console.log(pattern.test(\(dq/books/123\(dq)); \f[I]// false\f[R]

\f[I]// Structured objects\f[R]
console.log(
  pattern.test({
    pathname: \(dq/books/123\(dq,
    baseURL: \(dqhttp://store.example.com\(dq,
  }),
); \f[I]// true\f[R]
console.log(
  pattern.test({
    protocol: \(dqhttps\(dq,
    hostname: \(dqstore.example.com\(dq,
    pathname: \(dq/books/123\(dq,
  }),
); \f[I]// true\f[R]
console.log(
  pattern.test({
    protocol: \(dqfile\(dq,
    hostname: \(dqstore.example.com\(dq,
    pathname: \(dq/books/123\(dq,
  }),
); \f[I]// false\f[R]
.EE
.SH SEE ALSO
.IP \(bu 2
A polyfill of \f[CR]URLPattern\f[R] is available \c
.UR https://github.com/kenchris/urlpattern-polyfill
on GitHub
.UE \c
