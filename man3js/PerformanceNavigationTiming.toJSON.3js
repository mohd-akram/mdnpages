.\" Automatically generated by Pandoc 3.4
.\"
.TH "PerformanceNavigationTiming.toJSON" "JS" "April 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
PerformanceNavigationTiming.toJSON \- PerformanceNavigationTiming:
toJSON() method
.SH SYNOPSIS
The \f[B]\f[CB]toJSON()\f[B]\f[R] method of the
\f[CR]PerformanceNavigationTiming\f[R] interface is a serializer; it
returns a JSON representation of the
\f[CR]PerformanceNavigationTiming\f[R] object.
.SH SYNTAX
.IP
.EX
toJSON()
.EE
.SS Parameters
None.
.SS Return value
A \f[CR]JSON\f[R] object that is the serialization of the
\f[CR]PerformanceNavigationTiming\f[R] object.
.SH EXAMPLES
.SS Using the toJSON method
In this example, calling \f[CR]entry.toJSON()\f[R] returns a JSON
representation of the \f[CR]PerformanceNavigationTiming\f[R] object.
.IP
.EX
\f[B]const\f[R] observer = \f[B]new\f[R] PerformanceObserver((list) \f[B]=>\f[R] {
  list.getEntries().forEach((entry) \f[B]=>\f[R] {
    console.log(entry.toJSON());
  });
});

observer.observe({ entryTypes: [\[dq]navigation\[dq]] });
.EE
.PP
This would log a JSON object like so:
.IP
.EX
{
  \[dq]name\[dq]: \[dq]https://en.wikipedia.org/wiki/Main_Page\[dq],
  \[dq]entryType\[dq]: \[dq]navigation\[dq],
  \[dq]startTime\[dq]: 0,
  \[dq]duration\[dq]: 227.60000002384186,
  \[dq]initiatorType\[dq]: \[dq]navigation\[dq],
  \[dq]nextHopProtocol\[dq]: \[dq]h2\[dq],
  \[dq]renderBlockingStatus\[dq]: \[dq]blocking\[dq],
  \[dq]workerStart\[dq]: 0,
  \[dq]redirectStart\[dq]: 4,
  \[dq]redirectEnd\[dq]: 71.40000000596046,
  \[dq]fetchStart\[dq]: 71.40000000596046,
  \[dq]domainLookupStart\[dq]: 71.40000000596046,
  \[dq]domainLookupEnd\[dq]: 71.40000000596046,
  \[dq]connectStart\[dq]: 71.40000000596046,
  \[dq]connectEnd\[dq]: 71.40000000596046,
  \[dq]secureConnectionStart\[dq]: 71.40000000596046,
  \[dq]requestStart\[dq]: 73.7000000178814,
  \[dq]responseStart\[dq]: 102.90000000596046,
  \[dq]responseEnd\[dq]: 105.2000000178814,
  \[dq]transferSize\[dq]: 19464,
  \[dq]encodedBodySize\[dq]: 19164,
  \[dq]decodedBodySize\[dq]: 83352,
  \[dq]serverTiming\[dq]: [
    {
      \[dq]name\[dq]: \[dq]cache\[dq],
      \[dq]duration\[dq]: 0,
      \[dq]description\[dq]: \[dq]hit\-front\[dq]
    },
    {
      \[dq]name\[dq]: \[dq]host\[dq],
      \[dq]duration\[dq]: 0,
      \[dq]description\[dq]: \[dq]cp3062\[dq]
    }
  ],
  \[dq]unloadEventStart\[dq]: 0,
  \[dq]unloadEventEnd\[dq]: 0,
  \[dq]domInteractive\[dq]: 178.10000002384186,
  \[dq]domContentLoadedEventStart\[dq]: 178.2000000178814,
  \[dq]domContentLoadedEventEnd\[dq]: 178.2000000178814,
  \[dq]domComplete\[dq]: 227.60000002384186,
  \[dq]loadEventStart\[dq]: 227.60000002384186,
  \[dq]loadEventEnd\[dq]: 227.60000002384186,
  \[dq]type\[dq]: \[dq]navigate\[dq],
  \[dq]redirectCount\[dq]: 1,
  \[dq]activationStart\[dq]: 0
}
.EE
.PP
To get a JSON string, you can use \f[CR]JSON.stringify(entry)\f[R]
directly; it will call \f[CR]toJSON()\f[R] automatically.
.SH SEE ALSO
.IP \[bu] 2
\f[CR]JSON\f[R]
