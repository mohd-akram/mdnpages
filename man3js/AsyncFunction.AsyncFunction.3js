.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "ASYNCFUNCTION.ASYNCFUNCTION" "3JS" "September 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
AsyncFunction.AsyncFunction \- AsyncFunction() constructor
.SH SYNOPSIS
The \f[B]\f[CB]AsyncFunction()\f[B]\f[R] constructor creates
\f[CR]AsyncFunction\f[R] objects.
.PP
Note that \f[CR]AsyncFunction\f[R] is \f[I]not\f[R] a global object.
It can be obtained with the following code:
.IP
.EX
\f[B]const\f[R] AsyncFunction = \f[B]async\f[R] \f[B]function\f[R] () {}.constructor;
.EE
.PP
The \f[CR]AsyncFunction()\f[R] constructor is not intended to be used
directly, and all caveats mentioned in the \f[CR]Function()\f[R]
description apply to \f[CR]AsyncFunction()\f[R].
.SH SYNTAX
.IP
.EX
new AsyncFunction(functionBody)
new AsyncFunction(arg1, functionBody)
new AsyncFunction(arg1, arg2, functionBody)
new AsyncFunction(arg1, arg2, /* \&..., */ argN, functionBody)

AsyncFunction(functionBody)
AsyncFunction(arg1, functionBody)
AsyncFunction(arg1, arg2, functionBody)
AsyncFunction(arg1, arg2, /* \&..., */ argN, functionBody)
.EE
.RS
.PP
\f[B]Note:\f[R] \f[CR]AsyncFunction()\f[R] can be called with or without
\f[CR]new\f[R].
Both create a new \f[CR]AsyncFunction\f[R] instance.
.RE
.SS Parameters
See \f[CR]Function()\f[R].
.SH EXAMPLES
.SS Creating an async function from an AsyncFunction() constructor
.IP
.EX
\f[B]function\f[R] resolveAfter2Seconds(x) {
  \f[B]return\f[R] \f[B]new\f[R] Promise((resolve) \f[B]=>\f[R] {
    setTimeout(() \f[B]=>\f[R] {
      resolve(x);
    }, 2000);
  });
}

\f[B]const\f[R] AsyncFunction = \f[B]async\f[R] \f[B]function\f[R] () {}.constructor;

\f[B]const\f[R] fn = \f[B]new\f[R] AsyncFunction(
  \(dqa\(dq,
  \(dqb\(dq,
  \(dqreturn await resolveAfter2Seconds(a) + await resolveAfter2Seconds(b);\(dq,
);

fn(10, 20).then((v) \f[B]=>\f[R] {
  console.log(v); \f[I]// prints 30 after 4 seconds\f[R]
});
.EE
.SH SEE ALSO
.IP \(bu 2
\f[CR]async function\f[R]
.IP \(bu 2
\f[CR]async function\f[R] expression
.IP \(bu 2
\f[CR]Function()\f[R] constructor
