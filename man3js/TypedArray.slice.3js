.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "TYPEDARRAY.SLICE" "3JS" "March 14, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
TypedArray.slice \- TypedArray.prototype.slice()
.SH SYNOPSIS
The \f[B]\f[CB]slice()\f[B]\f[R] method of \f[CR]TypedArray\f[R]
instances returns a copy of a portion of a typed array into a new typed
array object selected from \f[CR]start\f[R] to \f[CR]end\f[R]
(\f[CR]end\f[R] not included) where \f[CR]start\f[R] and \f[CR]end\f[R]
represent the index of items in that typed array.
The original typed array will not be modified.
This method has the same algorithm as
\f[CR]Array.prototype.slice()\f[R].
.IP
.EX
\f[B]const\f[R] uint8 = \f[B]new\f[R] Uint8Array([10, 20, 30, 40, 50]);
\f[B]const\f[R] array1 = uint8.slice(1, 3);

console.log(array1);
\f[I]// Expected output: Uint8Array [20, 30]\f[R]
.EE
.SH SYNTAX
.IP
.EX
slice()
slice(start)
slice(start, end)
.EE
.SS Parameters
.TP
\f[B]start\f[R] \f[I](optional)\f[R]
Zero\-based index at which to start extraction, converted to an integer.
.TP
\f[B]end\f[R] \f[I](optional)\f[R]
Zero\-based index at which to end extraction, converted to an integer.
\f[CR]slice()\f[R] extracts up to but not including \f[CR]end\f[R].
.SS Return value
A new typed array containing the extracted elements.
.SH DESCRIPTION
See \f[CR]Array.prototype.slice()\f[R] for more details.
This method is not generic and can only be called on typed array
instances.
.SH EXAMPLES
.SS Return a portion of an existing typed array
.IP
.EX
\f[B]const\f[R] uint8 = \f[B]new\f[R] Uint8Array([1, 2, 3]);
uint8.slice(1); \f[I]// Uint8Array [ 2, 3 ]\f[R]
uint8.slice(2); \f[I]// Uint8Array [ 3 ]\f[R]
uint8.slice(\-2); \f[I]// Uint8Array [ 2, 3 ]\f[R]
uint8.slice(0, 1); \f[I]// Uint8Array [ 1 ]\f[R]
.EE
.SH SEE ALSO
.IP \(bu 2
\c
.UR https://github.com/zloirock/core-js#ecmascript-typed-arrays
Polyfill of \f[CR]TypedArray.prototype.slice\f[R] in \f[CR]core\-js\f[R]
.UE \c
.IP \(bu 2
\c
.UR https://www.npmjs.com/package/typedarray.prototype.slice
es\-shims polyfill of \f[CR]TypedArray.prototype.slice\f[R]
.UE \c
.IP \(bu 2
JavaScript typed arrays guide
.IP \(bu 2
\f[CR]TypedArray\f[R]
.IP \(bu 2
\f[CR]Array.prototype.slice()\f[R]
.IP \(bu 2
\f[CR]String.prototype.slice()\f[R]
