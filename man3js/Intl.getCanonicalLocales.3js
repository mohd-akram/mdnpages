.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "Intl.getCanonicalLocales" "JS" "February 11, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Intl.getCanonicalLocales \- Intl.getCanonicalLocales()
.SH SYNOPSIS
The \f[B]\f[CB]Intl.getCanonicalLocales()\f[B]\f[R] static method
returns an array containing the canonical locale names.
Duplicates will be omitted and elements will be validated as
structurally valid language tags.
.IP
.EX
console.log(Intl.getCanonicalLocales(\[dq]EN\-US\[dq]));
\f[I]// Expected output: Array [\[dq]en\-US\[dq]]\f[R]

console.log(Intl.getCanonicalLocales([\[dq]EN\-US\[dq], \[dq]Fr\[dq]]));
\f[I]// Expected output: Array [\[dq]en\-US\[dq], \[dq]fr\[dq]]\f[R]

\f[B]try\f[R] {
  Intl.getCanonicalLocales(\[dq]EN_US\[dq]);
} \f[B]catch\f[R] (err) {
  console.log(err.toString());
  \f[I]// Expected output (Firefox/Safari): RangeError: invalid language tag: \[dq]EN_US\[dq]\f[R]
  \f[I]// Expected output (Chrome): RangeError: Incorrect locale information provided\f[R]
}
.EE
.SH SYNTAX
.IP
.EX
Intl.getCanonicalLocales(locales)
.EE
.SS Parameters
.TP
\f[B]locales\f[R]
A list of \f[CR]String\f[R] values for which to get the canonical locale
names.
.SS Return value
An array containing the canonical locale names.
.SH EXAMPLES
.SS Using getCanonicalLocales
.IP
.EX
Intl.getCanonicalLocales(\[dq]EN\-US\[dq]); \f[I]// [\[dq]en\-US\[dq]]\f[R]
Intl.getCanonicalLocales([\[dq]EN\-US\[dq], \[dq]Fr\[dq]]); \f[I]// [\[dq]en\-US\[dq], \[dq]fr\[dq]]\f[R]

Intl.getCanonicalLocales(\[dq]EN_US\[dq]);
\f[I]// RangeError:\[aq]EN_US\[aq] is not a structurally valid language tag\f[R]
.EE
.SH SEE ALSO
.IP \[bu] 2
\c
.UR https://formatjs.github.io/docs/polyfills/intl-getcanonicallocales/
Polyfill of \f[CR]Intl.getCanonicalLocales\f[R] in FormatJS
.UE \c
.IP \[bu] 2
\f[CR]Intl.NumberFormat.supportedLocalesOf()\f[R]
.IP \[bu] 2
\f[CR]Intl.DateTimeFormat.supportedLocalesOf()\f[R]
.IP \[bu] 2
\f[CR]Intl.Collator.supportedLocalesOf()\f[R]
