.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "Range" "JS" "February 19, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Range \- Range
.SH SYNOPSIS
The \f[B]\f[CB]Range\f[B]\f[R] interface represents a fragment of a
document that can contain nodes and parts of text nodes.
.PP
A range can be created by using the \f[CR]Document.createRange()\f[R]
method.
Range objects can also be retrieved by using the \f[CR]getRangeAt()\f[R]
method of the \f[CR]Selection\f[R] object or the
\f[CR]caretRangeFromPoint()\f[R] method of the \f[CR]Document\f[R]
object.
.PP
There also is the \f[CR]Range()\f[R] constructor available.
.SH INSTANCE PROPERTIES
\f[I]There are no inherited properties.\f[R]
.TP
\f[B]Range.collapsed\f[R] \f[I](read\-only)\f[R]
Returns a boolean value indicating whether the range\[cq]s start and end
points are at the same position.
.TP
\f[B]Range.commonAncestorContainer\f[R] \f[I](read\-only)\f[R]
Returns the deepest \f[CR]Node\f[R] that contains the
\f[CR]startContainer\f[R] and \f[CR]endContainer\f[R] nodes.
.TP
\f[B]Range.endContainer\f[R] \f[I](read\-only)\f[R]
Returns the \f[CR]Node\f[R] within which the \f[CR]Range\f[R] ends.
.TP
\f[B]Range.endOffset\f[R] \f[I](read\-only)\f[R]
Returns a number representing where in the \f[CR]endContainer\f[R] the
\f[CR]Range\f[R] ends.
.TP
\f[B]Range.startContainer\f[R] \f[I](read\-only)\f[R]
Returns the \f[CR]Node\f[R] within which the \f[CR]Range\f[R] starts.
.TP
\f[B]Range.startOffset\f[R] \f[I](read\-only)\f[R]
Returns a number representing where in the \f[CR]startContainer\f[R] the
\f[CR]Range\f[R] starts.
.SH CONSTRUCTOR
.TP
\f[B]Range()\f[R]
Returns a \f[CR]Range\f[R] object with the global \f[CR]Document\f[R] as
its start and end.
.SH INSTANCE METHODS
\f[I]There are no inherited methods.\f[R]
.TP
\f[B]Range.collapse()\f[R]
Collapses the \f[CR]Range\f[R] to one of its boundary points.
.TP
\f[B]Range.compareBoundaryPoints()\f[R]
Compares the boundary points of the \f[CR]Range\f[R] with another
\f[CR]Range\f[R].
.TP
\f[B]Range.compareNode()\f[R] \f[I](deprecated)\f[R] \f[I](non\-standard)\f[R]
Returns a constant representing whether the \f[CR]Node\f[R] is before,
after, inside, or surrounding the range.
.TP
\f[B]Range.comparePoint()\f[R]
Returns \-1, 0, or 1 indicating whether the point occurs before, inside,
or after the \f[CR]Range\f[R].
.TP
\f[B]Range.cloneContents()\f[R]
Returns a \f[CR]DocumentFragment\f[R] copying the nodes of a
\f[CR]Range\f[R].
.TP
\f[B]Range.cloneRange()\f[R]
Returns a \f[CR]Range\f[R] object with boundary points identical to the
cloned \f[CR]Range\f[R].
.TP
\f[B]Range.createContextualFragment()\f[R]
Returns a \f[CR]DocumentFragment\f[R] created from a given string of
code.
.TP
\f[B]Range.deleteContents()\f[R]
Removes the contents of a \f[CR]Range\f[R] from the \f[CR]Document\f[R].
.TP
\f[B]Range.detach()\f[R]
Does nothing.
Kept for compatibility.
.TP
\f[B]Range.extractContents()\f[R]
Moves contents of a \f[CR]Range\f[R] from the document tree into a
\f[CR]DocumentFragment\f[R].
.TP
\f[B]Range.getBoundingClientRect()\f[R]
Returns a \f[CR]DOMRect\f[R] object which bounds the entire contents of
the \f[CR]Range\f[R]; this would be the union of all the rectangles
returned by \f[CR]range.getClientRects()\f[R].
.TP
\f[B]Range.getClientRects()\f[R]
Returns a list of \f[CR]DOMRect\f[R] objects that aggregates the results
of \f[CR]Element.getClientRects()\f[R] for all the elements in the
\f[CR]Range\f[R].
.TP
\f[B]Range.isPointInRange()\f[R]
Returns a \f[CR]boolean\f[R] indicating whether the given point is in
the \f[CR]Range\f[R].
.TP
\f[B]Range.insertNode()\f[R]
Insert a \f[CR]Node\f[R] at the start of a \f[CR]Range\f[R].
.TP
\f[B]Range.intersectsNode()\f[R]
Returns a \f[CR]boolean\f[R] indicating whether the given node
intersects the \f[CR]Range\f[R].
.TP
\f[B]Range.selectNode()\f[R]
Sets the \f[CR]Range\f[R] to contain the \f[CR]Node\f[R] and its
contents.
.TP
\f[B]Range.selectNodeContents()\f[R]
Sets the \f[CR]Range\f[R] to contain the contents of a \f[CR]Node\f[R].
.TP
\f[B]Range.setEnd()\f[R]
Sets the end position of a \f[CR]Range\f[R].
.TP
\f[B]Range.setStart()\f[R]
Sets the start position of a \f[CR]Range\f[R].
.TP
\f[B]Range.setEndAfter()\f[R]
Sets the end position of a \f[CR]Range\f[R] relative to another
\f[CR]Node\f[R].
.TP
\f[B]Range.setEndBefore()\f[R]
Sets the end position of a \f[CR]Range\f[R] relative to another
\f[CR]Node\f[R].
.TP
\f[B]Range.setStartAfter()\f[R]
Sets the start position of a \f[CR]Range\f[R] relative to another
\f[CR]Node\f[R].
.TP
\f[B]Range.setStartBefore()\f[R]
Sets the start position of a \f[CR]Range\f[R] relative to another
\f[CR]Node\f[R].
.TP
\f[B]Range.surroundContents()\f[R]
Moves content of a \f[CR]Range\f[R] into a new \f[CR]Node\f[R].
.TP
\f[B]Range.toString()\f[R]
Returns the text of the \f[CR]Range\f[R].
.SH SEE ALSO
.IP \[bu] 2
The DOM interfaces index
