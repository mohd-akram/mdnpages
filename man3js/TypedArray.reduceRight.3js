.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "TypedArray.reduceRight" "JS" "September 14, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
TypedArray.reduceRight \- TypedArray.prototype.reduceRight()
.SH SYNOPSIS
The \f[B]\f[CB]reduceRight()\f[B]\f[R] method of \f[CR]TypedArray\f[R]
instances applies a function against an accumulator and each value of
the typed array (from right\-to\-left) to reduce it to a single value.
This method has the same algorithm as
\f[CR]Array.prototype.reduceRight()\f[R].
.SH SYNTAX
.IP
.EX
reduceRight(callbackFn)
reduceRight(callbackFn, initialValue)
.EE
.SS Parameters
.TP
\f[B]callbackFn\f[R]
A function to execute for each element in the typed array.
Its return value becomes the value of the \f[CR]accumulator\f[R]
parameter on the next invocation of \f[CR]callbackFn\f[R].
For the last invocation, the return value becomes the return value of
\f[CR]reduceRight()\f[R].
The function is called with the following arguments:
.RS
.TP
\f[B]accumulator\f[R]
The value resulting from the previous call to \f[CR]callbackFn\f[R].
On the first call, its value is \f[CR]initialValue\f[R] if the latter is
specified; otherwise its value is the last element of the typed array.
.TP
\f[B]currentValue\f[R]
The value of the current element.
On the first call, its value is the last element if
\f[CR]initialValue\f[R] is specified; otherwise its value is the
second\-to\-last element.
.TP
\f[B]currentIndex\f[R]
The index position of \f[CR]currentValue\f[R] in the typed array.
On the first call, its value is \f[CR]array.length \- 1\f[R] if
\f[CR]initialValue\f[R] is specified, otherwise
\f[CR]array.length \- 2\f[R].
.TP
\f[B]array\f[R]
The typed array \f[CR]reduceRight()\f[R] was called upon.
.RE
.TP
\f[B]initialValue\f[R] \f[I](optional)\f[R]
Value to use as accumulator to the first call of the
\f[CR]callbackFn\f[R].
If no initial value is supplied, the last element in the typed array
will be used and skipped.
Calling \f[CR]reduceRight()\f[R] on an empty typed array without an
initial value creates a \f[CR]TypeError\f[R].
.SS Return value
The value that results from the reduction.
.SH DESCRIPTION
See \f[CR]Array.prototype.reduceRight()\f[R] for more details.
This method is not generic and can only be called on typed array
instances.
.SH EXAMPLES
.SS Sum up all values within an array
.IP
.EX
\f[B]const\f[R] total = \f[B]new\f[R] Uint8Array([0, 1, 2, 3]).reduceRight((a, b) \f[B]=>\f[R] a + b);
\f[I]// total === 6\f[R]
.EE
.SH SEE ALSO
.IP \[bu] 2
\c
.UR https://github.com/zloirock/core-js#ecmascript-typed-arrays
Polyfill of \f[CR]TypedArray.prototype.reduceRight\f[R] in
\f[CR]core\-js\f[R]
.UE \c
.IP \[bu] 2
JavaScript typed arrays guide
.IP \[bu] 2
\f[CR]TypedArray\f[R]
.IP \[bu] 2
\f[CR]TypedArray.prototype.map()\f[R]
.IP \[bu] 2
\f[CR]TypedArray.prototype.reduce()\f[R]
.IP \[bu] 2
\f[CR]Array.prototype.reduceRight()\f[R]
.IP \[bu] 2
\f[CR]Object.groupBy()\f[R]
.IP \[bu] 2
\f[CR]Map.groupBy()\f[R]
