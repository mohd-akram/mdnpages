.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "DOMMatrixReadOnly.translate" "JS" "May 19, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
DOMMatrixReadOnly.translate \- DOMMatrixReadOnly: translate() method
.SH SYNOPSIS
The \f[CR]translate()\f[R] method of the \f[CR]DOMMatrixReadOnly\f[R]
interface creates a new matrix being the result of the original matrix
with a translation applied.
.SH SYNTAX
.IP
.EX
DOMMatrix.translate(translateX, translateY)
DOMMatrix.translate(translateX, translateY, translateZ)
.EE
.SS Parameters
.TP
\f[B]translateX\f[R]
A number representing the abscissa (x\-coordinate) of the translating
vector.
.TP
\f[B]translateY\f[R]
A number representing the ordinate (y\-coordinate) of the translating
vector.
.TP
\f[B]translateZ\f[R] \f[I](optional)\f[R]
A number representing the z component of the translating vector.
If not supplied, this defaults to 0.
If this is anything other than 0, the resulting matrix will be 3D.
.SS Return value
Returns a \f[CR]DOMMatrix\f[R] containing a new matrix being the result
of the matrix being translated by the given vector.
The original matrix is not modified.
.PP
If a translation is applied about the z\-axis, the resulting matrix will
be a 4x4 3D matrix.
.SH EXAMPLES
This SVG contains two squares, one red and one blue, each positioned at
the document origin:
.IP
.EX
<\f[B]svg\f[R] width=\[dq]250\[dq] height=\[dq]250\[dq] viewBox=\[dq]0 0 50 50\[dq]>
  <\f[B]rect\f[R] width=\[dq]25\[dq] height=\[dq]25\[dq] fill=\[dq]red\[dq] />
  <\f[B]rect\f[R] id=\[dq]transformed\[dq] width=\[dq]25\[dq] height=\[dq]25\[dq] fill=\[dq]blue\[dq] />
</\f[B]svg\f[R]>
.EE
.PP
The following JavaScript first creates an identity matrix, then uses the
\f[CR]translate()\f[R] method to create a new, translated matrix \[em]
which is then applied to the blue square as a \f[CR]transform\f[R].
The red square is left in place.
.IP
.EX
\f[B]const\f[R] matrix = \f[B]new\f[R] DOMMatrixReadOnly().translate(25, 25);

document
  .querySelector(\[dq]#transformed\[dq])
  .setAttribute(\[dq]transform\[dq], matrix.toString());
.EE
