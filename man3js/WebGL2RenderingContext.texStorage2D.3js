.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "WebGL2RenderingContext.texStorage2D" "JS" "August 2, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
WebGL2RenderingContext.texStorage2D \- WebGL2RenderingContext:
texStorage2D() method
.SH SYNOPSIS
The \f[B]\f[CB]WebGL2RenderingContext.texStorage2D()\f[B]\f[R] method of
the WebGL API specifies all levels of two\-dimensional texture storage.
.SH SYNTAX
.IP
.EX
texStorage2D(target, levels, internalformat, width, height)
.EE
.SS Parameters
.TP
\f[B]target\f[R]
A \f[CR]GLenum\f[R] specifying the binding point (target) of the active
texture.
Possible values:
.RS
.IP \[bu] 2
\f[CR]gl.TEXTURE_2D\f[R]: A two\-dimensional texture.
.IP \[bu] 2
\f[CR]gl.TEXTURE_CUBE_MAP\f[R]: A cube\-mapped texture.
.RE
.TP
\f[B]levels\f[R]
A \f[CR]GLint\f[R] specifying the number of texture levels.
.TP
\f[B]internalformat\f[R]
A \f[CR]GLenum\f[R] specifying the texture store format.
Possible values:
.RS
.IP \[bu] 2
\f[CR]gl.R8\f[R]
.IP \[bu] 2
\f[CR]gl.R16F\f[R]
.IP \[bu] 2
\f[CR]gl.R32F\f[R]
.IP \[bu] 2
\f[CR]gl.R8UI\f[R]
.IP \[bu] 2
\f[CR]gl.RG8\f[R]
.IP \[bu] 2
\f[CR]gl.RG16F\f[R]
.IP \[bu] 2
\f[CR]gl.RG32F\f[R]
.IP \[bu] 2
\f[CR]gl.RG8UI\f[R]
.IP \[bu] 2
\f[CR]gl.RGB8\f[R]
.IP \[bu] 2
\f[CR]gl.SRGB8\f[R]
.IP \[bu] 2
\f[CR]gl.RGB565\f[R]
.IP \[bu] 2
\f[CR]gl.R11F_G11F_B10F\f[R]
.IP \[bu] 2
\f[CR]gl.RGB9_E5\f[R]
.IP \[bu] 2
\f[CR]gl.RGB16F\f[R]
.IP \[bu] 2
\f[CR]gl.RGB32F\f[R]
.IP \[bu] 2
\f[CR]gl.RGB8UI\f[R]
.IP \[bu] 2
\f[CR]gl.RGBA8\f[R]
.IP \[bu] 2
\f[CR]gl.SRGB8_ALPHA8\f[R]
.IP \[bu] 2
\f[CR]gl.RGB5_A1\f[R]
.IP \[bu] 2
\f[CR]gl.RGBA4\f[R]
.IP \[bu] 2
\f[CR]gl.RGBA16F\f[R]
.IP \[bu] 2
\f[CR]gl.RGBA32F\f[R]
.IP \[bu] 2
\f[CR]gl.RGBA8UI\f[R]
.PP
Unlike OpenGL 3.0, WebGL 2 \f[B]doesn\[cq]t support\f[R] the following
ETC2 and EAC compressed texture formats (see \c
.UR https://registry.khronos.org/webgl/specs/latest/2.0/#5.37
section 5.37
.UE \c
\ in the WebGL 2 spec).
You might be able to enable them via the
\f[CR]WEBGL_compressed_texture_etc\f[R] extension, though.
.IP \[bu] 2
\f[CR]gl.COMPRESSED_R11_EAC\f[R]
.IP \[bu] 2
\f[CR]gl.COMPRESSED_SIGNED_R11_EAC\f[R]
.IP \[bu] 2
\f[CR]gl.COMPRESSED_RG11_EAC\f[R]
.IP \[bu] 2
\f[CR]gl.COMPRESSED_SIGNED_RG11_EAC\f[R]
.IP \[bu] 2
\f[CR]gl.COMPRESSED_RGB8_ETC2\f[R]
.IP \[bu] 2
\f[CR]gl.COMPRESSED_RGBA8_ETC2_EAC\f[R]
.IP \[bu] 2
\f[CR]gl.COMPRESSED_SRGB8_ETC2\f[R]
.IP \[bu] 2
\f[CR]gl.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC\f[R]
.IP \[bu] 2
\f[CR]gl.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2\f[R]
.IP \[bu] 2
\f[CR]gl.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2\f[R]
.RE
.TP
\f[B]width\f[R]
A \f[CR]GLsizei\f[R] specifying the width of the texture.
.TP
\f[B]height\f[R]
A \f[CR]GLsizei\f[R] specifying the height of the texture.
.SS Return value
None (\f[CR]undefined\f[R]).
.SH EXAMPLES
.IP
.EX
gl.texStorage2D(gl.TEXTURE_2D, 1, gl.RGB8, 256, 256);
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]WebGL2RenderingContext.texStorage3D()\f[R]
.IP \[bu] 2
\f[CR]WEBGL_compressed_texture_etc\f[R]
