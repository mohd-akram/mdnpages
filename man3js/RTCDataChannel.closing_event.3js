.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "RTCDataChannel.closing_event" "JS" "August 23, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
RTCDataChannel.closing_event \- RTCDataChannel: closing event
.SH SYNOPSIS
The \f[B]\f[CB]closing\f[B]\f[R] event is sent to an
\f[CR]RTCDataChannel\f[R] just before the channel begins the process of
shutting down its underlying data transport.
.PP
This event is not cancelable and does not bubble.
.SH SYNTAX
Use the event name in methods like \f[CR]addEventListener()\f[R], or set
an event handler property.
.IP
.EX
addEventListener(\[dq]closing\[dq], (event) \f[B]=>\f[R] {});

onclosing = (event) \f[B]=>\f[R] {};
.EE
.SH EVENT TYPE
A generic \f[CR]Event\f[R].
.SH DESCRIPTION
While the \f[CR]closing\f[R] event is sent to the channel just before
beginning to close the channel\[cq]s data transport, the
\f[CR]close\f[R] event is sent once the closing process is complete.
.SH EXAMPLES
This example updates a connection status interface when the
\f[CR]closing\f[R] event arrives.
.PP
First, an example using \f[CR]addEventListener()\f[R]:
.IP
.EX
dataChannel.addEventListener(\[dq]closing\[dq], (ev) \f[B]=>\f[R] {
  myConnectionStatus.icon = closingIcon;
  myConnectionStatus.text = \[dq]Connection closing\[dq];
});
.EE
.PP
You can also set the \f[CR]onclosing\f[R] event handler property
directly:
.IP
.EX
pc.onclosing = (ev) \f[B]=>\f[R] {
  myConnectionStatus.icon = closingIcon;
  myConnectionStatus.text = \[dq]Connection closing\[dq];
};
.EE
.SH SEE ALSO
.IP \[bu] 2
WebRTC API
.IP \[bu] 2
Signaling and video calling
