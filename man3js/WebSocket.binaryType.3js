.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "WebSocket.binaryType" "JS" "January 30, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
WebSocket.binaryType \- WebSocket: binaryType property
.SH SYNOPSIS
The \f[B]\f[CB]WebSocket.binaryType\f[B]\f[R] property controls the type
of binary data being received over the WebSocket connection.
.SH VALUE
A string:
.TP
\f[B]\[dq]blob\[dq]\f[R]
Use \f[CR]Blob\f[R] objects for binary data.
This is the default value.
.TP
\f[B]\[dq]arraybuffer\[dq]\f[R]
Use \f[CR]ArrayBuffer\f[R] objects for binary data.
.SH EXAMPLES
.IP
.EX
\f[I]// Create WebSocket connection.\f[R]
\f[B]const\f[R] socket = \f[B]new\f[R] WebSocket(\[dq]ws://localhost:8080\[dq]);

\f[I]// Change binary type from \[dq]blob\[dq] to \[dq]arraybuffer\[dq]\f[R]
socket.binaryType = \[dq]arraybuffer\[dq];

\f[I]// Listen for messages\f[R]
socket.addEventListener(\[dq]message\[dq], (event) \f[B]=>\f[R] {
  \f[B]if\f[R] (event.data \f[B]instanceof\f[R] ArrayBuffer) {
    \f[I]// binary frame\f[R]
    \f[B]const\f[R] view = \f[B]new\f[R] DataView(event.data);
    console.log(view.getInt32(0));
  } \f[B]else\f[R] {
    \f[I]// text frame\f[R]
    console.log(event.data);
  }
});
.EE
