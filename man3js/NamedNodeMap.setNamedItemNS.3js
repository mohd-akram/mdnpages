.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "NamedNodeMap.setNamedItemNS" "JS" "July 26, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
NamedNodeMap.setNamedItemNS \- NamedNodeMap: setNamedItemNS() method
.SH SYNOPSIS
The \f[B]\f[CB]setNamedItemNS()\f[B]\f[R] method of the
\f[CR]NamedNodeMap\f[R] interface puts the \f[CR]Attr\f[R] identified by
its name in the map.
If there was already an \f[CR]Attr\f[R] with the same name in the map,
it is \f[I]replaced\f[R].
.RS
.PP
\f[B]Note:\f[R] This method is an alias of \f[CR]setNamedItem()\f[R] you
can use them interchangeably.
.RE
.SH SYNTAX
.IP
.EX
setNamedItemNS(attr)
.EE
.SS Parameters
.TP
\f[B]attr\f[R]
The attribute to insert in the map.
.SS Return value
Returns the old attribute if replaced, or \f[CR]null\f[R] if the
attribute is new.
.SS Exceptions
.TP
\f[B]InUseAttributeError\f[R] \f[B]DOMException\f[R]
Thrown if the attribute is still part of another map.
.SH EXAMPLE
.IP
.EX
<\f[B]span\f[R] ob:one=\[dq]one\[dq]></\f[B]span\f[R]>
<\f[B]pre\f[R]></\f[B]pre\f[R]>
.EE
.IP
.EX
\f[B]const\f[R] parser = \f[B]new\f[R] DOMParser();
\f[I]// ob:one in <span> is not in a namespace, while ob:one in <warning>, is.\f[R]
\f[B]const\f[R] xmlString =
  \[aq]<warning ob:one=\[dq]test\[dq] xmlns:ob=\[dq]http://www.example.com/ob\[dq]>Beware!</warning>\[aq];
\f[B]const\f[R] doc = parser.parseFromString(xmlString, \[dq]application/xml\[dq]);

\f[B]const\f[R] span = document.querySelector(\[dq]span\[dq]);
\f[B]const\f[R] pre = document.querySelector(\[dq]pre\[dq]);
\f[B]const\f[R] warning = doc.querySelector(\[dq]warning\[dq]);
\f[B]const\f[R] attrMap = span.attributes;

\f[B]let\f[R] result = \[ga]The \[aq]<span>\[aq] element initially contains ${attrMap.length} attribute.\[rs]n\[rs]n\[ga];

result += \[dq]We remove \[ga]one\[ga] from \[aq]<span>\[aq] and adds it to \[aq]<pre>\[aq].\[rs]n\[dq];
\f[B]const\f[R] one = warning.attributes.removeNamedItemNS(
  \[dq]http://www.example.com/ob\[dq],
  \[dq]one\[dq],
);
attrMap.setNamedItemNS(one);
result += \[ga]The \[aq]<span>\[aq] element now contains ${span.attributes.length} attributes:\[rs]n\[rs]n\[ga];
result += \[dq]Prefix\[rs]tLocal name\[rs]tQualified name\[rs]n\[dq];
result += \[dq]=========================================\[rs]n\[dq];

\f[B]for\f[R] (\f[B]const\f[R] attr \f[B]of\f[R] attrMap) {
  result += \[ga]${attr.prefix}\[rs]t${attr.localName}\[rs]t\[rs]t${attr.name}\[rs]n\[ga];
}

pre.textContent = result;
.EE
