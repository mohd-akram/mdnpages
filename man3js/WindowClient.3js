.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "WindowClient" "JS" "December 10, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
WindowClient \- WindowClient
.SH SYNOPSIS
The \f[CR]WindowClient\f[R] interface of the ServiceWorker API
represents the scope of a service worker client that is a document in a
browsing context, controlled by an active worker.
The service worker client independently selects and uses a service
worker for its own loading and sub\-resources.
.SH INSTANCE METHODS
\f[I]\f[CI]WindowClient\f[I] inherits methods from its parent interface,
\f[CI]Client\f[I].\f[R]
.TP
\f[B]WindowClient.focus()\f[R]
Gives user input focus to the current client.
.TP
\f[B]WindowClient.navigate()\f[R]
Loads a specified URL into a controlled client page.
.SH INSTANCE PROPERTIES
\f[I]\f[CI]WindowClient\f[I] inherits properties from its parent
interface, \f[CI]Client\f[I].\f[R]
.TP
\f[B]WindowClient.ancestorOrigins\f[R] \f[I](read\-only)\f[R] \f[I](experimental)\f[R]
An array of strings that indicates the ancestor origins of the browsing
context represented by this \f[CR]WindowClient\f[R] in reverse order.
.TP
\f[B]WindowClient.focused\f[R] \f[I](read\-only)\f[R]
A boolean that indicates whether the current client has focus.
.TP
\f[B]WindowClient.visibilityState\f[R] \f[I](read\-only)\f[R]
Indicates the visibility of the current client.
This value can be one of \f[CR]\[dq]hidden\[dq]\f[R],
\f[CR]\[dq]visible\[dq]\f[R], or \f[CR]\[dq]prerender\[dq]\f[R].
.SH EXAMPLE
.IP
.EX
self.addEventListener(\[dq]notificationclick\[dq], (event) \f[B]=>\f[R] {
  console.log(\[dq]On notification click: \[dq], event.notification.tag);
  event.notification.close();

  \f[I]// This looks to see if the current is already open and\f[R]
  \f[I]// focuses if it is\f[R]
  event.waitUntil(
    clients
      .matchAll({
        type: \[dq]window\[dq],
      })
      .then((clientList) \f[B]=>\f[R] {
        \f[B]for\f[R] (\f[B]const\f[R] client \f[B]of\f[R] clientList) {
          \f[B]if\f[R] (client.url === \[dq]/\[dq] && \[dq]focus\[dq] \f[B]in\f[R] client) {
            client.focus();
            \f[B]break\f[R];
          }
        }
        \f[B]if\f[R] (clients.openWindow) \f[B]return\f[R] clients.openWindow(\[dq]/\[dq]);
      }),
  );
});
.EE
.SH SEE ALSO
.IP \[bu] 2
Using Service Workers
.IP \[bu] 2
\c
.UR https://github.com/mdn/dom-examples/tree/main/service-worker/simple-service-worker
Service workers basic code example
.UE \c
.IP \[bu] 2
Using web workers
.IP \[bu] 2
Channel Messaging API
