.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "IDBTransaction.complete_event" "JS" "April 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
IDBTransaction.complete_event \- IDBTransaction: complete event
.SH SYNOPSIS
The \f[B]\f[CB]complete\f[B]\f[R] event of the IndexedDB API is fired
when the transaction successfully completed.
.SH SYNTAX
Use the event name in methods like \f[CR]addEventListener()\f[R], or set
an event handler property.
.IP
.EX
addEventListener(\[dq]complete\[dq], (event) \f[B]=>\f[R] {});
oncomplete = (event) \f[B]=>\f[R] {};
.EE
.SH EVENT TYPE
A generic \f[CR]Event\f[R].
.SH EXAMPLES
Using \f[CR]addEventListener()\f[R]:
.IP
.EX
\f[I]// Open the database\f[R]
\f[B]const\f[R] DBOpenRequest = window.indexedDB.open(\[dq]toDoList\[dq], 4);

DBOpenRequest.onupgradeneeded = (event) \f[B]=>\f[R] {
  \f[B]const\f[R] db = event.target.result;

  db.onerror = () \f[B]=>\f[R] {
    console.log(\[dq]Error creating database\[dq]);
  };

  \f[I]// Create an objectStore for this database\f[R]
  \f[B]const\f[R] objectStore = db.createObjectStore(\[dq]toDoList\[dq], {
    keyPath: \[dq]taskTitle\[dq],
  });

  \f[I]// define what data items the objectStore will contain\f[R]
  objectStore.createIndex(\[dq]hours\[dq], \[dq]hours\[dq], { unique: \f[B]false\f[R] });
  objectStore.createIndex(\[dq]minutes\[dq], \[dq]minutes\[dq], { unique: \f[B]false\f[R] });
  objectStore.createIndex(\[dq]day\[dq], \[dq]day\[dq], { unique: \f[B]false\f[R] });
  objectStore.createIndex(\[dq]month\[dq], \[dq]month\[dq], { unique: \f[B]false\f[R] });
  objectStore.createIndex(\[dq]year\[dq], \[dq]year\[dq], { unique: \f[B]false\f[R] });
};

DBOpenRequest.onsuccess = (event) \f[B]=>\f[R] {
  \f[B]const\f[R] db = DBOpenRequest.result;

  \f[I]// open a read/write db transaction, ready for adding the data\f[R]
  \f[B]const\f[R] transaction = db.transaction([\[dq]toDoList\[dq]], \[dq]readwrite\[dq]);

  \f[I]// add a listener for \[ga]complete\[ga]\f[R]
  transaction.addEventListener(\[dq]complete\[dq], (event) \f[B]=>\f[R] {
    console.log(\[dq]Transaction was completed\[dq]);
  });

  \f[B]const\f[R] objectStore = transaction.objectStore(\[dq]toDoList\[dq]);
  \f[B]const\f[R] newItem = {
    taskTitle: \[dq]my task\[dq],
    hours: 10,
    minutes: 10,
    day: 10,
    month: \[dq]January\[dq],
    year: 2019,
  };
  \f[B]const\f[R] objectStoreRequest = objectStore.add(newItem);
};
.EE
.PP
Using the \f[CR]oncomplete\f[R] property:
.IP
.EX
\f[I]// Open the database\f[R]
\f[B]const\f[R] DBOpenRequest = window.indexedDB.open(\[dq]toDoList\[dq], 4);

DBOpenRequest.onupgradeneeded = (event) \f[B]=>\f[R] {
  \f[B]const\f[R] db = event.target.result;

  db.onerror = () \f[B]=>\f[R] {
    console.log(\[dq]Error creating database\[dq]);
  };

  \f[I]// Create an objectStore for this database\f[R]
  \f[B]const\f[R] objectStore = db.createObjectStore(\[dq]toDoList\[dq], {
    keyPath: \[dq]taskTitle\[dq],
  });

  \f[I]// define what data items the objectStore will contain\f[R]
  objectStore.createIndex(\[dq]hours\[dq], \[dq]hours\[dq], { unique: \f[B]false\f[R] });
  objectStore.createIndex(\[dq]minutes\[dq], \[dq]minutes\[dq], { unique: \f[B]false\f[R] });
  objectStore.createIndex(\[dq]day\[dq], \[dq]day\[dq], { unique: \f[B]false\f[R] });
  objectStore.createIndex(\[dq]month\[dq], \[dq]month\[dq], { unique: \f[B]false\f[R] });
  objectStore.createIndex(\[dq]year\[dq], \[dq]year\[dq], { unique: \f[B]false\f[R] });
};

DBOpenRequest.onsuccess = (event) \f[B]=>\f[R] {
  \f[B]const\f[R] db = DBOpenRequest.result;

  \f[I]// open a read/write db transaction, ready for adding the data\f[R]
  \f[B]const\f[R] transaction = db.transaction([\[dq]toDoList\[dq]], \[dq]readwrite\[dq]);

  \f[I]// add a listener for \[ga]complete\[ga]\f[R]
  transaction.oncomplete = (event) \f[B]=>\f[R] {
    console.log(\[dq]Transaction was completed\[dq]);
  };

  \f[B]const\f[R] objectStore = transaction.objectStore(\[dq]toDoList\[dq]);
  \f[B]const\f[R] newItem = {
    taskTitle: \[dq]my task\[dq],
    hours: 10,
    minutes: 10,
    day: 10,
    month: \[dq]January\[dq],
    year: 2019,
  };
  \f[B]const\f[R] objectStoreRequest = objectStore.add(newItem);
};
.EE
.SH SEE ALSO
.IP \[bu] 2
Using IndexedDB
