.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "Date.getMilliseconds" "JS" "February 11, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Date.getMilliseconds \- Date.prototype.getMilliseconds()
.SH SYNOPSIS
The \f[B]\f[CB]getMilliseconds()\f[B]\f[R] method of \f[CR]Date\f[R]
instances returns the milliseconds for this date according to local
time.
.IP
.EX
\f[B]const\f[R] moonLanding = \f[B]new\f[R] Date(\[dq]July 20, 69 00:20:18\[dq]);
moonLanding.setMilliseconds(123);

console.log(moonLanding.getMilliseconds());
\f[I]// Expected output: 123\f[R]
.EE
.SH SYNTAX
.IP
.EX
getMilliseconds()
.EE
.SS Parameters
None.
.SS Return value
An integer, between 0 and 999, representing the milliseconds for the
given date according to local time.
Returns \f[CR]NaN\f[R] if the date is invalid.
.SH EXAMPLES
.SS Using getMilliseconds()
The \f[CR]milliseconds\f[R] variable has value \f[CR]0\f[R], based on
the value of the \f[CR]Date\f[R] object \f[CR]xmas95\f[R], which
doesn\[cq]t specify the milliseconds component, so it defaults to 0.
.IP
.EX
\f[B]const\f[R] xmas95 = \f[B]new\f[R] Date(\[dq]1995\-12\-25T23:15:30\[dq]);
\f[B]const\f[R] milliseconds = xmas95.getMilliseconds();

console.log(milliseconds); \f[I]// 0\f[R]
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]Date.prototype.getUTCMilliseconds()\f[R]
.IP \[bu] 2
\f[CR]Date.prototype.setMilliseconds()\f[R]
