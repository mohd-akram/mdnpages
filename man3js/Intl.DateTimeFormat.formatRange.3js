.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "INTL.DATETIMEFORMAT.FORMATRANGE" "3JS" "February 11, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Intl.DateTimeFormat.formatRange \-
Intl.DateTimeFormat.prototype.formatRange()
.SH SYNOPSIS
The \f[B]\f[CB]formatRange()\f[B]\f[R] method of
\f[CR]Intl.DateTimeFormat\f[R] instances formats a date range in the
most concise way based on the locales and options provided when
instantiating this \f[CR]Intl.DateTimeFormat\f[R] object.
.IP
.EX
\f[B]const\f[R] options1 = {
  weekday: \(dqlong\(dq,
  year: \(dqnumeric\(dq,
  month: \(dqlong\(dq,
  day: \(dqnumeric\(dq,
};
\f[B]const\f[R] options2 = { year: \(dq2\-digit\(dq, month: \(dqnumeric\(dq, day: \(dqnumeric\(dq };

\f[B]const\f[R] startDate = \f[B]new\f[R] Date(Date.UTC(2007, 0, 10, 10, 0, 0));
\f[B]const\f[R] endDate = \f[B]new\f[R] Date(Date.UTC(2008, 0, 10, 11, 0, 0));

\f[B]const\f[R] dateTimeFormat = \f[B]new\f[R] Intl.DateTimeFormat(\(dqen\(dq, options1);
console.log(dateTimeFormat.formatRange(startDate, endDate));
\f[I]// Expected output: \(dqWednesday, January 10, 2007 \(en Thursday, January 10, 2008\(dq\f[R]

\f[B]const\f[R] dateTimeFormat2 = \f[B]new\f[R] Intl.DateTimeFormat(\(dqen\(dq, options2);
console.log(dateTimeFormat2.formatRange(startDate, endDate));
\f[I]// Expected output: \(dq1/10/07 \(en 1/10/08\(dq\f[R]
.EE
.SH SYNTAX
.IP
.EX
formatRange(startDate, endDate)
.EE
.SS Parameters
.TP
\f[B]startDate\f[R]
The start of the date range.
Can be a \f[CR]Date\f[R] or \f[CR]Temporal.PlainDateTime\f[R] object.
Additionally can be a \f[CR]Temporal.PlainTime\f[R],
\f[CR]Temporal.PlainDate\f[R], \f[CR]Temporal.PlainYearMonth\f[R], or
\f[CR]Temporal.PlainMonthDay\f[R] object if the
\f[CR]DateTimeFormat\f[R] object was configured to print at least one
relevant part of the date.
> \f[B]Note:\f[R] > A \f[CR]Temporal.ZonedDateTime\f[R] object will
always throw a \f[CR]TypeError\f[R]; use
\f[CR]Temporal.ZonedDateTime.prototype.toLocaleString()\f[R] or convert
it to a \f[CR]Temporal.PlainDateTime\f[R] object instead.
.TP
\f[B]endDate\f[R]
The end of the date range.
Must have the same type as \f[CR]startDate\f[R].
.SS Return value
A string representing the given date range formatted according to the
locale and formatting options of this \f[CR]Intl.DateTimeFormat\f[R]
object.
.SH EXAMPLES
.SS Basic formatRange usage
This method receives two \f[CR]Date\f[R]s and formats the date range in
the most concise way based on the \f[CR]locale\f[R] and
\f[CR]options\f[R] provided when instantiating
\f[CR]Intl.DateTimeFormat\f[R].
.IP
.EX
\f[B]const\f[R] date1 = \f[B]new\f[R] Date(Date.UTC(1906, 0, 10, 10, 0, 0)); \f[I]// Wed, 10 Jan 1906 10:00:00 GMT\f[R]
\f[B]const\f[R] date2 = \f[B]new\f[R] Date(Date.UTC(1906, 0, 10, 11, 0, 0)); \f[I]// Wed, 10 Jan 1906 11:00:00 GMT\f[R]
\f[B]const\f[R] date3 = \f[B]new\f[R] Date(Date.UTC(1906, 0, 20, 10, 0, 0)); \f[I]// Sat, 20 Jan 1906 10:00:00 GMT\f[R]

\f[B]const\f[R] fmt1 = \f[B]new\f[R] Intl.DateTimeFormat(\(dqen\(dq, {
  year: \(dq2\-digit\(dq,
  month: \(dqnumeric\(dq,
  day: \(dqnumeric\(dq,
  hour: \(dqnumeric\(dq,
  minute: \(dqnumeric\(dq,
});
console.log(fmt1.format(date1)); \f[I]// \(aq1/10/06, 10:00 AM\(aq\f[R]
console.log(fmt1.formatRange(date1, date2)); \f[I]// \(aq1/10/06, 10:00 \(en 11:00 AM\(aq\f[R]
console.log(fmt1.formatRange(date1, date3)); \f[I]// \(aq1/10/06, 10:00 AM \(en 1/20/07, 10:00 AM\(aq\f[R]

\f[B]const\f[R] fmt2 = \f[B]new\f[R] Intl.DateTimeFormat(\(dqen\(dq, {
  year: \(dqnumeric\(dq,
  month: \(dqshort\(dq,
  day: \(dqnumeric\(dq,
});
console.log(fmt2.format(date1)); \f[I]// \(aqJan 10, 1906\(aq\f[R]
console.log(fmt2.formatRange(date1, date2)); \f[I]// \(aqJan 10, 1906\(aq\f[R]
console.log(fmt2.formatRange(date1, date3)); \f[I]// \(aqJan 10 \(en 20, 1906\(aq\f[R]
.EE
.SH SEE ALSO
.IP \(bu 2
\f[CR]Intl.DateTimeFormat\f[R]
