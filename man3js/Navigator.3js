.\" Automatically generated by Pandoc 3.4
.\"
.TH "Navigator" "JS" "November 27, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Navigator \- Navigator
.SH SYNOPSIS
The \f[B]\f[CB]Navigator\f[B]\f[R] interface represents the state and
the identity of the user agent.
It allows scripts to query it and to register themselves to carry on
some activities.
.PP
A \f[CR]Navigator\f[R] object can be retrieved using the read\-only
\f[CR]window.navigator\f[R] property.
.SH INSTANCE PROPERTIES
\f[I]Doesn\[cq]t inherit any properties.\f[R]
.SS Standard properties
.TP
\f[B]Navigator.bluetooth\f[R] \f[I](read\-only)\f[R] \f[I](experimental)\f[R] \f[I](secure context)\f[R]
Returns a \f[CR]Bluetooth\f[R] object for the current document,
providing access to Web Bluetooth API functionality.
.TP
\f[B]Navigator.clipboard\f[R] \f[I](read\-only)\f[R] \f[I](secure context)\f[R]
Returns a \f[CR]Clipboard\f[R] object that provides read and write
access to the system clipboard.
.TP
\f[B]Navigator.connection\f[R] \f[I](read\-only)\f[R]
Returns a \f[CR]NetworkInformation\f[R] object containing information
about the network connection of a device.
.TP
\f[B]Navigator.contacts\f[R] \f[I](read\-only)\f[R] \f[I](experimental)\f[R] \f[I](secure context)\f[R]
Returns a \f[CR]ContactsManager\f[R] interface which allows users to
select entries from their contact list and share limited details of the
selected entries with a website or application.
.TP
\f[B]Navigator.cookieEnabled\f[R] \f[I](read\-only)\f[R]
Returns false if setting a cookie will be ignored and true otherwise.
.TP
\f[B]Navigator.credentials\f[R] \f[I](read\-only)\f[R] \f[I](secure context)\f[R]
Returns the \f[CR]CredentialsContainer\f[R] interface which exposes
methods to request credentials and notify the user agent when
interesting events occur such as successful sign in or sign out.
.TP
\f[B]Navigator.deviceMemory\f[R] \f[I](read\-only)\f[R] \f[I](secure context)\f[R]
Returns the amount of device memory in gigabytes.
This value is an approximation given by rounding to the nearest power of
2 and dividing that number by 1024.
.TP
\f[B]Navigator.geolocation\f[R] \f[I](read\-only)\f[R]
Returns a \f[CR]Geolocation\f[R] object allowing accessing the location
of the device.
.TP
\f[B]Navigator.gpu\f[R] \f[I](read\-only)\f[R] \f[I](experimental)\f[R] \f[I](secure context)\f[R]
Returns the \f[CR]GPU\f[R] object for the current browsing context.
The entry point for the WebGPU API.
.TP
\f[B]Navigator.hardwareConcurrency\f[R] \f[I](read\-only)\f[R]
Returns the number of logical processor cores available.
.TP
\f[B]Navigator.hid\f[R] \f[I](read\-only)\f[R] \f[I](experimental)\f[R] \f[I](secure context)\f[R]
Returns an \f[CR]HID\f[R] object providing methods for connecting to HID
devices, listing attached HID devices, and event handlers for connected
HID devices.
.TP
\f[B]Navigator.ink\f[R] \f[I](read\-only)\f[R] \f[I](experimental)\f[R]
Returns an \f[CR]Ink\f[R] object for the current document, providing
access to Ink API functionality.
.TP
\f[B]Navigator.keyboard\f[R] \f[I](read\-only)\f[R] \f[I](experimental)\f[R] \f[I](secure context)\f[R]
Returns a \f[CR]Keyboard\f[R] object which provides access to functions
that retrieve keyboard layout maps and toggle capturing of key presses
from the physical keyboard.
.TP
\f[B]Navigator.language\f[R] \f[I](read\-only)\f[R]
Returns a string representing the preferred language of the user,
usually the language of the browser UI.
The \f[CR]null\f[R] value is returned when this is unknown.
.TP
\f[B]Navigator.languages\f[R] \f[I](read\-only)\f[R]
Returns an array of strings representing the languages known to the
user, by order of preference.
.TP
\f[B]Navigator.locks\f[R] \f[I](read\-only)\f[R] \f[I](secure context)\f[R]
Returns a \f[CR]LockManager\f[R] object that provides methods for
requesting a new \f[CR]Lock\f[R] object and querying for an existing
\f[CR]Lock\f[R] object.
.TP
\f[B]Navigator.login\f[R] \f[I](read\-only)\f[R] \f[I](experimental)\f[R] \f[I](secure context)\f[R]
Provides access to the browser\[cq]s \f[CR]NavigatorLogin\f[R] object,
which a federated identity provider (IdP) can use to set a user\[cq]s
login status when they sign into or out of the IdP.
See Federated Credential Management (FedCM) API for more details.
.TP
\f[B]Navigator.maxTouchPoints\f[R] \f[I](read\-only)\f[R]
Returns the maximum number of simultaneous touch contact points are
supported by the current device.
.TP
\f[B]Navigator.mediaCapabilities\f[R] \f[I](read\-only)\f[R]
Returns a \f[CR]MediaCapabilities\f[R] object that can expose
information about the decoding and encoding capabilities for a given
format and output capabilities.
.TP
\f[B]Navigator.mediaDevices\f[R] \f[I](read\-only)\f[R] \f[I](secure context)\f[R]
Returns a reference to a \f[CR]MediaDevices\f[R] object which can then
be used to get information about available media devices
(\f[CR]MediaDevices.enumerateDevices()\f[R]), find out what
constrainable properties are supported for media on the user\[cq]s
computer and user agent
(\f[CR]MediaDevices.getSupportedConstraints()\f[R]), and to request
access to media using \f[CR]MediaDevices.getUserMedia()\f[R].
.TP
\f[B]Navigator.mediaSession\f[R] \f[I](read\-only)\f[R]
Returns \f[CR]MediaSession\f[R] object which can be used to provide
metadata that can be used by the browser to present information about
the currently\-playing media to the user, such as in a global media
controls UI.
.TP
\f[B]Navigator.onLine\f[R] \f[I](read\-only)\f[R]
Returns a boolean value indicating whether the browser is working
online.
.TP
\f[B]Navigator.pdfViewerEnabled\f[R] \f[I](read\-only)\f[R]
Returns \f[CR]true\f[R] if the browser can display PDF files inline when
navigating to them, and \f[CR]false\f[R] otherwise.
.TP
\f[B]Navigator.permissions\f[R] \f[I](read\-only)\f[R]
Returns a \f[CR]Permissions\f[R] object that can be used to query and
update permission status of APIs covered by the Permissions API.
.TP
\f[B]Navigator.presentation\f[R] \f[I](read\-only)\f[R] \f[I](secure context)\f[R]
Returns a reference to the \f[CR]Presentation\f[R] API.
.TP
\f[B]Navigator.scheduling\f[R] \f[I](read\-only)\f[R] \f[I](experimental)\f[R]
Returns a \f[CR]Scheduling\f[R] object for the current document.
.TP
\f[B]Navigator.serial\f[R] \f[I](read\-only)\f[R] \f[I](experimental)\f[R] \f[I](secure context)\f[R]
Returns a \f[CR]Serial\f[R] object, which represents the entry point
into the Web Serial API to enable the control of serial ports.
.TP
\f[B]Navigator.serviceWorker\f[R] \f[I](read\-only)\f[R] \f[I](secure context)\f[R]
Returns a \f[CR]ServiceWorkerContainer\f[R] object, which provides
access to registration, removal, upgrade, and communication with the
\f[CR]ServiceWorker\f[R] objects for the \c
.UR https://html.spec.whatwg.org/multipage/browsers.html#concept-document-window
associated document
.UE \c
\&.
.TP
\f[B]Navigator.storage\f[R] \f[I](read\-only)\f[R] \f[I](secure context)\f[R]
Returns the singleton \f[CR]StorageManager\f[R] object used for managing
persistence permissions and estimating available storage on a
site\-by\-site/app\-by\-app basis.
.TP
\f[B]Navigator.usb\f[R] \f[I](read\-only)\f[R] \f[I](secure context)\f[R]
Returns a \f[CR]USB\f[R] object for the current document, providing
access to WebUSB API functionality.
.TP
\f[B]Navigator.userActivation\f[R] \f[I](read\-only)\f[R]
Returns a \f[CR]UserActivation\f[R] object containing information about
the current window\[cq]s user activation state.
.TP
\f[B]Navigator.userAgent\f[R] \f[I](read\-only)\f[R]
Returns the user agent string for the current browser.
.TP
\f[B]Navigator.userAgentData\f[R] \f[I](read\-only)\f[R] \f[I](experimental)\f[R] \f[I](secure context)\f[R]
Returns a \f[CR]NavigatorUAData\f[R] object, which gives access to
information about the browser and operating system of the user.
.TP
\f[B]Navigator.virtualKeyboard\f[R] \f[I](read\-only)\f[R] \f[I](experimental)\f[R] \f[I](secure context)\f[R]
Returns a reference to the \f[CR]VirtualKeyboard\f[R] API, to take
control of the on\-screen virtual keyboard.
.TP
\f[B]Navigator.wakeLock\f[R] \f[I](read\-only)\f[R] \f[I](secure context)\f[R]
Returns a \f[CR]WakeLock\f[R] interface you can use to request screen
wake locks and prevent screen from dimming, turning off, or showing a
screen saver.
.TP
\f[B]Navigator.webdriver\f[R] \f[I](read\-only)\f[R]
Indicates whether the user agent is controlled by automation.
.TP
\f[B]Navigator.windowControlsOverlay\f[R] \f[I](read\-only)\f[R] \f[I](secure context)\f[R]
Returns the \f[CR]WindowControlsOverlay\f[R] interface which exposes
information about the geometry of the title bar in desktop Progressive
Web Apps, and an event to know whenever it changes.
.TP
\f[B]Navigator.xr\f[R] \f[I](read\-only)\f[R] \f[I](experimental)\f[R] \f[I](secure context)\f[R]
Returns \f[CR]XRSystem\f[R] object, which represents the entry point
into the WebXR API.
.SS Non\-standard properties
.TP
\f[B]Navigator.buildID\f[R] \f[I](read\-only)\f[R] \f[I](non\-standard)\f[R]
Returns the build identifier of the browser.
In modern browsers this property now returns a fixed timestamp as a
privacy measure, e.g.\ \f[CR]20181001000000\f[R] in Firefox 64 onwards.
.TP
\f[B]Navigator.globalPrivacyControl\f[R] \f[I](read\-only)\f[R] \f[I](experimental)\f[R]
Returns a boolean indicating a user\[cq]s consent to their information
being shared or sold.
.TP
\f[B]Navigator.standalone\f[R] \f[I](non\-standard)\f[R]
Returns a boolean indicating whether the browser is running in
standalone mode.
Available on Apple\[cq]s iOS Safari only.
.SS Deprecated properties
.TP
\f[B]Navigator.activeVRDisplays\f[R] \f[I](read\-only)\f[R] \f[I](deprecated)\f[R] \f[I](non\-standard)\f[R]
Returns an array containing every \f[CR]VRDisplay\f[R] object that is
currently presenting (\f[CR]VRDisplay.isPresenting\f[R] is
\f[CR]true\f[R]).
.TP
\f[B]Navigator.appCodeName\f[R] \f[I](read\-only)\f[R] \f[I](deprecated)\f[R]
Always returns \f[CR]\[aq]Mozilla\[aq]\f[R], in any browser.
.TP
\f[B]Navigator.appName\f[R] \f[I](read\-only)\f[R] \f[I](deprecated)\f[R]
Always returns \f[CR]\[aq]Netscape\[aq]\f[R], in any browser.
.TP
\f[B]Navigator.appVersion\f[R] \f[I](read\-only)\f[R] \f[I](deprecated)\f[R]
Returns the version of the browser as a string.
Do not rely on this property to return the correct value.
.TP
\f[B]Navigator.doNotTrack\f[R] \f[I](read\-only)\f[R] \f[I](deprecated)\f[R] \f[I](non\-standard)\f[R]
Reports the value of the user\[cq]s do\-not\-track preference.
When this value is \[lq]1\[rq], your website or application should not
track the user.
.TP
\f[B]Navigator.mimeTypes\f[R] \f[I](read\-only)\f[R] \f[I](deprecated)\f[R]
Returns an \f[CR]MimeTypeArray\f[R] listing the MIME types supported by
the browser.
.TP
\f[B]Navigator.oscpu\f[R] \f[I](read\-only)\f[R] \f[I](deprecated)\f[R]
Returns a string that represents the current operating system.
.TP
\f[B]Navigator.platform\f[R] \f[I](read\-only)\f[R] \f[I](deprecated)\f[R]
Returns a string representing the platform of the browser.
Do not rely on this function to return a significant value.
.TP
\f[B]Navigator.plugins\f[R] \f[I](read\-only)\f[R] \f[I](deprecated)\f[R]
Returns a \f[CR]PluginArray\f[R] listing the plugins installed in the
browser.
.TP
\f[B]Navigator.product\f[R] \f[I](read\-only)\f[R] \f[I](deprecated)\f[R]
Always returns \f[CR]\[aq]Gecko\[aq]\f[R], in any browser.
.TP
\f[B]Navigator.productSub\f[R] \f[I](read\-only)\f[R] \f[I](deprecated)\f[R]
Returns either the string \f[CR]\[aq]20030107\[aq]\f[R], or
\f[CR]\[aq]\[dq]20100101\[aq]\f[R].
.TP
\f[B]Navigator.vendor\f[R] \f[I](read\-only)\f[R] \f[I](deprecated)\f[R]
Returns either the empty string,
\f[CR]\[aq]Apple Computer Inc.\[aq]\f[R], or
\f[CR]\[aq]Google Inc.\[aq]\f[R].
.TP
\f[B]Navigator.vendorSub\f[R] \f[I](read\-only)\f[R] \f[I](deprecated)\f[R]
Always returns the empty string.
.SH INSTANCE METHODS
\f[I]Doesn\[cq]t inherit any method.\f[R]
.TP
\f[B]Navigator.canShare()\f[R] \f[I](secure context)\f[R]
Returns \f[CR]true\f[R] if a call to \f[CR]Navigator.share()\f[R] would
succeed.
.TP
\f[B]Navigator.clearAppBadge()\f[R] \f[I](secure context)\f[R]
Clears a badge on the current app\[cq]s icon and returns a
\f[CR]Promise\f[R] that resolves with \f[CR]undefined\f[R].
.TP
\f[B]Navigator.deprecatedReplaceInURN()\f[R] \f[I](experimental)\f[R]
Substitutes specified strings inside the mapped URL corresponding to a
given opaque URN or \f[CR]FencedFrameConfig\f[R]\[cq]s internal
\f[CR]url\f[R] property.
This method has been made available as a temporary measure (hence
\[lq]deprecated\[rq]) to enable that substitution for fenced frame URLs,
helping ad tech providers to migrate existing implementations across to
\c
.UR https://developers.google.com/privacy-sandbox
privacy sandbox
.UE \c
\ APIs.
.TP
\f[B]Navigator.getAutoplayPolicy()\f[R] \f[I](experimental)\f[R]
Returns a value indicating whether the specified media element, audio
context, or media feature \[lq]type\[rq] is allowed to autoplay.
.TP
\f[B]Navigator.getBattery()\f[R] \f[I](secure context)\f[R]
Returns a promise that resolves with a \f[CR]BatteryManager\f[R] object
that returns information about the battery charging status.
.TP
\f[B]Navigator.getGamepads()\f[R]
returns an array of \f[CR]Gamepad\f[R] objects, one for each gamepad
connected to the device.
.TP
\f[B]Navigator.getInstalledRelatedApps()\f[R] \f[I](experimental)\f[R] \f[I](secure context)\f[R]
Returns a promise that resolves with an array of objects representing
any related native or Progressive Web Applications that the user has
installed.
.TP
\f[B]Navigator.registerProtocolHandler()\f[R] \f[I](secure context)\f[R]
Allows websites to register themselves as a possible handler for a given
protocol.
.TP
\f[B]Navigator.requestMediaKeySystemAccess()\f[R] \f[I](secure context)\f[R]
Returns a \f[CR]Promise\f[R] for a MediaKeySystemAccess object.
.TP
\f[B]Navigator.requestMIDIAccess()\f[R] \f[I](secure context)\f[R]
Returns a \f[CR]Promise\f[R] representing a request for access to MIDI
devices on the user\[cq]s system.
.TP
\f[B]Navigator.sendBeacon()\f[R]
Used to asynchronously transfer a small amount of data using HTTP from
the User Agent to a web server.
.TP
\f[B]Navigator.setAppBadge()\f[R] \f[I](secure context)\f[R]
Sets a badge on the icon associated with this app and returns a
\f[CR]Promise\f[R] that resolves with \f[CR]undefined\f[R].
.TP
\f[B]Navigator.share()\f[R] \f[I](secure context)\f[R]
Invokes the native sharing mechanism of the current platform.
.TP
\f[B]Navigator.vibrate()\f[R]
Causes vibration on devices with support for it.
Does nothing if vibration support isn\[cq]t available.
.TP
\f[B]Navigator.unregisterProtocolHandler()\f[R] \f[I](secure context)\f[R]
Unregister a website that is a handler for a given protocol.
.SS Deprecated methods
.TP
\f[B]Navigator.getUserMedia()\f[R] \f[I](deprecated)\f[R] \f[I](secure context)\f[R]
After having prompted the user for permission, returns the audio or
video stream associated to a camera or microphone on the local computer.
.TP
\f[B]Navigator.getVRDisplays()\f[R] \f[I](deprecated)\f[R] \f[I](non\-standard)\f[R]
Returns a promise that resolves to an array of \f[CR]VRDisplay\f[R]
objects representing any available VR devices connected to the computer.
.TP
\f[B]Navigator.javaEnabled()\f[R] \f[I](deprecated)\f[R]
Always returns false.
.TP
\f[B]Navigator.taintEnabled()\f[R] \f[I](deprecated)\f[R]
Returns \f[CR]false\f[R].
JavaScript taint/untaint functions removed in JavaScript 1.2.
