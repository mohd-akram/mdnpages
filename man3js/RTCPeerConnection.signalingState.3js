.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "RTCPeerConnection.signalingState" "JS" "March 25, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
RTCPeerConnection.signalingState \- RTCPeerConnection: signalingState
property
.SH SYNOPSIS
The \f[B]\f[CB]signalingState\f[B]\f[R] read\-only property of the
\f[CR]RTCPeerConnection\f[R] interface returns a string value describing
the state of the signaling process on the local end of the connection
while connecting or reconnecting to another peer.
See Signaling in our WebRTC session lifetime page.
.PP
Because the signaling process is a state machine, being able to verify
that your code is in the expected state when messages arrive can help
avoid unexpected and avoidable failures.
For example, if you receive an answer while the
\f[CR]signalingState\f[R] isn\[cq]t
\f[CR]\[dq]have\-local\-offer\[dq]\f[R], you know that something is
wrong, since you should only receive answers after creating an offer but
before an answer has been received and passed into
\f[CR]RTCPeerConnection.setLocalDescription()\f[R].
Your code will be more reliable if you watch for mismatched states like
this and handle them gracefully.
.PP
This value may also be useful during debugging, for example.
.PP
In addition, when the value of this property changes, a
\f[CR]signalingstatechange\f[R] event is sent to the
\f[CR]RTCPeerConnection\f[R] instance.
.SH VALUE
The allowed string values are:
.TP
\f[B]stable\f[R]
There is no ongoing exchange of offer and answer underway.
This may mean that the \f[CR]RTCPeerConnection\f[R] object is new, in
which case both the \f[CR]localDescription\f[R] and
\f[CR]remoteDescription\f[R] are \f[CR]null\f[R]; it may also mean that
negotiation is complete and a connection has been established.
.TP
\f[B]have\-local\-offer\f[R]
The local peer has called
\f[CR]RTCPeerConnection.setLocalDescription()\f[R], passing in SDP
representing an offer (usually created by calling
\f[CR]RTCPeerConnection.createOffer()\f[R]), and the offer has been
applied successfully.
.TP
\f[B]have\-remote\-offer\f[R]
The remote peer has created an offer and used the signaling server to
deliver it to the local peer, which has set the offer as the remote
description by calling
\f[CR]RTCPeerConnection.setRemoteDescription()\f[R].
.TP
\f[B]have\-local\-pranswer\f[R]
The offer sent by the remote peer has been applied and an answer has
been created (usually by calling
\f[CR]RTCPeerConnection.createAnswer()\f[R]) and applied by calling
\f[CR]RTCPeerConnection.setLocalDescription()\f[R].
This provisional answer describes the supported media formats and so
forth, but may not have a complete set of ICE candidates included.
Further candidates will be delivered separately later.
.TP
\f[B]have\-remote\-pranswer\f[R]
A provisional answer has been received and successfully applied in
response to an offer previously sent and established by calling
\f[CR]setLocalDescription()\f[R].
.TP
\f[B]closed\f[R]
The \f[CR]RTCPeerConnection\f[R] has been closed.
.SH EXAMPLES
.IP
.EX
\f[B]const\f[R] pc = \f[B]new\f[R] RTCPeerConnection(configuration);
\f[B]const\f[R] state = pc.signalingState;
.EE
.SH SEE ALSO
.IP \[bu] 2
Lifetime of a WebRTC session
.IP \[bu] 2
\f[CR]RTCPeerConnection\f[R]
.IP \[bu] 2
\f[CR]signalingstatechange\f[R]
.IP \[bu] 2
WebRTC
