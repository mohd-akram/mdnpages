.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "Attr.prefix" "JS" "July 26, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Attr.prefix \- Attr: prefix property
.SH SYNOPSIS
The read\-only \f[B]\f[CB]prefix\f[B]\f[R] property of the
\f[CR]Attr\f[R] returns the namespace prefix of the attribute, or
\f[CR]null\f[R] if no prefix is specified.
.PP
The prefix is always in lower case, whatever case is used at the
attribute creation.
.RS
.PP
\f[B]Note:\f[R] Only XML supports namespaces.
HTML does not.
That means that the prefix of an attribute of an HTML element will
always be \f[CR]null\f[R].
.RE
.PP
Also, only the \f[CR]xml\f[R] (for the \f[CR]xml:lang\f[R] attribute),
\f[CR]xlink\f[R] (for the \f[CR]xlink:href\f[R], \f[CR]xlink:show\f[R],
\f[CR]xlink:target\f[R] and \f[CR]xlink:title\f[R] attributes) and
\f[CR]xpath\f[R] namespaces are supported, and only on SVG and MathML
elements.
.SH VALUE
A string containing the prefix of the namespace the attribute belongs
too.
If none, it returns \f[CR]null\f[R].
.SH EXAMPLE
.SS HTML
.IP
.EX
<\f[B]svg\f[R] xml:lang=\[dq]en\-US\[dq] class=\[dq]struct\[dq] height=\[dq]1\[dq] width=\[dq]1\[dq]>Click me</\f[B]svg\f[R]>
<\f[B]label\f[R] xml:lang=\[dq]en\-US\[dq] class=\[dq]struct\[dq]></\f[B]label\f[R]>

<\f[B]p\f[R]>
  <\f[B]button\f[R]>Show value for &lt;svg&gt;</\f[B]button\f[R]>
  <\f[B]button\f[R]>Show value for &lt;label&gt;</\f[B]button\f[R]>
</\f[B]p\f[R]>

<\f[B]p\f[R]>
  Prefix of the attribute <\f[B]code\f[R]>xml:lang</\f[B]code\f[R]>:
  <\f[B]output\f[R] id=\[dq]result\[dq]>None.</\f[B]output\f[R]>
</\f[B]p\f[R]>
.EE
.SS JavaScript
.IP
.EX
\f[B]const\f[R] elements = document.querySelectorAll(\[dq].struct\[dq]);
\f[B]const\f[R] buttons = document.querySelectorAll(\[dq]button\[dq]);
\f[B]const\f[R] outputEl = document.querySelector(\[dq]#result\[dq]);

\f[B]let\f[R] i = 0;
\f[B]for\f[R] (\f[B]const\f[R] button \f[B]of\f[R] buttons) {
  \f[B]const\f[R] element = elements[i];
  button.addEventListener(\[dq]click\[dq], () \f[B]=>\f[R] {
    \f[B]const\f[R] attribute = element.attributes[0];
    outputEl.value = attribute.prefix;
  });
  i++;
}
.EE
.SH SEE ALSO
.IP \[bu] 2
The properties \f[CR]Attr.name\f[R], returning the qualified name of the
attribute, and \f[CR]Attr.localName\f[R], its local name.
.IP \[bu] 2
The \f[CR]Element.prefix()\f[R] property, returning the namespace prefix
of an \f[CR]Element\f[R].
