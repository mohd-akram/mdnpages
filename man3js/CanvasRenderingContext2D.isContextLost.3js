.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "CanvasRenderingContext2D.isContextLost" "JS" "April 24, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
CanvasRenderingContext2D.isContextLost \- CanvasRenderingContext2D:
isContextLost() method
.SH SYNOPSIS
The \f[B]\f[CB]CanvasRenderingContext2D.isContextLost()\f[B]\f[R] method
of the Canvas 2D API returns \f[CR]true\f[R] if the rendering context is
lost (and has not yet been reset).
This might occur due to driver crashes, running out of memory, and so
on.
.PP
If the user agent detects that the canvas backing storage is lost it
will fire the \f[CR]contextlost\f[R] event at the associated
\f[CR]HTMLCanvasElement\f[R].
If this event is not cancelled it will attempt to reset the backing
storage to the default state (this is equivalent to calling
\f[CR]CanvasRenderingContext2D.reset()\f[R]).
On success it will fire the \f[CR]contextrestored\f[R] event, indicating
that the context is ready to reinitialize and redraw.
.SH SYNTAX
.IP
.EX
isContextLost()
.EE
.SS Parameters
None.
.SS Return value
\f[CR]true\f[R] if the rendering context was lost; \f[CR]false\f[R]
otherwise.
.SS Examples
.IP
.EX
\f[B]const\f[R] ctx = canvas.getContext(\[dq]2d\[dq]);

\f[B]if\f[R] (ctx.isContextLost()) {
  console.log(\[dq]Context is lost\[dq]);
}
.EE
.SH SEE ALSO
.IP \[bu] 2
The interface defining this method: \f[CR]CanvasRenderingContext2D\f[R]
.IP \[bu] 2
\f[CR]HTMLCanvasElement: contextlost\f[R] event
.IP \[bu] 2
\f[CR]HTMLCanvasElement: contextrestored\f[R] event
