.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "WorkerGlobalScope.atob" "JS" "February 18, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
WorkerGlobalScope.atob \- WorkerGlobalScope: atob() method
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is only available in Web Workers.
.PP
The \f[B]\f[CB]atob()\f[B]\f[R] method of the
\f[CR]WorkerGlobalScope\f[R] interface decodes a string of data which
has been encoded using Base64 encoding.
You can use the \f[CR]WorkerGlobalScope.btoa()\f[R] method to encode and
transmit data which may otherwise cause communication problems, then
transmit it and use the \f[CR]atob()\f[R] method to decode the data
again.
For example, you can encode, transmit, and decode control characters
such as ASCII values 0 through 31.
.SH SYNTAX
.IP
.EX
atob(encodedData)
.EE
.SS Parameters
.TP
\f[B]encodedData\f[R]
A binary string (i.e., a string in which each character in the string is
treated as a byte of binary data) containing base64\-encoded data.
.SS Return value
An ASCII string containing decoded data from \f[CR]encodedData\f[R].
.SS Exceptions
.TP
\f[B]InvalidCharacterError\f[R] \f[B]DOMException\f[R]
Thrown if \f[CR]encodedData\f[R] is not valid base64.
.SH EXAMPLES
.IP
.EX
\f[B]const\f[R] encodedData = self.btoa(\[dq]Hello, world\[dq]); \f[I]// encode a string\f[R]
\f[B]const\f[R] decodedData = self.atob(encodedData); \f[I]// decode the string\f[R]
.EE
.SH SEE ALSO
.IP \[bu] 2
\c
.UR https://github.com/zloirock/core-js#base64-utility-methods
A polyfill of \f[CR]atob\f[R]
.UE \c
\ is available in \c
.UR https://github.com/zloirock/core-js
\f[CR]core\-js\f[R]
.UE \c
.IP \[bu] 2
\f[CR]data\f[R] URLs
.IP \[bu] 2
\f[CR]Window.atob()\f[R]: the same method, but in window scopes.
.IP \[bu] 2
\f[CR]WorkerGlobalScope.btoa()\f[R]
.IP \[bu] 2
\f[CR]Uint8Array.fromBase64()\f[R]
