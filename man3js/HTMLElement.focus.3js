.\" Automatically generated by Pandoc 3.4
.\"
.TH "HTMLElement.focus" "JS" "July 17, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
HTMLElement.focus \- HTMLElement: focus() method
.SH SYNOPSIS
The \f[B]\f[CB]HTMLElement.focus()\f[B]\f[R] method sets focus on the
specified element, if it can be focused.
The focused element is the element that will receive keyboard and
similar events by default.
.PP
By default the browser will scroll the element into view after focusing
it, and it may also provide visible indication of the focused element
(typically by displaying a \[lq]focus ring\[rq] around the element).
Parameter options are provided to disable the default scrolling and
force visible indication on elements.
.SH SYNTAX
.IP
.EX
focus()
focus(options)
.EE
.SS Parameters
.TP
\f[B]options\f[R] \f[I](optional)\f[R]
An optional object for controlling aspects of the focusing process.
This object may contain the following properties:
.RS
.TP
\f[B]preventScroll\f[R] \f[I](optional)\f[R]
A boolean value indicating whether or not the browser should scroll the
document to bring the newly\-focused element into view.
A value of \f[CR]false\f[R] for \f[CR]preventScroll\f[R] (the default)
means that the browser will scroll the element into view after focusing
it.
If \f[CR]preventScroll\f[R] is set to \f[CR]true\f[R], no scrolling will
occur.
.TP
\f[B]focusVisible\f[R] \f[I](optional)\f[R] \f[I](experimental)\f[R]
A boolean value that should be set to \f[CR]true\f[R] to force, or
\f[CR]false\f[R] to prevent visible indication that the element is
focused.
If the property is not specified, a browser will provide visible
indication if it determines that this would improve accessibility for
users.
.RE
.SS Return value
None (\f[CR]undefined\f[R]).
.SH EXAMPLES
.SS Focus on a text field
This example uses a button to set the focus on a text field.
.SS HTML
.IP
.EX
<\f[B]input\f[R] id=\[dq]myTextField\[dq] value=\[dq]Text field.\[dq] />
<\f[B]button\f[R] id=\[dq]focusButton\[dq]>Click to set focus on the text field</\f[B]button\f[R]>
.EE
.SS JavaScript
The code below adds an event handler to set the focus on the text field
when the button is pressed.
Note that most browsers will automatically add visible indication (a
\[lq]focus ring\[rq]) for a focused text field, so the code does not set
\f[CR]focusVisible\f[R] to \f[CR]true\f[R].
.IP
.EX
document.getElementById(\[dq]focusButton\[dq]).addEventListener(\[dq]click\[dq], () \f[B]=>\f[R] {
  document.getElementById(\[dq]myTextField\[dq]).focus();
});
.EE
.SS Result
Select the button to set focus on the text field.
.SS Focus on a button
This example demonstrates how you can set the focus on a button element.
.SS HTML
First we define three buttons.
Both the middle and right button will set focus on the left\-most
button.
The right right\-most button will also specify \f[CR]focusVisible\f[R].
.IP
.EX
<\f[B]button\f[R] id=\[dq]myButton\[dq]>Button</\f[B]button\f[R]>
<\f[B]button\f[R] id=\[dq]focusButton\[dq]>Click to set focus on \[dq]Button\[dq]</\f[B]button\f[R]>
<\f[B]button\f[R] id=\[dq]focusButtonVisibleIndication\[dq]>
  Click to set focus and focusVisible on \[dq]Button\[dq]
</\f[B]button\f[R]>
.EE
.SS JavaScript
The code below sets up handlers for click events on the middle and right
buttons.
.IP
.EX
document.getElementById(\[dq]focusButton\[dq]).addEventListener(\[dq]click\[dq], () \f[B]=>\f[R] {
  document.getElementById(\[dq]myButton\[dq]).focus();
});

document
  .getElementById(\[dq]focusButtonVisibleIndication\[dq])
  .addEventListener(\[dq]click\[dq], () \f[B]=>\f[R] {
    document.getElementById(\[dq]myButton\[dq]).focus({ focusVisible: \f[B]true\f[R] });
  });
.EE
.SS Result
Select either the middle button or right\-most button to set focus on
the left\-most button.
.PP
Browsers do not usually show visible focus indication on button elements
when focus is set programmatically, so the effect of selecting the
middle button may not be obvious.
However provided the \f[CR]focusVisible\f[R] option is supported on your
browser, you should see focus changing on the left\-most button when the
right\-most button is selected.
.SS Focus with and without scrolling
This example shows the effect of setting focus with the option
\f[CR]preventScroll\f[R] set \f[CR]true\f[R] and \f[CR]false\f[R] (the
default).
.SS HTML
The HTML defines two buttons that will be used to set the focus of a
third button that is off\-screen
.IP
.EX
<\f[B]button\f[R] id=\[dq]focus_scroll\[dq]>Click to set focus on off\-screen button</\f[B]button\f[R]>
<\f[B]button\f[R] id=\[dq]focus_no_scroll\[dq]>
  Click to set focus on offscreen button without scrolling
</\f[B]button\f[R]>

<\f[B]div\f[R] id=\[dq]container\[dq]>
  <\f[B]button\f[R] id=\[dq]myButton\[dq] style=\[dq]margin\-top: 500px;\[dq]>Button</\f[B]button\f[R]>
</\f[B]div\f[R]>
.EE
.SS JavaScript
This code sets a click event handler on the first and second buttons to
set the focus on the last button.
Note that the first handler doesn\[cq]t specify the
\f[CR]preventScroll\f[R] option so scrolling to the focused element will
be enabled.
.IP
.EX
document.getElementById(\[dq]focus_scroll\[dq]).addEventListener(\[dq]click\[dq], () \f[B]=>\f[R] {
  document.getElementById(\[dq]myButton\[dq]).focus(); \f[I]// default: {preventScroll:false}\f[R]
});

document.getElementById(\[dq]focus_no_scroll\[dq]).addEventListener(\[dq]click\[dq], () \f[B]=>\f[R] {
  document.getElementById(\[dq]myButton\[dq]).focus({ preventScroll: \f[B]true\f[R] });
});
.EE
.SS Result
Select the first button to set focus and scroll to the off\-screen
button.
Selecting the second button set\[cq]s the focus, but scrolling is
disabled.
.SH NOTES
.IP \[bu] 2
If you call \f[CR]HTMLElement.focus()\f[R] from a mousedown event
handler, you must call \f[CR]event.preventDefault()\f[R] to keep the
focus from leaving the \f[CR]HTMLElement\f[R]
.IP \[bu] 2
Behavior of the focus in relation to different HTML features like
\f[CR]tabindex\f[R] or shadow dom, which previously remained
under\-specified, were updated in October 2019.
See the \c
.UR https://blog.whatwg.org/focusing-on-focus
WHATWG blog
.UE \c
\ for more information.
.SH SEE ALSO
.IP \[bu] 2
\f[CR]HTMLElement.blur\f[R] to remove the focus from an element.
.IP \[bu] 2
\f[CR]document.activeElement\f[R] to know which is the currently focused
element.
