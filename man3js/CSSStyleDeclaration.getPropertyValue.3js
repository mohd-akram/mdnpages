.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "CSSSTYLEDECLARATION.GETPROPERTYVALUE" "3JS" "June 3, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
CSSStyleDeclaration.getPropertyValue \- CSSStyleDeclaration:
getPropertyValue() method
.SH SYNOPSIS
The \f[B]CSSStyleDeclaration.getPropertyValue()\f[R] method interface
returns a string containing the value of a specified CSS property.
.SH SYNTAX
.IP
.EX
getPropertyValue(property)
.EE
.SS Parameters
.TP
\f[B]property\f[R]
A string representing the property name (in hyphen case) to be checked.
.SS Return value
A string containing the value of the property.
If not set, returns the empty string.
.PP
The property value is dynamically computed, not what was originally
specified in the declaration.
The serialization happens in the following way:
.IP \(bu 2
If \f[CR]property\f[R] is a shorthand property, then get all longhand
properties it corresponds to.
Note that shorthand properties specified in the original stylesheet were
already expanded during parse time.
If at least one of those longhand properties is undeclared, or their
\f[CR]!important\f[R] statuses differ, then the result is the empty
string.
Otherwise, a property value that expands to the same list of longhand
property values is returned, and this shorthand value will omit as many
components as possible, and reordered to match the canonical order in
the formal definition if possible.
If either of the above syntactic translations would be less
backwards\-compatible, do not perform them.
.IP \(bu 2
Otherwise, the property is serialized according to its data type.
Each data type has one canonical representation; for example,
\f[CR]<color>\f[R] values always use \f[CR]rgb(R, G, B)\f[R] or
\f[CR]rgba(R, G, B, A)\f[R].
.PP
In essence, the property value is \f[I]canonicalized\f[R], ensuring that
two property values with the same rendering effect compare equal even
when they are declared differently.
.SH EXAMPLES
The following JavaScript code queries the value of the \f[CR]margin\f[R]
property in a CSS selector rule:
.IP
.EX
\f[B]const\f[R] declaration = document.styleSheets[0].cssRules[0].style;
\f[B]const\f[R] value = declaration.getPropertyValue(\(dqmargin\(dq); \f[I]// \(dq1px 2px\(dq\f[R]
.EE
.PP
The returned string might differ from the value specified in the style
specification of the element.
For instance this styling:
.IP
.EX
p#blueish {
  \f[B]color\f[R]: hsl(250 90 50);
}
.EE
.IP
.EX
\f[B]const\f[R] declaration = document.styleSheets[0].cssRules[0].style;
\f[B]const\f[R] value = declaration.getPropertyValue(\(dqcolor\(dq);
.EE
.PP
Will set a value \f[CR]rgb(51, 13, 242);\f[R].
This is important when comparing styles by string.
