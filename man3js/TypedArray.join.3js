.\" Automatically generated by Pandoc 3.4
.\"
.TH "TypedArray.join" "JS" "September 14, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
TypedArray.join \- TypedArray.prototype.join()
.SH SYNOPSIS
The \f[B]\f[CB]join()\f[B]\f[R] method of \f[CR]TypedArray\f[R]
instances creates and returns a new string by concatenating all of the
elements in this typed array, separated by commas or a specified
separator string.
If the typed array has only one item, then that item will be returned
without using the separator.
This method has the same algorithm as \f[CR]Array.prototype.join()\f[R].
.SH SYNTAX
.IP
.EX
join()
join(separator)
.EE
.SS Parameters
.TP
\f[B]separator\f[R] \f[I](optional)\f[R]
A string to separate each pair of adjacent elements of the typed array.
If omitted, the typed array elements are separated with a comma
(\[lq],\[rq]).
.SS Return value
A string with all typed array elements joined.
If \f[CR]array.length\f[R] is \f[CR]0\f[R], the empty string is
returned.
.SH DESCRIPTION
See \f[CR]Array.prototype.join()\f[R] for more details.
This method is not generic and can only be called on typed array
instances.
.SH EXAMPLES
.SS Using join()
.IP
.EX
\f[B]const\f[R] uint8 = \f[B]new\f[R] Uint8Array([1, 2, 3]);
uint8.join(); \f[I]// \[aq]1,2,3\[aq]\f[R]
uint8.join(\[dq] / \[dq]); \f[I]// \[aq]1 / 2 / 3\[aq]\f[R]
uint8.join(\[dq]\[dq]); \f[I]// \[aq]123\[aq]\f[R]
.EE
.SH SEE ALSO
.IP \[bu] 2
\c
.UR https://github.com/zloirock/core-js#ecmascript-typed-arrays
Polyfill of \f[CR]TypedArray.prototype.join\f[R] in \f[CR]core\-js\f[R]
.UE \c
.IP \[bu] 2
JavaScript typed arrays guide
.IP \[bu] 2
\f[CR]TypedArray\f[R]
.IP \[bu] 2
\f[CR]TypedArray.prototype.toString()\f[R]
.IP \[bu] 2
\f[CR]Array.prototype.join()\f[R]
.IP \[bu] 2
\f[CR]String.prototype.split()\f[R]
