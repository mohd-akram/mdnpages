.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "ElementInternals.setValidity" "JS" "December 24, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
ElementInternals.setValidity \- ElementInternals: setValidity() method
.SH SYNOPSIS
The \f[B]\f[CB]setValidity()\f[B]\f[R] method of the
\f[CR]ElementInternals\f[R] interface sets the validity of the element.
.SH SYNTAX
.IP
.EX
setValidity(flags)
setValidity(flags, message)
setValidity(flags, message, anchor)
.EE
.SS Parameters
.TP
\f[B]flags\f[R] \f[I](optional)\f[R]
A dictionary object containing one or more flags indicating the validity
state of the element:
.RS
.TP
\f[B]valueMissing\f[R]
A boolean value that is \f[CR]true\f[R] if the element has a
\f[CR]required\f[R] attribute, but no value, or \f[CR]false\f[R]
otherwise.
If \f[CR]true\f[R], the element matches the \f[CR]:invalid\f[R] CSS
pseudo\-class.
.TP
\f[B]typeMismatch\f[R]
A boolean value that is \f[CR]true\f[R] if the value is not in the
required syntax (when \f[CR]type\f[R] is \f[CR]email\f[R] or
\f[CR]url\f[R]), or \f[CR]false\f[R] if the syntax is correct.
If \f[CR]true\f[R], the element matches the \f[CR]:invalid\f[R] CSS
pseudo\-class.
.TP
\f[B]patternMismatch\f[R]
A boolean value that is \f[CR]true\f[R] if the value does not match the
specified \f[CR]pattern\f[R], and \f[CR]false\f[R] if it does match.
If \f[CR]true\f[R], the element matches the \f[CR]:invalid\f[R] CSS
pseudo\-class.
.TP
\f[B]tooLong\f[R]
A boolean value that is \f[CR]true\f[R] if the value exceeds the
specified \f[CR]maxlength\f[R] for \f[CR]HTMLInputElement\f[R] or
\f[CR]HTMLTextAreaElement\f[R] objects, or \f[CR]false\f[R] if its
length is less than or equal to the maximum length.
If \f[CR]true\f[R], the element matches the \f[CR]:invalid\f[R] and
\f[CR]:out\-of\-range\f[R] CSS pseudo\-classes.
.TP
\f[B]tooShort\f[R]
A boolean value that is \f[CR]true\f[R] if the value fails to meet the
specified \f[CR]minlength\f[R] for \f[CR]HTMLInputElement\f[R] or
\f[CR]HTMLTextAreaElement\f[R] objects, or \f[CR]false\f[R] if its
length is greater than or equal to the minimum length.
If \f[CR]true\f[R], the element matches the \f[CR]:invalid\f[R] and
\f[CR]:out\-of\-range\f[R] CSS pseudo\-classes.
.TP
\f[B]rangeUnderflow\f[R]
A boolean value that is \f[CR]true\f[R] if the value is less than the
minimum specified by the \f[CR]min\f[R] attribute, or \f[CR]false\f[R]
if it is greater than or equal to the minimum.
If \f[CR]true\f[R], the element matches the \f[CR]:invalid\f[R] and
\f[CR]:out\-of\-range\f[R] CSS pseudo\-classes.
.TP
\f[B]rangeOverflow\f[R]
A boolean value that is \f[CR]true\f[R] if the value is greater than the
maximum specified by the \f[CR]max\f[R] attribute, or \f[CR]false\f[R]
if it is less than or equal to the maximum.
If \f[CR]true\f[R], the element matches the \f[CR]:invalid\f[R] and
\f[CR]:out\-of\-range\f[R] and CSS pseudo\-classes.
.TP
\f[B]stepMismatch\f[R]
A boolean value that is \f[CR]true\f[R] if the value does not fit the
rules determined by the \f[CR]step\f[R] attribute (that is, it\[cq]s not
evenly divisible by the step value), or \f[CR]false\f[R] if it does fit
the step rule.
If \f[CR]true\f[R], the element matches the \f[CR]:invalid\f[R] and
\f[CR]:out\-of\-range\f[R] CSS pseudo\-classes.
.TP
\f[B]badInput\f[R]
A boolean value that is \f[CR]true\f[R] if the user has provided input
that the browser is unable to convert.
.TP
\f[B]customError\f[R]
A boolean value indicating whether the element\[cq]s custom validity
message has been set to a non\-empty string by calling the element\[cq]s
\f[CR]setCustomValidity()\f[R] method.
.RS
.PP
\f[B]Note:\f[R] To set all flags to \f[CR]false\f[R], indicating that
this element passes all constraints validation, pass in an empty object
\f[CR]{}\f[R].
In this case, you do not need to also pass a \f[CR]message\f[R].
.RE
.RE
.TP
\f[B]message\f[R] \f[I](optional)\f[R]
A string containing a message, which will be set if any \f[CR]flags\f[R]
are \f[CR]true\f[R].
This parameter is only optional if all \f[CR]flags\f[R] are
\f[CR]false\f[R].
.TP
\f[B]anchor\f[R] \f[I](optional)\f[R]
An \f[CR]HTMLElement\f[R] which can be used by the user agent to report
problems with this form submission.
.SS Return value
None (\f[CR]undefined\f[R]).
.SS Exceptions
.TP
\f[B]NotSupportedError\f[R] \f[B]DOMException\f[R]
Thrown if the element does not have its \f[CR]formAssociated\f[R]
property set to \f[CR]true\f[R].
.TP
\f[B]TypeError\f[R]
Thrown if one or more \f[CR]flags\f[R] is \f[CR]true\f[R].
.TP
\f[B]NotFoundError\f[R] \f[B]DOMException\f[R]
Thrown if \f[CR]anchor\f[R] is given, but the anchor is not a
shadow\-including descendant of the element.
.SH EXAMPLES
In the following example \f[CR]setValidity\f[R] is called with an empty
\f[CR]flags\f[R] parameter to indicate that the element meets constraint
validation rules.
.IP
.EX
\f[B]this\f[R].internals_.setValidity({});
.EE
.PP
In the following example \f[CR]setValidity\f[R] is called with the flag
\f[CR]valueMissing\f[R] set to \f[CR]true\f[R].
A \f[CR]message\f[R] parameter must then also be passed containing a
message.
.IP
.EX
\f[B]this\f[R].internals_.setValidity({ valueMissing: \f[B]true\f[R] }, \[dq]my message\[dq]);
.EE
