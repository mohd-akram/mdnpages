.\" Automatically generated by Pandoc 3.4
.\"
.TH "WebGL2RenderingContext.drawElementsInstanced" "JS" "September 28, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
WebGL2RenderingContext.drawElementsInstanced \- WebGL2RenderingContext:
drawElementsInstanced() method
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]WebGL2RenderingContext.drawElementsInstanced()\f[B]\f[R]
method of the WebGL 2 API renders primitives from array data like the
\f[CR]gl.drawElements()\f[R] method.
In addition, it can execute multiple instances of a set of elements.
.RS
.PP
\f[B]Note:\f[R] When using WebGL 1, the
\f[CR]ANGLE_instanced_arrays\f[R] extension can provide this method,
too.
.RE
.SH SYNTAX
.IP
.EX
drawElementsInstanced(mode, count, type, offset, instanceCount)
.EE
.SS Parameters
.TP
\f[B]mode\f[R]
A \f[CR]GLenum\f[R] specifying the type primitive to render.
Possible values are:
.RS
.IP \[bu] 2
\f[CR]gl.POINTS\f[R]: Draws a single dot.
.IP \[bu] 2
\f[CR]gl.LINE_STRIP\f[R]: Draws a straight line to the next vertex.
.IP \[bu] 2
\f[CR]gl.LINE_LOOP\f[R]: Draws a straight line to the next vertex, and
connects the last vertex back to the first.
.IP \[bu] 2
\f[CR]gl.LINES\f[R]: Draws a line between a pair of vertices.
.IP \[bu] 2
\c
.UR https://en.wikipedia.org/wiki/Triangle_strip
\f[CR]gl.TRIANGLE_STRIP\f[R]
.UE \c
.IP \[bu] 2
\c
.UR https://en.wikipedia.org/wiki/Triangle_fan
\f[CR]gl.TRIANGLE_FAN\f[R]
.UE \c
.IP \[bu] 2
\f[CR]gl.TRIANGLES\f[R]: Draws a triangle for a group of three vertices.
.RE
.TP
\f[B]count\f[R]
A \f[CR]GLsizei\f[R] specifying the number of elements to be rendered.
.TP
\f[B]type\f[R]
A \f[CR]GLenum\f[R] specifying the type of the values in the element
array buffer.
Possible values are:
.RS
.IP \[bu] 2
\f[CR]gl.UNSIGNED_BYTE\f[R]
.IP \[bu] 2
\f[CR]gl.UNSIGNED_SHORT\f[R]
.IP \[bu] 2
\f[CR]gl.UNSIGNED_INT\f[R] When using the
\f[CR]OES_element_index_uint\f[R] extension.
.RE
.TP
\f[B]offset\f[R]
A \f[CR]GLintptr\f[R] specifying an offset in the element array buffer.
Must be a valid multiple of the size of the given \f[CR]type\f[R].
.TP
\f[B]instanceCount\f[R]
A \f[CR]GLsizei\f[R] specifying the number of instances of the set of
elements to execute.
.SS Return value
None (\f[CR]undefined\f[R]).
.SS Exceptions
.IP \[bu] 2
If \f[CR]mode\f[R] is not one of the accepted values, a
\f[CR]gl.INVALID_ENUM\f[R] error is thrown.
.IP \[bu] 2
If \f[CR]offset\f[R] is a valid multiple of the size of the given type,
a \f[CR]gl.INVALID_OPERATION\f[R] error is thrown.
.IP \[bu] 2
If \f[CR]count\f[R] or \f[CR]instanceCount\f[R] are negative, a
\f[CR]gl.INVALID_VALUE\f[R] error is thrown.
.SH EXAMPLES
.IP
.EX
gl.drawElementsInstanced(gl.POINTS, 2, gl.UNSIGNED_SHORT, 0, 4);
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]ext.drawArraysInstancedANGLE()\f[R]
.IP \[bu] 2
\f[CR]ext.vertexAttribDivisorANGLE()\f[R]
.IP \[bu] 2
\f[CR]WebGLRenderingContext.drawArrays()\f[R]
.IP \[bu] 2
\f[CR]WebGLRenderingContext.drawElements()\f[R]
.IP \[bu] 2
\f[CR]WebGL2RenderingContext.drawArraysInstanced()\f[R]
.IP \[bu] 2
\f[CR]WebGL2RenderingContext.vertexAttribDivisor()\f[R]
.IP \[bu] 2
\f[CR]WEBGL_multi_draw.multiDrawElementsInstancedWEBGL()\f[R]
