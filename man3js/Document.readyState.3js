.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "Document.readyState" "JS" "July 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Document.readyState \- Document: readyState property
.SH SYNOPSIS
The \f[B]\f[CB]Document.readyState\f[B]\f[R] property describes the
loading state of the \f[CR]document\f[R].
When the value of this property changes, a \f[CR]readystatechange\f[R]
event fires on the \f[CR]document\f[R] object.
.SH VALUE
The \f[CR]readyState\f[R] of a document can be one of following:
.TP
\f[B]loading\f[R]
The \f[CR]document\f[R] is still loading.
.TP
\f[B]interactive\f[R]
The document has finished loading and the document has been parsed but
sub\-resources such as scripts, images, stylesheets and frames are still
loading.
The state indicates that the \f[CR]DOMContentLoaded\f[R] event is about
to fire.
.TP
\f[B]complete\f[R]
The document and all sub\-resources have finished loading.
The state indicates that the \f[CR]load\f[R] event is about to fire.
.SH EXAMPLES
.SS Different states of readiness
.IP
.EX
\f[B]switch\f[R] (document.readyState) {
  \f[B]case\f[R] \[dq]loading\[dq]:
    \f[I]// The document is loading.\f[R]
    \f[B]break\f[R];
  \f[B]case\f[R] \[dq]interactive\[dq]: {
    \f[I]// The document has finished loading and we can access DOM elements.\f[R]
    \f[I]// Sub\-resources such as scripts, images, stylesheets and frames are still loading.\f[R]
    \f[B]const\f[R] span = document.createElement(\[dq]span\[dq]);
    span.textContent = \[dq]A <span> element.\[dq];
    document.body.appendChild(span);
    \f[B]break\f[R];
  }
  \f[B]case\f[R] \[dq]complete\[dq]:
    \f[I]// The page is fully loaded.\f[R]
    console.log(
      \[ga]The first CSS rule is: ${document.styleSheets[0].cssRules[0].cssText}\[ga],
    );
    \f[B]break\f[R];
}
.EE
.SS readystatechange as an alternative to DOMContentLoaded event
.IP
.EX
\f[I]// Alternative to DOMContentLoaded event\f[R]
document.onreadystatechange = () \f[B]=>\f[R] {
  \f[B]if\f[R] (document.readyState === \[dq]interactive\[dq]) {
    initApplication();
  }
};
.EE
.SS readystatechange as an alternative to load event
.IP
.EX
\f[I]// Alternative to load event\f[R]
document.onreadystatechange = () \f[B]=>\f[R] {
  \f[B]if\f[R] (document.readyState === \[dq]complete\[dq]) {
    initApplication();
  }
};
.EE
.SS readystatechange as event listener to insert or modify the DOM before DOMContentLoaded
.IP
.EX
document.addEventListener(\[dq]readystatechange\[dq], (event) \f[B]=>\f[R] {
  \f[B]if\f[R] (event.target.readyState === \[dq]interactive\[dq]) {
    initLoader();
  } \f[B]else\f[R] \f[B]if\f[R] (event.target.readyState === \[dq]complete\[dq]) {
    initApp();
  }
});
.EE
.SH SEE ALSO
.IP \[bu] 2
Related events:
.RS 2
.IP \[bu] 2
\f[CR]readystatechange\f[R]
.IP \[bu] 2
\f[CR]DOMContentLoaded\f[R]
.IP \[bu] 2
\f[CR]load\f[R]
.RE
