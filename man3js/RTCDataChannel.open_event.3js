.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "RTCDataChannel.open_event" "JS" "September 2, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
RTCDataChannel.open_event \- RTCDataChannel: open event
.SH SYNOPSIS
The WebRTC \f[B]\f[CB]open\f[B]\f[R] event is sent to an
\f[CR]RTCDataChannel\f[R] object\[cq]s \f[CR]onopen\f[R] event handler
when the underlying transport used to send and receive the data
channel\[cq]s messages is opened or reopened.
.PP
This event is not cancelable and does not bubble.
.SH SYNTAX
Use the event name in methods like \f[CR]addEventListener()\f[R], or set
an event handler property.
.IP
.EX
addEventListener(\[dq]open\[dq], (event) \f[B]=>\f[R] {});

onopen = (event) \f[B]=>\f[R] {};
.EE
.SH EVENT TYPE
An \f[CR]RTCDataChannelEvent\f[R].
Inherits from \f[CR]Event\f[R].
.SH EVENT PROPERTIES
\f[I]Also inherits properties from its parent interface,
\f[CI]Event\f[I].\f[R]
.TP
\f[B]channel\f[R] \f[I](read\-only)\f[R]
Returns the \f[CR]RTCDataChannel\f[R] associated with the event.
.SH EXAMPLES
This example adds to the \f[CR]RTCDataChannel\f[R] \f[CR]dc\f[R] a
handler for the \f[CR]open\f[R] event that adjusts the user interface to
indicate that a chat window is ready to be used after a connection has
been established.
It enables the message input box and send button as well as enabling the
disconnect button and disabling the connect button.
Finally, the message input box is focused so the user can immediately
begin to type.
.IP
.EX
dc.addEventListener(
  \[dq]open\[dq],
  (ev) \f[B]=>\f[R] {
    messageInputBox.disabled = \f[B]false\f[R];
    sendMessageButton.disabled = \f[B]false\f[R];
    disconnectButton.disabled = \f[B]false\f[R];
    connectButton.disabled = \f[B]true\f[R];

    messageInputBox.focus();
  },
  \f[B]false\f[R],
);
.EE
.PP
This can also be done by directly setting the value of the channel\[cq]s
\f[CR]onopen\f[R] event handler property.
.IP
.EX
dc.onopen = (ev) \f[B]=>\f[R] {
  messageInputBox.disabled = \f[B]false\f[R];
  sendMessageButton.disabled = \f[B]false\f[R];
  disconnectButton.disabled = \f[B]false\f[R];
  connectButton.disabled = \f[B]true\f[R];

  messageInputBox.focus();
};
.EE
.SH SEE ALSO
.IP \[bu] 2
WebRTC API
.IP \[bu] 2
A simple RTCDataChannel example
.IP \[bu] 2
Related events: \f[CR]message\f[R], \f[CR]close\f[R], and
\f[CR]error\f[R]
