.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "Response.bytes" "JS" "July 4, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Response.bytes \- Response: bytes() method
.SH SYNOPSIS
The \f[B]\f[CB]bytes()\f[B]\f[R] method of the \f[CR]Response\f[R]
interface takes a \f[CR]Response\f[R] stream and reads it to completion.
It returns a promise that resolves with a \f[CR]Uint8Array\f[R].
.SH SYNTAX
.IP
.EX
bytes()
.EE
.SS Parameters
None.
.SS Return value
A promise that resolves with an \f[CR]Uint8Array\f[R].
.SS Exceptions
.TP
\f[B]DOMException\f[R] \f[B]AbortError\f[R]
The request was aborted.
.TP
\f[B]TypeError\f[R]
Thrown for one of the following reasons:
.RS
.IP \[bu] 2
The response body is disturbed or locked.
.IP \[bu] 2
There was an error decoding the body content (for example, because the
\f[CR]Content\-Encoding\f[R] header is incorrect).
.RE
.TP
\f[B]RangeError\f[R]
There was a problem creating the associated \f[CR]ArrayBuffer\f[R].
For example, if the data size is more than
\f[CR]Number.MAX_SAFE_INTEGER\f[R].
.SH EXAMPLES
.SS Fetching and decoding a file
The code below shows how you might fetch a text file, return the body as
a \f[CR]Uint8Array\f[R], and then decode this into a string.
.IP
.EX
\f[B]const\f[R] response = \f[B]await\f[R] fetch(\[dq]https://www.example.com/textfile.txt\[dq]);
\f[B]const\f[R] textFile = \f[B]await\f[R] response.bytes();
\f[B]const\f[R] string = \f[B]new\f[R] TextDecoder().decode(textFile);
console.log(string);
.EE
.SH SEE ALSO
.IP \[bu] 2
ServiceWorker API
.IP \[bu] 2
HTTP access control (CORS)
.IP \[bu] 2
HTTP
