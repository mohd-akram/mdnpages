.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "FONTFACESET.CHECK" "3JS" "May 7, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
FontFaceSet.check \- FontFaceSet: check() method
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[CR]check()\f[R] method of the \f[CR]FontFaceSet\f[R] returns
\f[CR]true\f[R] if you can render some text using the given font
specification without attempting to use any fonts in this
\f[CR]FontFaceSet\f[R] that are not yet fully loaded.
This means you can use the font specification without causing a font
swap.
.RS
.PP
\f[B]Note:\f[R] The \f[CR]check()\f[R] method is not designed to verify
whether a specific font style can be rendered or if a particular font is
fully loaded.
Instead, it returns \f[CR]true\f[R] if the specified text can be
rendered using the given font specification without causing a font swap.
This means that even if the requested font isn\(cqt available or fully
loaded, the method may still return \f[CR]true\f[R].
This behavior helps avoid the visual issues associated with font
swapping but may be counterintuitive if you\(cqre trying to confirm the
availability of a specific font.
.RE
.SH SYNTAX
.IP
.EX
check(font)
check(font, text)
.EE
.SS Parameters
.TP
\f[B]font\f[R]
a font specification using the syntax for the CSS \f[CR]font\f[R]
property, for example \f[CR]\(dqitalic bold 16px Roboto\(dq\f[R]
.TP
\f[B]text\f[R]
limit the font faces to those whose Unicode range contains at least one
of the characters in text.
This \c
.UR https://lists.w3.org/Archives/Public/www-style/2015Aug/0330.html
does not check for individual glyph coverage
.UE \c
\&.
.SS Return value
A \f[CR]Boolean\f[R] value that is \f[CR]true\f[R] if rendering text
with the given font specification will not attempt to use any fonts in
this \f[CR]FontFaceSet\f[R] that are not yet fully loaded.
.PP
This means that all fonts in this \f[CR]FontFaceSet\f[R] that are
matched by the given font specification have a \f[CR]status\f[R]
property set to \f[CR]\(dqloaded\(dq\f[R].
.PP
Otherwise, this function returns \f[CR]false\f[R].
.SH EXAMPLES
In the following example, we create a new \f[CR]FontFace\f[R] and add it
to the \f[CR]FontFaceSet\f[R]:
.IP
.EX
\f[B]const\f[R] font = \f[B]new\f[R] FontFace(\(dqmolot\(dq, \(dqurl(/shared\-assets/fonts/molot.woff2)\(dq, {
  style: \(dqnormal\(dq,
  weight: \(dq400\(dq,
  stretch: \(dqcondensed\(dq,
});

document.fonts.add(font);
.EE
.SS Unloaded fonts
The font is not yet loaded, so \f[CR]check(\(dq12px molot\(dq)\f[R]
returns \f[CR]false\f[R], indicating that if we try to use the given
font specification, we will trigger a font load:
.IP
.EX
console.log(document.fonts.check(\(dq12px molot\(dq));
\f[I]// false: the matching font is in the set, but is not yet loaded\f[R]
.EE
.SS System fonts
If we specify only a system font in the argument to \f[CR]check()\f[R],
it returns \f[CR]true\f[R], because we can use the system font without
loading any fonts from the set:
.IP
.EX
console.log(document.fonts.check(\(dq12px Courier\(dq));
\f[I]// true: the matching font is a system font\f[R]
.EE
.SS Nonexistent fonts
If we specify a font that is not in the \f[CR]FontFaceSet\f[R] and is
not a system font, \f[CR]check()\f[R] returns \f[CR]true\f[R], because
in this situation we will not rely on any fonts from the set:
.IP
.EX
console.log(document.fonts.check(\(dq12px i\-dont\-exist\(dq));
\f[I]// true: the matching font is a nonexistent font\f[R]
.EE
.SS System and unloaded fonts
If we specify both a system font and a font in the set that is not yet
loaded, then \f[CR]check()\f[R] returns \f[CR]false\f[R]:
.IP
.EX
console.log(document.fonts.check(\(dq12px molot, Courier\(dq));
\f[I]// false: \(gamolot\(ga is in the set but not yet loaded\f[R]
.EE
.SS Fonts that are loading
If we specify a font from the set that is still loading,
\f[CR]check()\f[R] returns \f[CR]false\f[R]:
.IP
.EX
\f[B]function\f[R] check() {
  font.load();
  console.log(document.fonts.check(\(dq12px molot\(dq));
  \f[I]// false: font is still loading\f[R]
  console.log(font.status);
  \f[I]// \(dqloading\(dq\f[R]
}

check();
.EE
.SS Fonts that have loaded
If we specify a font from the set that has loaded, \f[CR]check()\f[R]
returns \f[CR]true\f[R]:
.IP
.EX
\f[B]async\f[R] \f[B]function\f[R] check() {
  \f[B]await\f[R] font.load();
  console.log(document.fonts.check(\(dq12px molot\(dq));
  \f[I]// true: font has finished loading\f[R]
  console.log(font.status);
  \f[I]// \(dqloaded\(dq\f[R]
}

check();
.EE
