.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "Proxy.Proxy.defineProperty" "JS" "February 21, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Proxy.Proxy.defineProperty \- handler.defineProperty()
.SH SYNOPSIS
The \f[B]\f[CB]handler.defineProperty()\f[B]\f[R] method is a trap for
the \f[CR][[DefineOwnProperty]]\f[R] object internal method, which is
used by operations such as \f[CR]Object.defineProperty()\f[R].
.SH SYNTAX
.IP
.EX
new Proxy(target, {
  defineProperty(target, property, descriptor) {
  }
});
.EE
.SS Parameters
The following parameters are passed to the \f[CR]defineProperty()\f[R]
method.
\f[CR]this\f[R] is bound to the handler.
.TP
\f[B]target\f[R]
The target object.
.TP
\f[B]property\f[R]
The name or \f[CR]Symbol\f[R] of the property whose description is to be
retrieved.
.TP
\f[B]descriptor\f[R]
The descriptor for the property being defined or modified.
.SS Return value
The \f[CR]defineProperty()\f[R] method must return a \f[CR]Boolean\f[R]
indicating whether or not the property has been successfully defined.
.SH DESCRIPTION
.SS Interceptions
This trap can intercept these operations:
.IP \[bu] 2
\f[CR]Object.defineProperty()\f[R], \f[CR]Object.defineProperties()\f[R]
.IP \[bu] 2
\f[CR]Reflect.defineProperty()\f[R]
.PP
Or any other operation that invokes the \f[CR][[DefineOwnProperty]]\f[R]
internal method.
.SS Invariants
If the following invariants are violated, the trap throws a
\f[CR]TypeError\f[R] when invoked.
.IP \[bu] 2
A property cannot be added, if the target object is not extensible.
.IP \[bu] 2
A property cannot be added as or modified to be non\-configurable, if it
does not exists as a non\-configurable own property of the target
object.
.IP \[bu] 2
A property may not be non\-configurable, if a corresponding configurable
property of the target object exists.
.IP \[bu] 2
If a property has a corresponding target object property then
\f[CR]Object.defineProperty(target, prop, descriptor)\f[R] will not
throw an exception.
.IP \[bu] 2
In strict mode, a \f[CR]false\f[R] return value from the
\f[CR]defineProperty()\f[R] handler will throw a \f[CR]TypeError\f[R]
exception.
.SH EXAMPLES
.SS Trapping of defineProperty
The following code traps \f[CR]Object.defineProperty()\f[R].
.IP
.EX
\f[B]const\f[R] p = \f[B]new\f[R] Proxy(
  {},
  {
    defineProperty(target, prop, descriptor) {
      console.log(\[ga]called: ${prop}\[ga]);
      \f[B]return\f[R] \f[B]true\f[R];
    },
  },
);

\f[B]const\f[R] desc = { configurable: \f[B]true\f[R], enumerable: \f[B]true\f[R], value: 10 };
Object.defineProperty(p, \[dq]a\[dq], desc); \f[I]// \[dq]called: a\[dq]\f[R]
.EE
.PP
When calling \f[CR]Object.defineProperty()\f[R] or
\f[CR]Reflect.defineProperty()\f[R], the \f[CR]descriptor\f[R] passed to
\f[CR]defineProperty()\f[R] trap has one restriction\[em]only following
properties are usable (non\-standard properties will be ignored):
.IP \[bu] 2
\f[CR]enumerable\f[R]
.IP \[bu] 2
\f[CR]configurable\f[R]
.IP \[bu] 2
\f[CR]writable\f[R]
.IP \[bu] 2
\f[CR]value\f[R]
.IP \[bu] 2
\f[CR]get\f[R]
.IP \[bu] 2
\f[CR]set\f[R]
.IP
.EX
\f[B]const\f[R] p = \f[B]new\f[R] Proxy(
  {},
  {
    defineProperty(target, prop, descriptor) {
      console.log(descriptor);
      \f[B]return\f[R] Reflect.defineProperty(target, prop, descriptor);
    },
  },
);

Object.defineProperty(p, \[dq]name\[dq], {
  value: \[dq]proxy\[dq],
  type: \[dq]custom\[dq],
}); \f[I]// { value: \[aq]proxy\[aq] }\f[R]
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]Proxy\f[R]
.IP \[bu] 2
\f[CR]Proxy()\f[R] constructor
.IP \[bu] 2
\f[CR]Object.defineProperty()\f[R]
.IP \[bu] 2
\f[CR]Reflect.defineProperty()\f[R]
