'\" t
.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "Intl.Locale.getNumberingSystems" "JS" "August 25, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Intl.Locale.getNumberingSystems \-
Intl.Locale.prototype.getNumberingSystems()
.SH SYNOPSIS
The \f[B]\f[CB]getNumberingSystems()\f[B]\f[R] method of
\f[CR]Intl.Locale\f[R] instances returns a list of one or more unique \c
.UR https://en.wikipedia.org/wiki/Numeral_system
numbering system
.UE \c
\ identifiers for this locale.
.RS
.PP
\f[B]Note:\f[R] In some versions of some browsers, this method was
implemented as an accessor property called \f[CR]numberingSystems\f[R].
However, because it returns a new array on each access, it is now
implemented as a method to prevent the situation of
\f[CR]locale.numberingSystems === locale.numberingSystems\f[R] returning
\f[CR]false\f[R].
Check the browser compatibility table for details.
.RE
.SH SYNTAX
.IP
.EX
getNumberingSystems()
.EE
.SS Parameters
None.
.SS Return value
An array of strings representing all numbering systems commonly used for
the \f[CR]Locale\f[R], sorted in descending preference.
If the \f[CR]Locale\f[R] already has a \f[CR]numberingSystem\f[R], then
the returned array contains that single value.
.PP
A table of the standard Unicode numeral systems can be seen below.
.SS Supported numbering system types
.PP
.TS
tab(@);
lw(6.8n) lw(63.2n).
T{
Value
T}@T{
Description
T}
_
T{
adlm
T}@T{
Adlam digits
T}
T{
ahom
T}@T{
Ahom digits
T}
T{
arab
T}@T{
Arabic\-Indic digits
T}
T{
arabext
T}@T{
Extended Arabic\-Indic digits
T}
T{
armn
T}@T{
Armenian upper case numerals \[em] algorithmic
T}
T{
armnlow
T}@T{
Armenian lower case numerals \[em] algorithmic
T}
T{
bali
T}@T{
Balinese digits
T}
T{
beng
T}@T{
Bengali digits
T}
T{
bhks
T}@T{
Bhaiksuki digits
T}
T{
brah
T}@T{
Brahmi digits
T}
T{
cakm
T}@T{
Chakma digits
T}
T{
cham
T}@T{
Cham digits
T}
T{
cyrl
T}@T{
Cyrillic numerals \[em] algorithmic
T}
T{
deva
T}@T{
Devanagari digits
T}
T{
ethi
T}@T{
Ethiopic numerals \[em] algorithmic
T}
T{
finance
T}@T{
Financial numerals \[em] may be algorithmic
T}
T{
fullwide
T}@T{
Full width digits
T}
T{
geor
T}@T{
Georgian numerals \[em] algorithmic
T}
T{
gong
T}@T{
Gunjala Gondi digits
T}
T{
gonm
T}@T{
Masaram Gondi digits
T}
T{
grek
T}@T{
Greek upper case numerals \[em] algorithmic
T}
T{
greklow
T}@T{
Greek lower case numerals \[em] algorithmic
T}
T{
gujr
T}@T{
Gujarati digits
T}
T{
guru
T}@T{
Gurmukhi digits
T}
T{
hanidays
T}@T{
Han\-character day\-of\-month numbering for lunar/other traditional
calendars
T}
T{
hanidec
T}@T{
Positional decimal system using Chinese number ideographs as digits
T}
T{
hans
T}@T{
Simplified Chinese numerals \[em] algorithmic
T}
T{
hansfin
T}@T{
Simplified Chinese financial numerals \[em] algorithmic
T}
T{
hant
T}@T{
Traditional Chinese numerals \[em] algorithmic
T}
T{
hantfin
T}@T{
Traditional Chinese financial numerals \[em] algorithmic
T}
T{
hebr
T}@T{
Hebrew numerals \[em] algorithmic
T}
T{
hmng
T}@T{
Pahawh Hmong digits
T}
T{
hmnp
T}@T{
Nyiakeng Puachue Hmong digits
T}
T{
java
T}@T{
Javanese digits
T}
T{
jpan
T}@T{
Japanese numerals \[em] algorithmic
T}
T{
jpanfin
T}@T{
Japanese financial numerals \[em] algorithmic
T}
T{
jpanyear
T}@T{
Japanese first\-year Gannen numbering for Japanese calendar
T}
T{
kali
T}@T{
Kayah Li digits
T}
T{
khmr
T}@T{
Khmer digits
T}
T{
knda
T}@T{
Kannada digits
T}
T{
lana
T}@T{
Tai Tham Hora (secular) digits
T}
T{
lanatham
T}@T{
Tai Tham (ecclesiastical) digits
T}
T{
laoo
T}@T{
Lao digits
T}
T{
latn
T}@T{
Latin digits
T}
T{
lepc
T}@T{
Lepcha digits
T}
T{
limb
T}@T{
Limbu digits
T}
T{
mathbold
T}@T{
Mathematical bold digits
T}
T{
mathdbl
T}@T{
Mathematical double\-struck digits
T}
T{
mathmono
T}@T{
Mathematical monospace digits
T}
T{
mathsanb
T}@T{
Mathematical sans\-serif bold digits
T}
T{
mathsans
T}@T{
Mathematical sans\-serif digits
T}
T{
mlym
T}@T{
Malayalam digits
T}
T{
modi
T}@T{
Modi digits
T}
T{
mong
T}@T{
Mongolian digits
T}
T{
mroo
T}@T{
Mro digits
T}
T{
mtei
T}@T{
Meetei Mayek digits
T}
T{
mymr
T}@T{
Myanmar digits
T}
T{
mymrshan
T}@T{
Myanmar Shan digits
T}
T{
mymrtlng
T}@T{
Myanmar Tai Laing digits
T}
T{
native
T}@T{
Native digits
T}
T{
newa
T}@T{
Newa digits
T}
T{
nkoo
T}@T{
N\[cq]Ko digits
T}
T{
olck
T}@T{
Ol Chiki digits
T}
T{
orya
T}@T{
Oriya digits
T}
T{
osma
T}@T{
Osmanya digits
T}
T{
rohg
T}@T{
Hanifi Rohingya digits
T}
T{
roman
T}@T{
Roman upper case numerals \[em] algorithmic
T}
T{
romanlow
T}@T{
Roman lowercase numerals \[em] algorithmic
T}
T{
saur
T}@T{
Saurashtra digits
T}
T{
shrd
T}@T{
Sharada digits
T}
T{
sind
T}@T{
Khudawadi digits
T}
T{
sinh
T}@T{
Sinhala Lith digits
T}
T{
sora
T}@T{
Sora_Sompeng digits
T}
T{
sund
T}@T{
Sundanese digits
T}
T{
takr
T}@T{
Takri digits
T}
T{
talu
T}@T{
New Tai Lue digits
T}
T{
taml
T}@T{
Tamil numerals \[em] algorithmic
T}
T{
tamldec
T}@T{
Modern Tamil decimal digits
T}
T{
telu
T}@T{
Telugu digits
T}
T{
thai
T}@T{
Thai digits
T}
T{
tirh
T}@T{
Tirhuta digits
T}
T{
tibt
T}@T{
Tibetan digits
T}
T{
traditio
T}@T{
Traditional numerals \[em] may be algorithmic
T}
T{
vaii
T}@T{
Vai digits
T}
T{
wara
T}@T{
Warang Citi digits
T}
T{
wcho
T}@T{
Wancho digits
T}
.TE
.SH EXAMPLES
.SS Obtaining supported numbering systems
If the \f[CR]Locale\f[R] object doesn\[cq]t have a
\f[CR]numberingSystem\f[R] already, \f[CR]getNumberingSystems()\f[R]
lists all commonly\-used numbering systems for the given
\f[CR]Locale\f[R].
For examples of explicitly setting a \f[CR]numberingSystem\f[R], see
\f[CR]numberingSystem\f[R] examples.
.IP
.EX
\f[B]const\f[R] arEG = \f[B]new\f[R] Intl.Locale(\[dq]ar\-EG\[dq]);
console.log(arEG.getNumberingSystems()); \f[I]// [\[dq]arab\[dq]]\f[R]
.EE
.IP
.EX
\f[B]const\f[R] ja = \f[B]new\f[R] Intl.Locale(\[dq]ja\[dq]);
console.log(ja.getNumberingSystems()); \f[I]// [\[dq]latn\[dq]]\f[R]
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]Intl.Locale\f[R]
.IP \[bu] 2
\f[CR]Intl.Locale.prototype.numberingSystem\f[R]
.IP \[bu] 2
\c
.UR https://github.com/unicode-org/cldr/blob/main/common/supplemental/numberingSystems.xml
Details on the standard Unicode numeral systems
.UE \c
