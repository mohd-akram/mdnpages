.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "CSSImportRule.supportsText" "JS" "December 20, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
CSSImportRule.supportsText \- CSSImportRule: supportsText property
.SH SYNOPSIS
The read\-only \f[B]\f[CB]supportsText\f[B]\f[R] property of the
\f[CR]CSSImportRule\f[R] interface returns the supports condition
specified by the \f[CR]\[at]import\f[R] at\-rule.
.SH VALUE
A string, or \f[CR]null\f[R].
.SH EXAMPLES
The document\[cq]s single stylesheet contains three
\f[CR]\[at]import\f[R] rules.
The first declaration imports a stylesheet if \f[CR]display: flex\f[R]
is supported.
The second declaration imports a stylesheet if the \f[CR]:has\f[R]
selector is supported.
The third declaration imports a stylesheet without a supports condition.
.PP
The \f[CR]supportsText\f[R] property returns the import conditions
associated with the at\-rule.
.IP
.EX
\f[B]\[at]import\f[R] url(\[dq]style1.css\[dq]) supports(display: flex);
\f[B]\[at]import\f[R] url(\[dq]style2.css\[dq]) supports(selector(p:has(a)));
\f[B]\[at]import\f[R] url(\[dq]style3.css\[dq]);
.EE
.IP
.EX
\f[B]const\f[R] myRules = document.styleSheets[0].cssRules;
console.log(myRules[0].supportsText); \f[I]// returns \[ga]\[dq]display: flex\[dq]\[ga]\f[R]
console.log(myRules[1].supportsText); \f[I]// returns \[ga]\[dq]selector(p:has(a))\[dq]\[ga]\f[R]
console.log(myRules[2].supportsText); \f[I]// returns \[ga]null\[ga]\f[R]
.EE
.SH SEE ALSO
.IP \[bu] 2
Using feature queries
.IP \[bu] 2
\f[CR]\[at]import\f[R] and \f[CR]\[at]supports\f[R]
