.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "CSSIMPORTRULE.SUPPORTSTEXT" "3JS" "February 15, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
CSSImportRule.supportsText \- CSSImportRule: supportsText property
.SH SYNOPSIS
The read\-only \f[B]\f[CB]supportsText\f[B]\f[R] property of the
\f[CR]CSSImportRule\f[R] interface returns the supports condition
specified by the \f[CR]\(atimport\f[R] at\-rule.
.SH VALUE
A string, or \f[CR]null\f[R].
.SH EXAMPLES
The document\(cqs single stylesheet contains three \f[CR]\(atimport\f[R]
rules.
The first declaration imports a stylesheet if \f[CR]display: flex\f[R]
is supported.
The second declaration imports a stylesheet if the \f[CR]:has\f[R]
selector is supported.
The third declaration imports a stylesheet without a supports condition.
.PP
The \f[CR]supportsText\f[R] property returns the import conditions
associated with the at\-rule.
.IP
.EX
\f[B]\(atimport\f[R] url(\(dqstyle1.css\(dq) supports(display: flex);
\f[B]\(atimport\f[R] url(\(dqstyle2.css\(dq) supports(selector(p:has(a)));
\f[B]\(atimport\f[R] url(\(dqstyle3.css\(dq);
.EE
.IP
.EX
\f[B]const\f[R] myRules = document.styleSheets[0].cssRules;
console.log(myRules[0].supportsText); \f[I]// returns \(ga\(dqdisplay: flex\(dq\(ga\f[R]
console.log(myRules[1].supportsText); \f[I]// returns \(ga\(dqselector(p:has(a))\(dq\(ga\f[R]
console.log(myRules[2].supportsText); \f[I]// returns \(ganull\(ga\f[R]
.EE
.SH SEE ALSO
.IP \(bu 2
Using feature queries
.IP \(bu 2
\f[CR]\(atimport\f[R] and \f[CR]\(atsupports\f[R]
