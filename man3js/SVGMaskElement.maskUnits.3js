.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "SVGMASKELEMENT.MASKUNITS" "3JS" "July 26, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
SVGMaskElement.maskUnits \- SVGMaskElement: maskUnits property
.SH SYNOPSIS
The read\-only \f[B]\f[CB]maskUnits\f[B]\f[R] property of the
\f[CR]SVGMaskElement\f[R] interface reflects the \f[CR]maskUnits\f[R]
attribute of a \f[CR]<mask>\f[R] element which defines the coordinate
system to use for the mask of the element.
.RS
.PP
\f[B]Note:\f[R] Although this property is read\-only, it is merely a
container for two values you can modify, \f[CR]baseVal\f[R] and
\f[CR]animVal\f[R].
.RE
.SH VALUE
An \f[CR]SVGAnimatedEnumeration\f[R] representing the coordinate system.
The possible values are defined in the \f[CR]SVGUnitTypes\f[R]
interface:
.TP
\f[B]0\f[R] (\f[B]SVG_UNIT_TYPE_UNKNOWN\f[R])
The type is not one of the predefined types.
.TP
\f[B]1\f[R] (\f[B]SVG_UNIT_TYPE_USERSPACEONUSE\f[R])
Corresponds to a value of \f[CR]userSpaceOnUse\f[R] for the
\f[CR]maskUnits\f[R] attribute and means that all coordinates inside the
element refer to the user coordinate system as defined when the mask was
created.
It is the default value.
.TP
\f[B]2\f[R] (\f[B]SVG_UNIT_TYPE_OBJECTBOUNDINGBOX\f[R])
Corresponds to a value of \f[CR]objectBoundingBox\f[R] for the attribute
and means that all coordinates inside the element are relative to the
bounding box of the element the mask is applied to.
It means that the origin of the coordinate system is the top left corner
of the object bounding box and the width and height of the object
bounding box are considered to have a length of 1 unit value.
.SH EXAMPLES
.IP
.EX
<\f[B]div\f[R]>
  <\f[B]svg\f[R]
    viewBox=\(dq0 0 100 100\(dq
    height=\(dq200\(dq
    width=\(dq200\(dq
    xmlns=\(dqhttp://www.w3.org/2000/svg\(dq>
    <\f[B]mask\f[R]
      id=\(dqmask1\(dq
      maskUnits=\(dquserSpaceOnUse\(dq
      x=\(dq20%\(dq
      y=\(dq20%\(dq
      width=\(dq60%\(dq
      height=\(dq60%\(dq>
      <\f[B]rect\f[R] fill=\(dqblack\(dq x=\(dq0\(dq y=\(dq0\(dq width=\(dq100%\(dq height=\(dq100%\(dq />
      <\f[B]circle\f[R] fill=\(dqwhite\(dq cx=\(dq50\(dq cy=\(dq50\(dq r=\(dq35\(dq />
    </\f[B]mask\f[R]>

    <\f[B]mask\f[R]
      id=\(dqmask2\(dq
      maskUnits=\(dqobjectBoundingBox\(dq
      x=\(dq20%\(dq
      y=\(dq20%\(dq
      width=\(dq60%\(dq
      height=\(dq60%\(dq>
      <\f[B]rect\f[R] fill=\(dqblack\(dq x=\(dq0\(dq y=\(dq0\(dq width=\(dq100%\(dq height=\(dq100%\(dq />
      <\f[B]circle\f[R] fill=\(dqwhite\(dq cx=\(dq50\(dq cy=\(dq50\(dq r=\(dq35\(dq />
      <\f[B]animate\f[R]
        attributeName=\(dqmaskUnits\(dq
        values=\(dqobjectBoundingBox;userSpaceOnUse\(dq
        dur=\(dq1s\(dq
        repeatCount=\(dqindefinite\(dq />
    </\f[B]mask\f[R]>

    \f[I]<!\-\- Some reference rect to materialized the mask \-\->\f[R]
    <\f[B]rect\f[R] id=\(dqr1\(dq x=\(dq0\(dq y=\(dq0\(dq width=\(dq45\(dq height=\(dq45\(dq />
    <\f[B]rect\f[R] id=\(dqr2\(dq x=\(dq0\(dq y=\(dq55\(dq width=\(dq45\(dq height=\(dq45\(dq />
    <\f[B]rect\f[R] id=\(dqr3\(dq x=\(dq55\(dq y=\(dq55\(dq width=\(dq45\(dq height=\(dq45\(dq />
    <\f[B]rect\f[R] id=\(dqr4\(dq x=\(dq55\(dq y=\(dq0\(dq width=\(dq45\(dq height=\(dq45\(dq />

    \f[I]<!\-\- The first 3 rect are masked with useSpaceOnUse units \-\->\f[R]
    <\f[B]use\f[R] mask=\(dqurl(#mask1)\(dq href=\(dq#r1\(dq fill=\(dqblue\(dq />
    <\f[B]use\f[R] mask=\(dqurl(#mask1)\(dq href=\(dq#r2\(dq fill=\(dqgreen\(dq />
    <\f[B]use\f[R] mask=\(dqurl(#mask1)\(dq href=\(dq#r3\(dq fill=\(dqyellow\(dq />

    \f[I]<!\-\- The last rect is masked with objectBoundingBox units \-\->\f[R]
    <\f[B]use\f[R] mask=\(dqurl(#mask2)\(dq href=\(dq#r4\(dq fill=\(dqlightblue\(dq />
  </\f[B]svg\f[R]>
</\f[B]div\f[R]>
<\f[B]pre\f[R] id=\(dqlog\(dq></\f[B]pre\f[R]>
.EE
.IP
.EX
\f[B]const\f[R] unitType = [\(dqunknown\(dq, \(dquserSpaceOnUse\(dq, \(dqobjectBoundingBox\(dq];

\f[B]const\f[R] mask = document.getElementById(\(dqmask2\(dq);
\f[B]const\f[R] log = document.getElementById(\(dqlog\(dq);

\f[B]function\f[R] displayLog() {
  \f[B]const\f[R] baseValue = unitType[mask.maskUnits.baseVal];
  \f[B]const\f[R] animValue = unitType[mask.maskUnits.animVal];
  log.textContent = \(gaThe top\-right \(aqmaskUnits.baseVal\(aq coord system : ${baseValue}\(rsn\(ga;
  log.textContent += \(gaThe top\-right \(aqmaskUnits.animVal\(aq coord system : ${animValue}\(ga;
  requestAnimationFrame(displayLog);
}
displayLog();
.EE
.SH SEE ALSO
.IP \(bu 2
\f[CR]maskUnits\f[R]
.IP \(bu 2
\f[CR]<mask>\f[R]
