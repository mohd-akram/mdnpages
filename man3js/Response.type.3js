.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "RESPONSE.TYPE" "3JS" "May 19, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Response.type \- Response: type property
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]type\f[B]\f[R] read\-only property of the
\f[CR]Response\f[R] interface contains the type of the response.
The type determines whether scripts are able to access the response body
and headers.
.SH VALUE
A string, which may be any of the following values:
.TP
\f[B]basic\f[R]
This applies in any of the following cases:
.RS
.IP \(bu 2
The request is same\-origin.
.IP \(bu 2
The requested URL\(cqs scheme is \f[CR]data:\f[R].
.IP \(bu 2
The request\(cqs \f[CR]mode\f[R] is \f[CR]navigate\f[R] or
\f[CR]websocket\f[R].
.PP
With this type, all response headers are exposed except
\f[CR]Set\-Cookie\f[R].
.RE
.TP
\f[B]cors\f[R]
The request was cross\-origin and was successfully processed using CORS.
With this type, only CORS\-safelisted response headers are exposed.
.TP
\f[B]error\f[R]
A network error occurred.
The \f[CR]status\f[R] property is set to \f[CR]0\f[R], \f[CR]body\f[R]
is \f[CR]null\f[R], headers are empty and immutable.
.RS
.PP
This is the type of response returned by \f[CR]Response.error()\f[R].
A response of this type is not returned by a call to \f[CR]fetch()\f[R],
because if a network error occurs, the promise is rejected.
.RE
.TP
\f[B]opaque\f[R]
A response to a cross\-origin request whose \f[CR]mode\f[R] was set to
\f[CR]no\-cors\f[R].
The \f[CR]status\f[R] property is set to \f[CR]0\f[R], \f[CR]body\f[R]
is \f[CR]null\f[R], headers are empty and immutable.
.TP
\f[B]opaqueredirect\f[R]
A response to a request whose \f[CR]redirect\f[R] option was set to
\f[CR]manual\f[R], and which was redirected by the server.
The \f[CR]status\f[R] property is set to \f[CR]0\f[R], \f[CR]body\f[R]
is \f[CR]null\f[R], headers are empty and immutable.
.SH EXAMPLES
.SS A basic response
The following same\-origin request will return a \f[CR]basic\f[R]
response:
.IP
.EX
\f[B]const\f[R] response = \f[B]await\f[R] fetch(\(dqflowers.jpg\(dq);

console.log(response.type); \f[I]// \(dqbasic\(dq\f[R]
.EE
.SS A CORS response
Assuming \f[CR]https://example.org\f[R] is not the requester\(cqs
origin, and that the server responds with the appropriate CORS headers,
this request will return a \f[CR]cors\f[R] response:
.IP
.EX
\f[B]const\f[R] response = \f[B]await\f[R] fetch(\(dqhttps://example.org/flowers.jpg\(dq);

console.log(response.type); \f[I]// \(dqcors\(dq\f[R]
.EE
.SS An opaque response
The following request is made with the \f[CR]no\-cors\f[R] option, so it
returns an \f[CR]opaque\f[R] response:
.IP
.EX
\f[B]const\f[R] response = \f[B]await\f[R] fetch(\(dqhttps://example.org/flowers.jpg\(dq, {
  mode: \(dqno\-cors\(dq,
});

console.log(response.type); \f[I]// \(dqopaque\(dq\f[R]
console.log(response.body); \f[I]// null\f[R]
console.log(response.status); \f[I]// 0\f[R]
.EE
.SS An error response
The following code uses \f[CR]Response.error()\f[R] to create an
\f[CR]error\f[R] response:
.IP
.EX
\f[B]const\f[R] response = Response.error();

console.log(response.type); \f[I]// \(dqerror\(dq\f[R]
console.log(response.body); \f[I]// null\f[R]
console.log(response.status); \f[I]// 0\f[R]
.EE
.SH SEE ALSO
.IP \(bu 2
ServiceWorker API
.IP \(bu 2
HTTP access control (CORS)
.IP \(bu 2
HTTP
