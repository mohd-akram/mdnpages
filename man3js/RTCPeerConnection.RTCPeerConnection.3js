.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "RTCPEERCONNECTION.RTCPEERCONNECTION" "3JS" "March 29, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
RTCPeerConnection.RTCPeerConnection \- RTCPeerConnection:
RTCPeerConnection() constructor
.SH SYNOPSIS
The \f[B]\f[CB]RTCPeerConnection()\f[B]\f[R] constructor returns a
newly\-created \f[CR]RTCPeerConnection\f[R], which represents a
connection between the local device and a remote peer.
.SH SYNTAX
.IP
.EX
new RTCPeerConnection()
new RTCPeerConnection(configuration)
.EE
.SS Parameters
.TP
\f[B]configuration\f[R] \f[I](optional)\f[R]
An object providing options to configure the new connection:
.RS
.TP
\f[B]bundlePolicy\f[R] \f[I](optional)\f[R]
Specifies how to handle negotiation of candidates when the remote peer
is not compatible with the \c
.UR https://datatracker.ietf.org/doc/rfc8843/
SDP BUNDLE standard
.UE \c
\&.
If the remote endpoint is BUNDLE\-aware, all media tracks and data
channels are bundled onto a single transport at the completion of
negotiation, regardless of policy used, and any superfluous transports
that were created initially are closed at that point.
.RS
.PP
In technical terms, a BUNDLE lets all media flow between two peers flow
across a single \f[B]5\-tuple\f[R]; that is, from a single IP and port
on one peer to a single IP and port on the other peer, using the same
transport protocol.
.PP
This must be one of the following string values, if not
\f[CR]balanced\f[R] is assumed:
.TP
\f[B]\(dqbalanced\(dq\f[R]
The ICE agent initially creates one \f[CR]RTCDtlsTransport\f[R] for each
type of content added: audio, video, and data channels.
If the remote endpoint is not BUNDLE\-aware, then each of these DTLS
transports handles all the communication for one type of data.
.TP
\f[B]\(dqmax\-compat\(dq\f[R]
The ICE agent initially creates one \f[CR]RTCDtlsTransport\f[R] per
media track and a separate one for data channels.
If the remote endpoint is not BUNDLE\-aware, everything is negotiated on
these separate DTLS transports.
.TP
\f[B]\(dqmax\-bundle\(dq\f[R]
The ICE agent initially creates only a single
\f[CR]RTCDtlsTransport\f[R] to carry all of the
\f[CR]RTCPeerConnection\f[R]\(cqs data.
If the remote endpoint is not BUNDLE\-aware, then only a single track
will be negotiated and the rest ignored.
.RE
.TP
\f[B]certificates\f[R] \f[I](optional)\f[R]
An \f[CR]Array\f[R] of objects of type \f[CR]RTCCertificate\f[R] which
are used by the connection for authentication.
If this property isn\(cqt specified, a set of certificates is generated
automatically for each \f[CR]RTCPeerConnection\f[R] instance.
Although only one certificate is used by a given connection, providing
certificates for multiple algorithms may improve the odds of
successfully connecting in some circumstances.
See Using certificates for further information.
.RS
.RS
.PP
\f[B]Note:\f[R] This configuration option cannot be changed after it is
first specified; once the certificates have been set, this property is
ignored in future calls to
\f[CR]RTCPeerConnection.setConfiguration()\f[R].
.RE
.RE
.TP
\f[B]iceCandidatePoolSize\f[R] \f[I](optional)\f[R]
An unsigned 16\-bit integer value which specifies the size of the
prefetched ICE candidate pool.
The default value is 0 (meaning no candidate prefetching will occur).
You may find in some cases that connections can be established more
quickly by allowing the ICE agent to start fetching ICE candidates
before you start trying to connect, so that they\(cqre already available
for inspection when \f[CR]RTCPeerConnection.setLocalDescription()\f[R]
is called.
.RS
.RS
.PP
\f[B]Note:\f[R] Changing the size of the ICE candidate pool may trigger
the beginning of ICE gathering.
.RE
.RE
.TP
\f[B]iceServers\f[R] \f[I](optional)\f[R]
An array of objects, each describing one server which may be used by the
ICE agent; these are typically STUN and/or TURN servers.
If this isn\(cqt specified, the connection attempt will be made with no
STUN or TURN server available, which limits the connection to local
peers.
Each object may have the following properties:
.RS
.TP
\f[B]credential\f[R] \f[I](optional)\f[R]
The credential to use when logging into the server.
This is only used if the object represents a TURN server.
.TP
\f[B]credentialType\f[R] \f[I](optional)\f[R] \f[I](deprecated)\f[R] \f[I](non\-standard)\f[R]
If the object represents a TURN server, this attribute specifies what
kind of \f[CR]credential\f[R] is to be used when connecting.
The default is \f[CR]\(dqpassword\(dq\f[R].
.TP
\f[B]urls\f[R]
This \f[B]required\f[R] property is either a single string or an array
of strings, each specifying a URL which can be used to connect to the
server.
.TP
\f[B]username\f[R] \f[I](optional)\f[R]
If the object represents a TURN server, then this is the username to use
during the authentication.
.RE
.TP
\f[B]iceTransportPolicy\f[R] \f[I](optional)\f[R]
A string representing the current ICE transport policy.
Possible values are:
.RS
.TP
\f[B]\(dqall\(dq\f[R]
All ICE candidates will be considered.
This is the default value.
.TP
\f[B]\(dqpublic\(dq\f[R] \f[I](deprecated)\f[R]
Only ICE candidates with public IP addresses will be considered.
.TP
\f[B]\(dqrelay\(dq\f[R]
Only ICE candidates whose IP addresses are being relayed, such as those
being passed through a TURN server, will be considered.
.RE
.TP
\f[B]peerIdentity\f[R] \f[I](optional)\f[R]
A string which specifies the target peer identity for the
\f[CR]RTCPeerConnection\f[R].
If this value is set (it defaults to \f[CR]null\f[R]), the
\f[CR]RTCPeerConnection\f[R] will not connect to a remote peer unless it
can successfully authenticate with the given name.
.TP
\f[B]rtcpMuxPolicy\f[R] \f[I](optional)\f[R]
A string which specifies the RTCP mux policy to use when gathering ICE
candidates, in order to support non\-multiplexed RTCP.
Possible values are:
.RS
.TP
\f[B]\(dqnegotiate\(dq\f[R]
Instructs the ICE agent to gather both RTP and RTCP candidates.
If the remote peer can multiplex RTCP, then RTCP candidates are
multiplexed atop the corresponding RTP candidates.
Otherwise, both the RTP and RTCP candidates are returned, separately.
.TP
\f[B]\(dqrequire\(dq\f[R]
Tells the ICE agent to gather ICE candidates for only RTP, and to
multiplex RTCP atop them.
If the remote peer doesn\(cqt support RTCP multiplexing, then session
negotiation fails.
This is the default value.
.RE
.RE
.SS Return value
A newly\-created \f[CR]RTCPeerConnection\f[R] object, configured as
described by \f[CR]configuration\f[R], if specified; otherwise,
configured to appropriate basic defaults.
.SH USING CERTIFICATES
When you wish to provide your own certificates for use by an
\f[CR]RTCPeerConnection\f[R] instead of having the
\f[CR]RTCPeerConnection\f[R] generate them automatically, you do so by
calling the static \f[CR]RTCPeerConnection.generateCertificate()\f[R]
function.
.PP
The \f[CR]certificates\f[R] property\(cqs value cannot be changed once
it\(cqs first specified.
If it\(cqs included in the configuration passed into a call to a
connection\(cqs \f[CR]setConfiguration()\f[R], it is ignored.
.PP
This attribute supports providing multiple certificates because even
though a given DTLS connection uses only one certificate, providing
multiple certificates allows support for multiple encryption algorithms.
The implementation of \f[CR]RTCPeerConnection\f[R] will choose which
certificate to use based on the algorithms it and the remote peer
support, as determined during DTLS handshake.
.PP
If you don\(cqt provide certificates, new ones are generated
automatically.
One obvious benefit to providing your own is identity key
continuity\(emif you use the same certificate for subsequent calls, the
remote peer can tell you\(cqre the same caller.
This also avoids the cost of generating new keys.
.SH SEE ALSO
.IP \(bu 2
Signaling and video calling
.IP \(bu 2
WebRTC architecture overview
.IP \(bu 2
Lifetime of a WebRTC session
.IP \(bu 2
\f[CR]RTCPeerConnection\f[R]
