.\" Automatically generated by Pandoc 3.4
.\"
.TH "CSPViolationReportBody.effectiveDirective" "JS" "September 23, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
CSPViolationReportBody.effectiveDirective \- CSPViolationReportBody:
effectiveDirective property
.SH SYNOPSIS
The \f[B]\f[CB]effectiveDirective\f[B]\f[R] read\-only property of the
\f[CR]CSPViolationReportBody\f[R] interface is a string that represents
the effective Content Security Policy (CSP) directive that was violated.
.PP
Note that this contains the specific directive that was effectively
violated, such as \f[CR]script\-src\-elem\f[R] for violations related to
script elements, and not the policy that was specified, which may have
been the (more general) \f[CR]default\-src\f[R].
.SH VALUE
A string representing the effective \f[CR]Content\-Security\-Policy\f[R]
directive that was violated.
.SH EXAMPLES
.SS CSP inline script violation
This example triggers a CSP violation using an inline script, and
reports the violation using a \f[CR]ReportingObserver\f[R].
In particular, it logs the \f[CR]effectiveDirective\f[R] and the
\f[CR]originalPolicy\f[R], making the difference clear.
.SS HTML
The HTML file below uses the \f[CR]<meta>\f[R] element to set the
\f[CR]Content\-Security\-Policy\f[R] \f[CR]default\-src\f[R] to
\f[CR]self\f[R], which allows scripts and other resources to be loaded
from the same domain, but does not allow inline scripts to be executed.
The document also includes an inline script, which should trigger a CSP
violation.
.IP
.EX
<!doctype html>
<\f[B]html\f[R] lang=\[dq]en\[dq]>
  <\f[B]head\f[R]>
    <\f[B]meta\f[R]
      http\-equiv=\[dq]Content\-Security\-Policy\[dq]
      content=\[dq]default\-src \[aq]self\[aq]; report\-to csp\-endpoint\[dq] />
    <\f[B]meta\f[R]
      http\-equiv=\[dq]Reporting\-Endpoints\[dq]
      content=\[dq]csp\-endpoint=\[aq]https://example.com/csp\-reports\[aq]\[dq] />
    <\f[B]script\f[R] src=\[dq]main.js\[dq]></\f[B]script\f[R]>
    <\f[B]title\f[R]>CSP: Violation due to inline script</\f[B]title\f[R]>
  </\f[B]head\f[R]>
  <\f[B]body\f[R]>
    <\f[B]h1\f[R]>CSP: Violation due to inline script</\f[B]h1\f[R]>
    <\f[B]script\f[R]>
      \f[B]const\f[R] int = 4;
    </\f[B]script\f[R]>
  </\f[B]body\f[R]>
</\f[B]html\f[R]>
.EE
.SS JavaScript (main.js)
The document above also loads the external script \f[CR]main.js\f[R],
which is shown below.
Because this is loaded from the same domain as the HTML, it is not
blocked by the CSP.
.PP
The script creates a new \f[CR]ReportingObserver\f[R] to observe content
violation reports of type \f[CR]\[dq]csp\-violation\[dq]\f[R].
Each time the callback function is invoked, we get the body of the first
entry of the reports array, and use it to log the effectiveDirective and
\f[CR]originalPolicy\f[R] of the violation to the console.
.IP
.EX
\f[I]// main.js\f[R]
\f[B]const\f[R] observer = \f[B]new\f[R] ReportingObserver(
  (reports, observer) \f[B]=>\f[R] {
    console.log(\[ga]effectiveDirective: ${reports[0].body.effectiveDirective}\[ga]);
    \f[I]// effectiveDirective: script\-src\-elem\f[R]
    console.log(\[ga]originalPolicy: ${reports[0].body.originalPolicy}\[ga]);
    \f[I]// originalPolicy: default\-src \[aq]self\[aq]; report\-to csp\-endpoint\f[R]
  },
  {
    types: [\[dq]csp\-violation\[dq]],
    buffered: \f[B]true\f[R],
  },
);

observer.observe();
.EE
.PP
Note that while there might be multiple reports in the returned array,
for brevity we only log the values of the first element.
.SS Results
The console output for the above code is:
.IP
.EX
effectiveDirective: script\-src\-elem
originalPolicy: default\-src \[aq]self\[aq]; report\-to csp\-endpoint
.EE
.PP
Note that the \f[CR]originalPolicy\f[R] matches the \f[CR]<meta>\f[R]
content of the \f[CR]Content\-Security\-Policy\f[R] directive in the
HTML, and specifies that the policy is \f[CR]self\f[R] by default
(\f[CR]default\-src \[aq]self\[aq]\f[R]).
.PP
The \f[CR]effectiveDirective\f[R] is \f[CR]script\-src\-elem\f[R], which
specifies valid sources for JavaScript \f[CR]<script>\f[R] elements.
This is the specific directive that has effectively been violated, even
though \f[CR]default\-src\f[R] was set in the policy.
.SH SEE ALSO
.IP \[bu] 2
\f[CR]SecurityPolicyViolationEvent.effectiveDirective\f[R]
