.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "MEDIASTREAMTRACKAUDIOSOURCENODE.MEDIASTREAMTRACKAUDIOSOURCENODE" "3JS" "April 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
MediaStreamTrackAudioSourceNode.MediaStreamTrackAudioSourceNode \-
MediaStreamTrackAudioSourceNode: MediaStreamTrackAudioSourceNode()
constructor
.SH SYNOPSIS
The Web Audio API\(cqs
\f[B]\f[CB]MediaStreamTrackAudioSourceNode()\f[B]\f[R] constructor
creates and returns a new \f[CR]MediaStreamTrackAudioSourceNode\f[R]
object whose audio is taken from the \f[CR]MediaStreamTrack\f[R]
specified in the given options object.
.PP
Another way to create a \f[CR]MediaStreamTrackAudioSourceNode\f[R] is to
call the \f[CR]AudioContext.createMediaStreamTrackSource()\f[R] method,
specifying the \f[CR]MediaStreamTrack\f[R] from which you want to obtain
audio.
.SH SYNTAX
.IP
.EX
new MediaStreamTrackAudioSourceNode(context, options)
.EE
.SS Parameters
.TP
\f[B]context\f[R]
An \f[CR]AudioContext\f[R] representing the audio context you want the
node to be associated with.
.TP
\f[B]options\f[R]
An object defining the properties you want the
\f[CR]MediaStreamTrackAudioSourceNode\f[R] to have:
.RS
.TP
\f[B]mediaStreamTrack\f[R]
The \f[CR]MediaStreamTrack\f[R] from which to take audio data for this
node\(cqs output.
.RE
.SS Return value
A new \f[CR]MediaStreamTrackAudioSourceNode\f[R] object representing the
audio node whose media is obtained from the specified media track.
.SS Exceptions
.TP
\f[B]NotSupportedError\f[R] \f[B]DOMException\f[R]
Thrown if the specified \f[CR]context\f[R] is not an
\f[CR]AudioContext\f[R].
.TP
\f[B]InvalidStateError\f[R] \f[B]DOMException\f[R]
Thrown if the specified \f[CR]MediaStreamTrack\f[R] isn\(cqt an audio
track (that is, its \f[CR]kind\f[R] property isn\(cqt \f[CR]audio\f[R].
.SH EXAMPLE
This example uses \f[CR]getUserMedia()\f[R] to obtain access to the
user\(cqs camera, then creates a new
\f[CR]MediaStreamAudioSourceNode\f[R] from the first audio track
provided by the device.
.IP
.EX
\f[B]const\f[R] audioCtx = \f[B]new\f[R] AudioContext();

\f[B]if\f[R] (navigator.mediaDevices.getUserMedia) {
  navigator.mediaDevices
    .getUserMedia({
      audio: \f[B]true\f[R],
      video: \f[B]false\f[R],
    })
    .then((stream) \f[B]=>\f[R] {
      \f[B]const\f[R] options = {
        mediaStreamTrack: stream.getAudioTracks()[0],
      };

      \f[B]const\f[R] source = \f[B]new\f[R] MediaStreamTrackAudioSourceNode(audioCtx, options);
      source.connect(audioCtx.destination);
    })
    .catch((err) \f[B]=>\f[R] {
      console.error(\(gaThe following gUM error occurred: ${err}\(ga);
    });
} \f[B]else\f[R] {
  console.log(\(dqnew getUserMedia not supported on your browser!\(dq);
}
.EE
