.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "AGGREGATEERROR" "3JS" "March 5, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
AggregateError \- AggregateError
.SH SYNOPSIS
The \f[B]\f[CB]AggregateError\f[B]\f[R] object represents an error when
several errors need to be wrapped in a single error.
It is thrown when multiple errors need to be reported by an operation,
for example by \f[CR]Promise.any()\f[R], when all promises passed to it
reject.
.PP
\f[CR]AggregateError\f[R] is a subclass of \f[CR]Error\f[R].
.SH CONSTRUCTOR
.TP
\f[B]AggregateError()\f[R]
Creates a new \f[CR]AggregateError\f[R] object.
.SH INSTANCE PROPERTIES
\f[I]Also inherits instance properties from its parent
\f[CI]Error\f[I]\f[R].
.PP
These properties are defined on \f[CR]AggregateError.prototype\f[R] and
shared by all \f[CR]AggregateError\f[R] instances.
.TP
\f[B]AggregateError.prototype.constructor\f[R]
The constructor function that created the instance object.
For \f[CR]AggregateError\f[R] instances, the initial value is the
\f[CR]AggregateError\f[R] constructor.
.TP
\f[B]AggregateError.prototype.name\f[R]
Represents the name for the type of error.
For \f[CR]AggregateError.prototype.name\f[R], the initial value is
\f[CR]\(dqAggregateError\(dq\f[R].
.PP
These properties are own properties of each \f[CR]AggregateError\f[R]
instance.
.TP
\f[B]errors\f[R]
An array representing the errors that were aggregated.
.SH INSTANCE METHODS
\f[I]Inherits instance methods from its parent \f[CI]Error\f[I]\f[R].
.SH EXAMPLES
.SS Catching an AggregateError
.IP
.EX
Promise.any([Promise.reject(\f[B]new\f[R] Error(\(dqsome error\(dq))]).catch((e) \f[B]=>\f[R] {
  console.log(e \f[B]instanceof\f[R] AggregateError); \f[I]// true\f[R]
  console.log(e.message); \f[I]// \(dqAll Promises rejected\(dq\f[R]
  console.log(e.name); \f[I]// \(dqAggregateError\(dq\f[R]
  console.log(e.errors); \f[I]// [ Error: \(dqsome error\(dq ]\f[R]
});
.EE
.SS Creating an AggregateError
.IP
.EX
\f[B]try\f[R] {
  \f[B]throw\f[R] \f[B]new\f[R] AggregateError([\f[B]new\f[R] Error(\(dqsome error\(dq)], \(dqHello\(dq);
} \f[B]catch\f[R] (e) {
  console.log(e \f[B]instanceof\f[R] AggregateError); \f[I]// true\f[R]
  console.log(e.message); \f[I]// \(dqHello\(dq\f[R]
  console.log(e.name); \f[I]// \(dqAggregateError\(dq\f[R]
  console.log(e.errors); \f[I]// [ Error: \(dqsome error\(dq ]\f[R]
}
.EE
.SH SEE ALSO
.IP \(bu 2
\c
.UR https://github.com/zloirock/core-js#ecmascript-promise
Polyfill of \f[CR]AggregateError\f[R] in \f[CR]core\-js\f[R]
.UE \c
.IP \(bu 2
\c
.UR https://www.npmjs.com/package/es-aggregate-error
es\-shims polyfill of \f[CR]AggregateError\f[R]
.UE \c
.IP \(bu 2
\f[CR]Error\f[R]
.IP \(bu 2
\f[CR]Promise.any\f[R]
