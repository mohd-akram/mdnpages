.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "Cache.matchAll" "JS" "May 18, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Cache.matchAll \- Cache: matchAll() method
.SH SYNOPSIS
\f[B]Secure context:\f[R] This feature is available only in secure
contexts (HTTPS).
.PP
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]matchAll()\f[B]\f[R] method of the \f[CR]Cache\f[R]
interface returns a \f[CR]Promise\f[R] that resolves to an array of all
matching responses in the \f[CR]Cache\f[R] object.
.SH SYNTAX
.IP
.EX
matchAll()
matchAll(request)
matchAll(request, options)
.EE
.SS Parameters
.TP
\f[B]request\f[R] \f[I](optional)\f[R]
The \f[CR]Request\f[R] for which you are attempting to find responses in
the \f[CR]Cache\f[R].
This can be a \f[CR]Request\f[R] object or a URL.
If this argument is omitted, you will get a copy of all responses in
this cache.
.TP
\f[B]options\f[R] \f[I](optional)\f[R]
An options object allowing you to set specific control options for the
matching performed.
The available options are:
.RS
.TP
\f[B]ignoreSearch\f[R]
A boolean value that specifies whether the matching process should
ignore the query string in the URL.
If set to \f[CR]true\f[R], the \f[CR]?value=bar\f[R] part of
\f[CR]http://foo.com/?value=bar\f[R] would be ignored when performing a
match.
It defaults to \f[CR]false\f[R].
.TP
\f[B]ignoreMethod\f[R]
A boolean value that, when set to \f[CR]true\f[R], prevents matching
operations from validating the \f[CR]Request\f[R] \f[CR]http\f[R] method
(normally only \f[CR]GET\f[R] and \f[CR]HEAD\f[R] are allowed.)
It defaults to \f[CR]false\f[R].
.TP
\f[B]ignoreVary\f[R]
A boolean value that when set to \f[CR]true\f[R] tells the matching
operation not to perform \f[CR]VARY\f[R] header matching \[em] i.e.\ if
the URL matches you will get a match regardless of the
\f[CR]Response\f[R] object having a \f[CR]VARY\f[R] header or not.
It defaults to \f[CR]false\f[R].
.RE
.SS Return value
A \f[CR]Promise\f[R] that resolves to an array of all matching responses
in the \f[CR]Cache\f[R] object.
.RS
.PP
\f[B]Note:\f[R] \f[CR]Cache.match()\f[R] is basically identical to
\f[CR]Cache.matchAll()\f[R], except that rather than resolving with an
array of all matching responses, it resolves with the first matching
response only (that is, \f[CR]response[0]\f[R]).
.RE
.SH EXAMPLES
The following example retrieves all responses in the \f[CR]v1\f[R] cache
matching the URL \f[CR]/\f[R], even including potential query
parameters.
By using \f[CR]{ ignoreSearch: true }\f[R], using \f[CR]matchAll\f[R]
would retrieve \f[CR]/\f[R] as well as \f[CR]/?value=bar\f[R].
.PP
It then logs the number of matching responses.
.IP
.EX
caches.open(\[dq]v1\[dq]).then((cache) \f[B]=>\f[R] {
  cache.matchAll(\[dq]/\[dq], { ignoreSearch: \f[B]true\f[R] }).then((responses) \f[B]=>\f[R] {
    console.log(\[ga]Found ${responses.length} matching responses\[ga]);
  });
});
.EE
.SH SEE ALSO
.IP \[bu] 2
Using Service Workers
.IP \[bu] 2
\f[CR]Cache\f[R]
.IP \[bu] 2
\f[CR]Window.caches\f[R] and \f[CR]WorkerGlobalScope.caches\f[R]
