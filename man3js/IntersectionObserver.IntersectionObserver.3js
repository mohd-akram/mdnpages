.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "IntersectionObserver.IntersectionObserver" "JS" "January 17, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
IntersectionObserver.IntersectionObserver \- IntersectionObserver:
IntersectionObserver() constructor
.SH SYNOPSIS
The \f[B]\f[CB]IntersectionObserver()\f[B]\f[R] constructor creates and
returns a new \f[CR]IntersectionObserver\f[R] object.
.PP
The \f[CR]rootMargin\f[R], if specified, is checked to ensure it\[cq]s
syntactically correct.
If not specified, or an empty string, the default is
\f[CR]0px 0px 0px 0px\f[R].
.PP
The \f[CR]threshold\f[R]s, if specified, are checked to ensure that
they\[cq]re all in the range 0.0 and 1.0 inclusive, and the threshold
list is sorted in ascending numeric order.
If the threshold list is empty, it\[cq]s set to the array
\f[CR][0.0]\f[R].
.SH SYNTAX
.IP
.EX
new IntersectionObserver(callback)
new IntersectionObserver(callback, options)
.EE
.SS Parameters
.TP
\f[B]callback\f[R]
A function which is called when the percentage of the target element is
visible crosses a threshold.
The callback receives as input two parameters:
.RS
.TP
\f[B]entries\f[R]
An array of \f[CR]IntersectionObserverEntry\f[R] objects, each
representing one threshold which was crossed, either becoming more or
less visible than the percentage specified by that threshold.
.TP
\f[B]observer\f[R]
The \f[CR]IntersectionObserver\f[R] for which the callback is being
invoked.
.RE
.TP
\f[B]options\f[R] \f[I](optional)\f[R]
An optional object which customizes the observer.
All properties are optional.
You can provide any combination of the following options:
.RS
.TP
\f[B]root\f[R]
An \f[CR]Element\f[R] or \f[CR]Document\f[R] object which is an ancestor
of the intended target, whose bounding rectangle will be considered the
viewport.
Any part of the target not visible in the visible area of the
\f[CR]root\f[R] is not considered visible.
If not specified, the observer uses the document\[cq]s viewport as the
root, with no margin, and a 0% threshold (meaning that even a one\-pixel
change is enough to trigger a callback).
.TP
\f[B]rootMargin\f[R]
A string which specifies a set of offsets to add to the root\[cq]s
bounding_box when calculating intersections, effectively shrinking or
growing the root for calculation purposes.
The syntax is approximately the same as that for the CSS
\f[CR]margin\f[R] property; see The intersection root and root margin
for more information on how the margin works and the syntax.
The default is \[lq]0px 0px 0px 0px\[rq].
.TP
\f[B]threshold\f[R]
Either a single number or an array of numbers between 0.0 and 1.0,
specifying a ratio of intersection area to total bounding box area for
the observed target.
A value of 0.0 means that even a single visible pixel counts as the
target being visible.
1.0 means that the entire target element is visible.
See Thresholds for a more in\-depth description of how thresholds are
used.
The default is a threshold of 0.0.
.RE
.SS Return value
A new \f[CR]IntersectionObserver\f[R] which can be used to watch for the
visibility of a target element within the specified \f[CR]root\f[R]
crossing through any of the specified visibility \f[CR]threshold\f[R]s.
Call its \f[CR]observe()\f[R] method to begin watching for the
visibility changes on a given target.
.SS Exceptions
.TP
\f[B]SyntaxError\f[R] \f[B]DOMException\f[R]
The specified \f[CR]rootMargin\f[R] is invalid.
.TP
\f[B]RangeError\f[R]
One or more of the values in \f[CR]threshold\f[R] is outside the range
0.0 to 1.0.
.SH EXAMPLES
This example creates a new intersection observer which calls the
function \f[CR]myObserverCallback\f[R] every time the visible area of
the element being observed changes by at least 10%.
.IP
.EX
\f[B]let\f[R] observer = \f[B]new\f[R] IntersectionObserver(myObserverCallback, { threshold: 0.1 });
.EE
