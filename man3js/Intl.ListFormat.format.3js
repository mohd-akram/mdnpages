.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "Intl.ListFormat.format" "JS" "August 16, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Intl.ListFormat.format \- Intl.ListFormat.prototype.format()
.SH SYNOPSIS
The \f[B]\f[CB]format()\f[B]\f[R] method of \f[CR]Intl.ListFormat\f[R]
instances returns a string with a language\-specific representation of
the list.
.SH SYNTAX
.IP
.EX
format()
format(list)
.EE
.SS Parameters
.TP
\f[B]list\f[R]
An iterable object, such as an Array.
.SS Return value
A language\-specific formatted string representing the elements of the
list
.SH DESCRIPTION
The \f[B]\f[CB]format()\f[B]\f[R] method returns a string that has been
formatted based on parameters provided in the \f[CR]Intl.ListFormat\f[R]
object.
The \f[CR]locales\f[R] and \f[CR]options\f[R] parameters customize the
behavior of \f[CR]format()\f[R] and let applications specify the
language conventions that should be used to format the list.
.SH EXAMPLES
.SS Using format
The following example shows how to create a List formatter using the
English language.
.IP
.EX
\f[B]const\f[R] list = [\[dq]Motorcycle\[dq], \[dq]Bus\[dq], \[dq]Car\[dq]];

console.log(
  \f[B]new\f[R] Intl.ListFormat(\[dq]en\-GB\[dq], { style: \[dq]long\[dq], type: \[dq]conjunction\[dq] }).format(
    list,
  ),
);
\f[I]// Motorcycle, Bus and Car\f[R]

console.log(
  \f[B]new\f[R] Intl.ListFormat(\[dq]en\-GB\[dq], { style: \[dq]short\[dq], type: \[dq]disjunction\[dq] }).format(
    list,
  ),
);
\f[I]// Motorcycle, Bus or Car\f[R]

console.log(
  \f[B]new\f[R] Intl.ListFormat(\[dq]en\-GB\[dq], { style: \[dq]narrow\[dq], type: \[dq]unit\[dq] }).format(list),
);
\f[I]// Motorcycle Bus Car\f[R]
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]Intl.ListFormat\f[R]
