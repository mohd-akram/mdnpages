.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "INTL.LISTFORMAT.FORMAT" "3JS" "June 20, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Intl.ListFormat.format \- Intl.ListFormat.prototype.format()
.SH SYNOPSIS
The \f[B]\f[CB]format()\f[B]\f[R] method of \f[CR]Intl.ListFormat\f[R]
instances returns a string with a language\-specific representation of
the list.
.IP
.EX
\f[B]const\f[R] vehicles = [\(dqMotorcycle\(dq, \(dqBus\(dq, \(dqCar\(dq];

\f[B]const\f[R] formatter = \f[B]new\f[R] Intl.ListFormat(\(dqen\(dq, {
  style: \(dqlong\(dq,
  type: \(dqconjunction\(dq,
});
console.log(formatter.format(vehicles));
\f[I]// Expected output: \(dqMotorcycle, Bus, and Car\(dq\f[R]

\f[B]const\f[R] formatter2 = \f[B]new\f[R] Intl.ListFormat(\(dqde\(dq, {
  style: \(dqshort\(dq,
  type: \(dqdisjunction\(dq,
});
console.log(formatter2.format(vehicles));
\f[I]// Expected output: \(dqMotorcycle, Bus oder Car\(dq\f[R]

\f[B]const\f[R] formatter3 = \f[B]new\f[R] Intl.ListFormat(\(dqen\(dq, { style: \(dqnarrow\(dq, type: \(dqunit\(dq });
console.log(formatter3.format(vehicles));
\f[I]// Expected output: \(dqMotorcycle Bus Car\(dq\f[R]
.EE
.SH SYNTAX
.IP
.EX
format(list)
.EE
.SS Parameters
.TP
\f[B]list\f[R]
An iterable object, such as an Array, containing strings.
Omitting it results in formatting the empty array, which could be
slightly confusing, so it is advisable to always explicitly pass a list.
.SS Return value
A language\-specific formatted string representing the elements of the
list.
.RS
.PP
\f[B]Note:\f[R] Most of the time, the formatting returned by
\f[CR]format()\f[R] is consistent.
However, the output may vary between implementations, even within the
same locale \(em output variations are by design and allowed by the
specification.
It may also not be what you expect.
For example, the string may use non\-breaking spaces or be surrounded by
bidirectional control characters.
You should not compare the results of \f[CR]format()\f[R] to hardcoded
constants.
.RE
.SH EXAMPLES
.SS Using format
The following example shows how to create a List formatter using the
English language.
.IP
.EX
\f[B]const\f[R] list = [\(dqMotorcycle\(dq, \(dqBus\(dq, \(dqCar\(dq];

console.log(
  \f[B]new\f[R] Intl.ListFormat(\(dqen\-GB\(dq, { style: \(dqlong\(dq, type: \(dqconjunction\(dq }).format(
    list,
  ),
);
\f[I]// Motorcycle, Bus and Car\f[R]

console.log(
  \f[B]new\f[R] Intl.ListFormat(\(dqen\-GB\(dq, { style: \(dqshort\(dq, type: \(dqdisjunction\(dq }).format(
    list,
  ),
);
\f[I]// Motorcycle, Bus or Car\f[R]

console.log(
  \f[B]new\f[R] Intl.ListFormat(\(dqen\-GB\(dq, { style: \(dqnarrow\(dq, type: \(dqunit\(dq }).format(list),
);
\f[I]// Motorcycle Bus Car\f[R]
.EE
.SH SEE ALSO
.IP \(bu 2
\f[CR]Intl.ListFormat\f[R]
