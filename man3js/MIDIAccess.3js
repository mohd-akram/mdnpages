.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "MIDIAccess" "JS" "October 21, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
MIDIAccess \- MIDIAccess
.SH SYNOPSIS
\f[B]Secure context:\f[R] This feature is available only in secure
contexts (HTTPS).
.PP
The \f[B]\f[CB]MIDIAccess\f[B]\f[R] interface of the Web MIDI API
provides methods for listing MIDI input and output devices, and
obtaining access to those devices.
.PP
\f[CR]MIDIAccess\f[R] is a transferable object.
.SH INSTANCE PROPERTIES
.TP
\f[B]MIDIAccess.inputs\f[R] \f[I](read\-only)\f[R]
Returns an instance of \f[CR]MIDIInputMap\f[R] which provides access to
any available MIDI input ports.
.TP
\f[B]MIDIAccess.outputs\f[R] \f[I](read\-only)\f[R]
Returns an instance of \f[CR]MIDIOutputMap\f[R] which provides access to
any available MIDI output ports.
.TP
\f[B]MIDIAccess.sysexEnabled\f[R] \f[I](read\-only)\f[R]
A boolean attribute indicating whether system exclusive support is
enabled on the current MIDIAccess instance.
.SS Events
.TP
\f[B]statechange\f[R]
Called whenever a new MIDI port is added or an existing port changes
state.
.SH EXAMPLES
The \f[CR]Navigator.requestMIDIAccess()\f[R] method returns a promise
that resolves with a \f[CR]MIDIAccess\f[R] object.
Information about the input and output ports is returned.
.PP
When a port changes state, information about that port is printed to the
console.
.IP
.EX
navigator.requestMIDIAccess().then((access) \f[B]=>\f[R] {
  \f[I]// Get lists of available MIDI controllers\f[R]
  \f[B]const\f[R] inputs = access.inputs.values();
  \f[B]const\f[R] outputs = access.outputs.values();

  access.onstatechange = (event) \f[B]=>\f[R] {
    \f[I]// Print information about the (dis)connected MIDI controller\f[R]
    console.log(event.port.name, event.port.manufacturer, event.port.state);
  };
});
.EE
