'\" t
.\" Automatically generated by Pandoc 3.4
.\"
.TH "CSSStyleSheet" "JS" "August 19, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
CSSStyleSheet \- CSSStyleSheet
.SH SYNOPSIS
The \f[B]\f[CB]CSSStyleSheet\f[B]\f[R] interface represents a single CSS
stylesheet, and lets you inspect and modify the list of rules contained
in the stylesheet.
It inherits properties and methods from its parent,
\f[CR]StyleSheet\f[R].
.PP
A stylesheet consists of a collection of \f[CR]CSSRule\f[R] objects
representing each of the rules in the stylesheet.
The rules are contained in a \f[CR]CSSRuleList\f[R], which can be
obtained from the stylesheet\[cq]s \f[CR]cssRules\f[R] property.
.PP
For example, one rule might be a \f[CR]CSSStyleRule\f[R] object
containing a style such as:
.IP
.EX
h1,
h2 {
  \f[B]font\-size\f[R]: 16pt;
}
.EE
.PP
Another rule might be an \f[I]at\-rule\f[R] such as
\f[CR]\[at]import\f[R] or \f[CR]\[at]media\f[R], and so forth.
.PP
See the Obtaining a StyleSheet section for the various ways a
\f[CR]CSSStyleSheet\f[R] object can be obtained.
A \f[CR]CSSStyleSheet\f[R] object can also be directly constructed.
The constructor, and the \f[CR]CSSStyleSheet.replace()\f[R], and
\f[CR]CSSStyleSheet.replaceSync()\f[R] methods are newer additions to
the specification, enabling \f[I]Constructable Stylesheets\f[R].
.SH CONSTRUCTOR
.TP
\f[B]CSSStyleSheet()\f[R]
Creates a new \f[CR]CSSStyleSheet\f[R] object.
.SH INSTANCE PROPERTIES
\f[I]Inherits properties from its parent, \f[CI]StyleSheet\f[I].\f[R]
.TP
\f[B]CSSStyleSheet.cssRules\f[R] \f[I](read\-only)\f[R]
Returns a live \f[CR]CSSRuleList\f[R] which maintains an up\-to\-date
list of the \f[CR]CSSRule\f[R] objects that comprise the stylesheet.
.RS
.RS
.PP
\f[B]Note:\f[R] In some browsers, if a stylesheet is loaded from a
different domain, accessing \f[CR]cssRules\f[R] results in a
\f[CR]SecurityError\f[R].
.RE
.RE
.TP
\f[B]CSSStyleSheet.ownerRule\f[R] \f[I](read\-only)\f[R]
If this stylesheet is imported into the document using an
\f[CR]\[at]import\f[R] rule, the \f[CR]ownerRule\f[R] property returns
the corresponding \f[CR]CSSImportRule\f[R]; otherwise, this
property\[cq]s value is \f[CR]null\f[R].
.SH INSTANCE METHODS
\f[I]Inherits methods from its parent, \f[CI]StyleSheet\f[I].\f[R]
.TP
\f[B]CSSStyleSheet.deleteRule()\f[R]
Deletes the rule at the specified index into the stylesheet\[cq]s rule
list.
.TP
\f[B]CSSStyleSheet.insertRule()\f[R]
Inserts a new rule at the specified position in the stylesheet, given
the textual representation of the rule.
.TP
\f[B]CSSStyleSheet.replace()\f[R]
Asynchronously replaces the content of the stylesheet and returns a
\f[CR]Promise\f[R] that resolves with the updated
\f[CR]CSSStyleSheet\f[R].
.TP
\f[B]CSSStyleSheet.replaceSync()\f[R]
Synchronously replaces the content of the stylesheet.
.SH LEGACY PROPERTIES
\f[I]These properties are legacy properties as introduced by Microsoft;
these are maintained for compatibility with existing sites.\f[R]
.TP
\f[B]rules\f[R] \f[I](read\-only)\f[R] \f[I](deprecated)\f[R]
The \f[CR]rules\f[R] property is functionally identical to the standard
\f[CR]cssRules\f[R] property; it returns a live \f[CR]CSSRuleList\f[R]
which maintains an up\-to\-date list of all of the rules in the style
sheet.
.SH LEGACY METHODS
\f[I]These methods are legacy methods as introduced by Microsoft; these
are maintained for compatibility with existing sites.\f[R]
.TP
\f[B]addRule()\f[R] \f[I](deprecated)\f[R]
Adds a new rule to the stylesheet given the selector to which the style
applies and the style block to apply to the matching elements.
.RS
.PP
This differs from \f[CR]insertRule()\f[R], which takes the textual
representation of the entire rule as a single string.
.RE
.TP
\f[B]removeRule()\f[R] \f[I](deprecated)\f[R]
Functionally identical to \f[CR]deleteRule()\f[R]; removes the rule at
the specified index from the stylesheet\[cq]s rule list.
.SH OBTAINING A STYLESHEET
A stylesheet is associated with at most one \f[CR]Document\f[R], which
it applies to (unless disabled).
A list of \f[CR]CSSStyleSheet\f[R] objects for a given document can be
obtained using the \f[CR]Document.styleSheets\f[R] property.
A specific style sheet can also be accessed from its \f[I]owner\f[R]
object (\f[CR]Node\f[R] or \f[CR]CSSImportRule\f[R]), if any.
.PP
A \f[CR]CSSStyleSheet\f[R] object is created and inserted into the
document\[cq]s \f[CR]Document.styleSheets\f[R] list automatically by the
browser, when a stylesheet is loaded for a document.
.PP
A (possibly incomplete) list of ways a stylesheet can be associated with
a document follows:
.PP
.TS
tab(@);
lw(14.0n) lw(14.0n) lw(14.0n) lw(14.0n) lw(14.0n).
T{
Reason for the style sheet to be associated with the document
T}@T{
Appears in \f[CR]document.\f[R]
.PD 0
.P
.PD
\f[CR]styleSheets\f[R] list
T}@T{
Getting the owner element/rule given the style sheet object
T}@T{
The interface for the owner object
T}@T{
Getting the CSSStyleSheet object from the owner
T}
_
T{
\[ga]
\[ga] and \[ga]\[ga] elements in the document
T}@T{
Yes
T}@T{
\[ga].ownerNode\[ga]
T}@T{
\[ga]HTMLLinkElement\[ga],
.PD 0
.P
.PD
\[ga]HTMLStyleElement\[ga],
.PD 0
.P
.PD
or \[ga]SVGStyleElement\[ga]
T}@T{
\[ga]HTMLLinkElement.sheet\[ga],
.PD 0
.P
.PD
\[ga]HTMLStyleElement.sheet\[ga],
.PD 0
.P
.PD
or \[ga]SVGStyleElement.sheet\[ga]
T}
T{
CSS \[ga]\[at]import\[ga] rule in other style sheets applied to the
document
T}@T{
Yes
T}@T{
\[ga].ownerRule\[ga]
T}@T{
\[ga]CSSImportRule\[ga]
T}@T{
\[ga].styleSheet\[ga]
T}
T{
\f[CR]<?xml\-stylesheet ?>\f[R] processing instruction in the
(non\-HTML) document
T}@T{
Yes
T}@T{
\[ga].ownerNode\[ga]
T}@T{
\[ga]ProcessingInstruction\[ga]
T}@T{
\[ga].sheet\[ga]
T}
T{
JavaScript \f[CR]import ... with { type: \[dq]css\[dq] }\f[R]
T}@T{
No
T}@T{
N/A
T}@T{
N/A
T}@T{
N/A
T}
T{
HTTP Link Header
T}@T{
Yes
T}@T{
\f[I]N/A\f[R]
T}@T{
N/A
T}@T{
N/A
T}
T{
User agent (default) style sheets
T}@T{
No
T}@T{
N/A
T}@T{
N/A
T}@T{
N/A
T}
.TE
.SH SEE ALSO
.IP \[bu] 2
CSS Object Model
.IP \[bu] 2
Using dynamic styling information
