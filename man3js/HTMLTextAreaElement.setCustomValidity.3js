.\" Automatically generated by Pandoc 3.4
.\"
.TH "HTMLTextAreaElement.setCustomValidity" "JS" "December 19, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
HTMLTextAreaElement.setCustomValidity \- HTMLTextAreaElement:
setCustomValidity() method
.SH SYNOPSIS
The \f[B]\f[CB]setCustomValidity()\f[B]\f[R] method of the
\f[CR]HTMLTextAreaElement\f[R] interface sets the custom validity
message for the \f[CR]<textarea>\f[R] element.
Use the empty string to indicate that the element does \f[I]not\f[R]
have a custom validity error.
.SH SYNTAX
.IP
.EX
setCustomValidity(string)
.EE
.SS Parameters
.TP
\f[B]string\f[R]
The string containing the error message.
The empty string removes any custom validity errors.
.SS Return value
None (\f[CR]undefined\f[R]).
.SH EXAMPLES
In this example, if the \f[CR]<textarea>\f[R]\[cq]s doesn\[cq]t pass
constraint validation, we provide custom errors based on the constraint
that is failing validation.
If the value is valid, we set the custom error to an empty string:
.IP
.EX
\f[B]const\f[R] comment = document.getElementById(\[dq]comment\[dq]);
\f[B]if\f[R] (comment.validity.valueMissing) {
  comment.setCustomValidity(\[dq]We can\[aq]t submit a blank comment!\[dq]);
} \f[B]else\f[R] \f[B]if\f[R] (comment.validity.tooShort) {
  comment.setCustomValidity(\[dq]Tell us more! Your comment is too short.\[dq]);
} \f[B]else\f[R] \f[B]if\f[R] (comment.validity.tooLong) {
  comment.setCustomValidity(
    \[dq]Loquacious much? Keep it to under 800 characters!\[dq],
  );
} \f[B]else\f[R] {
  comment.setCustomValidity(\[dq]\[dq]);
}
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]<textarea>\f[R]
.IP \[bu] 2
\f[CR]HTMLTextAreaElement\f[R]
.IP \[bu] 2
\f[CR]HTMLTextAreaElement.validity\f[R]
.IP \[bu] 2
\f[CR]HTMLTextAreaElement.checkValidity()\f[R]
.IP \[bu] 2
\f[CR]HTMLTextAreaElement.reportValidity()\f[R]
.IP \[bu] 2
Form validation.
.IP \[bu] 2
Learn: Client\-side form validation
.IP \[bu] 2
Guide: Constraint validation
.IP \[bu] 2
CSS \f[CR]:valid\f[R] and \f[CR]:invalid\f[R] pseudo\-classes
