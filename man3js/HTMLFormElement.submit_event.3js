.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "HTMLFORMELEMENT.SUBMIT_EVENT" "3JS" "June 3, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
HTMLFormElement.submit_event \- HTMLFormElement: submit event
.SH SYNOPSIS
The \f[B]\f[CB]submit\f[B]\f[R] event fires when a \f[CR]<form>\f[R] is
submitted.
.PP
Note that the \f[CR]submit\f[R] event fires on the \f[CR]<form>\f[R]
element itself, and not on any \f[CR]<button>\f[R] or
\f[CR]&lt;input type=\(dqsubmit\(dq&gt;\f[R] inside it.
However, the \f[CR]SubmitEvent\f[R] which is sent to indicate the
form\(cqs submit action has been triggered includes a
\f[CR]submitter\f[R] property, which is the button that was invoked to
trigger the submit request.
.PP
The \f[CR]submit\f[R] event fires when:
.IP \(bu 2
the user clicks a submit button,
.IP \(bu 2
the user presses Enter while editing a field (e.g.,
\f[CR]&lt;input type=\(dqtext\(dq&gt;\f[R]) in a form,
.IP \(bu 2
a script calls the \f[CR]form.requestSubmit()\f[R] method
.PP
However, the event is \f[I]not\f[R] sent to the form when a script calls
the \f[CR]form.submit()\f[R] method directly.
.RS
.PP
\f[B]Note:\f[R] Trying to submit a form that does not pass validation
triggers an \f[CR]invalid\f[R] event.
In this case, the validation prevents form submission, and thus there is
no \f[CR]submit\f[R] event.
.RE
.SH SYNTAX
Use the event name in methods like \f[CR]addEventListener()\f[R], or set
an event handler property.
.IP
.EX
addEventListener(\(dqsubmit\(dq, (event) => { })

onsubmit = (event) => { }
.EE
.SH EVENT TYPE
A \f[CR]SubmitEvent\f[R].
Inherits from \f[CR]Event\f[R].
.SH EVENT PROPERTIES
\f[I]In addition to the properties listed below, this interface inherits
the properties of its parent interface, \f[CI]Event\f[I].\f[R]
.TP
\f[B]submitter\f[R] \f[I](read\-only)\f[R]
An \f[CR]HTMLElement\f[R] object which identifies the button or other
element which was invoked to trigger the form being submitted.
.SH EXAMPLES
This example uses \f[CR]EventTarget.addEventListener()\f[R] to listen
for form submit, and logs the current \f[CR]Event.timeStamp\f[R]
whenever that occurs, then prevents the default action of submitting the
form.
.SS HTML
.IP
.EX
<\f[B]form\f[R] id=\(dqform\(dq>
  <\f[B]label\f[R]>Test field: <\f[B]input\f[R] type=\(dqtext\(dq /></\f[B]label\f[R]>
  <\f[B]br\f[R] /><\f[B]br\f[R] />
  <\f[B]button\f[R] type=\(dqsubmit\(dq>Submit form</\f[B]button\f[R]>
</\f[B]form\f[R]>
<\f[B]p\f[R] id=\(dqlog\(dq></\f[B]p\f[R]>
.EE
.SS JavaScript
.IP
.EX
\f[B]function\f[R] logSubmit(event) {
  log.textContent = \(gaForm Submitted! Timestamp: ${event.timeStamp}\(ga;
  event.preventDefault();
}

\f[B]const\f[R] form = document.getElementById(\(dqform\(dq);
\f[B]const\f[R] log = document.getElementById(\(dqlog\(dq);
form.addEventListener(\(dqsubmit\(dq, logSubmit);
.EE
.SS Result
.SH SEE ALSO
.IP \(bu 2
HTML \f[CR]<form>\f[R] element
.IP \(bu 2
Related event: \f[CR]invalid\f[R]
