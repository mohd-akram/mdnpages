.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "Proxy.Proxy.preventExtensions" "JS" "February 21, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Proxy.Proxy.preventExtensions \- handler.preventExtensions()
.SH SYNOPSIS
The \f[B]\f[CB]handler.preventExtensions()\f[B]\f[R] method is a trap
for the \f[CR][[PreventExtensions]]\f[R] object internal method, which
is used by operations such as \f[CR]Object.preventExtensions()\f[R].
.SH SYNTAX
.IP
.EX
new Proxy(target, {
  preventExtensions(target) {
  }
});
.EE
.SS Parameters
The following parameter is passed to the \f[CR]preventExtensions()\f[R]
method.
\f[CR]this\f[R] is bound to the handler.
.TP
\f[B]target\f[R]
The target object.
.SS Return value
The \f[CR]preventExtensions()\f[R] method must return a boolean value.
.SH DESCRIPTION
.SS Interceptions
This trap can intercept these operations:
.IP \[bu] 2
\f[CR]Object.preventExtensions()\f[R]
.IP \[bu] 2
\f[CR]Reflect.preventExtensions()\f[R]
.IP \[bu] 2
\f[CR]Object.seal()\f[R]
.IP \[bu] 2
\f[CR]Object.freeze()\f[R]
.PP
Or any other operation that invokes the \f[CR][[PreventExtensions]]\f[R]
internal method.
.SS Invariants
If the following invariants are violated, the trap throws a
\f[CR]TypeError\f[R] when invoked.
.IP \[bu] 2
\f[CR]Object.preventExtensions(proxy)\f[R] only returns \f[CR]true\f[R]
if \f[CR]Object.isExtensible(proxy)\f[R] is \f[CR]false\f[R].
.SH EXAMPLES
.SS Trapping of preventExtensions
The following code traps \f[CR]Object.preventExtensions()\f[R].
.IP
.EX
\f[B]const\f[R] p = \f[B]new\f[R] Proxy(
  {},
  {
    preventExtensions(target) {
      console.log(\[dq]called\[dq]);
      Object.preventExtensions(target);
      \f[B]return\f[R] \f[B]true\f[R];
    },
  },
);

console.log(Object.preventExtensions(p));
\f[I]// \[dq]called\[dq]\f[R]
\f[I]// false\f[R]
.EE
.PP
The following code violates the invariant.
.PP
\f[B]Bad\f[R]
.IP
.EX
\f[B]const\f[R] p = \f[B]new\f[R] Proxy(
  {},
  {
    preventExtensions(target) {
      \f[B]return\f[R] \f[B]true\f[R];
    },
  },
);

Object.preventExtensions(p); \f[I]// TypeError is thrown\f[R]
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]Proxy\f[R]
.IP \[bu] 2
\f[CR]Proxy()\f[R] constructor
.IP \[bu] 2
\f[CR]Object.preventExtensions()\f[R]
.IP \[bu] 2
\f[CR]Reflect.preventExtensions()\f[R]
