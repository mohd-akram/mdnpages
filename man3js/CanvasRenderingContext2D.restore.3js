.\" Automatically generated by Pandoc 3.4
.\"
.TH "CanvasRenderingContext2D.restore" "JS" "July 2, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
CanvasRenderingContext2D.restore \- CanvasRenderingContext2D: restore()
method
.SH SYNOPSIS
The \f[B]\f[CB]CanvasRenderingContext2D.restore()\f[B]\f[R] method of
the Canvas 2D API restores the most recently saved canvas state by
popping the top entry in the drawing state stack.
If there is no saved state, this method does nothing.
.PP
For more information about the drawing state, see
\f[CR]CanvasRenderingContext2D.save()\f[R].
.SH SYNTAX
.IP
.EX
restore()
.EE
.SS Parameters
None.
.SS Return value
None (\f[CR]undefined\f[R]).
.SH EXAMPLES
.SS Restoring a saved state
This example uses the \f[CR]save()\f[R] method to save the current state
and \f[CR]restore()\f[R] to restore it later, so that you are able to
draw a rect with the current state later.
.SS HTML
.IP
.EX
<\f[B]canvas\f[R] id=\[dq]canvas\[dq]></\f[B]canvas\f[R]>
.EE
.SS JavaScript
.IP
.EX
\f[B]const\f[R] canvas = document.getElementById(\[dq]canvas\[dq]);
\f[B]const\f[R] ctx = canvas.getContext(\[dq]2d\[dq]);

\f[I]// Save the current state\f[R]
ctx.save();

ctx.fillStyle = \[dq]green\[dq];
ctx.fillRect(10, 10, 100, 100);

\f[I]// Restore to the state saved by the most recent call to save()\f[R]
ctx.restore();

ctx.fillRect(150, 40, 100, 100);
.EE
.SS Result
.SH SEE ALSO
.IP \[bu] 2
The interface defining this method: \f[CR]CanvasRenderingContext2D\f[R]
.IP \[bu] 2
\f[CR]CanvasRenderingContext2D.save()\f[R]
