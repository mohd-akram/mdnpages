.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "DATE.GETFULLYEAR" "3JS" "June 20, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Date.getFullYear \- Date.prototype.getFullYear()
.SH SYNOPSIS
The \f[B]\f[CB]getFullYear()\f[B]\f[R] method of \f[CR]Date\f[R]
instances returns the year for this date according to local time.
.PP
Use this method instead of the \f[CR]getYear()\f[R] method.
.IP
.EX
\f[B]const\f[R] moonLanding = \f[B]new\f[R] Date(\(dqJuly 20, 69 00:20:18\(dq);

console.log(moonLanding.getFullYear());
\f[I]// Expected output: 1969\f[R]
.EE
.SH SYNTAX
.IP
.EX
getFullYear()
.EE
.SS Parameters
None.
.SS Return value
An integer representing the year for the given date according to local
time.
Returns \f[CR]NaN\f[R] if the date is invalid.
.SH DESCRIPTION
Unlike \f[CR]getYear()\f[R], the value returned by
\f[CR]getFullYear()\f[R] is an absolute number.
For dates between the years 1000 and 9999, \f[CR]getFullYear()\f[R]
returns a four\-digit number, for example, 1995.
Use this function to make sure a year is compliant with years after
2000.
.SH EXAMPLES
.SS Using getFullYear()
The \f[CR]fullYear\f[R] variable has value \f[CR]1995\f[R], based on the
value of the \f[CR]Date\f[R] object \f[CR]xmas95\f[R].
.IP
.EX
\f[B]const\f[R] xmas95 = \f[B]new\f[R] Date(\(dq1995\-12\-25T23:15:30\(dq);
\f[B]const\f[R] fullYear = xmas95.getFullYear();

console.log(fullYear); \f[I]// 1995\f[R]
.EE
.SH SEE ALSO
.IP \(bu 2
\f[CR]Date.prototype.getUTCFullYear()\f[R]
.IP \(bu 2
\f[CR]Date.prototype.setFullYear()\f[R]
.IP \(bu 2
\f[CR]Date.prototype.getYear()\f[R]
