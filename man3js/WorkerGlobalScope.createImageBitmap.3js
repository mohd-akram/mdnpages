.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "WORKERGLOBALSCOPE.CREATEIMAGEBITMAP" "3JS" "September 29, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
WorkerGlobalScope.createImageBitmap \- WorkerGlobalScope:
createImageBitmap() method
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is only available in Web Workers.
.PP
The \f[B]\f[CB]createImageBitmap()\f[B]\f[R] method of the
\f[CR]WorkerGlobalScope\f[R] interface creates a bitmap from a given
source, optionally cropped to contain only a portion of that source.
It accepts a variety of different image sources, and returns a
\f[CR]Promise\f[R] which resolves to an \f[CR]ImageBitmap\f[R].
.SH SYNTAX
.IP
.EX
createImageBitmap(image)
createImageBitmap(image, options)
createImageBitmap(image, sx, sy, sw, sh)
createImageBitmap(image, sx, sy, sw, sh, options)
.EE
.SS Parameters
.TP
\f[B]image\f[R]
An image source, which can be any one of the following:
.RS
.IP \(bu 2
\f[CR]HTMLImageElement\f[R]
.IP \(bu 2
\f[CR]SVGImageElement\f[R]
.IP \(bu 2
\f[CR]HTMLVideoElement\f[R]
.IP \(bu 2
\f[CR]HTMLCanvasElement\f[R]
.IP \(bu 2
\f[CR]Blob\f[R]
.IP \(bu 2
\f[CR]ImageData\f[R]
.IP \(bu 2
\f[CR]ImageBitmap\f[R]
.IP \(bu 2
\f[CR]OffscreenCanvas\f[R]
.IP \(bu 2
\f[CR]VideoFrame\f[R]
.RE
.TP
\f[B]sx\f[R]
The x coordinate of the reference point of the rectangle from which the
\f[CR]ImageBitmap\f[R] will be extracted.
.TP
\f[B]sy\f[R]
The y coordinate of the reference point of the rectangle from which the
\f[CR]ImageBitmap\f[R] will be extracted.
.TP
\f[B]sw\f[R]
The width of the rectangle from which the \f[CR]ImageBitmap\f[R] will be
extracted.
This value can be negative.
.TP
\f[B]sh\f[R]
The height of the rectangle from which the \f[CR]ImageBitmap\f[R] will
be extracted.
This value can be negative.
.TP
\f[B]options\f[R] \f[I](optional)\f[R]
An object that sets options for the image\(cqs extraction.
The available options are:
.RS
.TP
\f[B]imageOrientation\f[R]
Specifies how the bitmap image should be oriented.
.RS
.TP
\f[B]from\-image\f[R]
Image oriented according to EXIF orientation metadata, if present
(default).
.TP
\f[B]flipY\f[R]
Image oriented according to EXIF orientation metadata, if present, and
then flipped vertically.
.TP
\f[B]none\f[R]
Image oriented according to image encoding, ignoring any metadata about
the orientation (such as EXIF metadata, that might be added to an image
to indicate that the camera was turned sideways to capture the image in
portrait mode).
.RE
.TP
\f[B]premultiplyAlpha\f[R]
Specifies whether the bitmap\(cqs color channels should be premultiplied
by the alpha channel.
One of \f[CR]none\f[R], \f[CR]premultiply\f[R], or \f[CR]default\f[R]
(default).
.TP
\f[B]colorSpaceConversion\f[R]
Specifies whether the image should be decoded using color space
conversion.
Either \f[CR]none\f[R] or \f[CR]default\f[R] (default).
The value \f[CR]default\f[R] indicates that implementation\-specific
behavior is used.
.TP
\f[B]resizeWidth\f[R]
A long integer that indicates the output width.
.TP
\f[B]resizeHeight\f[R]
A long integer that indicates the output height.
.TP
\f[B]resizeQuality\f[R]
Specifies the algorithm to be used for resizing the input to match the
output dimensions.
One of \f[CR]pixelated\f[R], \f[CR]low\f[R] (default),
\f[CR]medium\f[R], or \f[CR]high\f[R].
.RE
.SS Return value
A \f[CR]Promise\f[R] which resolves to an \f[CR]ImageBitmap\f[R] object
containing bitmap data from the given rectangle.
.SH EXAMPLES
See \f[CR]Window.createImageBitmap()\f[R] for examples.
.SH SEE ALSO
.IP \(bu 2
\f[CR]Window.createImageBitmap()\f[R]
.IP \(bu 2
\f[CR]CanvasRenderingContext2D.drawImage()\f[R]
.IP \(bu 2
\f[CR]ImageData\f[R]
