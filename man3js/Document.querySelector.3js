.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "Document.querySelector" "JS" "May 24, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Document.querySelector \- Document: querySelector() method
.SH SYNOPSIS
The \f[CR]Document\f[R] method \f[B]\f[CB]querySelector()\f[B]\f[R]
returns the first \f[CR]Element\f[R] within the document that matches
the specified selector, or group of selectors.
If no matches are found, \f[CR]null\f[R] is returned.
.RS
.PP
\f[B]Note:\f[R] The matching is done using depth\-first pre\-order
traversal of the document\[cq]s nodes starting with the first element in
the document\[cq]s markup and iterating through sequential nodes by
order of the number of child nodes.
.RE
.SH SYNTAX
.IP
.EX
querySelector(selectors)
.EE
.SS Parameters
.TP
\f[B]selectors\f[R]
A string containing one or more selectors to match.
This string must be a valid CSS selector string; if it isn\[cq]t, a
\f[CR]SyntaxError\f[R] exception is thrown.
See Locating DOM elements using selectors for more about selectors and
how to manage them.
.RS
.PP
\f[B]Note:\f[R] Characters that are not part of standard CSS syntax must
be escaped using a backslash character.
Since JavaScript also uses backslash escaping, be especially careful
when writing string literals using these characters.
See Escaping special characters for more information.
.RE
.SS Return value
An \f[CR]Element\f[R] object representing the first element in the
document that matches the specified set of CSS selectors, or
\f[CR]null\f[R] is returned if there are no matches.
.PP
If you need a list of all elements matching the specified selectors, you
should use \f[CR]querySelectorAll()\f[R] instead.
.SS Exceptions
.TP
\f[B]SyntaxError\f[R] \f[B]DOMException\f[R]
Thrown if the syntax of the specified \f[I]selectors\f[R] is invalid.
.SH USAGE NOTES
If the specified selector matches an ID that is incorrectly used more
than once in the document, the first element with that ID is returned.
.PP
CSS pseudo\-elements will never return any elements, as specified in the
\c
.UR https://www.w3.org/TR/selectors-api/#grammar
Selectors API
.UE \c
\&.
.SS Escaping special characters
To match against an ID or selectors that do not follow standard CSS
syntax (by using a colon or space inappropriately, for example), you
must escape the character with a backslash (\[lq]\f[CR]\[rs]\f[R]\[rq]).
As the backslash is also an escape character in JavaScript, if you are
entering a literal string, you must escape it \f[I]twice\f[R] (once for
the JavaScript string, and another time for \f[CR]querySelector()\f[R]):
.IP
.EX
<\f[B]div\f[R] id=\[dq]foo\[rs]bar\[dq]></\f[B]div\f[R]>
<\f[B]div\f[R] id=\[dq]foo:bar\[dq]></\f[B]div\f[R]>

<\f[B]script\f[R]>
  console.log(\[dq]#foo\[rs]bar\[dq]); \f[I]// \[dq]#fooar\[dq] (\[rs]b is the backspace control character)\f[R]
  document.querySelector(\[dq]#foo\[rs]bar\[dq]); \f[I]// Does not match anything\f[R]

  console.log(\[dq]#foo\[rs]\[rs]bar\[dq]); \f[I]// \[dq]#foo\[rs]bar\[dq]\f[R]
  console.log(\[dq]#foo\[rs]\[rs]\[rs]\[rs]bar\[dq]); \f[I]// \[dq]#foo\[rs]\[rs]bar\[dq]\f[R]
  document.querySelector(\[dq]#foo\[rs]\[rs]\[rs]\[rs]bar\[dq]); \f[I]// Match the first div\f[R]

  document.querySelector(\[dq]#foo:bar\[dq]); \f[I]// Does not match anything\f[R]
  document.querySelector(\[dq]#foo\[rs]\[rs]:bar\[dq]); \f[I]// Match the second div\f[R]
</\f[B]script\f[R]>
.EE
.SH EXAMPLES
.SS Finding the first element matching a class
In this example, the first element in the document with the class
\[lq]\f[CR]myclass\f[R]\[rq] is returned:
.IP
.EX
\f[B]const\f[R] el = document.querySelector(\[dq].myclass\[dq]);
.EE
.SS Complex selectors
Selectors can also be really powerful, as demonstrated in the following
example.
Here, the first \f[CR]<input>\f[R] element with the name \[lq]login\[rq]
(\f[CR]<input name=\[dq]login\[dq]/>\f[R]) located inside a
\f[CR]<div>\f[R] whose class is \[lq]user\-panel main\[rq]
(\f[CR]<div class=\[dq]user\-panel main\[dq]>\f[R]) in the document is
returned:
.IP
.EX
\f[B]const\f[R] el = document.querySelector(\[dq]div.user\-panel.main input[name=\[aq]login\[aq]]\[dq]);
.EE
.SS Negation
As all CSS selector strings are valid, you can also negate selectors:
.IP
.EX
\f[B]const\f[R] el = document.querySelector(
  \[dq]div.user\-panel:not(.main) input[name=\[aq]login\[aq]]\[dq],
);
.EE
.PP
This will select an input with a parent div with the
\f[CR]user\-panel\f[R] class but not the \f[CR]main\f[R] class.
.SH SEE ALSO
.IP \[bu] 2
Locating DOM elements using selectors
.IP \[bu] 2
\f[CR]Element.querySelector()\f[R]
.IP \[bu] 2
\f[CR]Document.querySelectorAll()\f[R]
.IP \[bu] 2
\f[CR]Element.querySelectorAll()\f[R]
