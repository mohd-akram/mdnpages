.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "Highlight.forEach" "JS" "December 2, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Highlight.forEach \- Highlight: forEach() method
.SH SYNOPSIS
The \f[B]\f[CB]forEach()\f[B]\f[R] method of the \f[CR]Highlight\f[R]
interface executes a provided function once for each \f[CR]Range\f[R]
object in the \f[CR]Highlight\f[R] object, in insertion order.
.PP
\f[CR]Highlight\f[R] is a \f[CR]Set\f[R]\-like object, so this is
similar to using \f[CR]Set.forEach()\f[R].
.SH SYNTAX
.IP
.EX
forEach(callbackFn)
forEach(callbackFn, thisArg)
.EE
.SS Parameters
.TP
\f[B]callback\f[R]
Function to execute for each \f[CR]Range\f[R] object, taking three
arguments:
.RS
.TP
\f[B]range\f[R], \f[B]key\f[R]
The current \f[CR]Range\f[R] object being processed in the
\f[CR]Highlight\f[R].
As there are no keys in \f[CR]Highlight\f[R], the \f[CR]range\f[R] is
passed for both arguments.
.TP
\f[B]highlight\f[R]
The \f[CR]Highlight\f[R] object which \f[CR]forEach()\f[R] was called
upon.
.RE
.TP
\f[B]thisArg\f[R]
Value to use as \f[CR]this\f[R] when executing \f[CR]callbackFn\f[R].
.SS Return value
None (\f[CR]undefined\f[R]).
.SH EXAMPLES
The code snippet below shows how create a new highlight with two ranges,
and then log the ranges by using the \f[CR]forEach()\f[R] method:
.IP
.EX
\f[B]function\f[R] logRanges(range, key, highlight) {
  console.log(\[ga]Highlight object ${highlight} contains range ${range}\[ga]);
}

\f[B]const\f[R] text = \f[B]new\f[R] Text(\[dq]Time is an illusion. Lunchtime doubly so.\[dq]);

\f[B]const\f[R] range1 = document.createRange();
range1.setStart(text, 0);
range1.setEnd(text, 4);

\f[B]const\f[R] range2 = document.createRange();
range2.setStart(text, 21);
range2.setEnd(text, 30);

\f[B]const\f[R] myHighlight = \f[B]new\f[R] Highlight();
myHighlight.add(range1);
myHighlight.add(range2);

myHighlight.forEach(logRanges);
.EE
.SH SEE ALSO
.IP \[bu] 2
The CSS Custom Highlight API
.IP \[bu] 2
\c
.UR https://css-tricks.com/css-custom-highlight-api-early-look/
CSS Custom Highlight API: The Future of Highlighting Text Ranges on the
Web
.UE \c
