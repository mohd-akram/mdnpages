.\" Automatically generated by Pandoc 3.4
.\"
.TH "CookieStoreManager" "JS" "April 22, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
CookieStoreManager \- CookieStoreManager
.SH SYNOPSIS
\f[B]Secure context:\f[R] This feature is available only in secure
contexts (HTTPS).
.PP
\f[B]Note:\f[R] This feature is available in Service Workers.
.PP
The \f[B]\f[CB]CookieStoreManager\f[B]\f[R] interface of the Cookie
Store API allows service workers to subscribe to cookie change events.
Call \f[CR]subscribe()\f[R] on a particular service worker registration
to receive change events.
.PP
A \f[CR]CookieStoreManager\f[R] has an associated
\f[CR]ServiceWorkerRegistration\f[R].
Each service worker registration has a cookie change subscription list,
which is a list of cookie change subscriptions each containing a name
and URL.
The methods in this interface allow the service worker to add and remove
subscriptions from this list, and to get a list of all subscriptions.
.PP
To get a \f[CR]CookieStoreManager\f[R], call
\f[CR]ServiceWorkerRegistration.cookies\f[R].
.SH INSTANCE METHODS
.TP
\f[B]CookieStoreManager.getSubscriptions()\f[R]
Returns a \f[CR]Promise\f[R] which resolves to a list of the cookie
change subscriptions for this service worker registration.
.TP
\f[B]CookieStoreManager.subscribe()\f[R]
Subscribes to changes to cookies.
It returns a \f[CR]Promise\f[R] which resolves when the subscription is
successful.
.TP
\f[B]CookieStoreManager.unsubscribe()\f[R]
Unsubscribes the registered service worker from changes to cookies.
It returns a \f[CR]Promise\f[R] which resolves when the operation is
successful.
.SH EXAMPLES
In this example, the \f[CR]ServiceWorkerRegistration\f[R] represented by
\f[CR]registration\f[R] is subscribing to change events on the cookie
named \f[CR]\[dq]cookie1\[dq]\f[R] with a scope of
\f[CR]\[dq]/path1\[dq]\f[R].
.IP
.EX
\f[B]const\f[R] subscriptions = [{ name: \[dq]cookie1\[dq], url: \[ga]/path1\[ga] }];
\f[B]await\f[R] registration.cookies.subscribe(subscriptions);
.EE
.PP
If the \f[CR]ServiceWorkerRegistration\f[R] has subscribed to any
cookies, then \f[CR]getSubscriptions()\f[R] will return a list of
cookies represented by objects in the same format as used for the
original subscription.
.IP
.EX
\f[B]const\f[R] subscriptions = \f[B]await\f[R] self.registration.cookies.getSubscriptions();
.EE
