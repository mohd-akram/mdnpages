.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "DATE.SETTIME" "3JS" "June 20, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Date.setTime \- Date.prototype.setTime()
.SH SYNOPSIS
The \f[B]\f[CB]setTime()\f[B]\f[R] method of \f[CR]Date\f[R] instances
changes the timestamp for this date, which is the number of milliseconds
since the epoch, defined as the midnight at the beginning of January 1,
1970, UTC.
.IP
.EX
\f[B]const\f[R] launchDate = \f[B]new\f[R] Date(\(dqJuly 1, 1999, 12:00:00\(dq);
\f[B]const\f[R] futureDate = \f[B]new\f[R] Date();
futureDate.setTime(launchDate.getTime());

console.log(futureDate);
\f[I]// Expected output: \(dqThu Jul 01 1999 12:00:00 GMT+0200 (CEST)\(dq\f[R]

\f[B]const\f[R] fiveMinutesInMs = 5 * 60 * 1000;
futureDate.setTime(futureDate.getTime() + fiveMinutesInMs);

console.log(futureDate);
\f[I]// Expected output: \(dqThu Jul 01 1999 12:05:00 GMT+0200 (CEST)\(dq\f[R]
\f[I]// Note: your timezone may vary\f[R]
.EE
.SH SYNTAX
.IP
.EX
setTime(timeValue)
.EE
.SS Parameters
.TP
\f[B]timeValue\f[R]
An integer representing the new timestamp \(em the number of
milliseconds since the midnight at the beginning of January 1, 1970,
UTC.
.SS Return value
Changes the \f[CR]Date\f[R] object in place, and returns its new
timestamp.
If \f[CR]timeValue\f[R] is \f[CR]NaN\f[R] (or other values that get
coerced to \f[CR]NaN\f[R], such as \f[CR]undefined\f[R]), the date is
set to Invalid Date and \f[CR]NaN\f[R] is returned.
.SH EXAMPLES
.SS Using setTime()
.IP
.EX
\f[B]const\f[R] theBigDay = \f[B]new\f[R] Date(\(dq1999\-07\-01\(dq);
\f[B]const\f[R] sameAsBigDay = \f[B]new\f[R] Date();
sameAsBigDay.setTime(theBigDay.getTime());
.EE
.SH SEE ALSO
.IP \(bu 2
\f[CR]Date.prototype.getTime()\f[R]
.IP \(bu 2
\f[CR]Date.prototype.setUTCHours()\f[R]
