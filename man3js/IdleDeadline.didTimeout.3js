.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "IdleDeadline.didTimeout" "JS" "April 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
IdleDeadline.didTimeout \- IdleDeadline: didTimeout property
.SH SYNOPSIS
The read\-only \f[B]\f[CB]didTimeout\f[B]\f[R] property on the
\f[B]\f[CB]IdleDeadline\f[B]\f[R] interface is a Boolean value which
indicates whether or not the idle callback is being invoked because the
timeout interval specified when \f[CR]Window.requestIdleCallback()\f[R]
was called has expired.
.PP
If \f[CR]didTimeout\f[R] is \f[CR]true\f[R], the \f[CR]IdleDeadline\f[R]
object\[cq]s \f[CR]timeRemaining()\f[R] method will return approximately
0.
.PP
Idle callbacks support the concept of a timeout in order to ensure that
whatever task they\[cq]re meant to perform actually happens, even if the
user agent never has enough idle time available.
Your callback will typically check the value of \f[CR]didTimeout\f[R] if
it needs to perform an action even if the browser is too busy to grant
you the time; you should react by performing the needed task or,
ideally, a minimal amount of work that can be done to keep things moving
along, then schedule a new callback to try again to get the rest of the
work done.
.SH VALUE
A Boolean which is \f[CR]true\f[R] if the callback is running due to the
callback\[cq]s timeout period elapsing or \f[CR]false\f[R] if the
callback is running because the user agent is idle and is offering time
to the callback.
.SH EXAMPLES
See our complete example in the article Cooperative Scheduling of
Background Tasks API.
.SH SEE ALSO
.IP \[bu] 2
Collaborative Scheduling of Background Tasks
.IP \[bu] 2
\f[CR]IdleDeadline\f[R]
.IP \[bu] 2
\f[CR]Window.requestIdleCallback()\f[R]
.IP \[bu] 2
\f[CR]Window.cancelIdleCallback()\f[R]
