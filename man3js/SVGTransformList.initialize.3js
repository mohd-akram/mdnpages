.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "SVGTransformList.initialize" "JS" "February 2, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
SVGTransformList.initialize \- SVGTransformList: initialize() method
.SH SYNOPSIS
The \f[CR]initialize()\f[R] method of the \f[CR]SVGTransformList\f[R]
interface clears all existing current items from the list and
re\-initializes the list to hold the single item specified by the
parameter.
.PP
If the inserted item is already in a list, it is removed from its
previous list before it is inserted into this list.
The inserted item is the item itself and not a copy.
.SH SYNTAX
.IP
.EX
initialize(newItem)
.EE
.SS Parameters
.TP
\f[B]newItem\f[R]
An \f[CR]SVGTransform\f[R] item that is inserted into the list.
.SS Return value
An \f[CR]SVGTransform\f[R] object; the item inserted into the list.
.SS Exceptions
.TP
\f[B]NoModificationAllowedError\f[R] \f[B]DOMException\f[R]
Thrown if \f[CR]SVGTransformList\f[R] corresponds to a read\-only
attribute or when the object itself is read\-only.
.SH EXAMPLES
.SS Re\-initializing the Transform List with a New Transformation
.IP
.EX
<\f[B]svg\f[R] width=\[dq]200\[dq] height=\[dq]200\[dq] id=\[dq]mySvg\[dq]>
  <\f[B]rect\f[R] width=\[dq]100\[dq] height=\[dq]100\[dq] fill=\[dq]blue\[dq] />
</\f[B]svg\f[R]>
.EE
.IP
.EX
\f[B]const\f[R] svgElement = document.querySelector(\[dq]svg\[dq]);
\f[B]const\f[R] rectElement = svgElement.querySelector(\[dq]rect\[dq]);

\f[I]// Access the transform list of the <rect> element\f[R]
\f[B]const\f[R] transformList = rectElement.transform.baseVal;

\f[I]// Apply an initial translate transformation to the <rect> element\f[R]
\f[B]const\f[R] translateTransform = svgElement.createSVGTransform();
translateTransform.setTranslate(50, 50);
transformList.appendItem(translateTransform);

\f[I]// Number of transformations before initialization\f[R]
console.log(
  \[ga]Number of transformations before initialization: ${transformList.length}\[ga],
); \f[I]// Output: 1\f[R]

\f[I]// Create a new scale transformation\f[R]
\f[B]const\f[R] scaleTransform = svgElement.createSVGTransform();
scaleTransform.setScale(2, 2);

\f[I]// Initialize the list with the new scale transform\f[R]
transformList.initialize(scaleTransform);

\f[I]// Number of transformations after initialization\f[R]
console.log(
  \[ga]Number of transformations after initialization: ${transformList.length}\[ga],
); \f[I]// Output: 1\f[R]
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]SVGTransform\f[R]
