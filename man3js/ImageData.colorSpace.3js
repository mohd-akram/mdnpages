.\" Automatically generated by Pandoc 3.4
.\"
.TH "ImageData.colorSpace" "JS" "April 22, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
ImageData.colorSpace \- ImageData: colorSpace property
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The read\-only \f[B]\f[CB]ImageData.colorSpace\f[B]\f[R] property is a
string indicating the color space of the image data.
.PP
The color space can be set during \f[CR]ImageData\f[R] initialization
using either the \f[CR]ImageData()\f[R] constructor or the
\f[CR]createImageData()\f[R] method.
.SH VALUE
This property can have the following values:
.IP \[bu] 2
\f[CR]\[dq]srgb\[dq]\f[R] representing the \c
.UR https://en.wikipedia.org/wiki/SRGB
sRGB color space
.UE \c
\&.
.IP \[bu] 2
\f[CR]\[dq]display\-p3\[dq]\f[R] representing the \c
.UR https://en.wikipedia.org/wiki/DCI-P3
display\-p3 color space
.UE \c
\&.
.SH EXAMPLES
.SS Getting the color space of canvas image data
The \f[CR]getImageData()\f[R] method allows you to explicitly request a
color space.
If it doesn\[cq]t match the color space the canvas was initialized with,
a conversion will be performed.
Use the \f[CR]colorSpace\f[R] property to know which color space your
\f[CR]ImageData\f[R] object is in.
.IP
.EX
\f[B]const\f[R] context = canvas.getContext(\[dq]2d\[dq], { colorSpace: \[dq]display\-p3\[dq] });
context.fillStyle = \[dq]color(display\-p3 0.5 0 0)\[dq];
context.fillRect(0, 0, 10, 10);

\f[B]const\f[R] p3ImageData = context.getImageData(0, 0, 1, 1);
console.log(p3ImageData.colorSpace); \f[I]// \[dq]display\-p3\[dq]\f[R]

\f[B]const\f[R] srgbImageData = context.getImageData(0, 0, 1, 1, { colorSpace: \[dq]srgb\[dq] });
console.log(srgbImageData.colorSpace); \f[I]// \[dq]srgb\[dq]\f[R]
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]CanvasRenderingContext2D.createImageData()\f[R]
.IP \[bu] 2
\f[CR]CanvasRenderingContext2D.getImageData()\f[R]
.IP \[bu] 2
\f[CR]colorSpace\f[R] setting in \f[CR]canvas.getContext()\f[R]
.IP \[bu] 2
Setting WebGL color spaces:
.RS 2
.IP \[bu] 2
\f[CR]WebGLRenderingContext.drawingBufferColorSpace\f[R]
.IP \[bu] 2
\f[CR]WebGLRenderingContext.unpackColorSpace\f[R]
.RE
