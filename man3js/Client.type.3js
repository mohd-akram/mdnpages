.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "CLIENT.TYPE" "3JS" "May 13, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Client.type \- Client: type property
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is only available in Service Workers.
.PP
The \f[B]\f[CB]type\f[B]\f[R] read\-only property of the
\f[CR]Client\f[R] interface indicates the type of client the service
worker is controlling.
.SH VALUE
A string, representing the client type.
The value can be one of
.IP \(bu 2
\f[CR]\(dqwindow\(dq\f[R]
.IP \(bu 2
\f[CR]\(dqworker\(dq\f[R]
.IP \(bu 2
\f[CR]\(dqsharedworker\(dq\f[R]
.SH EXAMPLES
.IP
.EX
\f[I]// service worker client (e.g. a document)\f[R]
\f[B]function\f[R] sendMessage(message) {
  \f[B]return\f[R] \f[B]new\f[R] Promise((resolve, reject) \f[B]=>\f[R] {
    \f[I]// note that this is the ServiceWorker.postMessage version\f[R]
    navigator.serviceWorker.controller.postMessage(message);
    window.serviceWorker.onMessage = (e) \f[B]=>\f[R] {
      resolve(e.data);
    };
  });
}

\f[I]// controlling service worker\f[R]
self.addEventListener(\(dqmessage\(dq, (e) \f[B]=>\f[R] {
  \f[I]// e.source is a client object\f[R]
  e.source.postMessage(\(gaHello! Your message was: ${e.data}\(ga);
  \f[I]// Let\(aqs also post the type value back to the client\f[R]
  e.source.postMessage(e.source.type);
});
.EE
