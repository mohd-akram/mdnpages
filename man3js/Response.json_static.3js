.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "Response.json_static" "JS" "July 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Response.json_static \- Response: json() static method
.SH SYNOPSIS
The \f[B]\f[CB]json()\f[B]\f[R] static method of the \f[CR]Response\f[R]
interface returns a \f[CR]Response\f[R] that contains the provided JSON
data as body, and a \f[CR]Content\-Type\f[R] header which is set to
\f[CR]application/json\f[R].
The response status, status message, and additional headers can also be
set.
.PP
The method makes it easy to create \f[CR]Response\f[R] objects for
returning JSON encoded data.
Service workers, for example, intercept fetch requests made by a
browser, and might use \f[CR]json()\f[R] to construct a
\f[CR]Response\f[R] from cached JSON data to return to the main thread.
The \f[CR]json()\f[R] method can also be used in server code to return
JSON data for single page applications, and any other applications where
a JSON response is expected.
.SH SYNTAX
.IP
.EX
Response.json(data)
Response.json(data, options)
.EE
.SS Parameters
.TP
\f[B]data\f[R]
The JSON data to be used as the response body.
.TP
\f[B]options\f[R] \f[I](optional)\f[R]
An options object containing settings for the response, including the
status code, status text, and headers.
This is the same as the options parameter of the \f[CR]Response()\f[R]
constructor.
.RS
.TP
\f[B]status\f[R]
The status code for the response, such as \f[CR]200\f[R].
.TP
\f[B]statusText\f[R]
The status message associated with the status code.
For a status of \f[CR]200\f[R] this might be \f[CR]OK\f[R].
.TP
\f[B]headers\f[R]
Any headers you want to add to your response, contained within a
\f[CR]Headers\f[R] object or object literal of \f[CR]String\f[R]
key/value pairs (see HTTP headers for a reference).
.RE
.SS Return value
A \f[CR]Response\f[R] object.
.SS Exceptions
.TP
\f[B]TypeError\f[R]
Thrown if \f[CR]data\f[R] cannot be converted to a JSON string.
This might happen if the data is a JavaScript object that has method, or
that has a circular reference, or if the passed object is
\f[CR]undefined\f[R].
.SH EXAMPLES
.SS Response with JSON data
This live example shows how you can create a JSON response object, and
logs the newly created object for inspection (the logging code is hidden
as it is not relevant).
.PP
The code below creates a \f[CR]Response\f[R] object with JSON body
\f[CR]{ my: \[dq]data\[dq] }\f[R] and header set to
\f[CR]application/json\f[R].
.IP
.EX
\f[B]const\f[R] jsonResponse = Response.json({ my: \[dq]data\[dq] });
logResponse(jsonResponse);
.EE
.PP
The object has the following properties.
Note the body and header are set as expected, and that the default
status is set to \f[CR]200\f[R].
.SS Response with JSON data and options
This example shows how you can create a JSON response object with
\f[CR]status\f[R] and \f[CR]statusText\f[R] options.
.PP
The code below creates a \f[CR]Response\f[R] object with JSON body
\f[CR]{ some: \[dq]data\[dq], more: \[dq]information\[dq] }\f[R] and
header set to \f[CR]application/json\f[R].
It also sets the status to \f[CR]307\f[R] and sets the appropriate
status text (\[lq]Temporary Redirect\[rq]).
.IP
.EX
\f[B]const\f[R] jsonResponse = Response.json(
  { some: \[dq]data\[dq], more: \[dq]information\[dq] },
  { status: 307, statusText: \[dq]Temporary Redirect\[dq] },
);
logResponse(jsonResponse);
.EE
.PP
The object has the following properties, which are set as expected.
Note that the \f[CR]ok\f[R] property of the response changed to
\f[CR]false\f[R] as the status value is not in the range of 200 to 299.
.SH SEE ALSO
.IP \[bu] 2
Service Worker API
