.\" Automatically generated by Pandoc 3.4
.\"
.TH "GeolocationCoordinates.longitude" "JS" "July 26, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
GeolocationCoordinates.longitude \- GeolocationCoordinates: longitude
property
.SH SYNOPSIS
\f[B]Secure context:\f[R] This feature is available only in secure
contexts (HTTPS).
.PP
The \f[B]\f[CB]longitude\f[B]\f[R] read\-only property of the
\f[CR]GeolocationCoordinates\f[R] interface is a number which represents
the longitude of a geographical position, specified in decimal degrees.
Together with a timestamp, given as Unix time in milliseconds,
indicating a time of measurement, the \f[CR]GeolocationCoordinates\f[R]
object is part of the \f[CR]GeolocationPosition\f[R] interface, which is
the object type returned by Geolocation API functions that obtain and
return a geographical position.
.SH VALUE
The value in \f[CR]longitude\f[R] is the geographical longitude of the
location on Earth described by the \f[CR]Coordinates\f[R] object, in
decimal degrees.
The value is defined by the World Geodetic System 1984 specification
(WGS 84).
.RS
.PP
\f[B]Note:\f[R] The zero meridian (also known as the prime meridian or
the reference meridian) is not precisely the same as the Greenwich
meridian that most people think of.
It is, instead, the \c
.UR https://en.wikipedia.org/wiki/IERS_Reference_Meridian
IERS Reference Meridian
.UE \c
, which is located 5.3 \c
.UR https://en.wikipedia.org/wiki/Arcseconds
arcseconds
.UE \c
\ (102 meters / 335 feet) east of the \c
.UR https://en.wikipedia.org/wiki/Greenwich_meridian
Greenwich meridian
.UE \c
\&.
This is the same standard used by the \c
.UR https://en.wikipedia.org/wiki/Global_Positioning_System
Global Positioning System
.UE \c
\ (GPS).
.RE
.SH EXAMPLES
In this simple example, we fetch the user\[cq]s location and display the
resulting coordinates once they\[cq]re returned.
.SS JavaScript
The JavaScript code below creates an event listener so that when the
user clicks on a button, the location information is retrieved and
displayed.
.IP
.EX
\f[B]let\f[R] button = document.getElementById(\[dq]get\-location\[dq]);
\f[B]let\f[R] latText = document.getElementById(\[dq]latitude\[dq]);
\f[B]let\f[R] longText = document.getElementById(\[dq]longitude\[dq]);

button.addEventListener(\[dq]click\[dq], () \f[B]=>\f[R] {
  navigator.geolocation.getCurrentPosition((position) \f[B]=>\f[R] {
    \f[B]let\f[R] lat = position.coords.latitude;
    \f[B]let\f[R] long = position.coords.longitude;

    latText.innerText = lat.toFixed(2);
    longText.innerText = long.toFixed(2);
  });
});
.EE
.PP
After setting up variables to more conveniently reference the button
element and the two elements into which the latitude and longitude will
be drawn, the event listener is established by calling
\f[CR]addEventListener()\f[R] on the \f[CR]<button>\f[R] element.
When the user clicks the button, we\[cq]ll fetch and display the
location information.
.PP
Upon receiving a \f[CR]click\f[R] event, we call
\f[CR]getCurrentPosition()\f[R] to request the device\[cq]s current
position.
This is an asynchronous request, so we provide a callback which receives
as in put a \f[CR]GeolocationPosition\f[R] object describing the
determined position.
.PP
From the \f[CR]GeolocationPosition\f[R] object, we obtain the user\[cq]s
latitude and longitude using \f[CR]position.coords.latitude\f[R] and
\f[CR]position.coords.longitude\f[R] so we can update the displayed
coordinates.
The two \f[CR]<span>\f[R] elements are updated to display the
corresponding values after being converted to a value with two decimal
places.
.SS HTML
The HTML used to present the results looks like this:
.IP
.EX
<\f[B]p\f[R]>
  Your location is <\f[B]span\f[R] id=\[dq]latitude\[dq]>0.00</\f[B]span\f[R]>° latitude by
  <\f[B]span\f[R] id=\[dq]longitude\[dq]>0.00</\f[B]span\f[R]>° longitude.
</\f[B]p\f[R]>
<\f[B]button\f[R] id=\[dq]get\-location\[dq]>Get My Location</\f[B]button\f[R]>
.EE
.SS Result
Take this example for a test drive here:
.SH SEE ALSO
.IP \[bu] 2
Using the Geolocation API
.IP \[bu] 2
The \f[CR]GeolocationCoordinates\f[R] interface it belongs to.
.IP \[bu] 2
The \f[CR]GeolocationPosition\f[R] interface, which is the top\-level
interface used to return geolocation data from the Geolocation API
functions \f[CR]Geolocation.getCurrentPosition()\f[R] and
\f[CR]watchPosition()\f[R].
