.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "HTMLOPTIONELEMENT.OPTION" "3JS" "April 10, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
HTMLOptionElement.Option \- HTMLOptionElement: Option() constructor
.SH SYNOPSIS
The \f[B]\f[CB]Option()\f[B]\f[R] constructor creates a new
\f[CR]HTMLOptionElement\f[R].
.SH SYNTAX
.IP
.EX
new Option()
new Option(text)
new Option(text, value)
new Option(text, value, defaultSelected)
new Option(text, value, defaultSelected, selected)
.EE
.SS Parameters
.TP
\f[B]text\f[R] \f[I](optional)\f[R]
A string representing the content of the element, i.e., the displayed
text.
If this is not specified, a default value of \(lq\(rq (empty string) is
used.
.TP
\f[B]value\f[R] \f[I](optional)\f[R]
A string representing the value of the \f[CR]HTMLOptionElement\f[R],
i.e., the value attribute of the equivalent \f[CR]<option>\f[R].
If this is not specified, the value of text is used as the value, e.g.,
for the associated \f[CR]<select>\f[R] element\(cqs value when the form
is submitted to the server.
.TP
\f[B]defaultSelected\f[R] \f[I](optional)\f[R]
A value of either \f[CR]true\f[R] or \f[CR]false\f[R] that sets the
\f[CR]selected\f[R] attribute value, i.e., so that this
\f[CR]<option>\f[R] will be the default value selected in the
\f[CR]<select>\f[R] element when the page is first loaded.
If this is not specified, a default value of false is used.
Note that a value of true does not set the option to selected if it is
not already selected.
.TP
\f[B]selected\f[R] \f[I](optional)\f[R]
A value of either \f[CR]true\f[R] or \f[CR]false\f[R] that sets the
option\(cqs selected state; the default is false (not selected).
If omitted, even if the defaultSelected argument is true, the option is
not selected.
.SH EXAMPLES
.SS Just add new options
.IP
.EX
\f[I]/* assuming we have the following HTML\f[R]
\f[I]<select id=\(aqs\(aq>\f[R]

\f[I]</select>\f[R]
\f[I]*/\f[R]

\f[B]const\f[R] s = document.getElementById(\(dqs\(dq);
\f[B]const\f[R] options = [Four, Five, Six];

options.forEach((element, key) \f[B]=>\f[R] {
  s[key] = \f[B]new\f[R] Option(element, key);
});
.EE
.SS Append options with different parameters
.IP
.EX
\f[I]/* assuming we have the following HTML\f[R]
\f[I]<select id=\(dqs\(dq>\f[R]
\f[I]    <option>First</option>\f[R]
\f[I]    <option>Second</option>\f[R]
\f[I]    <option>Third</option>\f[R]
\f[I]</select>\f[R]
\f[I]*/\f[R]

\f[B]const\f[R] s = document.getElementById(\(dqs\(dq);
\f[B]const\f[R] options = [\(dqzero\(dq, \(dqone\(dq, \(dqtwo\(dq];

options.forEach((element, key) \f[B]=>\f[R] {
  \f[B]if\f[R] (element === \(dqzero\(dq) {
    s[key] = \f[B]new\f[R] Option(element, s.options.length, \f[B]false\f[R], \f[B]false\f[R]);
  }
  \f[B]if\f[R] (element === \(dqone\(dq) {
    s[key] = \f[B]new\f[R] Option(element, s.options.length, \f[B]true\f[R], \f[B]false\f[R]); \f[I]// Will add the \(dqselected\(dq attribute\f[R]
  }
  \f[B]if\f[R] (element === \(dqtwo\(dq) {
    s[key] = \f[B]new\f[R] Option(element, s.options.length, \f[B]false\f[R], \f[B]true\f[R]); \f[I]// Just will be selected in \(dqview\(dq\f[R]
  }
});

\f[I]/* Result\f[R]
\f[I]<select id=\(dqs\(dq>\f[R]
\f[I]  <option value=\(dq0\(dq>zero</option>\f[R]
\f[I]  <option value=\(dq1\(dq selected=\(dq\(dq>one</option>\f[R]
\f[I]  <option value=\(dq2\(dq>two</option> // User will see this as \(aqselected\(aq\f[R]
\f[I]</select>\f[R]
\f[I]*/\f[R]
.EE
