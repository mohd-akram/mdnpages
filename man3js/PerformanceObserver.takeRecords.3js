.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "PerformanceObserver.takeRecords" "JS" "April 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
PerformanceObserver.takeRecords \- PerformanceObserver: takeRecords()
method
.SH SYNOPSIS
The \f[B]\f[CB]takeRecords()\f[B]\f[R] method of the
\f[CR]PerformanceObserver\f[R] interface returns the current list of
\f[CR]performance entries\f[R] stored in the performance observer,
emptying it out.
.SH SYNTAX
.IP
.EX
takeRecords()
.EE
.SS Parameters
None.
.SS Return value
A list of \f[CR]PerformanceEntry\f[R] objects.
.SH EXAMPLES
.SS Taking records
The following example stores the current list of performance entries
into \f[CR]records\f[R] and empties the performance observer.
.IP
.EX
\f[B]const\f[R] observer = \f[B]new\f[R] PerformanceObserver((list, obj) \f[B]=>\f[R] {
  list.getEntries().forEach((entry) \f[B]=>\f[R] {
    \f[I]// Process \[dq]mark\[dq] and \[dq]measure\[dq] events\f[R]
  });
});
observer.observe({ entryTypes: [\[dq]mark\[dq], \[dq]measure\[dq]] });
\f[B]const\f[R] records = observer.takeRecords();
console.log(records[0].name);
console.log(records[0].startTime);
console.log(records[0].duration);
.EE
