.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "GPU.REQUESTADAPTER" "3JS" "June 18, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
GPU.requestAdapter \- GPU: requestAdapter() method
.SH SYNOPSIS
\f[B]Secure context:\f[R] This feature is available only in secure
contexts (HTTPS).
.PP
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]requestAdapter()\f[B]\f[R] method of the \f[CR]GPU\f[R]
interface returns a \f[CR]Promise\f[R] that fulfills with a
\f[CR]GPUAdapter\f[R] object instance.
From this you can request a \f[CR]GPUDevice\f[R], adapter info,
features, and limits.
.PP
Note that the user agent chooses whether to return an adapter.
If so, it chooses according to the provided options.
If no options are provided, the device will provide access to the
default adapter, which is usually good enough for most purposes.
.SH SYNTAX
.IP
.EX
requestAdapter()
requestAdapter(options)
.EE
.SS Parameters
.TP
\f[B]options\f[R] \f[I](optional)\f[R]
An object containing the following properties:
.RS
.TP
\f[B]powerPreference\f[R] \f[I](optional)\f[R]
An enumerated value that can be used to provide a hint to the user agent
indicating what class of adapter should be chosen from the system\(cqs
available adapters.
Available values are:
.RS
.IP \(bu 2
\f[CR]undefined\f[R] (or not specified), which provides no hint.
.IP \(bu 2
\f[CR]\(dqlow\-power\(dq\f[R], which provides a hint to prioritize power
savings over performance.
If your app runs OK with this setting, it is recommended to use it, as
it can significantly improve battery life on portable devices.
This is usually the default if no options are provided.
.IP \(bu 2
\f[CR]\(dqhigh\-performance\(dq\f[R], which provides a hint to
prioritize performance over power consumption.
You are encouraged to only specify this value if absolutely necessary,
since it may significantly decrease battery life on portable devices.
It may also result in increased \f[CR]GPUDevice\f[R] loss \(em the
system will sometimes elect to switch to a lower\-power adapter to save
power.
.PP
This hint\(cqs primary purpose is to influence which GPU is used in a
multi\-GPU system.
For instance, some laptops have a low\-power integrated GPU and a
high\-performance discrete GPU.
Different factors may affect which adapter is returned including battery
status, attached displays, or removable GPUs.
.RS
.PP
\f[B]Note:\f[R] On Chrome running on dual\-GPU macOS devices, if
\f[CR]requestAdapter()\f[R] is called without a
\f[CR]powerPreference\f[R] option, the high\-performance discrete GPU is
returned when the user\(cqs device is on AC power.
Otherwise, the low\-power integrated GPU is returned.
.RE
.RE
.RE
.SS Fallback adapters
The adapter provided by the user agent may be a \f[B]fallback
adapter\f[R], if it determines it to be the most appropriate option
available.
A fallback adapter generally has significant performance caveats in
exchange for some combination of wider compatibility, more predictable
behavior, or improved privacy.
For example, some browsers may offer a software\-based implementation of
the API via a fallback adapter.
A fallback adapter will not be available on every system.
.PP
If you wish to prevent your apps from running on fallback adapters, you
should check the \f[CR]GPUAdapter.isFallbackAdapter\f[R] attribute prior
to requesting a \f[CR]GPUDevice\f[R].
.RS
.PP
\f[B]Note:\f[R] The specification includes a
\f[CR]forceFallbackAdapter\f[R] option for \f[CR]requestAdapter()\f[R].
This is a boolean that, if set to \f[CR]true\f[R], forces the user agent
to return a fallback adapter if one is available.
This is not yet supported by any browser.
.RE
.SS Return value
A \f[CR]Promise\f[R] that fulfills with a \f[CR]GPUAdapter\f[R] object
instance if the request is successful.
.PP
\f[CR]requestAdapter()\f[R] will resolve to \f[CR]null\f[R] if an
appropriate adapter is not available.
.SS Exceptions
None.
.SH EXAMPLES
.IP
.EX
\f[B]async\f[R] \f[B]function\f[R] init() {
  \f[B]if\f[R] (!navigator.gpu) {
    \f[B]throw\f[R] Error(\(dqWebGPU not supported.\(dq);
  }

  \f[B]const\f[R] adapter = \f[B]await\f[R] navigator.gpu.requestAdapter();
  \f[B]if\f[R] (!adapter) {
    \f[B]throw\f[R] Error(\(dqCouldn\(aqt request WebGPU adapter.\(dq);
  }

  \f[B]const\f[R] device = \f[B]await\f[R] adapter.requestDevice();

  \f[I]// \&...\f[R]
}
.EE
.SH SEE ALSO
.IP \(bu 2
The WebGPU API
