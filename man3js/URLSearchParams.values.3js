.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "URLSearchParams.values" "JS" "July 12, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
URLSearchParams.values \- URLSearchParams: values() method
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]values()\f[B]\f[R] method of the
\f[CR]URLsearchParams\f[R] interface returns an \f[CR]iterator\f[R]
allowing iteration through all values contained in this object.
The values are strings.
.SH SYNTAX
.IP
.EX
values()
.EE
.SS Parameters
None.
.SS Return value
Returns an \f[CR]iterator\f[R].
.SH EXAMPLES
The following example passes a URL search string to the
\f[CR]URLSearchParams\f[R] constructor, then uses the iterator returned
by \f[CR]values()\f[R] to print the values to the console.
.IP
.EX
\f[B]const\f[R] searchParams = \f[B]new\f[R] URLSearchParams(\[dq]key1=value1&key2=value2\[dq]);

\f[B]for\f[R] (\f[B]const\f[R] value \f[B]of\f[R] searchParams.values()) {
  console.log(value);
}
.EE
.PP
The result is:
.IP
.EX
value1
value2
.EE
.PP
This example does much the same as above, but first casts the iterator
into an array.
.IP
.EX
\f[B]const\f[R] searchParams = \f[B]new\f[R] URLSearchParams(\[dq]key1=value1&key2=value2\[dq]);

console.log(Array.from(searchParams.values()));
.EE
.PP
The result is:
.IP
.EX
[\[aq]value1\[aq], \[aq]value2\[aq]]
.EE
.SH SEE ALSO
.IP \[bu] 2
The \f[CR]URL\f[R] interface.
