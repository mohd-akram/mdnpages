.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "WINDOW.CRYPTO" "3JS" "June 19, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Window.crypto \- Window: crypto property
.SH SYNOPSIS
The \f[B]\f[CB]crypto\f[B]\f[R] read\-only property of the
\f[CR]Window\f[R] interface returns the \f[CR]Crypto\f[R] object for
this window\(cqs scope.
This object gives web pages access to certain cryptographic related
services.
.PP
Although the property itself is read\-only, all of its methods (and the
methods of its child object, \f[CR]SubtleCrypto\f[R]) are not
read\-only, and therefore vulnerable to attack by polyfill.
.PP
Although \f[CR]crypto\f[R] is available on all windows, the returned
\f[CR]Crypto\f[R] object only has one usable feature in insecure
contexts: the \f[CR]getRandomValues()\f[R] method.
In general, you should use this API only in secure contexts.
.SH VALUE
An instance of the \f[CR]Crypto\f[R] interface, providing access to
general\-purpose cryptography and a strong random\-number generator.
.SH EXAMPLES
This example uses the \f[CR]crypto\f[R] property to access the
\f[CR]getRandomValues()\f[R] method.
.SS HTML
.IP
.EX
<\f[B]p\f[R] id=\(dqmyRandText\(dq>The random numbers are:</\f[B]p\f[R]>
<\f[B]button\f[R] type=\(dqbutton\(dq>Generate 10 random numbers</\f[B]button\f[R]>
.EE
.SS JavaScript
.IP
.EX
\f[B]function\f[R] genRandomNumbers() {
  \f[B]const\f[R] array = \f[B]new\f[R] Uint32Array(10);
  globalThis.crypto.getRandomValues(array);

  \f[B]const\f[R] randText = document.getElementById(\(dqmyRandText\(dq);
  randText.textContent = \(gaThe random numbers are: ${array.join(\(dq \(dq)}\(ga;
}

document.querySelector(\(dqbutton\(dq).addEventListener(\(dqclick\(dq, genRandomNumbers);
.EE
.SS Result
.SH SEE ALSO
.IP \(bu 2
The \f[CR]Crypto\f[R] interface
.IP \(bu 2
\f[CR]WorkerGlobalScope.crypto\f[R]
