.\" Automatically generated by Pandoc 3.4
.\"
.TH "SpeechSynthesis.speak" "JS" "April 8, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
SpeechSynthesis.speak \- SpeechSynthesis: speak() method
.SH SYNOPSIS
The \f[B]\f[CB]speak()\f[B]\f[R] method of the
\f[CR]SpeechSynthesis\f[R] interface adds an \f[CR]utterance\f[R] to the
utterance queue; it will be spoken when any other utterances queued
before it have been spoken.
.SH SYNTAX
.IP
.EX
speak(utterance)
.EE
.SS Parameters
.TP
\f[B]utterance\f[R]
A \f[CR]SpeechSynthesisUtterance\f[R] object.
.SS Return value
None (\f[CR]undefined\f[R]).
.SH EXAMPLES
This snippet is excerpted from our \c
.UR https://github.com/mdn/dom-examples/blob/main/web-speech-api/speak-easy-synthesis/script.js
Speech synthesizer demo
.UE \c
\ (\c
.UR https://mdn.github.io/dom-examples/web-speech-api/speak-easy-synthesis/
see it live
.UE \c
).
When a form containing the text we want to speak is submitted, we
(amongst other things) create a new utterance containing this text, then
speak it by passing it into \f[CR]speak()\f[R] as a parameter.
.IP
.EX
\f[B]const\f[R] synth = window.speechSynthesis;

\f[I]// ...\f[R]

inputForm.onsubmit = (event) \f[B]=>\f[R] {
  event.preventDefault();

  \f[B]const\f[R] utterThis = \f[B]new\f[R] SpeechSynthesisUtterance(inputTxt.value);
  \f[B]const\f[R] selectedOption =
    voiceSelect.selectedOptions[0].getAttribute(\[dq]data\-name\[dq]);
  \f[B]for\f[R] (\f[B]let\f[R] i = 0; i < voices.length; i++) {
    \f[B]if\f[R] (voices[i].name === selectedOption) {
      utterThis.voice = voices[i];
    }
  }
  synth.speak(utterThis);
  inputTxt.blur();
};
.EE
.SH SEE ALSO
.IP \[bu] 2
Web Speech API
