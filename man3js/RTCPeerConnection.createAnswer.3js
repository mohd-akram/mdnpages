.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "RTCPEERCONNECTION.CREATEANSWER" "3JS" "September 23, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
RTCPeerConnection.createAnswer \- RTCPeerConnection: createAnswer()
method
.SH SYNOPSIS
The \f[B]\f[CB]createAnswer()\f[B]\f[R] method of the
\f[CR]RTCPeerConnection\f[R] interface creates an SDP answer to an offer
received from a remote peer during the offer/answer negotiation of a
WebRTC connection.
.PP
The answer contains information about any media already attached to the
session, codecs and options supported by the browser, and any ICE
candidates already gathered.
The answer is delivered to the returned \f[CR]Promise\f[R], and should
then be sent to the source of the offer to continue the negotiation
process.
.SH SYNTAX
.IP
.EX
createAnswer()
createAnswer(options)

createAnswer(successCallback, failureCallback) // deprecated
createAnswer(successCallback, failureCallback, options) // deprecated
.EE
.SS Parameters
.TP
\f[B]options\f[R] \f[I](optional)\f[R]
An optional object providing options requested for the answer.
Currently, there are no available options.
.SS Deprecated parameters
In older code and documentation, you may see a callback\-based version
of this function.
This has been deprecated and its use is \f[B]strongly\f[R] discouraged.
You should update any existing code to use the \f[CR]Promise\f[R]\-based
version of \f[CR]createAnswer()\f[R] instead.
The parameters for the older form of \f[CR]createAnswer()\f[R] are
described below, to aid in updating existing code.
.TP
\f[B]successCallback\f[R] \f[I](deprecated)\f[R]
A callback function which will be passed a single
\f[CR]RTCSessionDescription\f[R] object describing the newly\-created
answer.
.TP
\f[B]failureCallback\f[R] \f[I](deprecated)\f[R]
A callback function which will be passed a single
\f[CR]DOMException\f[R] object explaining why the request to create an
answer failed.
.TP
\f[B]options\f[R] \f[I](optional)\f[R]
An optional object providing options requested for the answer.
.SS Exceptions
.TP
\f[B]NotReadableError\f[R]
The identity provider wasn\(cqt able to provide an identity assertion.
.TP
\f[B]OperationError\f[R]
Generation of the SDP failed for some reason; this is a general failure
catch\-all exception.
.SS Return value
A \f[CR]Promise\f[R] that fulfills with an object containing the same
properties as an \f[CR]RTCSessionDescription\f[R] objects:
.TP
\f[B]type\f[R]
A string whose value is \f[CR]\(dqanswer\(dq\f[R].
.TP
\f[B]sdp\f[R]
A string containing the SDP describing the session, to be delivered to
the remote peer.
.SH EXAMPLES
Here is a segment of code taken from the code that goes with the article
Signaling and video calling.
This code comes from the handler for the message sent to carry an offer
to another peer across the signaling channel.
.RS
.PP
\f[B]Note:\f[R] Keep in mind that this is part of the signaling process,
the transport layer for which is an implementation detail that\(cqs
entirely up to you.
In this case, a WebSocket connection is used to send a JSON message with
a \f[CR]type\f[R] field with the value \(lqvideo\-answer\(rq to the
other peer, carrying the answer to the device which sent the offer to
connect.
The contents of the object being passed to the \f[CR]sendToServer()\f[R]
function, along with everything else in the promise fulfillment handler,
depend entirely on your design
.RE
.IP
.EX
pc.createAnswer()
  .then((answer) \f[B]=>\f[R] pc.setLocalDescription(answer))
  .then(() \f[B]=>\f[R] {
    \f[I]// Send the answer to the remote peer through the signaling server.\f[R]
  })
  .catch(handleGetUserMediaError);
.EE
.PP
This asks \f[CR]RTCPeerConnection\f[R] to create and return a new
answer.
In our promise handler, the returned answer is set as the description of
the local end of the connection by calling
\f[CR]setLocalDescription()\f[R].
.PP
Once that succeeds, the answer is sent to the signaling server using
whatever protocol you see fit.
.PP
\f[CR]Promise.catch()\f[R] is used to trap and handle errors.
.PP
See Handling the invitation in our WebRTC chat example to view the
complete code from which this snippet is derived; that will help you
understand the signaling process and how answers work.
