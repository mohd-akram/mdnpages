.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "CSPViolationReportBody.statusCode" "JS" "September 21, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
CSPViolationReportBody.statusCode \- CSPViolationReportBody: statusCode
property
.SH SYNOPSIS
The \f[B]\f[CB]statusCode\f[B]\f[R] read\-only property of the
\f[CR]CSPViolationReportBody\f[R] interface is a number representing the
HTTP status code of the response to the request that triggered a Content
Security Policy (CSP) violation (when loading a window or worker).
.SH VALUE
A number representing the HTTP status code of the response to the
request that triggered the CSP violation.
.SH EXAMPLES
In this example we create a new \f[CR]ReportingObserver\f[R] to observe
content violation reports of type \f[CR]\[dq]csp\-violation\[dq]\f[R].
Each time the callback function is invoked, we log the status code for
the first entry of the reports array.
.IP
.EX
\f[B]const\f[R] observer = \f[B]new\f[R] ReportingObserver(
  (reports, observer) \f[B]=>\f[R] {
    console.log(\[ga]statusCode: ${reports[0].body.statusCode}\[ga]);
    \f[I]// For example: 200\f[R]
  },
  {
    types: [\[dq]csp\-violation\[dq]],
    buffered: \f[B]true\f[R],
  },
);

observer.observe();
.EE
.PP
Note that while there might be multiple reports in the returned array,
for brevity we only log the status code of the first report.
.SH SEE ALSO
.IP \[bu] 2
\f[CR]SecurityPolicyViolationEvent.statusCode\f[R]
