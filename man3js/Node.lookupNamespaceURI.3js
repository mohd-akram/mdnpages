.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "NODE.LOOKUPNAMESPACEURI" "3JS" "July 26, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Node.lookupNamespaceURI \- Node: lookupNamespaceURI() method
.SH SYNOPSIS
The \f[B]\f[CB]lookupNamespaceURI()\f[B]\f[R] method of the
\f[CR]Node\f[R] interface takes a prefix as parameter and returns the
namespace URI associated with it on the given node if found (and
\f[CR]null\f[R] if not).
This method\(cqs existence allows \f[CR]Node\f[R] objects to be passed
as a namespace resolver to \f[CR]XPathEvaluator.createExpression()\f[R]
and \f[CR]XPathEvaluator.evaluate()\f[R].
.SH SYNTAX
.IP
.EX
lookupNamespaceURI(prefix)
.EE
.SS Parameters
.TP
\f[B]prefix\f[R]
The prefix to look for.
> \f[B]Note:\f[R] > This parameter is not optional, but can be set to
\f[CR]null\f[R].
.SS Return value
A string containing the namespace URI corresponding to the prefix.
.IP \(bu 2
Always returns \f[CR]null\f[R] if the node is a
\f[CR]DocumentFragment\f[R], \f[CR]DocumentType\f[R],
\f[CR]Document\f[R] with no \f[CR]documentElement\f[R], or
\f[CR]Attr\f[R] with no associated element.
.IP \(bu 2
If \f[CR]prefix\f[R] is \f[CR]\(dqxml\(dq\f[R], the return value is
always \f[CR]\(dqhttp://www.w3.org/XML/1998/namespace\(dq\f[R].
.IP \(bu 2
If \f[CR]prefix\f[R] is \f[CR]\(dqxmlns\(dq\f[R], the return value is
always \f[CR]\(dqhttp://www.w3.org/2000/xmlns/\(dq\f[R].
.IP \(bu 2
If the \f[CR]prefix\f[R] is \f[CR]null\f[R], the return value is the
default namespace URI.
.IP \(bu 2
If the prefix is not found, the return value is \f[CR]null\f[R].
.SH EXAMPLE
.IP
.EX
<\f[B]div\f[R] style=\(dqdisplay: none\(dq>
  <\f[B]div\f[R]>Test HTML element</\f[B]div\f[R]>
  <\f[B]svg\f[R]>
    <\f[B]text\f[R]>Test SVG element</\f[B]text\f[R]>
  </\f[B]svg\f[R]>
  <\f[B]math\f[R]>Test MathML element</\f[B]math\f[R]>
</\f[B]div\f[R]>

<\f[B]table\f[R]>
  <\f[B]thead\f[R]>
    <\f[B]tr\f[R]>
      <\f[B]th\f[R]><\f[B]code\f[R]>prefix</\f[B]code\f[R]></\f[B]th\f[R]>
      <\f[B]th\f[R]><\f[B]code\f[R]>&lt;div&gt;</\f[B]code\f[R]></\f[B]th\f[R]>
      <\f[B]th\f[R]><\f[B]code\f[R]>&lt;svg&gt;</\f[B]code\f[R]></\f[B]th\f[R]>
      <\f[B]th\f[R]><\f[B]code\f[R]>&lt;math&gt;</\f[B]code\f[R]></\f[B]th\f[R]>
    </\f[B]tr\f[R]>
  </\f[B]thead\f[R]>
  <\f[B]tbody\f[R]></\f[B]tbody\f[R]>
</\f[B]table\f[R]>
.EE
.IP
.EX
\f[B]const\f[R] htmlElt = document.querySelector(\(dqdiv\(dq);
\f[B]const\f[R] svgElt = document.querySelector(\(dqsvg\(dq);
\f[B]const\f[R] mathElt = document.querySelector(\(dqmath\(dq);

\f[B]const\f[R] tbody = document.querySelector(\(dqtbody\(dq);

\f[B]for\f[R] (\f[B]const\f[R] prefix \f[B]of\f[R] [\(dqxmlns\(dq, \(dqxml\(dq, \(dqhtml\(dq, \(dqsvg\(dq, \(dqxlink\(dq, \(dq\(dq, \f[B]null\f[R]]) {
  \f[B]const\f[R] row = document.createElement(\(dqtr\(dq);
  tbody.appendChild(row);
  row.appendChild(document.createElement(\(dqtd\(dq)).textContent =
    JSON.stringify(prefix);
  \f[B]for\f[R] (\f[B]const\f[R] el \f[B]of\f[R] [htmlElt, svgElt, mathElt]) {
    console.log(el, prefix, el.lookupNamespaceURI(prefix));
    row.appendChild(document.createElement(\(dqtd\(dq)).textContent = String(
      el.lookupNamespaceURI(prefix),
    );
  }
}
.EE
.SH SEE ALSO
.IP \(bu 2
\f[CR]Node.lookupPrefix\f[R]
.IP \(bu 2
\f[CR]Node.isDefaultNameSpace\f[R]
