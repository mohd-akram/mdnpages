.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "HighlightRegistry.keys" "JS" "December 2, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
HighlightRegistry.keys \- HighlightRegistry: keys() method
.SH SYNOPSIS
The \f[B]\f[CB]keys()\f[B]\f[R] method of the
\f[CR]HighlightRegistry\f[R] interface returns a new Iterator object
that contains the keys for each \f[CR]Highlight\f[R] object in the
\f[CR]HighlightRegistry\f[R] object in insertion order.
.PP
\f[CR]HighlightRegistry\f[R] is a \f[CR]Map\f[R]\-like object, so this
is similar to using \f[CR]Map.keys()\f[R].
.SH SYNTAX
.IP
.EX
keys()
.EE
.SS Return value
A new iterator object containing the names of each \f[CR]Highlight\f[R]
object in the registry, in insertion order.
.SH EXAMPLES
The following code snippet shows how to create and register three
\f[CR]Highlight\f[R] objects, and use the iterator returned by the
\f[CR]keys()\f[R] method to log their names:
.IP
.EX
\f[B]const\f[R] fooHighlight = \f[B]new\f[R] Highlight();
\f[B]const\f[R] barHighlight = \f[B]new\f[R] Highlight();
\f[B]const\f[R] bazHighlight = \f[B]new\f[R] Highlight();

CSS.highlights.set(\[dq]foo\[dq], fooHighlight);
CSS.highlights.set(\[dq]bar\[dq], barHighlight);
CSS.highlights.set(\[dq]baz\[dq], bazHighlight);

\f[B]const\f[R] iter = CSS.highlights.keys();

console.log(iter.next().value); \f[I]// \[dq]foo\[dq]\f[R]
console.log(iter.next().value); \f[I]// \[dq]bar\[dq]\f[R]
console.log(iter.next().value); \f[I]// \[dq]baz\[dq]\f[R]
.EE
.PP
The following code example shows how to iterate over the highlights in
the registry by using a \f[CR]for...of\f[R] loop:
.IP
.EX
\f[B]const\f[R] fooHighlight = \f[B]new\f[R] Highlight();
\f[B]const\f[R] barHighlight = \f[B]new\f[R] Highlight();
\f[B]const\f[R] bazHighlight = \f[B]new\f[R] Highlight();

CSS.highlights.set(\[dq]foo\[dq], fooHighlight);
CSS.highlights.set(\[dq]bar\[dq], barHighlight);
CSS.highlights.set(\[dq]baz\[dq], bazHighlight);

\f[B]for\f[R] (\f[B]const\f[R] name \f[B]of\f[R] CSS.highlights.keys()) {
  console.log(name);
}
.EE
.SH SEE ALSO
.IP \[bu] 2
The CSS Custom Highlight API
.IP \[bu] 2
\c
.UR https://css-tricks.com/css-custom-highlight-api-early-look/
CSS Custom Highlight API: The Future of Highlighting Text Ranges on the
Web
.UE \c
