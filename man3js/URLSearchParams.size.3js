.\" Automatically generated by Pandoc 3.4
.\"
.TH "URLSearchParams.size" "JS" "March 6, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
URLSearchParams.size \- URLSearchParams: size property
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]size\f[B]\f[R] read\-only property of the
\f[CR]URLSearchParams\f[R] interface indicates the total number of
search parameter entries.
.SH VALUE
A number indicating the total number of search parameter entries in the
\f[CR]URLSearchParams\f[R] object.
.SH EXAMPLES
.SS Getting the amount of search parameter entries
You can get the total number of search parameter entries like so:
.IP
.EX
\f[B]const\f[R] searchParams = \f[B]new\f[R] URLSearchParams(\[dq]c=4&a=2&b=3&a=1\[dq]);
searchParams.size; \f[I]// 4\f[R]
.EE
.PP
Note how the \f[CR]a\f[R] parameter is given twice, but \f[CR]size\f[R]
returns the number of all given entries (4) and not 3.
To get the amount of unique keys, you can use a \f[CR]Set\f[R], for
example:
.IP
.EX
[...\f[B]new\f[R] Set(searchParams.keys())].length; \f[I]// 3\f[R]
.EE
.SS Checking if search parameters exist
The \f[CR]size\f[R] property is useful for checking whether there are
any search parameters at all:
.IP
.EX
\f[B]const\f[R] url = \f[B]new\f[R] URL(\[dq]https://example.com?foo=1&bar=2\[dq]);

\f[B]if\f[R] (url.searchParams.size) {
  console.log(\[dq]URL has search parameters!\[dq]);
}
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]URL.searchParams\f[R]
.IP \[bu] 2
\c
.UR https://github.com/zloirock/core-js#url-and-urlsearchparams
Polyfill of \f[CR]URLSearchParams\f[R] in \f[CR]core\-js\f[R]
.UE \c
