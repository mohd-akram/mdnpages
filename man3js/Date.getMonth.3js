.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "Date.getMonth" "JS" "February 11, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Date.getMonth \- Date.prototype.getMonth()
.SH SYNOPSIS
The \f[B]\f[CB]getMonth()\f[B]\f[R] method of \f[CR]Date\f[R] instances
returns the month for this date according to local time, as a
zero\-based value (where zero indicates the first month of the year).
.IP
.EX
\f[B]const\f[R] moonLanding = \f[B]new\f[R] Date(\[dq]July 20, 69 00:20:18\[dq]);

console.log(moonLanding.getMonth()); \f[I]// (January gives 0)\f[R]
\f[I]// Expected output: 6\f[R]
.EE
.SH SYNTAX
.IP
.EX
getMonth()
.EE
.SS Parameters
None.
.SS Return value
An integer, between 0 and 11, representing the month for the given date
according to local time: 0 for January, 1 for February, and so on.
Returns \f[CR]NaN\f[R] if the date is invalid.
.SH DESCRIPTION
The return value of \f[CR]getMonth()\f[R] is zero\-based, which is
useful for indexing into arrays of months, for example:
.IP
.EX
\f[B]const\f[R] valentines = \f[B]new\f[R] Date(\[dq]1995\-02\-14\[dq]);
\f[B]const\f[R] month = valentines.getMonth();
\f[B]const\f[R] monthNames = [\[dq]January\[dq], \[dq]February\[dq], \[dq]March\[dq] \f[I]/* , \&... */\f[R]];

console.log(monthNames[month]); \f[I]// \[dq]February\[dq]\f[R]
.EE
.PP
However, for the purpose of internationalization, you should prefer
using \f[CR]Intl.DateTimeFormat\f[R] with the \f[CR]options\f[R]
parameter instead.
.IP
.EX
\f[B]const\f[R] options = { month: \[dq]long\[dq] };
console.log(\f[B]new\f[R] Intl.DateTimeFormat(\[dq]en\-US\[dq], options).format(valentines));
\f[I]// \[dq]February\[dq]\f[R]
console.log(\f[B]new\f[R] Intl.DateTimeFormat(\[dq]de\-DE\[dq], options).format(valentines));
\f[I]// \[dq]Februar\[dq]\f[R]
.EE
.SH EXAMPLES
.SS Using getMonth()
The \f[CR]month\f[R] variable has value \f[CR]11\f[R], based on the
value of the \f[CR]Date\f[R] object \f[CR]xmas95\f[R].
.IP
.EX
\f[B]const\f[R] xmas95 = \f[B]new\f[R] Date(\[dq]1995\-12\-25T23:15:30\[dq]);
\f[B]const\f[R] month = xmas95.getMonth();

console.log(month); \f[I]// 11\f[R]
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]Date.prototype.getUTCMonth()\f[R]
.IP \[bu] 2
\f[CR]Date.prototype.setMonth()\f[R]
