.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "RTCIceTransport.selectedcandidatepairchange_event" "JS" "July 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
RTCIceTransport.selectedcandidatepairchange_event \- RTCIceTransport:
selectedcandidatepairchange event
.SH SYNOPSIS
A \f[B]\f[CB]selectedcandidatepairchange\f[B]\f[R] event is sent to an
\f[CR]RTCIceTransport\f[R] when the ICE agent selects a new pair of
candidates that describe the endpoints of a viable connection.
.PP
The pair of candidates is in turn described by an
\f[CR]RTCIceCandidatePair\f[R] object which contains one
\f[CR]RTCIceCandidate\f[R] representing the local end of the connection,
and another representing the remote end of the connection.
.PP
Together, the candidates can be used to establish a connection to be
used by the \f[CR]RTCIceTransport\f[R], and, by extension, by an
\f[CR]RTCPeerConnection\f[R].
.PP
This event is not cancelable and does not bubble.
.SH SYNTAX
Use the event name in methods like \f[CR]addEventListener()\f[R], or set
an event handler property.
.IP
.EX
addEventListener(\[dq]selectedcandidatepairchange\[dq], (event) \f[B]=>\f[R] {});

onselectedcandidatepairchange = (event) \f[B]=>\f[R] {};
.EE
.SH EVENT TYPE
A generic \f[CR]Event\f[R].
.SH EXAMPLES
This example creates an event handler for
\f[CR]selectedcandidatepairchange\f[R] that updates a display providing
the user information about the progress of the ICE negotiation for an
\f[CR]RTCPeerConnection\f[R] called \f[CR]pc\f[R].
.IP
.EX
\f[B]let\f[R] iceTransport = pc.getSenders[0].transport.iceTransport;
\f[B]let\f[R] localProtoElem = document.getElementById(\[dq]local\-protocol\[dq]);
\f[B]let\f[R] remoteProtoElem = document.getElementById(\[dq]remote\-protocol\[dq]);

iceTransport.addEventListener(
  \[dq]selectedcandidatepairchange\[dq],
  (ev) \f[B]=>\f[R] {
    \f[B]let\f[R] pair = iceTransport.getSelectedCandidatePair();
    localProtoElem.innerText = pair.local.protocol.toUpperCase();
    remoteProtoElem.innerText = pair.remote.protocol.toUpperCase();
  },
  \f[B]false\f[R],
);
.EE
.PP
This can also be done by setting the
\f[CR]onselectedcandidatepairchange\f[R] event handler property
directly.
.IP
.EX
\f[B]let\f[R] iceTransport = pc.getSenders[0].transport.iceTransport;
\f[B]let\f[R] localProtoElem = document.getElementById(\[dq]local\-protocol\[dq]);
\f[B]let\f[R] remoteProtoElem = document.getElementById(\[dq]remote\-protocol\[dq]);

iceTransport.onselectedcandidatepairchange = (ev) \f[B]=>\f[R] {
  \f[B]let\f[R] pair = iceTransport.getSelectedCandidatePair();
  localProtoElem.innerText = pair.local.protocol.toUpperCase();
  remoteProtoElem.innerText = pair.remote.protocol.toUpperCase();
};
.EE
.SH SEE ALSO
.IP \[bu] 2
WebRTC API
.IP \[bu] 2
WebRTC connectivity
.SS Related RTCIceTransport events
.IP \[bu] 2
\f[CR]statechange\f[R]
.IP \[bu] 2
\f[CR]gatheringstatechange\f[R]
.SS Related RTCPeerConnection events
.IP \[bu] 2
\f[CR]negotiationneeded\f[R]
.IP \[bu] 2
\f[CR]signalingstatechange\f[R]
.IP \[bu] 2
\f[CR]iceconnectionstatechange\f[R]
.IP \[bu] 2
\f[CR]icegatheringstatechange\f[R]
.IP \[bu] 2
\f[CR]connectionstatechange\f[R]
