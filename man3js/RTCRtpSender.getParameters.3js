.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "RTCRtpSender.getParameters" "JS" "August 6, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
RTCRtpSender.getParameters \- RTCRtpSender: getParameters() method
.SH SYNOPSIS
The \f[B]\f[CB]getParameters()\f[B]\f[R] method of the
\f[CR]RTCRtpSender\f[R] interface returns an object describing the
current configuration for how the sender\[cq]s \f[CR]track\f[R] will be
encoded and transmitted to a remote \f[CR]RTCRtpReceiver\f[R].
.SH SYNTAX
.IP
.EX
getParameters()
.EE
.SS Parameters
None.
.SS Return value
An object indicating the current configuration of the sender.
.TP
\f[B]encodings\f[R]
An array of objects, each specifying the parameters and settings for a
single codec that could be used to encode the track\[cq]s media.
The properties of the objects include:
.RS
.TP
\f[B]active\f[R]
\f[CR]true\f[R] (the default) if the encoding is being sent,
\f[CR]false\f[R] if it is not being sent or used.
.TP
\f[B]dtx\f[R] \f[I](deprecated)\f[R] \f[I](non\-standard)\f[R]
Only used for an \f[CR]RTCRtpSender\f[R] whose \f[CR]kind\f[R] is
\f[CR]audio\f[R], this property indicates whether or not discontinuous
transmission is being used (a feature by which a phone is turned off or
the microphone muted automatically in the absence of voice activity).
The value is taken either \f[CR]enabled\f[R] or \f[CR]disabled\f[R].
.TP
\f[B]maxBitrate\f[R]
A positive integer indicating the maximum number of bits per second that
the user agent is allowed to grant to tracks encoded with this encoding.
Other parameters may further constrain the bit rate, such as the value
of \f[CR]maxFramerate\f[R], or the bandwidth available for the transport
or physical network.
.RS
.PP
The value is computed using the standard Transport Independent
Application Specific Maximum (TIAS) bandwidth as defined by RFC 3890,
section 6.2.2); this is the maximum bandwidth needed without considering
protocol overheads from IP, TCP or UDP, and so forth.
.PP
Note that the bitrate can be achieved in a number of ways, depending on
the media and encoding.
For example, for video a low bit rate might be achieved by dropping
frames (a bitrate of zero might allow just one frame to be sent), while
for audio the track might have to stop playing if the bitrate is too low
for it to be sent.
.RE
.TP
\f[B]maxFramerate\f[R]
A value specifying the maximum number of frames per second to allow for
this encoding.
.TP
\f[B]priority\f[R]
A string indicating the priority of the \f[CR]RTCRtpSender\f[R], which
may determine how the user agent allocates bandwidth between senders.
Allowed values are \f[CR]very\-low\f[R], \f[CR]low\f[R] (default),
\f[CR]medium\f[R], \f[CR]high\f[R].
.TP
\f[B]rid\f[R]
A string which, if set, specifies an \f[I]RTP stream ID\f[R]
(\f[I]RID\f[R]) to be sent using the RID header extension.
This parameter cannot be modified using \f[CR]setParameters()\f[R].
Its value can only be set when the transceiver is first created.
.TP
\f[B]scaleResolutionDownBy\f[R]
Only used for senders whose track\[cq]s \f[CR]kind\f[R] is
\f[CR]video\f[R], this is a floating\-point value specifying a factor by
which to scale down the video during encoding.
The default value, 1.0, means that the video will be encoded at its
original size.
A value of 2.0 scales the video frames down by a factor of 2 in each
dimension, resulting in a video 1/4 the size of the original.
The value must not be less than 1.0 (attempting to scale the video to a
larger size will throw a \f[CR]RangeError\f[R]).
.RE
.TP
\f[B]transactionId\f[R]
A string containing a unique ID.
This value is used to ensure that \f[CR]setParameters()\f[R] can only be
called to modify the parameters returned by a specific previous call to
\f[CR]getParameters()\f[R].
This parameter cannot be changed by the caller.
.TP
\f[B]codecs\f[R]
An array of objects describing the media codecs that the sender has set
as enabled, and is prepared to use.
This parameter cannot be changed once initially set.
.RS
.PP
Each codec object in the array may have the following properties:
.TP
\f[B]channels\f[R] \f[I](optional)\f[R]
A positive integer indicating the number of channels supported by the
codec.
For example, for audio codecs a value of 1 specifies monaural sound,
while 2 indicates stereo.
.TP
\f[B]clockRate\f[R]
A positive integer specifying the codec\[cq]s clock rate in Hertz (Hz).
The clock rate is the rate at which the codec\[cq]s RTP timestamp
advances.
Most codecs have specific values or ranges of values they permit.
The IANA maintains a \c
.UR https://www.iana.org/assignments/rtp-parameters/rtp-parameters.xhtml#rtp-parameters-1
list of codecs and their parameters
.UE \c
, including their clock rates.
.TP
\f[B]mimeType\f[R]
A string indicating the codec\[cq]s MIME media type and subtype,
specified as a string of the form \f[CR]\[dq]type/subtype\[dq]\f[R].
The MIME type strings used by RTP differ from those used elsewhere.
IANA maintains a \c
.UR https://www.iana.org/assignments/rtp-parameters/rtp-parameters.xhtml#rtp-parameters-2
registry of valid MIME types
.UE \c
\&.
Also see Codecs used by WebRTC for details about potential codecs that
might be referenced here.
.TP
\f[B]payloadType\f[R]
The \c
.UR https://www.iana.org/assignments/rtp-parameters/rtp-parameters.xhtml#rtp-parameters-1
RTP payload type
.UE \c
\ used to identify this codec.
.TP
\f[B]sdpFmtpLine\f[R] \f[I](optional)\f[R]
A string giving the format specific parameters provided by the local
description.
.RE
.TP
\f[B]headerExtensions\f[R]
An array of zero or more RTP header extensions, each identifying an
extension supported by the sender or receiver.
Header extensions are described in RFC 3550, section 5.3.1).
This parameter cannot be changed once initially set.
.TP
\f[B]rtcp\f[R]
An \f[CR]RTCRtcpParameters\f[R] object providing the configuration
parameters used for RTCP on the sender or receiver.
This parameter cannot be changed once initially set.
.TP
\f[B]degradationPreference\f[R] \f[I](deprecated)\f[R] \f[I](optional)\f[R] 
Specifies the preferred way the WebRTC layer should handle optimizing
bandwidth against quality in constrained\-bandwidth situations.
The possible values are \f[CR]maintain\-framerate\f[R],
\f[CR]maintain\-resolution\f[R], or \f[CR]balanced\f[R].
The default value is \f[CR]balanced\f[R].
.SH EXAMPLES
This example gets the sender\[cq]s current transaction ID; the
transaction ID uniquely identifies the current set of parameters, to
ensure that calls to \f[CR]setParameters()\f[R] are always handled in
the correct order, avoiding inadvertently overwriting parameters with
older parameters.
.IP
.EX
\f[B]function\f[R] getSenderTransactionID(sender) {
  \f[B]let\f[R] parameters = sender.getParameters();

  \f[B]return\f[R] parameters.transactionId;
}
.EE
.PP
In the same way, this code gets the canonical name (CNAME) being used
for RTCP on an \f[CR]RTCRtpSender\f[R].
.IP
.EX
\f[B]function\f[R] getRtpCNAME(sender) {
  \f[B]let\f[R] parameters = sender.getParameters();

  \f[B]return\f[R] parameters.rtcp.cname;
}
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]RTCRtpSender.setParameters()\f[R]
.IP \[bu] 2
\f[CR]RTCRtpReceiver.getParameters()\f[R]
