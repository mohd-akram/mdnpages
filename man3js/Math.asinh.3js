.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "MATH.ASINH" "3JS" "March 5, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Math.asinh \- Math.asinh()
.SH SYNOPSIS
The \f[B]\f[CB]Math.asinh()\f[B]\f[R] static method returns the inverse
hyperbolic sine of a number.
That is,
\ 𝙼𝚊𝚝𝚑.𝚊𝚜𝚒𝚗𝚑(𝚡)=arsinh(x)=the unique\ y\ such that\ sinh(y)=x=ln(x+x2+1)
.PP
\ 
.IP
.EX
console.log(Math.asinh(1));
\f[I]// Expected output: 0.881373587019543\f[R]

console.log(Math.asinh(0));
\f[I]// Expected output: 0\f[R]

console.log(Math.asinh(\-1));
\f[I]// Expected output: \-0.881373587019543\f[R]

console.log(Math.asinh(2));
\f[I]// Expected output: 1.4436354751788103\f[R]
.EE
.SH SYNTAX
.IP
.EX
Math.asinh(x)
.EE
.SS Parameters
.TP
\f[B]x\f[R]
A number.
.SS Return value
The inverse hyperbolic sine of \f[CR]x\f[R].
.SH DESCRIPTION
Because \f[CR]asinh()\f[R] is a static method of \f[CR]Math\f[R], you
always use it as \f[CR]Math.asinh()\f[R], rather than as a method of a
\f[CR]Math\f[R] object you created (\f[CR]Math\f[R] is not a
constructor).
.SH EXAMPLES
.SS Using Math.asinh()
.IP
.EX
Math.asinh(\-\f[B]Infinity\f[R]); \f[I]// \-Infinity\f[R]
Math.asinh(\-1); \f[I]// \-0.881373587019543\f[R]
Math.asinh(\-0); \f[I]// \-0\f[R]
Math.asinh(0); \f[I]// 0\f[R]
Math.asinh(1); \f[I]// 0.881373587019543\f[R]
Math.asinh(\f[B]Infinity\f[R]); \f[I]// Infinity\f[R]
.EE
.SH SEE ALSO
.IP \(bu 2
\c
.UR https://github.com/zloirock/core-js#ecmascript-math
Polyfill of \f[CR]Math.asinh\f[R] in \f[CR]core\-js\f[R]
.UE \c
.IP \(bu 2
\c
.UR https://www.npmjs.com/package/math.asinh
es\-shims polyfill of \f[CR]Math.asinh\f[R]
.UE \c
.IP \(bu 2
\f[CR]Math.acosh()\f[R]
.IP \(bu 2
\f[CR]Math.atanh()\f[R]
.IP \(bu 2
\f[CR]Math.cosh()\f[R]
.IP \(bu 2
\f[CR]Math.sinh()\f[R]
.IP \(bu 2
\f[CR]Math.tanh()\f[R]
