.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "MediaTrackConstraints.logicalSurface" "JS" "May 14, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
MediaTrackConstraints.logicalSurface \- MediaTrackConstraints:
logicalSurface property
.SH SYNOPSIS
The \f[CR]MediaTrackConstraints\f[R] dictionary\[cq]s
\f[B]\f[CB]logicalSurface\f[B]\f[R] property is a
\f[CR]ConstrainDOMString\f[R] describing the requested or mandatory
constraints placed upon the value of the \f[CR]logicalSurface\f[R]
constrainable property.
.PP
This is used to specify whether or not \f[CR]getDisplayMedia()\f[R]
should allow the user to choose display surfaces which are not
necessarily fully visible on the screen, such as occluded windows or the
complete content of windows which are large enough to require scrolling
to see their entire contents.
.PP
If needed, you can determine whether or not this constraint is supported
by checking the value of
\f[CR]MediaTrackSupportedConstraints.logicalSurface\f[R] as returned by
a call to \f[CR]MediaDevices.getSupportedConstraints()\f[R].
However, typically this is unnecessary since browsers will ignore any
constraints they\[cq]re unfamiliar with.
.SH VALUE
A \f[CR]ConstrainBoolean\f[R] which is \f[CR]true\f[R] if logical
surfaces should be permitted among the selections available to the user.
.PP
See how constraints are defined.
.SH USAGE NOTES
You can check the setting selected by the user agent after the display
media has been created by \f[CR]getDisplayMedia()\f[R] by calling
\f[CR]getSettings()\f[R] on the display media\[cq]s video
\f[CR]MediaStreamTrack\f[R], then checking the value of the returned
\f[CR]MediaTrackSettings\f[R] object\[cq]s \f[CR]logicalSurface\f[R]
object.
.PP
For example, if your app needs to know if the selected display surface
is a logical one:
.IP
.EX
\f[B]let\f[R] isLogicalSurface = displayStream
  .getVideoTracks()[0]
  .getSettings().logicalSurface;
.EE
.PP
Following this code, \f[CR]isLogicalSurface\f[R] is \f[CR]true\f[R] if
the display surface contained in the stream is a logical surface; that
is, one which may not be entirely onscreen, or may even be entirely
offscreen.
.SH SEE ALSO
.IP \[bu] 2
Screen Capture API
.IP \[bu] 2
Using the Screen Capture API
.IP \[bu] 2
Capabilities, constraints, and settings
.IP \[bu] 2
\f[CR]MediaTrackConstraints\f[R]
.IP \[bu] 2
\f[CR]MediaDevices.getSupportedConstraints()\f[R]
.IP \[bu] 2
\f[CR]MediaTrackSupportedConstraints\f[R]
