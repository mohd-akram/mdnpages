.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "HTMLINPUTELEMENT.FILES" "3JS" "May 30, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
HTMLInputElement.files \- HTMLInputElement: files property
.SH SYNOPSIS
The \f[B]\f[CB]HTMLInputElement.files\f[B]\f[R] property allows you to
access the \f[CR]FileList\f[R] selected with the
\f[CR]<input type=\(dqfile\(dq>\f[R] element.
.SH VALUE
A \f[CR]FileList\f[R] object listing the selected files, if any, or
\f[CR]null\f[R] if the \f[B]\f[CB]HTMLInputElement\f[B]\f[R] is not of
\f[CR]type=\(dqfile\(dq\f[R].
.SH EXAMPLES
The example below shows how you can access the
\f[B]\f[CB]HTMLInputElement.files\f[B]\f[R] property and log the name,
date modified, size, and type of each file selected by the user.
.SS HTML
.IP
.EX
<\f[B]input\f[R] id=\(dqfiles\(dq type=\(dqfile\(dq multiple />
.EE
.SS JavaScript
Note that \f[B]\f[CB]HTMLInputElement.files\f[B]\f[R] still returns an
instance of \f[CR]FileList\f[R] even if no files are selected.
Therefore it\(cqs safe to iterate through it with \f[CR]for...of\f[R]
without checking if any files are selected.
.IP
.EX
\f[B]const\f[R] fileInput = document.getElementById(\(dqfiles\(dq);

console.log(fileInput.files \f[B]instanceof\f[R] FileList); \f[I]// true even if empty\f[R]

\f[B]for\f[R] (\f[B]const\f[R] file \f[B]of\f[R] fileInput.files) {
  console.log(file.name); \f[I]// prints file name\f[R]
  \f[B]let\f[R] fileDate = \f[B]new\f[R] Date(file.lastModified);
  console.log(fileDate.toLocaleDateString()); \f[I]// prints legible date\f[R]
  console.log(
    file.size < 1000 ? file.size : \(ga${Math.round(file.size / 1000)}KB\(ga,
  );
  console.log(file.type); \f[I]// prints MIME type\f[R]
}
.EE
