.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "HTMLCanvasElement.transferControlToOffscreen" "JS" "November 23, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
HTMLCanvasElement.transferControlToOffscreen \- HTMLCanvasElement:
transferControlToOffscreen() method
.SH SYNOPSIS
The \f[B]\f[CB]HTMLCanvasElement.transferControlToOffscreen()\f[B]\f[R]
method transfers control to an \f[CR]OffscreenCanvas\f[R] object, either
on the main thread or on a worker.
.SH SYNTAX
.IP
.EX
transferControlToOffscreen()
.EE
.SS Parameters
None.
.SS Return value
An \f[CR]OffscreenCanvas\f[R] object.
.SS Exceptions
.TP
\f[B]InvalidStateError\f[R] \f[B]DOMException\f[R]
Throws if:
.RS
.IP \[bu] 2
the canvas has been set a context mode by calling
\f[CR]HTMLCanvasElement.getContext()\f[R]
.IP \[bu] 2
the canvas has transferred its control to offscreen by calling
\f[CR]HTMLCanvasElement.transferControlToOffscreen()\f[R].
.RE
.SH EXAMPLES
The following example shows how to transfer control to an
\f[CR]OffscreenCanvas\f[R] object on the main thread.
.IP
.EX
\f[B]const\f[R] htmlCanvas = document.createElement(\[dq]canvas\[dq]);
\f[B]const\f[R] offscreen = htmlCanvas.transferControlToOffscreen();
\f[B]const\f[R] gl = offscreen.getContext(\[dq]webgl\[dq]);

\f[I]// Some drawing using the gl context\&...\f[R]
.EE
.PP
The following example shows how to transfer control to an
\f[CR]OffscreenCanvas\f[R] object on a worker.
.IP
.EX
\f[B]const\f[R] offscreen = document.querySelector(\[dq]canvas\[dq]).transferControlToOffscreen();
\f[B]const\f[R] worker = \f[B]new\f[R] Worker(\[dq]my\-worker\-url.js\[dq]);
worker.postMessage({ canvas: offscreen }, [offscreen]);
.EE
.SH SEE ALSO
.IP \[bu] 2
The interface defining this method, \f[CR]HTMLCanvasElement\f[R]
.IP \[bu] 2
\f[CR]OffscreenCanvas\f[R]
