.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "ElementInternals.willValidate" "JS" "December 8, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
ElementInternals.willValidate \- ElementInternals: willValidate property
.SH SYNOPSIS
The \f[B]\f[CB]willValidate\f[B]\f[R] read\-only property of the
\f[CR]ElementInternals\f[R] interface returns \f[CR]true\f[R] if the
element is a submittable element that is a candidate for constraint
validation.
.PP
Elements that are barred from being candidates for constraint validation
include those that have the attributes: \f[CR]disabled\f[R],
\f[CR]hidden\f[R] or \f[CR]readonly\f[R], input elements of
\f[CR]type=button\f[R] or \f[CR]type=reset\f[R], or any element that is
a \f[CR]<datalist>\f[R] element or has a \f[CR]<datalist>\f[R] element
ancestor.
.SH VALUE
\f[CR]true\f[R] if the element is a candidate for constraint validation,
otherwise \f[CR]false\f[R].
.SS Exceptions
.TP
\f[B]NotSupportedError\f[R] \f[B]DOMException\f[R]
Thrown if the element does not have its \f[CR]formAssociated\f[R]
property set to \f[CR]true\f[R].
.SH EXAMPLES
The following example shows a custom checkbox component with
\f[CR]formAssociated\f[R] set to \f[CR]true\f[R], the value of
\f[CR]willValidate\f[R] is logged to the console.
.IP
.EX
\f[B]class\f[R] CustomCheckbox \f[B]extends\f[R] HTMLElement {
  \f[B]static\f[R] formAssociated = \f[B]true\f[R];

  constructor() {
    \f[B]super\f[R]();
    \f[B]this\f[R].internals_ = \f[B]this\f[R].attachInternals();
  }

  \f[I]// \&...\f[R]
}

window.customElements.define(\[dq]custom\-checkbox\[dq], CustomCheckbox);

\f[B]let\f[R] element = document.getElementById(\[dq]custom\-checkbox\[dq]);
console.log(element.internals_.willValidate); \f[I]// true\f[R]
.EE
