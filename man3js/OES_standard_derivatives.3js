.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "OES_standard_derivatives" "JS" "April 8, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
OES_standard_derivatives \- OES_standard_derivatives extension
.SH SYNOPSIS
The \f[B]\f[CB]OES_standard_derivatives\f[B]\f[R] extension is part of
the WebGL API and adds the GLSL derivative functions \f[CR]dFdx\f[R],
\f[CR]dFdy\f[R], and \f[CR]fwidth\f[R].
.PP
WebGL extensions are available using the
\f[CR]WebGLRenderingContext.getExtension()\f[R] method.
For more information, see also Using Extensions in the WebGL tutorial.
.RS
.PP
\f[B]Note:\f[R] This extension is only available to WebGL1 contexts.
In WebGL2, the functionality of this extension is available on the
WebGL2 context by default.
In WebGL 2, the constant is available as
\f[CR]gl.FRAGMENT_SHADER_DERIVATIVE_HINT\f[R] and it requires GLSL
\f[CR]#version 300 es\f[R].
.RE
.SH CONSTANTS
This extension exposes one new constant, which can be used in the
\f[CR]hint()\f[R] and \f[CR]getParameter()\f[R] methods.
.TP
\f[B]ext.FRAGMENT_SHADER_DERIVATIVE_HINT_OES\f[R]
A \f[CR]WebGL_API.Types\f[R] indicating the accuracy of the derivative
calculation for the GLSL built\-in functions: \f[CR]dFdx\f[R],
\f[CR]dFdy\f[R], and \f[CR]fwidth\f[R].
.SH GLSL BUILT\-IN FUNCTIONS
The following new functions can be used in GLSL shader code, if this
extension is enabled:
.IP
.EX
genType dFdx(genType)
genType dFdy(genType)
genType fwidth(genType)
.EE
.SH EXAMPLES
Enabling the extensions:
.IP
.EX
gl.getExtension(\[dq]OES_standard_derivatives\[dq]);
gl.getExtension(\[dq]EXT_shader_texture_lod\[dq]);
.EE
.PP
Shader code that avoids artifacts when wrapping texture coordinates:
.IP
.EX
<\f[B]script\f[R] type=\[dq]x\-shader/x\-fragment\[dq]>
  #extension GL_EXT_shader_texture_lod : enable
  #extension GL_OES_standard_derivatives : enable

  uniform sampler2D myTexture;
  varying vec2 texcoord;

  \f[B]void\f[R] main(){
    gl_FragColor = texture2DGradEXT(myTexture, mod(texcoord, vec2(0.1, 0.5)),
                                    dFdx(texcoord), dFdy(texcoord));
  }
</\f[B]script\f[R]>
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]WebGLRenderingContext.getExtension()\f[R]
.IP \[bu] 2
\f[CR]EXT_shader_texture_lod\f[R]
