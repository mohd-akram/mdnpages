.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "REQUESTINIT" "3JS" "April 10, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
RequestInit \- RequestInit
.SH SYNOPSIS
The \f[B]\f[CB]RequestInit\f[B]\f[R] dictionary of the Fetch API
represents the set of options that can be used to configure a fetch
request.
.PP
You can pass a \f[CR]RequestInit\f[R] object into the
\f[CR]Request()\f[R] constructor, or directly into the
\f[CR]fetch()\f[R] function call.
.PP
You can also construct a \f[CR]Request\f[R] with a
\f[CR]RequestInit\f[R], and pass the \f[CR]Request\f[R] to a
\f[CR]fetch()\f[R] call along with another \f[CR]RequestInit\f[R].
If you do this, and the same option is set in both places, then the
value passed directly into \f[CR]fetch()\f[R] is used.
.SH INSTANCE PROPERTIES
.TP
\f[B]attributionReporting\f[R] \f[I](optional)\f[R] \f[I](experimental)\f[R]
Indicates that you want the request\(cqs response to be able to register
a JavaScript\-based attribution source or attribution trigger.
\f[CR]attributionReporting\f[R] is an object containing the following
properties:
.RS
.TP
\f[B]eventSourceEligible\f[R]
A boolean.
If set to \f[CR]true\f[R], the request\(cqs response is eligible to
register an attribution source.
If set to \f[CR]false\f[R], it isn\(cqt.
.TP
\f[B]triggerEligible\f[R]
A boolean.
If set to \f[CR]true\f[R], the request\(cqs response is eligible to
register an attribution trigger.
If set to \f[CR]false\f[R], it isn\(cqt.
.PP
See the Attribution Reporting API for more details.
.RE
.TP
\f[B]body\f[R] \f[I](optional)\f[R]
The request body contains content to send to the server, for example in
a \f[CR]POST\f[R] or \f[CR]PUT\f[R] request.
It is specified as an instance of any of the following types:
.RS
.IP \(bu 2
a string
.IP \(bu 2
\f[CR]ArrayBuffer\f[R]
.IP \(bu 2
\f[CR]Blob\f[R]
.IP \(bu 2
\f[CR]DataView\f[R]
.IP \(bu 2
\f[CR]File\f[R]
.IP \(bu 2
\f[CR]FormData\f[R]
.IP \(bu 2
\f[CR]TypedArray\f[R]
.IP \(bu 2
\f[CR]URLSearchParams\f[R]
.IP \(bu 2
\f[CR]ReadableStream\f[R]
.PP
See Setting a body for more details.
.RE
.TP
\f[B]browsingTopics\f[R] \f[I](optional)\f[R] \f[I](experimental)\f[R]
A boolean specifying that the selected topics for the current user
should be sent in a \f[CR]Sec\-Browsing\-Topics\f[R] header with the
associated request.
.RS
.PP
See Using the Topics API for more details.
.RE
.TP
\f[B]cache\f[R] \f[I](optional)\f[R]
The cache mode you want to use for the request.
This may be any one of the following values:
.RS
.TP
\f[B]default\f[R]
The browser looks in its HTTP cache for a response matching the request.
.RS
.IP \(bu 2
If there is a match and it is fresh, it will be returned from the cache.
.IP \(bu 2
If there is a match but it is stale, the browser will make a conditional
request to the remote server.
If the server indicates that the resource has not changed, it will be
returned from the cache.
Otherwise the resource will be downloaded from the server and the cache
will be updated.
.IP \(bu 2
If there is no match, the browser will make a normal request, and will
update the cache with the downloaded resource.
.RE
.TP
\f[B]no\-store\f[R]
The browser fetches the resource from the remote server without first
looking in the cache, \f[I]and will not\f[R] update the cache with the
downloaded resource.
.TP
\f[B]reload\f[R]
The browser fetches the resource from the remote server without first
looking in the cache, \f[I]but then will\f[R] update the cache with the
downloaded resource.
.TP
\f[B]no\-cache\f[R]
The browser looks in its HTTP cache for a response matching the request.
.RS
.IP \(bu 2
If there is a match, \f[I]fresh or stale,\f[R] the browser will make a
conditional request to the remote server.
If the server indicates that the resource has not changed, it will be
returned from the cache.
Otherwise the resource will be downloaded from the server and the cache
will be updated.
.IP \(bu 2
If there is no match, the browser will make a normal request, and will
update the cache with the downloaded resource.
.RE
.TP
\f[B]force\-cache\f[R]
The browser looks in its HTTP cache for a response matching the request.
.RS
.IP \(bu 2
If there is a match, \f[I]fresh or stale\f[R], it will be returned from
the cache.
.IP \(bu 2
If there is no match, the browser will make a normal request, and will
update the cache with the downloaded resource.
.RE
.TP
\f[B]only\-if\-cached\f[R]
The browser looks in its HTTP cache for a response matching the request.
\f[I](experimental)\f[R]
.RS
.IP \(bu 2
If there is a match, \f[I]fresh or stale\f[R], it will be returned from
the cache.
.IP \(bu 2
If there is no match, a network error is returned.
.RE
.PP
The \f[CR]\(dqonly\-if\-cached\(dq\f[R] mode can only be used if the
request\(cqs \f[CR]mode\f[R] is \f[CR]\(dqsame\-origin\(dq\f[R].
Cached redirects will be followed if the request\(cqs
\f[CR]redirect\f[R] property is \f[CR]\(dqfollow\(dq\f[R] and the
redirects do not violate the \f[CR]\(dqsame\-origin\(dq\f[R] mode.
.RE
.TP
\f[B]credentials\f[R] \f[I](optional)\f[R]
Controls whether or not the browser sends credentials with the request,
as well as whether any \f[B]\f[CB]Set\-Cookie\f[B]\f[R] response headers
are respected.
Credentials are cookies, TLS client certificates, or authentication
headers containing a username and password.
This option may be any one of the following values:
.RS
.TP
\f[B]omit\f[R]
Never send credentials in the request or include credentials in the
response.
.TP
\f[B]same\-origin\f[R]
Only send and include credentials for same\-origin requests.
.TP
\f[B]include\f[R]
Always include credentials, even for cross\-origin requests.
.PP
Including credentials in cross\-origin requests can make a site
vulnerable to CSRF attacks, so even if \f[CR]credentials\f[R] is set to
\f[CR]include\f[R], the server must also agree to their inclusion by
including the \f[CR]Access\-Control\-Allow\-Credentials\f[R] in its
response.
Additionally, in this situation the server must explicitly specify the
client\(cqs origin in the \f[CR]Access\-Control\-Allow\-Origin\f[R]
response header (that is, \f[CR]*\f[R] is not allowed).
.PP
See Including credentials for more details.
.PP
Defaults to \f[CR]same\-origin\f[R].
.RE
.TP
\f[B]headers\f[R] \f[I](optional)\f[R]
Any headers you want to add to your request, contained within a
\f[CR]Headers\f[R] object or an object literal whose keys are the names
of headers and whose values are the header values.
.RS
.PP
Many headers are set automatically by the browser and can\(cqt be set by
a script: these are called Forbidden request headers.
.PP
If the \f[CR]mode\f[R] option is set to \f[CR]no\-cors\f[R], you can
only set CORS\-safelisted request headers.
.PP
See Setting headers for more details.
.RE
.TP
\f[B]integrity\f[R] \f[I](optional)\f[R]
Contains the subresource integrity value of the request.
.RS
.PP
This will be checked when the resource is fetched, just as it would be
when the \f[CR]integrity\f[R] attribute is set on a \f[CR]<script>\f[R]
element.
The browser will compute the hash of the fetched resource using the
specified algorithm, and if the result does not match the value
specified, the browser will reject the fetch request with a network
error.
.PP
The format of this option is \f[CR]<hash\-algo>\-<hash\-source>\f[R]
where:
.IP \(bu 2
\f[CR]<hash\-algo>\f[R] is one of the following values:
\f[CR]sha256\f[R], \f[CR]sha384\f[R], or \f[CR]sha512\f[R]
.IP \(bu 2
\f[CR]<hash\-source>\f[R] is the Base64\-encoding of the result of
hashing the resource with the specified hash algorithm.
.PP
Defaults to an empty string.
.RE
.TP
\f[B]keepalive\f[R] \f[I](optional)\f[R]
A boolean.
When set to \f[CR]true\f[R], the browser will not abort the associated
request if the page that initiated it is unloaded before the request is
complete.
This enables a \f[CR]fetch()\f[R] request to send analytics at the end
of a session even if the user navigates away from or closes the page.
.RS
.PP
This has some advantages over using \f[CR]Navigator.sendBeacon()\f[R]
for the same purpose.
For example, you can use HTTP methods other than \f[CR]POST\f[R],
customize request properties, and access the server response via the
fetch \f[CR]Promise\f[R] fulfillment.
It is also available in service workers.
.PP
The body size for \f[CR]keepalive\f[R] requests is limited to 64
kibibytes.
.PP
Defaults to \f[CR]false\f[R].
.RE
.TP
\f[B]method\f[R] \f[I](optional)\f[R]
The request method.
.RS
.PP
Defaults to \f[CR]GET\f[R].
.RE
.TP
\f[B]mode\f[R] \f[I](optional)\f[R]
Sets cross\-origin behavior for the request.
One of the following values:
.RS
.TP
\f[B]same\-origin\f[R]
Disallows cross\-origin requests.
If a \f[CR]same\-origin\f[R] request is sent to a different origin, the
result is a network error.
.TP
\f[B]cors\f[R]
If the request is cross\-origin then it will use the Cross\-Origin
Resource Sharing (CORS) mechanism.
Only CORS\-safelisted response headers are exposed in the response.
.TP
\f[B]no\-cors\f[R]
Disables CORS for cross\-origin requests.
This option comes with the following restrictions:
.RS
.IP \(bu 2
The method may only be one of \f[CR]HEAD\f[R], \f[CR]GET\f[R] or
\f[CR]POST\f[R].
.IP \(bu 2
The headers may only be CORS\-safelisted request headers, with the
additional restriction that the \f[CR]Range\f[R] header is also not
allowed.
This also applies to any headers added by service workers.
.IP \(bu 2
The response is \f[I]opaque\f[R], meaning that its headers and body are
not available to JavaScript, and its status code is always \f[CR]0\f[R].
.PP
The main application for \f[CR]no\-cors\f[R] is for a service worker:
although the response to a \f[CR]no\-cors\f[R] request can\(cqt be read
by JavaScript, it can be cached by a service worker and then used as a
response to an intercepted fetch request.
Note that in this situation you don\(cqt know whether the request
succeeded or not, so you should adopt a caching strategy which enables
the cached response to be updated from the network (such as cache first
with cache refresh).
.RE
.TP
\f[B]navigate\f[R]
Used only by HTML navigation.
A \f[CR]navigate\f[R] request is created only while navigating between
documents.
.PP
See Making cross\-origin requests for more details.
.PP
Defaults to \f[CR]cors\f[R].
.RE
.TP
\f[B]priority\f[R] \f[I](optional)\f[R]
Specifies the priority of the fetch request relative to other requests
of the same type.
Must be one of the following:
.RS
.TP
\f[B]high\f[R]
A high priority fetch request relative to other requests of the same
type.
.TP
\f[B]low\f[R]
A low priority fetch request relative to other requests of the same
type.
.TP
\f[B]auto\f[R]
No user preference for the fetch priority.
It is used if no value is set or if an invalid value is set.
.PP
Defaults to \f[CR]auto\f[R].
.RE
.TP
\f[B]redirect\f[R] \f[I](optional)\f[R]
Determines the browser\(cqs behavior in case the server replies with a
redirect status.
One of the following values:
.RS
.TP
\f[B]follow\f[R]
Automatically follow redirects.
.TP
\f[B]error\f[R]
Reject the promise with a network error when a redirect status is
returned.
.TP
\f[B]manual\f[R]
Return a response with almost all fields filtered out, to enable a
service worker to store the response and later replay it.
.PP
Defaults to \f[CR]follow\f[R].
.RE
.TP
\f[B]referrer\f[R] \f[I](optional)\f[R]
A string specifying the value to use for the request\(cqs
\f[CR]Referer\f[R] header.
One of the following:
.RS
.TP
A same\-origin relative or absolute URL
Set the \f[CR]Referer\f[R] header to the given value.
Relative URLs are resolved relative to the URL of the page that made the
request.
.TP
An empty string
Omit the \f[CR]Referer\f[R] header.
.TP
\f[B]about:client\f[R]
Set the \f[CR]Referer\f[R] header to the default value for the context
of the request (for example, the URL of the page that made the request).
.PP
Defaults to \f[CR]about:client\f[R].
.RE
.TP
\f[B]referrerPolicy\f[R] \f[I](optional)\f[R]
A string that sets a policy for the \f[CR]Referer\f[R] header.
The syntax and semantics of this option are exactly the same as for the
\f[CR]Referrer\-Policy\f[R] header.
.TP
\f[B]signal\f[R] \f[I](optional)\f[R]
An \f[CR]AbortSignal\f[R].
If this option is set, the request can be canceled by calling
\f[CR]abort()\f[R] on the corresponding \f[CR]AbortController\f[R].
.SH EXAMPLES
.SS Passing options into \f[CR]fetch()\f[R]
In this example we pass the \f[CR]method\f[R], \f[CR]body\f[R], and
\f[CR]headers\f[R] options directly into the \f[CR]fetch()\f[R] method
call:
.IP
.EX
\f[B]async\f[R] \f[B]function\f[R] post() {
  \f[B]const\f[R] response = \f[B]await\f[R] fetch(\(dqhttps://example.org/post\(dq, {
    method: \(dqPOST\(dq,
    body: JSON.stringify({ username: \(dqexample\(dq }),
    headers: {
      \(dqContent\-Type\(dq: \(dqapplication/json\(dq,
    },
  });

  console.log(response.status);
}
.EE
.SS Passing options into the \f[CR]Request()\f[R] constructor
In this example we create a \f[CR]Request\f[R], passing the same set of
options into its constructor, and then pass the request into
\f[CR]fetch()\f[R]:
.IP
.EX
\f[B]async\f[R] \f[B]function\f[R] post() {
  \f[B]const\f[R] request = \f[B]new\f[R] Request(\(dqhttps://example.org/post\(dq, {
    method: \(dqPOST\(dq,
    body: JSON.stringify({ username: \(dqexample\(dq }),
    headers: {
      \(dqContent\-Type\(dq: \(dqapplication/json\(dq,
    },
  });

  \f[B]const\f[R] response = \f[B]await\f[R] fetch(request);

  console.log(response.status);
}
.EE
.SS Passing options into both \f[CR]Request()\f[R] and \f[CR]fetch()\f[R]
In this example we create a \f[CR]Request\f[R], passing the
\f[CR]method\f[R], \f[CR]headers\f[R], and \f[CR]body\f[R] options into
its constructor.
We then pass the request into \f[CR]fetch()\f[R] along with
\f[CR]body\f[R] and \f[CR]referrer\f[R] options:
.IP
.EX
\f[B]async\f[R] \f[B]function\f[R] post() {
  \f[B]const\f[R] request = \f[B]new\f[R] Request(\(dqhttps://example.org/post\(dq, {
    method: \(dqPOST\(dq,
    headers: {
      \(dqContent\-Type\(dq: \(dqapplication/json\(dq,
    },
    body: JSON.stringify({ username: \(dqexample1\(dq }),
  });

  \f[B]const\f[R] response = \f[B]await\f[R] fetch(request, {
    body: JSON.stringify({ username: \(dqexample2\(dq }),
    referrer: \(dq\(dq,
  });

  console.log(response.status);
}
.EE
.PP
In this case the request will be sent with the following options:
.IP \(bu 2
\f[CR]method: \(dqPOST\(dq\f[R]
.IP \(bu 2
\f[CR]headers: {\(dqContent\-Type\(dq: \(dqapplication/json\(dq}\f[R]
.IP \(bu 2
\f[CR]body: \(aq{\(dqusername\(dq:\(dqexample2\(dq}\(aq\f[R]
.IP \(bu 2
\f[CR]referrer: \(dq\(dq\f[R]
.SH SEE ALSO
.IP \(bu 2
Using Fetch
.IP \(bu 2
ServiceWorker API
.IP \(bu 2
HTTP access control (CORS)
.IP \(bu 2
HTTP
