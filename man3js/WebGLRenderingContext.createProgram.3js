.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "WEBGLRENDERINGCONTEXT.CREATEPROGRAM" "3JS" "September 28, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
WebGLRenderingContext.createProgram \- WebGLRenderingContext:
createProgram() method
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]WebGLRenderingContext.createProgram()\f[B]\f[R] method of
the WebGL API creates and initializes a \f[CR]WebGLProgram\f[R] object.
.SH SYNTAX
.IP
.EX
createProgram()
.EE
.SS Parameters
None.
.SS Return value
A \f[CR]WebGLProgram\f[R] object that is a combination of two compiled
\f[CR]WebGLShader\f[R]s consisting of a vertex shader and a fragment
shader (both written in GLSL).
These are then linked into a usable program.
.SH EXAMPLES
.SS Creating a WebGL program
.IP
.EX
\f[B]const\f[R] program = gl.createProgram();

\f[I]// Attach pre\-existing shaders\f[R]
gl.attachShader(program, vertexShader);
gl.attachShader(program, fragmentShader);

gl.linkProgram(program);

\f[B]if\f[R] (!gl.getProgramParameter(program, gl.LINK_STATUS)) {
  \f[B]const\f[R] info = gl.getProgramInfoLog(program);
  \f[B]throw\f[R] \(gaCould not compile WebGL program. \(rsn\(rsn${info}\(ga;
}
.EE
.PP
See \f[CR]WebGLShader\f[R] for information on creating the
\f[CR]vertexShader\f[R] and \f[CR]fragmentShader\f[R] in the above
example.
.SH SEE ALSO
.IP \(bu 2
\f[CR]WebGLRenderingContext.deleteProgram()\f[R]
.IP \(bu 2
\f[CR]WebGLRenderingContext.isProgram()\f[R]
.IP \(bu 2
\f[CR]WebGLRenderingContext.linkProgram()\f[R]
.IP \(bu 2
\f[CR]WebGLRenderingContext.useProgram()\f[R]
.IP \(bu 2
\f[CR]WebGLRenderingContext.validateProgram()\f[R]
.IP \(bu 2
\f[CR]WebGLRenderingContext.getProgramParameter()\f[R]
.IP \(bu 2
\f[CR]WebGLRenderingContext.getProgramInfoLog()\f[R]
