.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "RTCICECANDIDATE.RELATEDPORT" "3JS" "April 26, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
RTCIceCandidate.relatedPort \- RTCIceCandidate: relatedPort property
.SH SYNOPSIS
The \f[B]\f[CB]RTCIceCandidate\f[B]\f[R] interface\(cqs read\-only
\f[B]\f[CB]relatedPort\f[B]\f[R] property indicates the port number of
reflexive or relay candidates.
.PP
If the candidate is a host candidate (that is, its \f[CR]address\f[R] is
in fact the real IP address of the remote peer), \f[CR]relatedPort\f[R]
is \f[CR]null\f[R].
.PP
The \f[CR]relatedPort\f[R] field\(cqs value is set from the
\f[CR]candidateInfo\f[R] options object passed to the
\f[CR]RTCIceCandidate()\f[R] constructor.
You can\(cqt specify the value of \f[CR]relatedPort\f[R] directly in the
options object, but its value is automatically extracted from the
object\(cqs \f[CR]candidate\f[R] a\-line, if it\(cqs formatted properly
(the \f[CR]rel\-port\f[R] field).
.PP
The related address (\f[CR]relatedAddress\f[R]) and port are not used at
all by ICE itself; they are provided for analysis and diagnostic
purposes only, and their inclusion may be blocked by security systems,
so do not rely on them having non\-\f[CR]null\f[R] values.
.SH VALUE
An unsigned 16\-bit value containing the candidate\(cqs related port
number, if any.
For both peer and server reflexive candidates, the related address and
port describe the base for that candidate.
For relay candidates, the related address and port provide the mapped
address selected by the TURN server.
.PP
For host candidates, \f[CR]relatedPort\f[R] is \f[CR]null\f[R], meaning
the field is not included in the candidate\(cqs a\-line.
.SH USAGE NOTES
The related address and port are not used by ICE itself, and are only
present for diagnostic and Quality\-of\-Service purposes.
They may in fact be omitted for security reasons, but if present can be
a useful tool during debugging.
See the Example, which shows a bit of this.
.PP
Here\(cqs an SDP attribute line (a\-line) describing an ICE candidate
discovered by the STUN server:
.IP
.EX
a=candidate:4234997325 1 udp 2043278322 192.0.2.172 6502 typ srflx raddr 198.51.100.45 rport 32768 generation 0
.EE
.PP
The remote port, \f[CR]relatedPort\f[R], is the number immediately
following the \f[CR]\(dqrport\(dq\f[R] label on the a\-line, or 32768.
.SH EXAMPLES
In this example, the candidate\(cqs \f[CR]type\f[R] is checked, and then
debugging output is presented, based on the candidate type, including
the candidate\(cqs type, address (\f[CR]ip\f[R] and \f[CR]port\f[R]),
and related address (\f[CR]relatedAddress\f[R] and
\f[CR]relatedPort\f[R]).
.IP
.EX
\f[B]const\f[R] ip = candidate.address;
\f[B]const\f[R] port = candidate.port;
\f[B]const\f[R] relIP = candidate.relatedAddress;
\f[B]const\f[R] relPort = candidate.relatedPort;

\f[B]if\f[R] (relIP && relPort) {
  console.log(
    \(gaCandidate type \(aq${type}\(aq \(em contact address: ${ip} ${port}, related address: ${relIP} ${relPort}\(ga,
  );
} \f[B]else\f[R] {
  console.log(\(gaHost candidate address is ${ip} ${port}\(ga);
}
.EE
.SH SEE ALSO
.IP \(bu 2
WebRTC API
.IP \(bu 2
Introduction to WebRTC protocols
.IP \(bu 2
WebRTC connectivity
.IP \(bu 2
Lifetime of a WebRTC session
.IP \(bu 2
\f[CR]RTCIceCandidate.relatedAddress\f[R]
.IP \(bu 2
\f[CR]RTCIceCandidate.address\f[R] and \f[CR]RTCIceCandidate.port\f[R]
