.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "DOMMatrix.translateSelf" "JS" "February 2, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
DOMMatrix.translateSelf \- DOMMatrix: translateSelf() method
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[CR]translateSelf()\f[R] method of the \f[CR]DOMMatrix\f[R]
interface is a mutable transformation method that modifies a matrix.
It applies the specified vectors and returns the updated matrix.
The default vector is \f[CR][0, 0, 0]\f[R].
.PP
To translate a matrix without mutating it, see
\f[CR]DOMMatrixReadOnly.translate()\f[R]
.SH SYNTAX
.IP
.EX
translateSelf(translateX, translateY)
translateSelf(translateX, translateY, translateZ)
.EE
.SS Parameters
.TP
\f[B]translateX\f[R]
A number representing the abscissa (x\-coordinate) of the translating
vector.
.TP
\f[B]translateY\f[R]
A number representing the ordinate (y\-coordinate) of the translating
vector.
.TP
\f[B]translateZ\f[R] \f[I](optional)\f[R]
A number representing the z component of the translating vector.
If not supplied, this defaults to 0.
If this is anything other than 0, the resulting matrix will be 3D.
.SS Return value
Returns itself; the \f[CR]DOMMatrix\f[R] translated by the given vector.
.SH EXAMPLES
.IP
.EX
\f[B]const\f[R] matrix = \f[B]new\f[R] DOMMatrix(); \f[I]// create a matrix\f[R]
console.log(matrix.toString()); \f[I]// output: \[dq]matrix(1, 0, 0, 1, 0, 0)\[dq]\f[R]
matrix.translateSelf(25, 25); \f[I]// mutate it\f[R]
console.log(matrix); \f[I]// output: \[dq]matrix(1, 0, 0, 1, 25, 25)\[dq]\f[R]
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]DOMMatrixReadOnly.translate()\f[R]
.IP \[bu] 2
CSS \f[CR]transform\f[R] property
.IP \[bu] 2
CSS \f[CR]translate\f[R] property
.IP \[bu] 2
CSS \f[CR]transform\-function\f[R] functions
.RS 2
.IP \[bu] 2
\f[CR]translate()\f[R]
.IP \[bu] 2
\f[CR]translate3d()\f[R]
.IP \[bu] 2
\f[CR]translateX()\f[R]
.IP \[bu] 2
\f[CR]translateY()\f[R]
.IP \[bu] 2
\f[CR]translateZ()\f[R]
.RE
.IP \[bu] 2
CSS transforms module
.IP \[bu] 2
SVG \f[CR]transform\f[R] attribute
.IP \[bu] 2
\f[CR]CanvasRenderingContext2D\f[R] interface methods
.RS 2
.IP \[bu] 2
\f[CR]CanvasRenderingContext2D.translate()\f[R]
.IP \[bu] 2
\f[CR]CanvasRenderingContext2D.transform()\f[R]
.IP \[bu] 2
\f[CR]CanvasRenderingContext2D.setTransform()\f[R]
.IP \[bu] 2
\f[CR]CanvasRenderingContext2D.resetTransform()\f[R]
.RE
