.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "CACHESTORAGE.MATCH" "3JS" "October 15, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
CacheStorage.match \- CacheStorage: match() method
.SH SYNOPSIS
\f[B]Secure context:\f[R] This feature is available only in secure
contexts (HTTPS).
.PP
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]match()\f[B]\f[R] method of the \f[CR]CacheStorage\f[R]
interface checks if a given \f[CR]Request\f[R] or URL string is a key
for a stored \f[CR]Response\f[R].
This method returns a \f[CR]Promise\f[R] for a \f[CR]Response\f[R], or a
\f[CR]Promise\f[R] which resolves to \f[CR]undefined\f[R] if no match is
found.
.PP
You can access \f[CR]CacheStorage\f[R] through the
\f[CR]Window.caches\f[R] property in windows or through the
\f[CR]WorkerGlobalScope.caches\f[R] property in workers.
.PP
\f[CR]Cache\f[R] objects are searched in creation order.
.RS
.PP
\f[B]Note:\f[R] \f[CR]caches.match()\f[R] is a convenience method.
Equivalent functionality is to call \f[CR]cache.match()\f[R] on each
cache (in the order returned by \f[CR]caches.keys()\f[R]) until a
\f[CR]Response\f[R] is returned.
.RE
.SH SYNTAX
.IP
.EX
match(request)
match(request, options)
.EE
.SS Parameters
.TP
\f[B]request\f[R]
The \f[CR]Request\f[R] you want to match.
This can be a \f[CR]Request\f[R] object or a URL string.
.TP
\f[B]options\f[R] \f[I](optional)\f[R]
An object whose properties control how matching is done in the
\f[CR]match\f[R] operation.
The available options are:
.RS
.TP
\f[B]ignoreSearch\f[R]
A boolean value that specifies whether the matching process should
ignore the query string in the URL.
For example, if set to \f[CR]true\f[R], the \f[CR]?value=bar\f[R] part
of \f[CR]http://foo.com/?value=bar\f[R] would be ignored when performing
a match.
It defaults to \f[CR]false\f[R].
.TP
\f[B]ignoreMethod\f[R]
A boolean value that, when set to \f[CR]true\f[R], prevents matching
operations from validating the \f[CR]Request\f[R] \f[CR]http\f[R] method
(normally only \f[CR]GET\f[R] and \f[CR]HEAD\f[R] are allowed.)
It defaults to \f[CR]false\f[R].
.TP
\f[B]ignoreVary\f[R]
A boolean value that, when set to \f[CR]true\f[R], tells the matching
operation not to perform \f[CR]VARY\f[R] header matching.
In other words, if the URL matches you will get a match regardless of
whether the \f[CR]Response\f[R] object has a \f[CR]VARY\f[R] header or
not.
It defaults to \f[CR]false\f[R].
.TP
\f[B]cacheName\f[R]
A string that represents a specific cache to search within.
.RE
.SS Return value
a \f[CR]Promise\f[R] that resolves to the matching \f[CR]Response\f[R].
If no matching response to the specified request is found, the promise
resolves with \f[CR]undefined\f[R].
.SH EXAMPLES
This example is from the MDN \c
.UR https://github.com/mdn/dom-examples/tree/main/service-worker/simple-service-worker
simple service worker example
.UE \c
\ (see \c
.UR https://bncb2v.csb.app/
simple service worker running live
.UE \c
).
Here we wait for a \f[CR]FetchEvent\f[R] to fire.
We construct a custom response like so:
.IP "1." 3
Check whether a match for the request is found in the
\f[CR]CacheStorage\f[R] using \f[CR]CacheStorage.match()\f[R].
If so, serve that.
.IP "2." 3
If not, open the \f[CR]v1\f[R] cache using \f[CR]open()\f[R], put the
default network request in the cache using \f[CR]Cache.put()\f[R] and
return a clone of the default network request using
\f[CR]return response.clone()\f[R].
The last is necessary because \f[CR]put()\f[R] consumes the response
body.
.IP "3." 3
If this fails (e.g., because the network is down), return a fallback
response.
.IP
.EX
self.addEventListener(\(dqfetch\(dq, (event) \f[B]=>\f[R] {
  event.respondWith(
    caches.match(event.request).then((response) \f[B]=>\f[R] {
      \f[I]// caches.match() always resolves\f[R]
      \f[I]// but in case of success response will have value\f[R]
      \f[B]if\f[R] (response !== \f[B]undefined\f[R]) {
        \f[B]return\f[R] response;
      } \f[B]else\f[R] {
        \f[B]return\f[R] fetch(event.request)
          .then((response) \f[B]=>\f[R] {
            \f[I]// response may be used only once\f[R]
            \f[I]// we need to save clone to put one copy in cache\f[R]
            \f[I]// and serve second one\f[R]
            \f[B]let\f[R] responseClone = response.clone();

            caches.open(\(dqv1\(dq).then((cache) \f[B]=>\f[R] {
              cache.put(event.request, responseClone);
            });
            \f[B]return\f[R] response;
          })
          .catch(() \f[B]=>\f[R] caches.match(\(dq/gallery/myLittleVader.jpg\(dq));
      }
    }),
  );
});
.EE
.SH SEE ALSO
.IP \(bu 2
Using Service Workers
.IP \(bu 2
\f[CR]Cache\f[R]
.IP \(bu 2
\f[CR]Window.caches\f[R] and \f[CR]WorkerGlobalScope.caches\f[R]
