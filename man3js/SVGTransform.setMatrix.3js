.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "SVGTransform.setMatrix" "JS" "February 2, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
SVGTransform.setMatrix \- SVGTransform: setMatrix() method
.SH SYNOPSIS
The \f[CR]setMatrix()\f[R] method of the \f[CR]SVGTransform\f[R]
interface sets the transform type to \f[CR]SVG_TRANSFORM_MATRIX\f[R],
with parameter \f[CR]matrix\f[R] defining the new transformation.
.PP
Note that the values from the parameter \f[CR]matrix\f[R] are copied,
meaning changes to the \f[CR]matrix\f[R] object after calling this
method will not affect the transformation.
.SH SYNTAX
.IP
.EX
setMatrix(matrix)
.EE
.SS Parameters
.TP
\f[B]matrix\f[R]
A live \f[CR]DOMMatrix\f[R] object defining the new transformation
matrix to apply.
.SS Return value
None (\f[CR]undefined\f[R]).
.SS Exceptions
.TP
\f[B]NoModificationAllowedError\f[R] \f[B]DOMException\f[R]
Thrown if the attribute or the \f[CR]SVGTransform\f[R] object is
read\-only.
.SH EXAMPLES
.SS Setting a Transformation Matrix
.IP
.EX
\f[I]// Get an SVG element and create a transform object\f[R]
\f[B]const\f[R] svgElement = document.querySelector(\[dq]svg\[dq]);
\f[B]const\f[R] transform = svgElement.createSVGTransform();

\f[I]// Create a DOMMatrix with specific values\f[R]
\f[B]const\f[R] matrix = \f[B]new\f[R] DOMMatrix();
matrix.a = 1; \f[I]// Scale X\f[R]
matrix.d = 1; \f[I]// Scale Y\f[R]
matrix.e = 50; \f[I]// Translate X\f[R]
matrix.f = 50; \f[I]// Translate Y\f[R]

\f[I]// Set the transform to the new matrix\f[R]
transform.setMatrix(matrix);

console.dir(transform.matrix); \f[I]// Output: SVGMatrix { a: 1, b: 0, c: 0, d: 1, e: 50, f: 50 }\f[R]
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]DOMMatrix\f[R]
