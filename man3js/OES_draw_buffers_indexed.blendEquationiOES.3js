.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "OES_draw_buffers_indexed.blendEquationiOES" "JS" "April 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
OES_draw_buffers_indexed.blendEquationiOES \- OES_draw_buffers_indexed:
blendEquationiOES() method
.SH SYNOPSIS
The \f[CR]blendEquationiOES()\f[R] method of the
\f[CR]OES_draw_buffers_indexed\f[R] WebGL extension sets both the RGB
blend and alpha blend equations for a particular draw buffer.
.PP
See \f[CR]OES_draw_buffers_indexed.blendEquationSeparateiOES()\f[R] for
setting RGB and alpha separately and
\f[CR]WebGLRenderingContext.blendEquation()\f[R] for the WebGL 1 version
of this method.
.SH SYNTAX
.IP
.EX
blendEquationiOES(buf, mode)
.EE
.SS Parameters
.TP
\f[B]buf\f[R]
An integer \f[CR]i\f[R] specifying the draw buffer associated with the
constant \f[CR]gl.DRAW_BUFFERi\f[R], see WebGL draw buffer constants.
.TP
\f[B]mode\f[R]
A \f[CR]GLenum\f[R] specifying how source and destination colors are
combined.
Accepts the same enums as the \f[CR]mode\f[R] parameter in
\f[CR]WebGLRenderingContext.blendEquation()\f[R].
.SS Return value
None (\f[CR]undefined\f[R]).
.SS Exceptions
.IP \[bu] 2
If \f[CR]buf\f[R] is not a valid value, a \f[CR]gl.INVALID_VALUE\f[R]
error is thrown.
.IP \[bu] 2
If \f[CR]mode\f[R] is not one of the possible values, a
\f[CR]gl.INVALID_ENUM\f[R] error is thrown.
.SH EXAMPLES
.SS Setting and getting blend equations
You can set the blend equations for the \f[CR]gl.DRAW_BUFFER0\f[R] and
\f[CR]gl.DRAW_BUFFER1\f[R] draw buffers like this:
.IP
.EX
\f[B]const\f[R] ext = gl.getExtension(\[dq]OES_draw_buffers_indexed\[dq]);

ext.blendEquationiOES(0, gl.FUNC_ADD);
ext.blendEquationiOES(1, gl.FUNC_SUBTRACT);
.EE
.PP
To get the blend equations for the \f[CR]gl.DRAW_BUFFER0\f[R] and
\f[CR]gl.DRAW_BUFFER1\f[R] draw buffers, query the
\f[CR]BLEND_EQUATION_RGB\f[R] and \f[CR]BLEND_EQUATION_ALPHA\f[R]
constants using \f[CR]WebGL2RenderingContext.getIndexedParameter()\f[R]:
.IP
.EX
\f[I]// For gl.DRAW_BUFFER0\f[R]
gl.getIndexedParameter(gl.BLEND_EQUATION_RGB, 0);
gl.getIndexedParameter(gl.BLEND_EQUATION_ALPHA, 0);

\f[I]// For gl.DRAW_BUFFER0\f[R]
gl.getIndexedParameter(gl.BLEND_EQUATION_RGB, 1);
gl.getIndexedParameter(gl.BLEND_EQUATION_ALPHA, 1);
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]OES_draw_buffers_indexed.blendEquationSeparateiOES()\f[R]
.IP \[bu] 2
\f[CR]WebGLRenderingContext.blendEquation()\f[R]
