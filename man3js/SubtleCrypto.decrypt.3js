.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "SUBTLECRYPTO.DECRYPT" "3JS" "April 3, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
SubtleCrypto.decrypt \- SubtleCrypto: decrypt() method
.SH SYNOPSIS
\f[B]Secure context:\f[R] This feature is available only in secure
contexts (HTTPS).
.PP
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]decrypt()\f[B]\f[R] method of the \f[CR]SubtleCrypto\f[R]
interface decrypts some encrypted data.
It takes as arguments a key to decrypt with, some optional extra
parameters, and the data to decrypt (also known as \(lqciphertext\(rq).
It returns a \f[CR]Promise\f[R] which will be fulfilled with the
decrypted data (also known as \(lqplaintext\(rq).
.SH SYNTAX
.IP
.EX
decrypt(algorithm, key, data)
.EE
.SS Parameters
.TP
\f[B]algorithm\f[R]
An object specifying the algorithm to be used, and any extra parameters
as required.
The values given for the extra parameters must match those passed into
the corresponding \f[CR]encrypt()\f[R] call.
.RS
.IP \(bu 2
To use RSA\-OAEP, pass an \f[CR]RsaOaepParams\f[R] object.
.IP \(bu 2
To use AES\-CTR, pass an \f[CR]AesCtrParams\f[R] object.
.IP \(bu 2
To use AES\-CBC, pass an \f[CR]AesCbcParams\f[R] object.
.IP \(bu 2
To use AES\-GCM, pass an \f[CR]AesGcmParams\f[R] object.
.RE
.TP
\f[B]key\f[R]
A \f[CR]CryptoKey\f[R] containing the key to be used for decryption.
If using RSA\-OAEP, this is the \f[CR]privateKey\f[R] property of the
\f[CR]CryptoKeyPair\f[R] object.
.TP
\f[B]data\f[R]
An \f[CR]ArrayBuffer\f[R], a \f[CR]TypedArray\f[R], or a
\f[CR]DataView\f[R] containing the data to be decrypted (also known as
ciphertext).
.SS Return value
A \f[CR]Promise\f[R] that fulfills with an \f[CR]ArrayBuffer\f[R]
containing the plaintext.
.SS Exceptions
The promise is rejected when the following exceptions are encountered:
.TP
\f[B]InvalidAccessError\f[R] \f[B]DOMException\f[R]
Raised when the requested operation is not valid for the provided key
(e.g., invalid encryption algorithm, or invalid key for the specified
encryption algorithm).
.TP
\f[B]OperationError\f[R] \f[B]DOMException\f[R]
Raised when the operation failed for an operation\-specific reason
(e.g., algorithm parameters of invalid sizes, or there was an error
decrypting the ciphertext).
.SH SUPPORTED ALGORITHMS
The \f[CR]decrypt()\f[R] method supports the same algorithms as the
\f[CR]encrypt()\f[R] method.
.SH EXAMPLES
.RS
.PP
\f[B]Note:\f[R] You can \c
.UR https://mdn.github.io/dom-examples/web-crypto/encrypt-decrypt/index.html
try the working examples
.UE \c
\ on GitHub.
.RE
.SS RSA\-OAEP
This code decrypts \f[CR]ciphertext\f[R] using RSA\-OAEP.
\c
.UR https://github.com/mdn/dom-examples/blob/main/web-crypto/encrypt-decrypt/rsa-oaep.js
See the complete code on GitHub.
.UE \c
.IP
.EX
\f[B]function\f[R] decryptMessage(privateKey, ciphertext) {
  \f[B]return\f[R] window.crypto.subtle.decrypt(
    { name: \(dqRSA\-OAEP\(dq },
    privateKey,
    ciphertext,
  );
}
.EE
.SS AES\-CTR
This code decrypts \f[CR]ciphertext\f[R] using AES in CTR mode.
Note that \f[CR]counter\f[R] must match the value that was used for
encryption.
\c
.UR https://github.com/mdn/dom-examples/blob/main/web-crypto/encrypt-decrypt/aes-ctr.js
See the complete code on GitHub.
.UE \c
.IP
.EX
\f[B]function\f[R] decryptMessage(key, ciphertext) {
  \f[B]return\f[R] window.crypto.subtle.decrypt(
    { name: \(dqAES\-CTR\(dq, counter, length: 64 },
    key,
    ciphertext,
  );
}
.EE
.SS AES\-CBC
This code decrypts \f[CR]ciphertext\f[R] using AES in CBC mode.
Note that \f[CR]iv\f[R] must match the value that was used for
encryption.
\c
.UR https://github.com/mdn/dom-examples/blob/main/web-crypto/encrypt-decrypt/aes-cbc.js
See the complete code on GitHub.
.UE \c
.IP
.EX
\f[B]function\f[R] decryptMessage(key, ciphertext) {
  \f[I]// The iv value is the same as that used for encryption\f[R]
  \f[B]return\f[R] window.crypto.subtle.decrypt({ name: \(dqAES\-CBC\(dq, iv }, key, ciphertext);
}
.EE
.SS AES\-GCM
This code decrypts \f[CR]ciphertext\f[R] using AES in GCM mode.
Note that \f[CR]iv\f[R] must match the value that was used for
encryption.
\c
.UR https://github.com/mdn/dom-examples/blob/main/web-crypto/encrypt-decrypt/aes-gcm.js
See the complete code on GitHub.
.UE \c
.IP
.EX
\f[B]function\f[R] decryptMessage(key, ciphertext) {
  \f[I]// The iv value is the same as that used for encryption\f[R]
  \f[B]return\f[R] window.crypto.subtle.decrypt({ name: \(dqAES\-GCM\(dq, iv }, key, ciphertext);
}
.EE
.SH SEE ALSO
.IP \(bu 2
\f[CR]SubtleCrypto.encrypt()\f[R].
.IP \(bu 2
\c
.UR https://datatracker.ietf.org/doc/html/rfc3447
RFC 3447
.UE \c
\ specifies RSAOAEP.
.IP \(bu 2
\c
.UR https://csrc.nist.gov/pubs/sp/800/38/a/final
NIST SP800\-38A
.UE \c
\ specifies CTR mode.
.IP \(bu 2
\c
.UR https://csrc.nist.gov/pubs/sp/800/38/a/final
NIST SP800\-38A
.UE \c
\ specifies CBC mode.
.IP \(bu 2
\c
.UR https://csrc.nist.gov/pubs/sp/800/38/d/final
NIST SP800\-38D
.UE \c
\ specifies GCM mode.
.IP \(bu 2
\c
.UR https://csrc.nist.gov/files/pubs/fips/198-1/final/docs/fips-198-1_final.pdf
FIPS 198\-1
.UE \c
\ specifies HMAC.
