.\" Automatically generated by Pandoc 3.4
.\"
.TH "WritableStreamDefaultController.error" "JS" "April 22, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
WritableStreamDefaultController.error \-
WritableStreamDefaultController: error() method
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]error()\f[B]\f[R] method of the
\f[CR]WritableStreamDefaultController\f[R] interface causes any future
interactions with the associated stream to error.
.PP
This method is rarely used, since usually it suffices to return a
rejected promise from one of the underlying sink\[cq]s methods.
However, it can be useful for suddenly shutting down a stream in
response to an event outside the normal lifecycle of interactions with
the underlying sink.
.SH SYNTAX
.IP
.EX
error(message)
.EE
.SS Parameters
.TP
\f[B]message\f[R]
A string representing the error you want future interactions to fail
with.
.SS Return value
None (\f[CR]undefined\f[R]).
.SS Exceptions
.TP
\f[B]TypeError\f[R]
The stream you are trying to error is not a \f[CR]WritableStream\f[R].
.SH EXAMPLES
.IP
.EX
\f[B]const\f[R] writableStream = \f[B]new\f[R] WritableStream({
  start(controller) {
    \f[I]// do stuff with controller\f[R]

    \f[I]// error stream if necessary\f[R]
    controller.error(\[dq]My error is broken\[dq]);
  },
  write(chunk, controller) {
    \f[I]// ...\f[R]
  },
  close(controller) {
    \f[I]// ...\f[R]
  },
  abort(err) {
    \f[I]// ...\f[R]
  },
});
.EE
