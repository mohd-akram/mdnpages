.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "Cache.match" "JS" "May 18, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Cache.match \- Cache: match() method
.SH SYNOPSIS
\f[B]Secure context:\f[R] This feature is available only in secure
contexts (HTTPS).
.PP
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]match()\f[B]\f[R] method of the \f[CR]Cache\f[R]
interface returns a \f[CR]Promise\f[R] that resolves to the
\f[CR]Response\f[R] associated with the first matching request in the
\f[CR]Cache\f[R] object.
If no match is found, the \f[CR]Promise\f[R] resolves to
\f[CR]undefined\f[R].
.SH SYNTAX
.IP
.EX
match(request)
match(request, options)
.EE
.SS Parameters
.TP
\f[B]request\f[R]
The \f[CR]Request\f[R] for which you are attempting to find responses in
the \f[CR]Cache\f[R].
This can be a \f[CR]Request\f[R] object or a URL string.
.TP
\f[B]options\f[R] \f[I](optional)\f[R]
An object that sets options for the \f[CR]match\f[R] operation.
The available options are:
.RS
.TP
\f[B]ignoreSearch\f[R]
A boolean value that specifies whether to ignore the query string in the
URL.
For example, if set to \f[CR]true\f[R] the \f[CR]?value=bar\f[R] part of
\f[CR]http://foo.com/?value=bar\f[R] would be ignored when performing a
match.
It defaults to \f[CR]false\f[R].
.TP
\f[B]ignoreMethod\f[R]
A boolean value that, when set to \f[CR]true\f[R], prevents matching
operations from validating the \f[CR]Request\f[R] \f[CR]http\f[R] method
(normally only \f[CR]GET\f[R] and \f[CR]HEAD\f[R] are allowed.)
It defaults to \f[CR]false\f[R].
.TP
\f[B]ignoreVary\f[R]
A boolean value that when set to \f[CR]true\f[R] tells the matching
operation not to perform \f[CR]VARY\f[R] header matching \[em] i.e.\ if
the URL matches you will get a match regardless of whether the
\f[CR]Response\f[R] object has a \f[CR]VARY\f[R] header.
It defaults to \f[CR]false\f[R].
.RE
.SS Return value
A \f[CR]Promise\f[R] that resolves to the first \f[CR]Response\f[R] that
matches the request or to \f[CR]undefined\f[R] if no match is found.
.RS
.PP
\f[B]Note:\f[R] \f[CR]Cache.match()\f[R] is basically identical to
\f[CR]Cache.matchAll()\f[R], except that rather than resolving with an
array of all matching responses, it resolves with the first matching
response only (that is, \f[CR]response[0]\f[R]).
.RE
.SH EXAMPLES
This example is taken from the \c
.UR https://github.com/GoogleChrome/samples/blob/gh-pages/service-worker/custom-offline-page/service-worker.js
custom offline page
.UE \c
\ example (\c
.UR https://googlechrome.github.io/samples/service-worker/custom-offline-page/index.html
live demo
.UE \c
).
It uses a cache to supply selected data when a request fails.
A \f[CR]catch()\f[R] clause is triggered when the call to
\f[CR]fetch()\f[R] throws an exception.
Inside the \f[CR]catch()\f[R] clause, \f[CR]match()\f[R] is used to
return the correct response.
.PP
In this example, only HTML documents retrieved with the GET HTTP verb
will be cached.
If our \f[CR]if ()\f[R] condition is false, then this fetch handler
won\[cq]t intercept the request.
If there are any other fetch handlers registered, they will get a chance
to call \f[CR]event.respondWith()\f[R].
If no fetch handlers call \f[CR]event.respondWith()\f[R], the request
will be handled by the browser as if there were no service worker
involvement.
If \f[CR]fetch()\f[R] returns a valid HTTP response with an response
code in the 4xx or 5xx range, the \f[CR]catch()\f[R] will NOT be called.
.IP
.EX
self.addEventListener(\[dq]fetch\[dq], (event) \f[B]=>\f[R] {
  \f[I]// We only want to call event.respondWith() if this is a GET request for an HTML document.\f[R]
  \f[B]if\f[R] (
    event.request.method === \[dq]GET\[dq] &&
    event.request.headers.get(\[dq]accept\[dq]).includes(\[dq]text/html\[dq])
  ) {
    console.log(\[dq]Handling fetch event for\[dq], event.request.url);
    event.respondWith(
      fetch(event.request).catch((e) \f[B]=>\f[R] {
        console.error(\[dq]Fetch failed; returning offline page instead.\[dq], e);
        \f[B]return\f[R] caches
          .open(OFFLINE_CACHE)
          .then((cache) \f[B]=>\f[R] cache.match(OFFLINE_URL));
      }),
    );
  }
});
.EE
.SH SEE ALSO
.IP \[bu] 2
Using Service Workers
.IP \[bu] 2
\f[CR]Cache\f[R]
.IP \[bu] 2
\f[CR]Window.caches\f[R] and \f[CR]WorkerGlobalScope.caches\f[R]
