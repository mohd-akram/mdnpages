.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "XMLSerializer" "JS" "December 5, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
XMLSerializer \- XMLSerializer
.SH SYNOPSIS
The \f[CR]XMLSerializer\f[R] interface provides the
\f[CR]serializeToString()\f[R] method to construct an XML string
representing a DOM tree.
.SH CONSTRUCTOR
.TP
\f[B]XMLSerializer()\f[R]
Creates a new \f[CR]XMLSerializer\f[R] object.
.SH INSTANCE METHODS
.TP
\f[B]serializeToString()\f[R]
Returns the serialized subtree of a string.
.SH EXAMPLES
.SS Serializing XML into a string
This example just serializes an entire document into a string containing
XML.
.IP
.EX
\f[B]const\f[R] s = \f[B]new\f[R] XMLSerializer();
\f[B]const\f[R] str = s.serializeToString(document);
saveXML(str);
.EE
.PP
This involves creating a new \f[CR]XMLSerializer\f[R] object, then
passing the \f[CR]Document\f[R] to be serialized into
\f[CR]serializeToString()\f[R], which returns the XML equivalent of the
document.
\f[CR]saveXML()\f[R] represents a function that would then save the
serialized string.
.SS Inserting nodes into a DOM based on XML
This example uses the \f[CR]Element.insertAdjacentHTML()\f[R] method to
insert a new DOM \f[CR]Node\f[R] into the body of the
\f[CR]Document\f[R], based on XML created by serializing an
\f[CR]Element\f[R] object.
.RS
.PP
\f[B]Note:\f[R] In the real world, you should usually instead call
\f[CR]importNode()\f[R] method to import the new node into the DOM, then
call one of the following methods to add the node to the DOM tree:
.IP \[bu] 2
The \f[CR]Element.append()\f[R]/\f[CR]Element.prepend()\f[R] and
\f[CR]Document.append()\f[R]/\f[CR]Document.prepend()\f[R] methods.
.IP \[bu] 2
The \f[CR]Element.replaceWith\f[R] method (to replace an existing node
with the new one)
.IP \[bu] 2
The \f[CR]Element.insertAdjacentElement()\f[R] method.
.RE
.PP
Because \f[CR]insertAdjacentHTML()\f[R] accepts a string and not a
\f[CR]Node\f[R] as its second parameter, \f[CR]XMLSerializer\f[R] is
used to first convert the node into a string.
.IP
.EX
\f[B]const\f[R] inp = document.createElement(\[dq]input\[dq]);
\f[B]const\f[R] XMLS = \f[B]new\f[R] XMLSerializer();
\f[B]const\f[R] inp_xmls = XMLS.serializeToString(inp); \f[I]// First convert DOM node into a string\f[R]

\f[I]// Insert the newly created node into the document\[aq]s body\f[R]
document.body.insertAdjacentHTML(\[dq]afterbegin\[dq], inp_xmls);
.EE
.PP
The code creates a new \f[CR]<input>\f[R] element by calling
\f[CR]Document.createElement()\f[R], then serializes it into XML using
\f[CR]serializeToString()\f[R].
.PP
Once that\[cq]s done, \f[CR]insertAdjacentHTML()\f[R] is used to insert
the \f[CR]<input>\f[R] element into the DOM.
.SH SEE ALSO
.IP \[bu] 2
Parsing and serializing XML
.IP \[bu] 2
\f[CR]DOMParser\f[R]
