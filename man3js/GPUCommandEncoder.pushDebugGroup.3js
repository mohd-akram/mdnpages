.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "GPUCOMMANDENCODER.PUSHDEBUGGROUP" "3JS" "June 18, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
GPUCommandEncoder.pushDebugGroup \- GPUCommandEncoder: pushDebugGroup()
method
.SH SYNOPSIS
\f[B]Secure context:\f[R] This feature is available only in secure
contexts (HTTPS).
.PP
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]pushDebugGroup()\f[B]\f[R] method of the
\f[CR]GPUCommandEncoder\f[R] interface begins a debug group, which is
marked with a specified label, and will contain all subsequent encoded
commands up until a \f[CR]popDebugGroup()\f[R] method is invoked.
.PP
This could be used for telemetry, or may be utilized in
\f[CR]GPUError\f[R] messages, browser dev tools, or other services in
the future to help with debugging.
.SH SYNTAX
.IP
.EX
pushDebugGroup(groupLabel)
.EE
.SS Parameters
.TP
\f[B]groupLabel\f[R]
A string representing the label for the debug group.
.SS Return value
None (\f[CR]Undefined\f[R]).
.SH EXAMPLES
.IP
.EX
\f[I]// \&...\f[R]

commandEncoder.pushDebugGroup(\(dqmy_group_marker\(dq); \f[I]// Start labeled debug group\f[R]

\f[B]const\f[R] passEncoder = commandEncoder.beginRenderPass(renderPassDescriptor);

passEncoder.setPipeline(renderPipeline);
passEncoder.setVertexBuffer(0, vertexBuffer);
passEncoder.draw(3);

passEncoder.end();

commandEncoder.popDebugGroup(); \f[I]// End labeled debug group\f[R]

\f[I]// \&...\f[R]
.EE
.SH SEE ALSO
.IP \(bu 2
The WebGPU API
