.\" Automatically generated by Pandoc 3.4
.\"
.TH "CookieStore.get" "JS" "July 26, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
CookieStore.get \- CookieStore: get() method
.SH SYNOPSIS
\f[B]Secure context:\f[R] This feature is available only in secure
contexts (HTTPS).
.PP
\f[B]Note:\f[R] This feature is available in Service Workers.
.PP
The \f[B]\f[CB]get()\f[B]\f[R] method of the \f[CR]CookieStore\f[R]
interface returns a single cookie with the given \f[CR]name\f[R] or
\f[CR]options\f[R] object.
The method will return the first matching cookie for the passed
parameters.
.SH SYNTAX
.IP
.EX
get(name)
get(options)
.EE
.SS Parameters
This method requires one of the following:
.TP
\f[B]name\f[R] \f[I](optional)\f[R]
A string with the name of a cookie.
.PP
Or
.TP
\f[B]options\f[R] \f[I](optional)\f[R]
An object containing:
.RS
.TP
\f[B]name\f[R]
A string with the name of a cookie.
.TP
\f[B]url\f[R]
A string with the URL of a cookie.
.RE
.RS
.PP
\f[B]Note:\f[R] The \f[CR]url\f[R] option enables the modification of a
cookie scoped under a particular URL.
Service workers can obtain cookies that would be sent to any URL under
their scope.
From a document you may only obtain the cookies at the current URL, so
the only valid URL in a document context is the document\[cq]s URL.
.RE
.SS Return value
A \f[CR]Promise\f[R] that resolves with an object representing the first
cookie matching the submitted \f[CR]name\f[R] or \f[CR]options\f[R].
This object contains the following properties:
.TP
\f[B]domain\f[R]
A string containing the domain of the cookie.
.TP
\f[B]expires\f[R]
A timestamp, given as Unix time in milliseconds, containing the
expiration date of the cookie.
.TP
\f[B]name\f[R]
A string containing the name of the cookie.
.TP
\f[B]partitioned\f[R]
A boolean indicating whether the cookie is a partitioned cookie
(\f[CR]true\f[R]) or not (\f[CR]false\f[R]).
See Cookies Having Independent Partitioned State (CHIPS) for more
information.
.TP
\f[B]path\f[R]
A string containing the path of the cookie.
.TP
\f[B]sameSite\f[R]
One of the following \f[CR]SameSite\f[R] values:
.RS
.TP
\f[B]\[dq]strict\[dq]\f[R]
Cookies will only be sent in a first\-party context and not be sent with
requests initiated by third party websites.
.TP
\f[B]\[dq]lax\[dq]\f[R]
Cookies are not sent on normal cross\-site subrequests (for example to
load images or frames into a third party site), but are sent when a user
is navigating within the origin site (i.e.\ when following a link).
.TP
\f[B]\[dq]none\[dq]\f[R]
Cookies will be sent in all contexts.
.RE
.TP
\f[B]secure\f[R]
A boolean value indicating whether the cookie is to be used in secure
contexts only (\f[CR]true\f[R]) or not (\f[CR]false\f[R]).
.TP
\f[B]value\f[R]
A string containing the value of the cookie.
.SS Exceptions
.TP
\f[B]SecurityError\f[R] \f[B]DOMException\f[R]
Thrown if the origin does not serialize to a URL.
.TP
\f[B]TypeError\f[R]
Thrown if:
.RS
.IP \[bu] 2
The \f[CR]options\f[R] parameter is an empty object.
.IP \[bu] 2
The \f[CR]url\f[R] option is present and is not equal with the creation
URL, if in main thread.
.IP \[bu] 2
The \f[CR]url\f[R] option is present and its origin is not the same as
the origin of the creation URL.
.IP \[bu] 2
Querying cookies represented by the given \f[CR]name\f[R] or
\f[CR]options\f[R] fails.
.RE
.SH EXAMPLES
In this example, we return a cookie named \[lq]cookie1\[rq].
If the cookie is found the result of the Promise is an object containing
the details of a single cookie.
.IP
.EX
\f[B]const\f[R] cookie = \f[B]await\f[R] cookieStore.get(\[dq]cookie1\[dq]);

\f[B]if\f[R] (cookie) {
  console.log(cookie);
} \f[B]else\f[R] {
  console.log(\[dq]Cookie not found\[dq]);
}
.EE
