.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "COOKIESTORE.GET" "3JS" "March 14, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
CookieStore.get \- CookieStore: get() method
.SH SYNOPSIS
\f[B]Secure context:\f[R] This feature is available only in secure
contexts (HTTPS).
.PP
\f[B]Note:\f[R] This feature is available in Service Workers.
.PP
The \f[B]\f[CB]get()\f[B]\f[R] method of the \f[CR]CookieStore\f[R]
interface returns a \f[CR]Promise\f[R] that resolves to a single cookie
matching the given \f[CR]name\f[R] or \f[CR]options\f[R] object.
The method will return the first cookie that matches.
.SH SYNTAX
.IP
.EX
get(name)
get(options)
.EE
.SS Parameters
This method requires one of the following:
.TP
\f[B]name\f[R] \f[I](optional)\f[R]
A string with the name of a cookie.
.PP
Or
.TP
\f[B]options\f[R] \f[I](optional)\f[R]
An object containing:
.RS
.TP
\f[B]name\f[R]
A string with the name of a cookie.
.TP
\f[B]url\f[R]
A string with the URL of a cookie.
.RE
.RS
.PP
\f[B]Note:\f[R] The \f[CR]url\f[R] option enables the modification of a
cookie scoped under a particular URL.
Service workers can obtain cookies that would be sent to any URL under
their scope.
From a document you may only obtain the cookies at the current URL, so
the only valid URL in a document context is the document\(cqs URL.
.RE
.SS Return value
A \f[CR]Promise\f[R] that resolves with an object representing the first
cookie matching the submitted \f[CR]name\f[R] or \f[CR]options\f[R], or
\f[CR]null\f[R] if there is no matching cookie.
.PP
The object returned for a match contains the following properties:
.TP
\f[B]domain\f[R]
A string containing the domain of the cookie.
.TP
\f[B]expires\f[R]
A timestamp, given as Unix time in milliseconds, containing the
expiration date of the cookie.
.TP
\f[B]name\f[R]
A string containing the name of the cookie.
.TP
\f[B]partitioned\f[R]
A boolean indicating whether the cookie is a partitioned cookie
(\f[CR]true\f[R]) or not (\f[CR]false\f[R]).
See Cookies Having Independent Partitioned State (CHIPS) for more
information.
.TP
\f[B]path\f[R]
A string containing the path of the cookie.
.TP
\f[B]sameSite\f[R]
One of the following \f[CR]SameSite\f[R] values:
\f[CR]\(dqstrict\(dq\f[R], \f[CR]\(dqlax\(dq\f[R], or
\f[CR]\(dqnone\(dq\f[R].
.TP
\f[B]secure\f[R]
A boolean value indicating whether the cookie is to be used in secure
contexts only (\f[CR]true\f[R]) or not (\f[CR]false\f[R]).
.TP
\f[B]value\f[R]
A string containing the value of the cookie.
.SS Exceptions
.TP
\f[B]SecurityError\f[R] \f[B]DOMException\f[R]
Thrown if the origin does not serialize to a URL.
.TP
\f[B]TypeError\f[R]
Thrown if:
.RS
.IP \(bu 2
The \f[CR]options\f[R] parameter is an empty object.
.IP \(bu 2
The method is called in the main thread, and the \f[CR]url\f[R] option
is specified but does not match the URL of the current window.
.IP \(bu 2
The method is called in a worker and the \f[CR]url\f[R] option is
specified, but does not match the origin of the worker.
.IP \(bu 2
Querying cookies represented by the given \f[CR]name\f[R] or
\f[CR]options\f[R] fails.
.RE
.SH EXAMPLES
.SS Getting a cookie by name
This example shows how to get a particular cookie by name.
.PP
The code first creates a cookie named \(lqcookie1\(rq using
\f[CR]CookieStore.set()\f[R], logging any errors to the console.
It then waits on \f[CR]get()\f[R] to retrieve information about that
same cookie.
If the returned promise resolves with an object we log the cookie:
otherwise we log that no matching cookie was found.
.IP
.EX
\f[B]async\f[R] \f[B]function\f[R] cookieTest() {
  \f[I]// Set test cookie\f[R]
  \f[B]try\f[R] {
    \f[B]await\f[R] cookieStore.set(\(dqcookie1\(dq, \(dqcookie1\-value\(dq);
  } \f[B]catch\f[R] (error) {
    console.log(\(gaError setting cookie1: ${error}\(ga);
  }

  \f[I]// Get cookie, specifying name\f[R]
  \f[B]const\f[R] cookie = \f[B]await\f[R] cookieStore.get(\(dqcookie1\(dq);

  \f[B]if\f[R] (cookie) {
    console.log(cookie);
  } \f[B]else\f[R] {
    console.log(\(dqcookie1: Cookie not found\(dq);
  }
}

cookieTest();
.EE
