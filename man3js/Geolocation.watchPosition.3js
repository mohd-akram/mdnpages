.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "GEOLOCATION.WATCHPOSITION" "3JS" "March 13, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Geolocation.watchPosition \- Geolocation: watchPosition() method
.SH SYNOPSIS
\f[B]Secure context:\f[R] This feature is available only in secure
contexts (HTTPS).
.PP
The \f[B]\f[CB]watchPosition()\f[B]\f[R] method of the
\f[CR]Geolocation\f[R] interface is used to register a handler function
that will be called automatically each time the position of the device
changes.
You can also, optionally, specify an error handling callback function.
.PP
Note that in addition to requiring a secure context this feature may be
blocked by the \f[CR]geolocation\f[R] \f[CR]Permissions\-Policy\f[R],
and also requires that explicit permission be granted by the user.
If required, the user will be prompted when this method is called.
The permission state can be queried using the \f[CR]geolocation\f[R]
user permission in the Permissions API.
.SH SYNTAX
.IP
.EX
watchPosition(success)
watchPosition(success, error)
watchPosition(success, error, options)
.EE
.SS Parameters
.TP
\f[B]success\f[R]
A callback function that takes a \f[CR]GeolocationPosition\f[R] object
as an input parameter.
.TP
\f[B]error\f[R] \f[I](optional)\f[R]
An optional callback function that takes a
\f[CR]GeolocationPositionError\f[R] object as an input parameter.
.TP
\f[B]options\f[R] \f[I](optional)\f[R]
An optional object that provides configuration options for the location
watch.
See \f[CR]Geolocation.getCurrentPosition()\f[R] for more details on
possible options.
.SS Return value
An integer ID that identifies the registered handler.
The ID can be passed to the \f[CR]Geolocation.clearWatch()\f[R] to
unregister the handler.
.SH EXAMPLES
.IP
.EX
\f[B]let\f[R] id;
\f[B]let\f[R] target;
\f[B]let\f[R] options;

\f[B]function\f[R] success(pos) {
  \f[B]const\f[R] crd = pos.coords;

  \f[B]if\f[R] (target.latitude === crd.latitude && target.longitude === crd.longitude) {
    console.log(\(dqCongratulations, you reached the target\(dq);
    navigator.geolocation.clearWatch(id);
  }
}

\f[B]function\f[R] error(err) {
  console.error(\(gaERROR(${err.code}): ${err.message}\(ga);
}

target = {
  latitude: 0,
  longitude: 0,
};

options = {
  enableHighAccuracy: \f[B]false\f[R],
  timeout: 5000,
  maximumAge: 0,
};

id = navigator.geolocation.watchPosition(success, error, options);
.EE
.SH SEE ALSO
.IP \(bu 2
Using the Geolocation API
.IP \(bu 2
The interface it belongs to, \f[CR]Geolocation\f[R], and the way to
access it \(em \f[CR]Navigator.geolocation\f[R].
.IP \(bu 2
The opposite operation: \f[CR]Geolocation.clearWatch()\f[R]
.IP \(bu 2
A similar method: \f[CR]Geolocation.getCurrentPosition()\f[R]
