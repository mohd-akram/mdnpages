.\" Automatically generated by Pandoc 3.4
.\"
.TH "FinalizationRegistry.register" "JS" "October 28, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
FinalizationRegistry.register \-
FinalizationRegistry.prototype.register()
.SH SYNOPSIS
The \f[B]\f[CB]register()\f[B]\f[R] method of
\f[CR]FinalizationRegistry\f[R] instances registers an value with this
\f[CR]FinalizationRegistry\f[R] so that if the value is
garbage\-collected, the registry\[cq]s callback may get called.
.SH SYNTAX
.IP
.EX
register(target, heldValue)
register(target, heldValue, unregisterToken)
.EE
.SS Parameters
.TP
\f[B]target\f[R]
The target value to register.
.TP
\f[B]heldValue\f[R]
The value to pass to the finalizer for this \f[CR]target\f[R].
This cannot be the \f[CR]target\f[R] itself but can be anything else,
including functions and primitives.
.TP
\f[B]unregisterToken\f[R] \f[I](optional)\f[R]
A token that may be used with the \f[CR]unregister\f[R] method later to
unregister the target value.
If provided (and not \f[CR]undefined\f[R]), this must be an object or a
non\-registered symbol.
If not provided, the target cannot be unregistered.
.SS Return value
None (\f[CR]undefined\f[R]).
.SS Exceptions
.TP
\f[B]TypeError\f[R]
Thrown in one of the following cases:
.RS
.IP \[bu] 2
\f[CR]target\f[R] is not an object or a non\-registered symbol (object
as opposed to primitives; functions are objects as well)
.IP \[bu] 2
\f[CR]target\f[R] is the same as \f[CR]heldValue\f[R]
(\f[CR]target === heldValue\f[R])
.IP \[bu] 2
\f[CR]unregisterToken\f[R] is not an object or a non\-registered symbol
.RE
.SH DESCRIPTION
See the Avoid where possible and Notes on cleanup callbacks sections of
the \f[CR]FinalizationRegistry\f[R] page for important caveats.
.SH EXAMPLES
.SS Using register
The following registers the value referenced by \f[CR]target\f[R],
passing in the held value \f[CR]\[dq]some value\[dq]\f[R] and passing
the target itself as the unregistration token:
.IP
.EX
registry.register(target, \[dq]some value\[dq], target);
.EE
.PP
The following registers the value referenced by \f[CR]target\f[R],
passing in another object as the held value, and not passing in any
unregistration token (which means \f[CR]target\f[R] can\[cq]t be
unregistered):
.IP
.EX
registry.register(target, { useful: \[dq]info about target\[dq] });
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]FinalizationRegistry\f[R]
