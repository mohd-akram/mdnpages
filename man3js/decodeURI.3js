.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "decodeURI" "JS" "September 25, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
decodeURI \- decodeURI()
.SH SYNOPSIS
The \f[B]\f[CB]decodeURI()\f[B]\f[R] function decodes a Uniform Resource
Identifier (URI) previously created by \f[CR]encodeURI()\f[R] or a
similar routine.
.SH SYNTAX
.IP
.EX
decodeURI(encodedURI)
.EE
.SS Parameters
.TP
\f[B]encodedURI\f[R]
A complete, encoded Uniform Resource Identifier.
.SS Return value
A new string representing the unencoded version of the given encoded
Uniform Resource Identifier (URI).
.SS Exceptions
.TP
\f[B]URIError\f[R]
Thrown if \f[CR]encodedURI\f[R] contains a \f[CR]%\f[R] not followed by
two hexadecimal digits, or if the escape sequence does not encode a
valid UTF\-8 character.
.SH DESCRIPTION
\f[CR]decodeURI()\f[R] is a function property of the global object.
.PP
The \f[CR]decodeURI()\f[R] function decodes the URI by treating each
escape sequence in the form \f[CR]%XX\f[R] as one UTF\-8 code unit (one
byte).
In UTF\-8, the number of leading 1 bits in the first byte, which may be
0 (for 1\-byte ASCII characters), 2, 3, or 4, indicates the number of
bytes in the character.
So by reading the first escape sequence, \f[CR]decodeURI()\f[R] can
determine how many more escape sequences to consume.
If \f[CR]decodeURI()\f[R] fails to find the expected number of
sequences, or if the escape sequences don\[cq]t encode a valid UTF\-8
character, a \f[CR]URIError\f[R] is thrown.
.PP
\f[CR]decodeURI()\f[R] decodes all escape sequences, but if the escape
sequence encodes one of the following characters, the escape sequence is
preserved in the output string (because they are part of the URI
syntax):
.IP
.EX
; / ? : \[at] & = + $ , #
.EE
.SH EXAMPLES
.SS Decoding a Cyrillic URL
.IP
.EX
decodeURI(
  \[dq]https://developer.mozilla.org/ru/docs/JavaScript_%D1%88%D0%B5%D0%BB%D0%BB%D1%8B\[dq],
);
\f[I]// \[dq]https://developer.mozilla.org/ru/docs/JavaScript_шеллы\[dq]\f[R]
.EE
.SS decodeURI() vs.\ decodeURIComponent()
\f[CR]decodeURI()\f[R] assumes the input is a full URI, so it does not
decode characters that are part of the URI syntax.
.IP
.EX
decodeURI(
  \[dq]https://developer.mozilla.org/docs/JavaScript%3A%20a_scripting_language\[dq],
);
\f[I]// \[dq]https://developer.mozilla.org/docs/JavaScript%3A a_scripting_language\[dq]\f[R]

decodeURIComponent(
  \[dq]https://developer.mozilla.org/docs/JavaScript%3A%20a_scripting_language\[dq],
);
\f[I]// \[dq]https://developer.mozilla.org/docs/JavaScript: a_scripting_language\[dq]\f[R]
.EE
.SS Catching errors
.IP
.EX
\f[B]try\f[R] {
  \f[B]const\f[R] a = decodeURI(\[dq]%E0%A4%A\[dq]);
} \f[B]catch\f[R] (e) {
  console.error(e);
}

\f[I]// URIError: malformed URI sequence\f[R]
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]decodeURIComponent()\f[R]
.IP \[bu] 2
\f[CR]encodeURI()\f[R]
.IP \[bu] 2
\f[CR]encodeURIComponent()\f[R]
