.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "XMLHttpRequest.statusText" "JS" "July 26, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
XMLHttpRequest.statusText \- XMLHttpRequest: statusText property
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers, except for
Service Workers.
.PP
The read\-only \f[B]\f[CB]XMLHttpRequest.statusText\f[B]\f[R] property
returns a string containing the response\[cq]s status message as
returned by the HTTP server.
Unlike \f[CR]XMLHTTPRequest.status\f[R] which indicates a numerical
status code, this property contains the \f[I]text\f[R] of the response
status, such as \[lq]OK\[rq] or \[lq]Not Found\[rq].
If the request\[cq]s \f[CR]readyState\f[R] is in \f[CR]UNSENT\f[R] or
\f[CR]OPENED\f[R] state, the value of \f[CR]statusText\f[R] will be an
empty string.
.PP
If the server response doesn\[cq]t explicitly specify a status text,
\f[CR]statusText\f[R] will assume the default value \[lq]OK\[rq].
.RS
.PP
\f[B]Note:\f[R] Responses over an HTTP/2 connection will always have an
empty string as status message as HTTP/2 does not support them.
.RE
.SH VALUE
A string.
.SH EXAMPLES
.IP
.EX
\f[B]const\f[R] xhr = \f[B]new\f[R] XMLHttpRequest();
console.log(\[dq]0 UNSENT\[dq], xhr.statusText);

xhr.open(\[dq]GET\[dq], \[dq]/server\[dq], \f[B]true\f[R]);
console.log(\[dq]1 OPENED\[dq], xhr.statusText);

xhr.onprogress = () \f[B]=>\f[R] {
  console.log(\[dq]3 LOADING\[dq], xhr.statusText);
};

xhr.onload = () \f[B]=>\f[R] {
  console.log(\[dq]4 DONE\[dq], xhr.statusText);
};

xhr.send(\f[B]null\f[R]);

\f[I]/**\f[R]
\f[I] * Outputs the following:\f[R]
\f[I] *\f[R]
\f[I] * 0 UNSENT\f[R]
\f[I] * 1 OPENED\f[R]
\f[I] * 3 LOADING OK\f[R]
\f[I] * 4 DONE OK\f[R]
\f[I] */\f[R]
.EE
.SH SEE ALSO
.IP \[bu] 2
List of HTTP status
.IP \[bu] 2
HTTP
.IP \[bu] 2
\c
.UR https://fetch.spec.whatwg.org/#concept-response-status-message
WHATWG Fetch Living Standard
.UE \c
