.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "SET.SET" "3JS" "June 20, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Set.Set \- Set() constructor
.SH SYNOPSIS
The \f[B]\f[CB]Set()\f[B]\f[R] constructor creates \f[CR]Set\f[R]
objects.
.IP
.EX
\f[B]const\f[R] set1 = \f[B]new\f[R] Set([1, 2, 3, 4, 5]);

console.log(set1.has(1));
\f[I]// Expected output: true\f[R]

console.log(set1.has(5));
\f[I]// Expected output: true\f[R]

console.log(set1.has(6));
\f[I]// Expected output: false\f[R]
.EE
.SH SYNTAX
.IP
.EX
new Set()
new Set(iterable)
.EE
.RS
.PP
\f[B]Note:\f[R] \f[CR]Set()\f[R] can only be constructed with
\f[CR]new\f[R].
Attempting to call it without \f[CR]new\f[R] throws a
\f[CR]TypeError\f[R].
.RE
.SS Parameters
.TP
\f[B]iterable\f[R] \f[I](optional)\f[R]
If an iterable object is passed, all of its elements will be added to
the new \f[CR]Set\f[R].
.RS
.PP
If you don\(cqt specify this parameter, or its value is \f[CR]null\f[R],
the new \f[CR]Set\f[R] is empty.
.RE
.SS Return value
A new \f[CR]Set\f[R] object.
.SH EXAMPLES
.SS Using the \f[CR]Set\f[R] object
.IP
.EX
\f[B]const\f[R] mySet = \f[B]new\f[R] Set();

mySet.add(1); \f[I]// Set [ 1 ]\f[R]
mySet.add(5); \f[I]// Set [ 1, 5 ]\f[R]
mySet.add(5); \f[I]// Set [ 1, 5 ]\f[R]
mySet.add(\(dqsome text\(dq); \f[I]// Set [ 1, 5, \(aqsome text\(aq ]\f[R]
\f[B]const\f[R] o = { a: 1, b: 2 };
mySet.add(o);
.EE
.SH SEE ALSO
.IP \(bu 2
\c
.UR https://github.com/zloirock/core-js#set
Polyfill of \f[CR]Set\f[R] in \f[CR]core\-js\f[R]
.UE \c
.IP \(bu 2
\c
.UR https://www.npmjs.com/package/es-set
es\-shims polyfill of \f[CR]Set\f[R]
.UE \c
.IP \(bu 2
\f[CR]Set\f[R]
