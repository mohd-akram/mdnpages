.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "HTMLTextAreaElement.setSelectionRange" "JS" "November 4, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
HTMLTextAreaElement.setSelectionRange \- HTMLTextAreaElement:
setSelectionRange() method
.SH SYNOPSIS
The \f[B]\f[CB]setSelectionRange()\f[B]\f[R] method of the
\f[CR]HTMLTextAreaElement\f[R] interface sets the start and end
positions of the current text selection, and optionally the direction,
in an \f[CR]<textarea>\f[R] element.
The direction indicates the in which selection should be considered to
have occurred; for example, that the selection was set by the user
clicking and dragging from the end of the selected text toward the
beginning.
In addition, the \f[CR]select\f[R] and \f[CR]selectchange\f[R] events
are fired.
.PP
This method also updates the
\f[CR]HTMLTextAreaElement.selectionStart\f[R],
\f[CR]HTMLTextAreaElement.selectionEnd\f[R], and
\f[CR]HTMLTextAreaElement.selectionDirection\f[R] properties.
.RS
.PP
\f[B]Note:\f[R] The \f[CR]<textarea>\f[R] must be focused to enable
selecting a subsection of the text to be selected using the
\f[CR]setSelectionRange()\f[R] method.
Setting focus also fires a \f[CR]selectchange\f[R] event.
.RE
.PP
To select \f[B]all\f[R] of the text of an \f[CR]<textarea>\f[R] element,
use the \f[CR]HTMLTextAreaElement.select()\f[R] method.
.SH SYNTAX
.IP
.EX
setSelectionRange(selectionStart, selectionEnd)
setSelectionRange(selectionStart, selectionEnd, selectionDirection)
.EE
.SS Parameters
.TP
\f[B]selectionStart\f[R]
The index of the first selected character.
An index greater than the length of the element\[cq]s value is treated
as pointing to the end of the value.
See the \f[CR]selectionStart\f[R] property for more information.
.TP
\f[B]selectionEnd\f[R]
The index of the character \f[I]after\f[R] the last selected character.
An index greater than the length of the element\[cq]s value is treated
as pointing to the end of the value.
If \f[CR]selectionEnd\f[R] is less than \f[CR]selectionStart\f[R], then
both are treated as the value of \f[CR]selectionEnd\f[R].
See the \f[CR]selectionEnd\f[R] property for more information.
.TP
\f[B]selectionDirection\f[R] \f[I](optional)\f[R]
The keyword \f[CR]\[dq]forward\[dq]\f[R], \f[CR]\[dq]backward\[dq]\f[R],
or the default \f[CR]\[dq]none\[dq]\f[R] \[em] indicating the direction
in which the selection is considered to have been performed.
See the \f[CR]selectionDirection\f[R] property for more information.
.SS Return value
None (\f[CR]undefined\f[R]).
.SH EXAMPLES
.IP
.EX
\f[B]const\f[R] textarea = document.getElementById(\[dq]text\-box\[dq]);
\f[B]const\f[R] chars = textarea.textLength;
\f[I]// if the value is more than 10 characters long\f[R]
\f[B]if\f[R] (chars > 10) {
  \f[I]// Element must be focused to select a range of text within it\f[R]
  textarea.focus();
  \f[I]// select the text between the fifth character from the start and\f[R]
  \f[I]// the fifth character from the end\f[R]
  textarea.setSelectionRange(5, chars \- 5);
} \f[B]else\f[R] {
  \f[I]// otherwise select all the text\f[R]
  textarea.select();
}
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]<textarea>\f[R]
.IP \[bu] 2
\f[CR]HTMLTextAreaElement\f[R]
.IP \[bu] 2
\f[CR]HTMLTextAreaElement.select()\f[R]
.IP \[bu] 2
\f[CR]HTMLTextAreaElement.textLength\f[R]
.IP \[bu] 2
\f[CR]Selection\f[R]
.IP \[bu] 2
\f[CR]::selection\f[R] pseudo\-element
