.\" Automatically generated by Pandoc 3.4
.\"
.TH "String.lastIndexOf" "JS" "November 3, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
String.lastIndexOf \- String.prototype.lastIndexOf()
.SH SYNOPSIS
The \f[B]\f[CB]lastIndexOf()\f[B]\f[R] method of \f[CR]String\f[R]
values searches this string and returns the index of the last occurrence
of the specified substring.
It takes an optional starting position and returns the last occurrence
of the specified substring at an index less than or equal to the
specified number.
.SH SYNTAX
.IP
.EX
lastIndexOf(searchString)
lastIndexOf(searchString, position)
.EE
.SS Parameters
.TP
\f[B]searchString\f[R]
Substring to search for.
All values are coerced to strings, so omitting it or passing
\f[CR]undefined\f[R] causes \f[CR]lastIndexOf()\f[R] to search for the
string \f[CR]\[dq]undefined\[dq]\f[R], which is rarely what you want.
.TP
\f[B]position\f[R] \f[I](optional)\f[R]
The method returns the index of the last occurrence of the specified
substring at a position less than or equal to \f[CR]position\f[R], which
defaults to \f[CR]+Infinity\f[R].
If \f[CR]position\f[R] is greater than the length of the calling string,
the method searches the entire string.
If \f[CR]position\f[R] is less than \f[CR]0\f[R], the behavior is the
same as for \f[CR]0\f[R] \[em] that is, the method looks for the
specified substring only at index \f[CR]0\f[R].
.RS
.IP \[bu] 2
\f[CR]\[aq]hello world hello\[aq].lastIndexOf(\[aq]world\[aq], 4)\f[R]
returns \f[CR]\-1\f[R] \[em] because, while the substring
\f[CR]world\f[R] does occurs at index \f[CR]6\f[R], that position is not
less than or equal to \f[CR]4\f[R].
.IP \[bu] 2
\f[CR]\[aq]hello world hello\[aq].lastIndexOf(\[aq]hello\[aq], 99)\f[R]
returns \f[CR]12\f[R] \[em] because the last occurrence of
\f[CR]hello\f[R] at a position less than or equal to \f[CR]99\f[R] is at
position \f[CR]12\f[R].
.IP \[bu] 2
\f[CR]\[aq]hello world hello\[aq].lastIndexOf(\[aq]hello\[aq], 0)\f[R]
and
\f[CR]\[aq]hello world hello\[aq].lastIndexOf(\[aq]hello\[aq], \-5)\f[R]
both return \f[CR]0\f[R] \[em] because both cause the method to only
look for \f[CR]hello\f[R] at index \f[CR]0\f[R].
.RE
.SS Return value
The index of the last occurrence of \f[CR]searchString\f[R] found, or
\f[CR]\-1\f[R] if not found.
.SH DESCRIPTION
Strings are zero\-indexed: The index of a string\[cq]s first character
is \f[CR]0\f[R], and the index of a string\[cq]s last character is the
length of the string minus 1.
.IP
.EX
\[dq]canal\[dq].lastIndexOf(\[dq]a\[dq]); \f[I]// returns 3\f[R]
\[dq]canal\[dq].lastIndexOf(\[dq]a\[dq], 2); \f[I]// returns 1\f[R]
\[dq]canal\[dq].lastIndexOf(\[dq]a\[dq], 0); \f[I]// returns \-1\f[R]
\[dq]canal\[dq].lastIndexOf(\[dq]x\[dq]); \f[I]// returns \-1\f[R]
\[dq]canal\[dq].lastIndexOf(\[dq]c\[dq], \-5); \f[I]// returns 0\f[R]
\[dq]canal\[dq].lastIndexOf(\[dq]c\[dq], 0); \f[I]// returns 0\f[R]
\[dq]canal\[dq].lastIndexOf(\[dq]\[dq]); \f[I]// returns 5\f[R]
\[dq]canal\[dq].lastIndexOf(\[dq]\[dq], 2); \f[I]// returns 2\f[R]
.EE
.SS Case\-sensitivity
The \f[CR]lastIndexOf()\f[R] method is case sensitive.
For example, the following expression returns \f[CR]\-1\f[R]:
.IP
.EX
\[dq]Blue Whale, Killer Whale\[dq].lastIndexOf(\[dq]blue\[dq]); \f[I]// returns \-1\f[R]
.EE
.SH EXAMPLES
.SS Using indexOf() and lastIndexOf()
The following example uses \f[CR]indexOf()\f[R] and
\f[CR]lastIndexOf()\f[R] to locate values in the string
\f[CR]\[dq]Brave, Brave New World\[dq]\f[R].
.IP
.EX
\f[B]const\f[R] anyString = \[dq]Brave, Brave New World\[dq];

console.log(anyString.indexOf(\[dq]Brave\[dq])); \f[I]// 0\f[R]
console.log(anyString.lastIndexOf(\[dq]Brave\[dq])); \f[I]// 7\f[R]
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]String.prototype.charAt()\f[R]
.IP \[bu] 2
\f[CR]String.prototype.indexOf()\f[R]
.IP \[bu] 2
\f[CR]String.prototype.split()\f[R]
.IP \[bu] 2
\f[CR]Array.prototype.indexOf()\f[R]
.IP \[bu] 2
\f[CR]Array.prototype.lastIndexOf()\f[R]
