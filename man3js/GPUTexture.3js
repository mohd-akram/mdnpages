.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "GPUTEXTURE" "3JS" "June 18, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
GPUTexture \- GPUTexture
.SH SYNOPSIS
\f[B]Secure context:\f[R] This feature is available only in secure
contexts (HTTPS).
.PP
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]GPUTexture\f[B]\f[R] interface of the WebGPU API
represents a container used to store 1D, 2D, or 3D arrays of data, such
as images, to use in GPU rendering operations.
.PP
A \f[CR]GPUTexture\f[R] object instance is created using the
\f[CR]GPUDevice.createTexture()\f[R] method.
.SH INSTANCE PROPERTIES
.TP
\f[B]depthOrArrayLayers\f[R] \f[I](read\-only)\f[R]
A number representing the depth or layer count of the
\f[CR]GPUTexture\f[R] (pixels, or number of layers).
.TP
\f[B]dimension\f[R] \f[I](read\-only)\f[R]
An enumerated value representing the dimension of the set of texels for
each \f[CR]GPUTexture\f[R] subresource.
.TP
\f[B]format\f[R] \f[I](read\-only)\f[R]
An enumerated value representing the format of the
\f[CR]GPUTexture\f[R].
See the \c
.UR https://gpuweb.github.io/gpuweb/#enumdef-gputextureformat
Texture formats
.UE \c
\ section of the specification for all the possible values.
.TP
\f[B]height\f[R] \f[I](read\-only)\f[R]
A number representing the height of the \f[CR]GPUTexture\f[R] in pixels.
.TP
\f[B]label\f[R]
A string providing a label that can be used to identify the object, for
example in \f[CR]GPUError\f[R] messages or console warnings.
.TP
\f[B]mipLevelCount\f[R] \f[I](read\-only)\f[R]
A number representing the number of mip levels of the
\f[CR]GPUTexture\f[R].
.TP
\f[B]sampleCount\f[R] \f[I](read\-only)\f[R]
A number representing the sample count of the \f[CR]GPUTexture\f[R].
.TP
\f[B]usage\f[R] \f[I](read\-only)\f[R]
The bitwise flags representing the allowed usages of the
\f[CR]GPUTexture\f[R].
.TP
\f[B]width\f[R] \f[I](read\-only)\f[R]
A number representing the width of the \f[CR]GPUTexture\f[R] in pixels.
.SH INSTANCE METHODS
.TP
\f[B]createView()\f[R]
Creates a \f[CR]GPUTextureView\f[R] representing a specific view of the
\f[CR]GPUTexture\f[R].
.TP
\f[B]destroy()\f[R]
Destroys the \f[CR]GPUTexture\f[R].
.SH EXAMPLES
In the WebGPU samples \c
.UR https://webgpu.github.io/webgpu-samples/samples/texturedCube/
Textured Cube sample
.UE \c
, a texture to use on the faces of a cube is created by:
.IP \(bu 2
Loading the image into an \f[CR]HTMLImageElement\f[R] and creating an
image bitmap using \f[CR]createImageBitmap()\f[R].
.IP \(bu 2
Creating a new \f[CR]GPUTexture\f[R] using \f[CR]createTexture()\f[R].
.IP \(bu 2
Copying the image bitmap into the texture using
\f[CR]GPUQueue.copyExternalImageToTexture()\f[R].
.IP
.EX
\f[I]// \&...\f[R]
\f[B]let\f[R] cubeTexture;
{
  \f[B]const\f[R] img = document.createElement(\(dqimg\(dq);

  img.src = \f[B]new\f[R] URL(
    \(dq../../../assets/img/Di\-3d.png\(dq,
    \f[B]import\f[R].meta.url,
  ).toString();

  \f[B]await\f[R] img.decode();

  \f[B]const\f[R] imageBitmap = \f[B]await\f[R] createImageBitmap(img);

  cubeTexture = device.createTexture({
    size: [imageBitmap.width, imageBitmap.height, 1],
    format: \(dqrgba8unorm\(dq,
    usage:
      GPUTextureUsage.TEXTURE_BINDING |
      GPUTextureUsage.COPY_DST |
      GPUTextureUsage.RENDER_ATTACHMENT,
  });

  device.queue.copyExternalImageToTexture(
    { source: imageBitmap },
    { texture: cubeTexture },
    [imageBitmap.width, imageBitmap.height],
  );
}
\f[I]// \&...\f[R]
.EE
.SH SEE ALSO
.IP \(bu 2
The WebGPU API
