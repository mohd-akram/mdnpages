.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "VideoFrame.copyTo" "JS" "August 3, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
VideoFrame.copyTo \- VideoFrame: copyTo() method
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Dedicated Web Workers.
.PP
The \f[B]\f[CB]copyTo()\f[B]\f[R] method of the \f[CR]VideoFrame\f[R]
interface copies the contents of the \f[CR]VideoFrame\f[R] to an
\f[CR]ArrayBuffer\f[R].
.SH SYNTAX
.IP
.EX
copyTo(destination)
copyTo(destination, options)
.EE
.SS Parameters
.TP
\f[B]destination\f[R]
An \f[CR]ArrayBuffer\f[R], a \f[CR]TypedArray\f[R], or a
\f[CR]DataView\f[R] to copy to.
.TP
\f[B]options\f[R] \f[I](optional)\f[R]
An object containing the following:
.RS
.TP
\f[B]rect\f[R] \f[I](optional)\f[R]
The rectangle of pixels to copy from the \f[CR]VideoFrame\f[R].
If unspecified, the \f[CR]visibleRect\f[R] will be used.
This is in the format of a dictionary object containing:
.RS
.IP \[bu] 2
\f[CR]x\f[R]: The x\-coordinate.
.IP \[bu] 2
\f[CR]y\f[R]: The y\-coordinate.
.IP \[bu] 2
\f[CR]width\f[R]: The width of the frame.
.IP \[bu] 2
\f[CR]height\f[R]: The height of the frame.
.RE
.TP
\f[B]layout\f[R] \f[I](optional)\f[R]
A list containing the following values for each plane in the
\f[CR]VideoFrame\f[R]:
.RS
.TP
\f[B]offset\f[R]
An integer representing the offset in bytes where the given plane
begins.
.TP
\f[B]stride\f[R]
An integer representing the number of bytes, including padding, used by
each row of the plane.
Planes may not overlap.
If no \f[CR]layout\f[R] is specified, the planes will be tightly packed.
.RE
.TP
\f[B]format\f[R] \f[I](optional)\f[R]
A pixel format for the pixel data in the \f[CR]destination\f[R].
Can be set to \f[CR]\[dq]RGBA\[dq]\f[R], \f[CR]\[dq]RGBX\[dq]\f[R],
\f[CR]\[dq]BGRA\[dq]\f[R], \f[CR]\[dq]BGRX\[dq]\f[R].
If unspecified, the \f[CR]format\f[R] will be used.
.TP
\f[B]colorSpace\f[R] \f[I](optional)\f[R]
Specifies the color space of the pixel data in the
\f[CR]destination\f[R].
Can be set to \f[CR]\[dq]srgb\[dq]\f[R] for the \c
.UR https://en.wikipedia.org/wiki/SRGB
sRGB color space
.UE \c
\ or \f[CR]\[dq]display\-p3\[dq]\f[R] for the \c
.UR https://en.wikipedia.org/wiki/DCI-P3
display\-p3 color space
.UE \c
\&.
Only applicable for RGB pixel formats.
If unspecified, \f[CR]\[dq]srgb\f[R] will be used.
.RE
.SS Return value
A \f[CR]Promise\f[R] that resolves to the layout of the copy when the
copy has completed.
.SH EXAMPLES
The following example copies the entire contents of
\f[CR]videoFrame\f[R].
.IP
.EX
\f[B]let\f[R] buffer = \f[B]new\f[R] Uint8Array(videoFrame.allocationSize());
\f[B]let\f[R] layout = \f[B]await\f[R] videoFrame.copyTo(buffer);
.EE
.PP
The following example converts a portion of the \f[CR]videoFrame\f[R] to
RGB format.
.IP
.EX
\f[B]const\f[R] videoRect = {
  x: 100,
  y: 100,
  width: 80,
  height: 60,
};
\f[B]const\f[R] options = {
  rect: videoRect,
  format: \[dq]RGBX\[dq],
  colorSpace: \[dq]display\-p3\[dq],
};
\f[B]const\f[R] size = videoFrame.allocationSize(options);
\f[B]const\f[R] buffer = \f[B]new\f[R] ArrayBuffer(size);
\f[B]const\f[R] layout = \f[B]await\f[R] videoFrame.copyTo(buffer, options);
.EE
