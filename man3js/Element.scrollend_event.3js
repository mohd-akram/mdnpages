.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "Element.scrollend_event" "JS" "May 6, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Element.scrollend_event \- Element: scrollend event
.SH SYNOPSIS
The \f[B]\f[CB]scrollend\f[B]\f[R] event fires when element scrolling
has completed.
Scrolling is considered completed when the scroll position has no more
pending updates and the user has completed their gesture.
.PP
Scroll position updates include smooth or instant mouse wheel scrolling,
keyboard scrolling, scroll\-snap events, or other APIs and gestures
which cause the scroll position to update.
User gestures like touch panning or trackpad scrolling aren\[cq]t
complete until pointers or keys have released.
If the scroll position did not change, then no scrollend event fires.
.PP
For detecting when scrolling inside a Document is complete, see the
\f[CR]Document: scrollend event\f[R].
.SH SYNTAX
Use the event name in methods like \f[CR]addEventListener()\f[R], or set
an event handler property.
.IP
.EX
addEventListener(\[dq]scrollend\[dq], (event) \f[B]=>\f[R] {});

onscrollend = (event) \f[B]=>\f[R] {};
.EE
.SH EVENT TYPE
A generic \f[CR]Event\f[R].
.SH EXAMPLE
.SS Using \f[CR]scrollend\f[R] with an event listener
The following example shows how to use the \f[CR]scrollend\f[R] event to
detect when the user has stopped scrolling:
.IP
.EX
<\f[B]div\f[R] id=\[dq]scroll\-box\[dq]>
  <\f[B]p\f[R] id=\[dq]scroll\-box\-title\[dq]>Scroll me!</\f[B]p\f[R]>
  <\f[B]p\f[R] id=\[dq]large\-element\[dq]></\f[B]p\f[R]>
</\f[B]div\f[R]>
<\f[B]p\f[R] id=\[dq]output\[dq]>Waiting on scroll events...</\f[B]p\f[R]>
.EE
.IP
.EX
\f[B]const\f[R] element = document.querySelector(\[dq]div#scroll\-box\[dq]);
\f[B]const\f[R] output = document.querySelector(\[dq]p#output\[dq]);

element.addEventListener(\[dq]scroll\[dq], (event) \f[B]=>\f[R] {
  output.innerHTML = \[dq]Scroll event fired, waiting for scrollend...\[dq];
});

element.addEventListener(\[dq]scrollend\[dq], (event) \f[B]=>\f[R] {
  output.innerHTML = \[dq]Scrollend event fired!\[dq];
});
.EE
.SS Using \f[CR]onscrollend\f[R] event handler property
The following example shows how to use the \f[CR]onscrollend\f[R] event
handler property to detect when the user has stopped scrolling:
.IP
.EX
<\f[B]div\f[R] id=\[dq]scroll\-box\[dq]>
  <\f[B]p\f[R] id=\[dq]scroll\-box\-title\[dq]>Scroll me!</\f[B]p\f[R]>
  <\f[B]p\f[R] id=\[dq]large\-element\[dq]></\f[B]p\f[R]>
</\f[B]div\f[R]>
<\f[B]p\f[R] id=\[dq]output\[dq]>Waiting on scroll events...</\f[B]p\f[R]>
.EE
.IP
.EX
\f[B]const\f[R] element = document.querySelector(\[dq]div#scroll\-box\[dq]);
\f[B]const\f[R] output = document.querySelector(\[dq]p#output\[dq]);

element.onscroll = (event) \f[B]=>\f[R] {
  output.innerHTML = \[dq]Element scroll event fired, waiting for scrollend...\[dq];
};

element.onscrollend = (event) \f[B]=>\f[R] {
  output.innerHTML = \[dq]Element scrollend event fired!\[dq];
};
.EE
.SH SEE ALSO
.IP \[bu] 2
Element \f[CR]scroll\f[R] event
.IP \[bu] 2
Document \f[CR]scrollend\f[R] event
.IP \[bu] 2
Document \f[CR]scroll\f[R] event
