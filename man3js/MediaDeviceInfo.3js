.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "MediaDeviceInfo" "JS" "July 26, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
MediaDeviceInfo \- MediaDeviceInfo
.SH SYNOPSIS
\f[B]Secure context:\f[R] This feature is available only in secure
contexts (HTTPS).
.PP
The \f[B]\f[CB]MediaDeviceInfo\f[B]\f[R] interface of the Media Capture
and Streams API contains information that describes a single media input
or output device.
.PP
The list of devices obtained by calling
\f[CR]navigator.mediaDevices.enumerateDevices()\f[R] is an array of
\f[CR]MediaDeviceInfo\f[R] objects, one per media device.
.SH INSTANCE PROPERTIES
.TP
\f[B]MediaDeviceInfo.deviceId\f[R] \f[I](read\-only)\f[R]
Returns a string that is an identifier for the represented device that
is persisted across sessions.
It is un\-guessable by other applications and unique to the origin of
the calling application.
It is reset when the user clears cookies (for Private Browsing, a
different identifier is used that is not persisted across sessions).
.TP
\f[B]MediaDeviceInfo.groupId\f[R] \f[I](read\-only)\f[R]
Returns a string that is a group identifier.
Two devices have the same group identifier if they belong to the same
physical device \[em] for example a monitor with both a built\-in camera
and a microphone.
.TP
\f[B]MediaDeviceInfo.kind\f[R] \f[I](read\-only)\f[R]
Returns an enumerated value that is either
\f[CR]\[dq]videoinput\[dq]\f[R], \f[CR]\[dq]audioinput\[dq]\f[R] or
\f[CR]\[dq]audiooutput\[dq]\f[R].
.TP
\f[B]MediaDeviceInfo.label\f[R] \f[I](read\-only)\f[R]
Returns a string describing this device (for example \[lq]External USB
Webcam\[rq]).
.RS
.PP
\f[B]Note:\f[R] For security reasons, the \f[CR]label\f[R] field is
always blank unless an active media stream exists \f[I]or\f[R] the user
has granted persistent permission for media device access.
The set of device labels could otherwise be used as part of a
fingerprinting mechanism to identify a user.
.RE
.SH INSTANCE METHODS
.TP
\f[B]MediaDeviceInfo.toJSON()\f[R]
Returns a JSON representation of the \f[CR]MediaDeviceInfo\f[R] object.
.SH EXAMPLE
Here\[cq]s an example that uses \f[CR]enumerateDevices()\f[R] to get a
list of devices.
.IP
.EX
\f[B]if\f[R] (!navigator.mediaDevices || !navigator.mediaDevices.enumerateDevices) {
  console.log(\[dq]enumerateDevices() not supported.\[dq]);
} \f[B]else\f[R] {
  \f[I]// List cameras and microphones.\f[R]
  navigator.mediaDevices
    .enumerateDevices()
    .then((devices) \f[B]=>\f[R] {
      devices.forEach((device) \f[B]=>\f[R] {
        console.log(\[ga]${device.kind}: ${device.label} id = ${device.deviceId}\[ga]);
      });
    })
    .catch((err) \f[B]=>\f[R] {
      console.log(\[ga]${err.name}: ${err.message}\[ga]);
    });
}
.EE
.PP
This might produce:
.IP
.EX
videoinput: id = csO9c0YpAf274OuCPUA53CNE0YHlIr2yXCi+SqfBZZ8=
audioinput: id = RKxXByjnabbADGQNNZqLVLdmXlS0YkETYCIbg+XxnvM=
audioinput: id = r2/xw1xUPIyZunfV1lGrKOma5wTOvCkWfZ368XCndm0=
.EE
.PP
or if one or more media streams are active, or if persistent permissions
have been granted:
.IP
.EX
videoinput: FaceTime HD Camera \f[B](\f[R]Built\-in\f[B])\f[R] id=csO9c0YpAf274OuCPUA53CNE0YHlIr2yXCi+SqfBZZ8=
audioinput: default \f[B](\f[R]Built\-in Microphone\f[B])\f[R] id=RKxXByjnabbADGQNNZqLVLdmXlS0YkETYCIbg+XxnvM=
audioinput: Built\-in Microphone id=r2/xw1xUPIyZunfV1lGrKOma5wTOvCkWfZ368XCndm0=
.EE
.SH SEE ALSO
.IP \[bu] 2
WebRTC API
.IP \[bu] 2
\f[CR]navigator.mediaDevices.enumerateDevices()\f[R]
.IP \[bu] 2
\f[CR]navigator.mediaDevices.getUserMedia()\f[R]
