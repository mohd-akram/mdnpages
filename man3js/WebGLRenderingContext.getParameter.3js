'\" t
.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "WEBGLRENDERINGCONTEXT.GETPARAMETER" "3JS" "March 25, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
WebGLRenderingContext.getParameter \- WebGLRenderingContext:
getParameter() method
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]WebGLRenderingContext.getParameter()\f[B]\f[R] method of
the WebGL API returns a value for the passed parameter name.
.SH SYNTAX
.IP
.EX
getParameter(pname)
.EE
.SS Parameters
.TP
\f[B]pname\f[R]
A \f[CR]GLenum\f[R] specifying which parameter value to return.
See below for possible values.
.SS Return value
Depends on the parameter.
.SH PARAMETER NAMES
.SS WebGL 1
You can query the following \f[CR]pname\f[R] parameters when using a
\f[CR]WebGLRenderingContext\f[R].
.PP
.TS
tab(@);
lw(23.3n) lw(23.3n) lw(23.3n).
T{
Constant
T}@T{
Returned type
T}@T{
Description
T}
_
T{
\f[CR]gl.ACTIVE_TEXTURE\f[R]
T}@T{
\(gaGLenum\(ga
T}@T{
T}
T{
\f[CR]gl.ALIASED_LINE_WIDTH_RANGE\f[R]
T}@T{
\(gaFloat32Array\(ga (with 2 elements)
T}@T{
T}
T{
\f[CR]gl.ALIASED_POINT_SIZE_RANGE\f[R]
T}@T{
\(gaFloat32Array\(ga (with 2 elements)
T}@T{
T}
T{
\f[CR]gl.ALPHA_BITS\f[R]
T}@T{
\(gaGLint\(ga
T}@T{
T}
T{
\f[CR]gl.ARRAY_BUFFER_BINDING\f[R]
T}@T{
\(gaWebGLBuffer\(ga
T}@T{
T}
T{
\f[CR]gl.BLEND\f[R]
T}@T{
\(gaGLboolean\(ga
T}@T{
T}
T{
\f[CR]gl.BLEND_COLOR\f[R]
T}@T{
\(gaFloat32Array\(ga (with 4 values)
T}@T{
T}
T{
\f[CR]gl.BLEND_DST_ALPHA\f[R]
T}@T{
\(gaGLenum\(ga
T}@T{
T}
T{
\f[CR]gl.BLEND_DST_RGB\f[R]
T}@T{
\(gaGLenum\(ga
T}@T{
T}
T{
\f[CR]gl.BLEND_EQUATION\f[R]
T}@T{
\(gaGLenum\(ga
T}@T{
T}
T{
\f[CR]gl.BLEND_EQUATION_ALPHA\f[R]
T}@T{
\(gaGLenum\(ga
T}@T{
T}
T{
\f[CR]gl.BLEND_EQUATION_RGB\f[R]
T}@T{
\(gaGLenum\(ga
T}@T{
T}
T{
\f[CR]gl.BLEND_SRC_ALPHA\f[R]
T}@T{
\(gaGLenum\(ga
T}@T{
T}
T{
\f[CR]gl.BLEND_SRC_RGB\f[R]
T}@T{
\(gaGLenum\(ga
T}@T{
T}
T{
\f[CR]gl.BLUE_BITS\f[R]
T}@T{
\(gaGLint\(ga
T}@T{
T}
T{
\f[CR]gl.COLOR_CLEAR_VALUE\f[R]
T}@T{
\(gaFloat32Array\(ga (with 4 values)
T}@T{
T}
T{
\f[CR]gl.COLOR_WRITEMASK\f[R]
T}@T{
\f[CR]sequence<GLboolean>\f[R] (with 4 values)
T}@T{
T}
T{
\f[CR]gl.COMPRESSED_TEXTURE_FORMATS\f[R]
T}@T{
\(gaUint32Array\(ga
T}@T{
Returns the compressed texture formats.
.PD 0
.P
.PD
.PD 0
.P
.PD
When using the \(gaWEBGL_compressed_texture_s3tc\(ga extension:
.IP \(bu 2
\f[CR]ext.COMPRESSED_RGB_S3TC_DXT1_EXT\f[R]
.IP \(bu 2
\f[CR]ext.COMPRESSED_RGBA_S3TC_DXT1_EXT\f[R]
.IP \(bu 2
\f[CR]ext.COMPRESSED_RGBA_S3TC_DXT3_EXT\f[R]
.IP \(bu 2
\f[CR]ext.COMPRESSED_RGBA_S3TC_DXT5_EXT\f[R]
.PP
When using the \(gaWEBGL_compressed_texture_s3tc_srgb\(ga extension:
.IP \(bu 2
\f[CR]ext.COMPRESSED_SRGB_S3TC_DXT1_EXT\f[R]
.IP \(bu 2
\f[CR]ext.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT\f[R]
.IP \(bu 2
\f[CR]ext.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT\f[R]
.IP \(bu 2
\f[CR]ext.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT\f[R]
When using the \(gaWEBGL_compressed_texture_etc\(ga extension:
.IP \(bu 2
\f[CR]ext.COMPRESSED_R11_EAC\f[R]
.IP \(bu 2
\f[CR]ext.COMPRESSED_SIGNED_R11_EAC\f[R]
.IP \(bu 2
\f[CR]ext.COMPRESSED_RG11_EAC\f[R]
.IP \(bu 2
\f[CR]ext.COMPRESSED_SIGNED_RG11_EAC\f[R]
.IP \(bu 2
\f[CR]ext.COMPRESSED_RGB8_ETC2\f[R]
.IP \(bu 2
\f[CR]ext.COMPRESSED_RGBA8_ETC2_EAC\f[R]
.IP \(bu 2
\f[CR]ext.COMPRESSED_SRGB8_ETC2\f[R]
.IP \(bu 2
\f[CR]ext.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC\f[R]
.IP \(bu 2
\f[CR]ext.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2\f[R]
.IP \(bu 2
\f[CR]ext.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2\f[R]
When using the \(gaWEBGL_compressed_texture_pvrtc\(ga extension:
.IP \(bu 2
\f[CR]ext.COMPRESSED_RGB_PVRTC_4BPPV1_IMG\f[R]
.IP \(bu 2
\f[CR]ext.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG\f[R]
.IP \(bu 2
\f[CR]ext.COMPRESSED_RGB_PVRTC_2BPPV1_IMG\f[R]
.IP \(bu 2
\f[CR]ext.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG\f[R]
When using the \(gaWEBGL_compressed_texture_etc1\(ga extension:
.IP \(bu 2
\f[CR]ext.COMPRESSED_RGB_ETC1_WEBGL\f[R]
When using the \(gaWEBGL_compressed_texture_astc\(ga extension:
.IP \(bu 2
\f[CR]ext.COMPRESSED_RGBA_ASTC_4x4_KHR\f[R]
.IP \(bu 2
\f[CR]ext.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR\f[R]
.IP \(bu 2
\f[CR]ext.COMPRESSED_RGBA_ASTC_5x4_KHR\f[R]
.IP \(bu 2
\f[CR]ext.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR\f[R]
.IP \(bu 2
\f[CR]ext.COMPRESSED_RGBA_ASTC_5x5_KHR\f[R]
.IP \(bu 2
\f[CR]ext.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR\f[R]
.IP \(bu 2
\f[CR]ext.COMPRESSED_RGBA_ASTC_6x5_KHR\f[R]
.IP \(bu 2
\f[CR]ext.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR\f[R]
.IP \(bu 2
\f[CR]ext.COMPRESSED_RGBA_ASTC_6x6_KHR\f[R]
.IP \(bu 2
\f[CR]ext.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR\f[R]
.IP \(bu 2
\f[CR]ext.COMPRESSED_RGBA_ASTC_8x5_KHR\f[R]
.IP \(bu 2
\f[CR]ext.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR\f[R]
.IP \(bu 2
\f[CR]ext.COMPRESSED_RGBA_ASTC_8x6_KHR\f[R]
.IP \(bu 2
\f[CR]ext.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR\f[R]
.IP \(bu 2
\f[CR]ext.COMPRESSED_RGBA_ASTC_8x8_KHR\f[R]
.IP \(bu 2
\f[CR]ext.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR\f[R]
.IP \(bu 2
\f[CR]ext.COMPRESSED_RGBA_ASTC_10x5_KHR\f[R]
.IP \(bu 2
\f[CR]ext.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR\f[R]
.IP \(bu 2
\f[CR]ext.COMPRESSED_RGBA_ASTC_10x6_KHR\f[R]
.IP \(bu 2
\f[CR]ext.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR\f[R]
.IP \(bu 2
\f[CR]ext.COMPRESSED_RGBA_ASTC_10x6_KHR\f[R]
.IP \(bu 2
\f[CR]ext.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR\f[R]
.IP \(bu 2
\f[CR]ext.COMPRESSED_RGBA_ASTC_10x10_KHR\f[R]
.IP \(bu 2
\f[CR]ext.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR\f[R]
.IP \(bu 2
\f[CR]ext.COMPRESSED_RGBA_ASTC_12x10_KHR\f[R]
.IP \(bu 2
\f[CR]ext.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR\f[R]
.IP \(bu 2
\f[CR]ext.COMPRESSED_RGBA_ASTC_12x12_KHR\f[R]
.IP \(bu 2
\f[CR]ext.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR\f[R]
T}
T{
\f[CR]gl.CULL_FACE\f[R]
T}@T{
\(gaGLboolean\(ga
T}@T{
T}
T{
\f[CR]gl.CULL_FACE_MODE\f[R]
T}@T{
\(gaGLenum\(ga
T}@T{
\f[CR]gl.FRONT\f[R], \f[CR]gl.BACK\f[R] or \f[CR]gl.FRONT_AND_BACK\f[R].
See also \(gacullFace\(ga
T}
T{
\f[CR]gl.CURRENT_PROGRAM\f[R]
T}@T{
\(gaWebGLProgram\(ga or \f[CR]null\f[R]
T}@T{
See \(gauseProgram\(ga.
T}
T{
\f[CR]gl.DEPTH_BITS\f[R]
T}@T{
\(gaGLint\(ga
T}@T{
T}
T{
\f[CR]gl.DEPTH_CLEAR_VALUE\f[R]
T}@T{
\(gaGLfloat\(ga
T}@T{
T}
T{
\f[CR]gl.DEPTH_FUNC\f[R]
T}@T{
\(gaGLenum\(ga
T}@T{
T}
T{
\f[CR]gl.DEPTH_RANGE\f[R]
T}@T{
\(gaFloat32Array\(ga (with 2 elements)
T}@T{
T}
T{
\f[CR]gl.DEPTH_TEST\f[R]
T}@T{
\(gaGLboolean\(ga
T}@T{
T}
T{
\f[CR]gl.DEPTH_WRITEMASK\f[R]
T}@T{
\(gaGLboolean\(ga
T}@T{
T}
T{
\f[CR]gl.DITHER\f[R]
T}@T{
\(gaGLboolean\(ga
T}@T{
T}
T{
\f[CR]gl.ELEMENT_ARRAY_BUFFER_BINDING\f[R]
T}@T{
\(gaWebGLBuffer\(ga
T}@T{
T}
T{
\f[CR]gl.FRAMEBUFFER_BINDING\f[R]
T}@T{
\(gaWebGLFramebuffer\(ga or \f[CR]null\f[R]
T}@T{
\f[CR]null\f[R] corresponds to a binding to the default framebuffer.
See also \(gabindFramebuffer\(ga.
T}
T{
\f[CR]gl.FRONT_FACE\f[R]
T}@T{
\(gaGLenum\(ga
T}@T{
\f[CR]gl.CW\f[R] or \f[CR]gl.CCW\f[R].
See also \(gafrontFace\(ga.
T}
T{
\f[CR]gl.GENERATE_MIPMAP_HINT\f[R]
T}@T{
\(gaGLenum\(ga
T}@T{
\f[CR]gl.FASTEST\f[R], \f[CR]gl.NICEST\f[R] or \f[CR]gl.DONT_CARE\f[R].
See also \(gahint\(ga.
T}
T{
\f[CR]gl.GREEN_BITS\f[R]
T}@T{
\(gaGLint\(ga
T}@T{
T}
T{
\f[CR]gl.IMPLEMENTATION_COLOR_READ_FORMAT\f[R]
T}@T{
\(gaGLenum\(ga
T}@T{
T}
T{
\f[CR]gl.IMPLEMENTATION_COLOR_READ_TYPE\f[R]
T}@T{
\(gaGLenum\(ga
T}@T{
T}
T{
\f[CR]gl.LINE_WIDTH\f[R]
T}@T{
\(gaGLfloat\(ga
T}@T{
T}
T{
\f[CR]gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS\f[R]
T}@T{
\(gaGLint\(ga
T}@T{
T}
T{
\f[CR]gl.MAX_CUBE_MAP_TEXTURE_SIZE\f[R]
T}@T{
\(gaGLint\(ga
T}@T{
T}
T{
\f[CR]gl.MAX_FRAGMENT_UNIFORM_VECTORS\f[R]
T}@T{
\(gaGLint\(ga
T}@T{
T}
T{
\f[CR]gl.MAX_RENDERBUFFER_SIZE\f[R]
T}@T{
\(gaGLint\(ga
T}@T{
T}
T{
\f[CR]gl.MAX_TEXTURE_IMAGE_UNITS\f[R]
T}@T{
\(gaGLint\(ga
T}@T{
T}
T{
\f[CR]gl.MAX_TEXTURE_SIZE\f[R]
T}@T{
\(gaGLint\(ga
T}@T{
T}
T{
\f[CR]gl.MAX_VARYING_VECTORS\f[R]
T}@T{
\(gaGLint\(ga
T}@T{
T}
T{
\f[CR]gl.MAX_VERTEX_ATTRIBS\f[R]
T}@T{
\(gaGLint\(ga
T}@T{
T}
T{
\f[CR]gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS\f[R]
T}@T{
\(gaGLint\(ga
T}@T{
T}
T{
\f[CR]gl.MAX_VERTEX_UNIFORM_VECTORS\f[R]
T}@T{
\(gaGLint\(ga
T}@T{
T}
T{
\f[CR]gl.MAX_VIEWPORT_DIMS\f[R]
T}@T{
\(gaInt32Array\(ga (with 2 elements)
T}@T{
T}
T{
\f[CR]gl.PACK_ALIGNMENT\f[R]
T}@T{
\(gaGLint\(ga
T}@T{
T}
T{
\f[CR]gl.POLYGON_OFFSET_FACTOR\f[R]
T}@T{
\(gaGLfloat\(ga
T}@T{
T}
T{
\f[CR]gl.POLYGON_OFFSET_FILL\f[R]
T}@T{
\(gaGLboolean\(ga
T}@T{
T}
T{
\f[CR]gl.POLYGON_OFFSET_UNITS\f[R]
T}@T{
\(gaGLfloat\(ga
T}@T{
T}
T{
\f[CR]gl.RED_BITS\f[R]
T}@T{
\(gaGLint\(ga
T}@T{
T}
T{
\f[CR]gl.RENDERBUFFER_BINDING\f[R]
T}@T{
\(gaWebGLRenderbuffer\(ga or \f[CR]null\f[R]
T}@T{
See \(gabindRenderbuffer\(ga.
T}
T{
\f[CR]gl.RENDERER\f[R]
T}@T{
string
T}@T{
T}
T{
\f[CR]gl.SAMPLE_BUFFERS\f[R]
T}@T{
\(gaGLint\(ga
T}@T{
T}
T{
\f[CR]gl.SAMPLE_COVERAGE_INVERT\f[R]
T}@T{
\(gaGLboolean\(ga
T}@T{
T}
T{
\f[CR]gl.SAMPLE_COVERAGE_VALUE\f[R]
T}@T{
\(gaGLfloat\(ga
T}@T{
T}
T{
\f[CR]gl.SAMPLES\f[R]
T}@T{
\(gaGLint\(ga
T}@T{
T}
T{
\f[CR]gl.SCISSOR_BOX\f[R]
T}@T{
\(gaInt32Array\(ga (with 4 elements)
T}@T{
T}
T{
\f[CR]gl.SCISSOR_TEST\f[R]
T}@T{
\(gaGLboolean\(ga
T}@T{
T}
T{
\f[CR]gl.SHADING_LANGUAGE_VERSION\f[R]
T}@T{
string
T}@T{
T}
T{
\f[CR]gl.STENCIL_BACK_FAIL\f[R]
T}@T{
\(gaGLenum\(ga
T}@T{
T}
T{
\f[CR]gl.STENCIL_BACK_FUNC\f[R]
T}@T{
\(gaGLenum\(ga
T}@T{
T}
T{
\f[CR]gl.STENCIL_BACK_PASS_DEPTH_FAIL\f[R]
T}@T{
\(gaGLenum\(ga
T}@T{
T}
T{
\f[CR]gl.STENCIL_BACK_PASS_DEPTH_PASS\f[R]
T}@T{
\(gaGLenum\(ga
T}@T{
T}
T{
\f[CR]gl.STENCIL_BACK_REF\f[R]
T}@T{
\(gaGLint\(ga
T}@T{
T}
T{
\f[CR]gl.STENCIL_BACK_VALUE_MASK\f[R]
T}@T{
\(gaGLuint\(ga
T}@T{
T}
T{
\f[CR]gl.STENCIL_BACK_WRITEMASK\f[R]
T}@T{
\(gaGLuint\(ga
T}@T{
T}
T{
\f[CR]gl.STENCIL_BITS\f[R]
T}@T{
\(gaGLint\(ga
T}@T{
T}
T{
\f[CR]gl.STENCIL_CLEAR_VALUE\f[R]
T}@T{
\(gaGLint\(ga
T}@T{
T}
T{
\f[CR]gl.STENCIL_FAIL\f[R]
T}@T{
\(gaGLenum\(ga
T}@T{
T}
T{
\f[CR]gl.STENCIL_FUNC\f[R]
T}@T{
\(gaGLenum\(ga
T}@T{
T}
T{
\f[CR]gl.STENCIL_PASS_DEPTH_FAIL\f[R]
T}@T{
\(gaGLenum\(ga
T}@T{
T}
T{
\f[CR]gl.STENCIL_PASS_DEPTH_PASS\f[R]
T}@T{
\(gaGLenum\(ga
T}@T{
T}
T{
\f[CR]gl.STENCIL_REF\f[R]
T}@T{
\(gaGLint\(ga
T}@T{
T}
T{
\f[CR]gl.STENCIL_TEST\f[R]
T}@T{
\(gaGLboolean\(ga
T}@T{
T}
T{
\f[CR]gl.STENCIL_VALUE_MASK\f[R]
T}@T{
\(gaGLuint\(ga
T}@T{
T}
T{
\f[CR]gl.STENCIL_WRITEMASK\f[R]
T}@T{
\(gaGLuint\(ga
T}@T{
T}
T{
\f[CR]gl.SUBPIXEL_BITS\f[R]
T}@T{
\(gaGLint\(ga
T}@T{
T}
T{
\f[CR]gl.TEXTURE_BINDING_2D\f[R]
T}@T{
\(gaWebGLTexture\(ga or \f[CR]null\f[R]
T}@T{
T}
T{
\f[CR]gl.TEXTURE_BINDING_CUBE_MAP\f[R]
T}@T{
\(gaWebGLTexture\(ga or \f[CR]null\f[R]
T}@T{
T}
T{
\f[CR]gl.UNPACK_ALIGNMENT\f[R]
T}@T{
\(gaGLint\(ga
T}@T{
T}
T{
\f[CR]gl.UNPACK_COLORSPACE_CONVERSION_WEBGL\f[R]
T}@T{
\(gaGLenum\(ga
T}@T{
T}
T{
\f[CR]gl.UNPACK_FLIP_Y_WEBGL\f[R]
T}@T{
\(gaGLboolean\(ga
T}@T{
T}
T{
\f[CR]gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL\f[R]
T}@T{
\(gaGLboolean\(ga
T}@T{
T}
T{
\f[CR]gl.VENDOR\f[R]
T}@T{
string
T}@T{
T}
T{
\f[CR]gl.VERSION\f[R]
T}@T{
string
T}@T{
T}
T{
\f[CR]gl.VIEWPORT\f[R]
T}@T{
\(gaInt32Array\(ga (with 4 elements)
T}@T{
T}
.TE
.SS WebGL 2
You can query the following \f[CR]pname\f[R] parameters when using a
\f[CR]WebGL2RenderingContext\f[R].
.PP
.TS
tab(@);
l l l.
T{
Constant
T}@T{
Returned type
T}@T{
Description
T}
_
T{
\f[CR]gl.COPY_READ_BUFFER_BINDING\f[R]
T}@T{
\(gaWebGLBuffer\(ga or \f[CR]null\f[R]
T}@T{
See \(gabindBuffer\(ga.
T}
T{
\f[CR]gl.COPY_WRITE_BUFFER_BINDING\f[R]
T}@T{
\(gaWebGLBuffer\(ga or \f[CR]null\f[R]
T}@T{
See \(gabindBuffer\(ga.
T}
T{
\f[CR]gl.DRAW_BUFFER\f[R]\f[I]\f[CI]i\f[I]\f[R]
T}@T{
\(gaGLenum\(ga
T}@T{
\f[CR]gl.BACK\f[R], \f[CR]gl.NONE\f[R] or
\f[CR]gl.COLOR_ATTACHMENT{0\-15}\f[R].
See also \(gadrawBuffers\(ga.
T}
T{
\f[CR]gl.DRAW_FRAMEBUFFER_BINDING\f[R]
T}@T{
\(gaWebGLFramebuffer\(ga or \f[CR]null\f[R]
T}@T{
\f[CR]null\f[R] corresponds to a binding to the default framebuffer.
See also \(gabindFramebuffer\(ga.
T}
T{
\f[CR]gl.FRAGMENT_SHADER_DERIVATIVE_HINT\f[R]
T}@T{
\(gaGLenum\(ga
T}@T{
\f[CR]gl.FASTEST\f[R], \f[CR]gl.NICEST\f[R] or \f[CR]gl.DONT_CARE\f[R].
See also \(gahint\(ga.
T}
T{
\f[CR]gl.MAX_3D_TEXTURE_SIZE\f[R]
T}@T{
\(gaGLint\(ga
T}@T{
T}
T{
\f[CR]gl.MAX_ARRAY_TEXTURE_LAYERS\f[R]
T}@T{
\(gaGLint\(ga
T}@T{
T}
T{
\f[CR]gl.MAX_CLIENT_WAIT_TIMEOUT_WEBGL\f[R]
T}@T{
\(gaGLint64\(ga
T}@T{
T}
T{
\f[CR]gl.MAX_COLOR_ATTACHMENTS\f[R]
T}@T{
\(gaGLint\(ga
T}@T{
T}
T{
\f[CR]gl.MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS\f[R]
T}@T{
\(gaGLint64\(ga
T}@T{
T}
T{
\f[CR]gl.MAX_COMBINED_UNIFORM_BLOCKS\f[R]
T}@T{
\(gaGLint\(ga
T}@T{
T}
T{
\f[CR]gl.MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS\f[R]
T}@T{
\(gaGLint64\(ga
T}@T{
T}
T{
\f[CR]gl.MAX_DRAW_BUFFERS\f[R]
T}@T{
\(gaGLint\(ga
T}@T{
T}
T{
\f[CR]gl.MAX_ELEMENT_INDEX\f[R]
T}@T{
\(gaGLint64\(ga
T}@T{
T}
T{
\f[CR]gl.MAX_ELEMENTS_INDICES\f[R]
T}@T{
\(gaGLint\(ga
T}@T{
T}
T{
\f[CR]gl.MAX_ELEMENTS_VERTICES\f[R]
T}@T{
\(gaGLint\(ga
T}@T{
T}
T{
\f[CR]gl.MAX_FRAGMENT_INPUT_COMPONENTS\f[R]
T}@T{
\(gaGLint\(ga
T}@T{
T}
T{
\f[CR]gl.MAX_FRAGMENT_UNIFORM_BLOCKS\f[R]
T}@T{
\(gaGLint\(ga
T}@T{
T}
T{
\f[CR]gl.MAX_FRAGMENT_UNIFORM_COMPONENTS\f[R]
T}@T{
\(gaGLint\(ga
T}@T{
T}
T{
\f[CR]gl.MAX_PROGRAM_TEXEL_OFFSET\f[R]
T}@T{
\(gaGLint\(ga
T}@T{
T}
T{
\f[CR]gl.MAX_SAMPLES\f[R]
T}@T{
\(gaGLint\(ga
T}@T{
T}
T{
\f[CR]gl.MAX_SERVER_WAIT_TIMEOUT\f[R]
T}@T{
\(gaGLint64\(ga
T}@T{
T}
T{
\f[CR]gl.MAX_TEXTURE_LOD_BIAS\f[R]
T}@T{
\(gaGLfloat\(ga
T}@T{
T}
T{
\f[CR]gl.MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS\f[R]
T}@T{
\(gaGLint\(ga
T}@T{
T}
T{
\f[CR]gl.MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS\f[R]
T}@T{
\(gaGLint\(ga
T}@T{
T}
T{
\f[CR]gl.MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS\f[R]
T}@T{
\(gaGLint\(ga
T}@T{
T}
T{
\f[CR]gl.MAX_UNIFORM_BLOCK_SIZE\f[R]
T}@T{
\(gaGLint64\(ga
T}@T{
T}
T{
\f[CR]gl.MAX_UNIFORM_BUFFER_BINDINGS\f[R]
T}@T{
\(gaGLint\(ga
T}@T{
T}
T{
\f[CR]gl.MAX_VARYING_COMPONENTS\f[R]
T}@T{
\(gaGLint\(ga
T}@T{
T}
T{
\f[CR]gl.MAX_VERTEX_OUTPUT_COMPONENTS\f[R]
T}@T{
\(gaGLint\(ga
T}@T{
T}
T{
\f[CR]gl.MAX_VERTEX_UNIFORM_BLOCKS\f[R]
T}@T{
\(gaGLint\(ga
T}@T{
T}
T{
\f[CR]gl.MAX_VERTEX_UNIFORM_COMPONENTS\f[R]
T}@T{
\(gaGLint\(ga
T}@T{
T}
T{
\f[CR]gl.MIN_PROGRAM_TEXEL_OFFSET\f[R]
T}@T{
\(gaGLint\(ga
T}@T{
T}
T{
\f[CR]gl.PACK_ROW_LENGTH\f[R]
T}@T{
\(gaGLint\(ga
T}@T{
See \(gapixelStorei\(ga.
T}
T{
\f[CR]gl.PACK_SKIP_PIXELS\f[R]
T}@T{
\(gaGLint\(ga
T}@T{
See \(gapixelStorei\(ga.
T}
T{
\f[CR]gl.PACK_SKIP_ROWS\f[R]
T}@T{
\(gaGLint\(ga
T}@T{
See \(gapixelStorei\(ga.
T}
T{
\f[CR]gl.PIXEL_PACK_BUFFER_BINDING\f[R]
T}@T{
\(gaWebGLBuffer\(ga or \f[CR]null\f[R]
T}@T{
See \(gabindBuffer\(ga.
T}
T{
\f[CR]gl.PIXEL_UNPACK_BUFFER_BINDING\f[R]
T}@T{
\(gaWebGLBuffer\(ga or \f[CR]null\f[R]
T}@T{
See \(gabindBuffer\(ga.
T}
T{
\f[CR]gl.RASTERIZER_DISCARD\f[R]
T}@T{
\(gaGLboolean\(ga
T}@T{
T}
T{
\f[CR]gl.READ_BUFFER\f[R]
T}@T{
\(gaGLenum\(ga
T}@T{
T}
T{
\f[CR]gl.READ_FRAMEBUFFER_BINDING\f[R]
T}@T{
\(gaWebGLFramebuffer\(ga or \f[CR]null\f[R]
T}@T{
\f[CR]null\f[R] corresponds to a binding to the default framebuffer.
See also \(gabindFramebuffer\(ga.
T}
T{
\f[CR]gl.SAMPLE_ALPHA_TO_COVERAGE\f[R]
T}@T{
\(gaGLboolean\(ga
T}@T{
T}
T{
\f[CR]gl.SAMPLE_COVERAGE\f[R]
T}@T{
\(gaGLboolean\(ga
T}@T{
T}
T{
\f[CR]gl.SAMPLER_BINDING\f[R]
T}@T{
\(gaWebGLSampler\(ga or \f[CR]null\f[R]
T}@T{
See \(gabindSampler\(ga.
T}
T{
\f[CR]gl.TEXTURE_BINDING_2D_ARRAY\f[R]
T}@T{
\(gaWebGLTexture\(ga or \f[CR]null\f[R]
T}@T{
See \(gabindTexture\(ga.
T}
T{
\f[CR]gl.TEXTURE_BINDING_3D\f[R]
T}@T{
\(gaWebGLTexture\(ga or \f[CR]null\f[R]
T}@T{
See \(gabindTexture\(ga.
T}
T{
\f[CR]gl.TRANSFORM_FEEDBACK_ACTIVE\f[R]
T}@T{
\(gaGLboolean\(ga
T}@T{
T}
T{
\f[CR]gl.TRANSFORM_FEEDBACK_BINDING\f[R]
T}@T{
\(gaWebGLTransformFeedback\(ga or \f[CR]null\f[R]
T}@T{
See \(gabindTransformFeedback\(ga.
T}
T{
\f[CR]gl.TRANSFORM_FEEDBACK_BUFFER_BINDING\f[R]
T}@T{
\(gaWebGLBuffer\(ga or \f[CR]null\f[R]
T}@T{
See \(gabindBuffer\(ga.
T}
T{
\f[CR]gl.TRANSFORM_FEEDBACK_PAUSED\f[R]
T}@T{
\(gaGLboolean\(ga
T}@T{
T}
T{
\f[CR]gl.UNIFORM_BUFFER_BINDING\f[R]
T}@T{
\(gaWebGLBuffer\(ga or \f[CR]null\f[R]
T}@T{
See \(gabindBuffer\(ga.
T}
T{
\f[CR]gl.UNIFORM_BUFFER_OFFSET_ALIGNMENT\f[R]
T}@T{
\(gaGLint\(ga
T}@T{
See \(gapixelStorei\(ga.
T}
T{
\f[CR]gl.UNPACK_IMAGE_HEIGHT\f[R]
T}@T{
\(gaGLint\(ga
T}@T{
See \(gapixelStorei\(ga.
T}
T{
\f[CR]gl.UNPACK_ROW_LENGTH\f[R]
T}@T{
\(gaGLint\(ga
T}@T{
See \(gapixelStorei\(ga.
T}
T{
\f[CR]gl.UNPACK_SKIP_IMAGES\f[R]
T}@T{
\(gaGLint\(ga
T}@T{
See \(gapixelStorei\(ga.
T}
T{
\f[CR]gl.UNPACK_SKIP_PIXELS\f[R]
T}@T{
\(gaGLint\(ga
T}@T{
See \(gapixelStorei\(ga.
T}
T{
\f[CR]gl.UNPACK_SKIP_ROWS\f[R]
T}@T{
\(gaGLint\(ga
T}@T{
See \(gapixelStorei\(ga.
T}
T{
\f[CR]gl.VERTEX_ARRAY_BINDING\f[R]
T}@T{
\(gaWebGLVertexArrayObject\(ga or \f[CR]null\f[R]
T}@T{
See \(gabindVertexArray\(ga.
T}
.TE
.SS WebGL extensions
You can query the following \f[CR]pname\f[R] parameters when using WebGL
extensions:
.PP
.TS
tab(@);
lw(17.5n) lw(17.5n) lw(17.5n) lw(17.5n).
T{
Constant
T}@T{
Returned type
T}@T{
Extension
T}@T{
Description
T}
_
T{
\f[CR]ext.MAX_TEXTURE_MAX_ANISOTROPY_EXT\f[R]
T}@T{
\(gaGLfloat\(ga
T}@T{
\(gaEXT_texture_filter_anisotropic\(ga
T}@T{
Maximum available anisotropy.
T}
T{
\f[CR]ext.FRAGMENT_SHADER_DERIVATIVE_HINT_OES\f[R]
T}@T{
\(gaGLenum\(ga
T}@T{
\(gaOES_standard_derivatives\(ga
T}@T{
Accuracy of the derivative calculation for the GLSL built\-in functions:
\f[CR]dFdx\f[R], \f[CR]dFdy\f[R], and \f[CR]fwidth\f[R].
T}
T{
\f[CR]ext.MAX_COLOR_ATTACHMENTS_WEBGL\f[R]
T}@T{
\(gaGLint\(ga
T}@T{
\(gaWEBGL_draw_buffers\(ga
T}@T{
The maximum number of framebuffer color attachment points.
T}
T{
\f[CR]ext.MAX_DRAW_BUFFERS_WEBGL\f[R]
T}@T{
\(gaGLint\(ga
T}@T{
\(gaWEBGL_draw_buffers\(ga
T}@T{
The maximum number of draw buffers.
T}
T{
\f[CR]ext.DRAW_BUFFER0_WEBGL\f[R]
.PD 0
.P
.PD
\f[CR]ext.DRAW_BUFFER1_WEBGL\f[R]
.PD 0
.P
.PD
\f[CR]ext.DRAW_BUFFER2_WEBGL\f[R]
.PD 0
.P
.PD
\f[CR]ext.DRAW_BUFFER3_WEBGL\f[R]
.PD 0
.P
.PD
\f[CR]ext.DRAW_BUFFER4_WEBGL\f[R]
.PD 0
.P
.PD
\f[CR]ext.DRAW_BUFFER5_WEBGL\f[R]
.PD 0
.P
.PD
\f[CR]ext.DRAW_BUFFER6_WEBGL\f[R]
.PD 0
.P
.PD
\f[CR]ext.DRAW_BUFFER7_WEBGL\f[R]
.PD 0
.P
.PD
\f[CR]ext.DRAW_BUFFER8_WEBGL\f[R]
.PD 0
.P
.PD
\f[CR]ext.DRAW_BUFFER9_WEBGL\f[R]
.PD 0
.P
.PD
\f[CR]ext.DRAW_BUFFER10_WEBGL\f[R]
.PD 0
.P
.PD
\f[CR]ext.DRAW_BUFFER11_WEBGL\f[R]
.PD 0
.P
.PD
\f[CR]ext.DRAW_BUFFER12_WEBGL\f[R]
.PD 0
.P
.PD
\f[CR]ext.DRAW_BUFFER13_WEBGL\f[R]
.PD 0
.P
.PD
\f[CR]ext.DRAW_BUFFER14_WEBGL\f[R]
.PD 0
.P
.PD
\f[CR]ext.DRAW_BUFFER15_WEBGL\f[R]
T}@T{
\(gaGLenum\(ga
T}@T{
\(gaWEBGL_draw_buffers\(ga
T}@T{
Drawing buffers.
T}
T{
\f[CR]ext.VERTEX_ARRAY_BINDING_OES\f[R]
T}@T{
\(gaWebGLVertexArrayObjectOES\(ga
T}@T{
\(gaOES_vertex_array_object\(ga
T}@T{
Bound vertex array object (VAO).
T}
T{
\f[CR]ext.TIMESTAMP_EXT\f[R]
T}@T{
\(gaGLuint64EXT\(ga
T}@T{
.PP
\(gaEXT_disjoint_timer_query\(ga
T}@T{
The current time.
T}
T{
\f[CR]ext.GPU_DISJOINT_EXT\f[R]
T}@T{
\(gaGLboolean\(ga
T}@T{
\(gaEXT_disjoint_timer_query\(ga
T}@T{
.PP
Returns whether or not the GPU performed any disjoint operation.
T}
T{
\f[CR]ext.MAX_VIEWS_OVR\f[R]
T}@T{
\(gaGLint\(ga
T}@T{
\(gaOVR_multiview2\(ga
T}@T{
Maximum number of views.
T}
.TE
.SH EXAMPLES
.IP
.EX
gl.getParameter(gl.DITHER);
gl.getParameter(gl.VERSION);
gl.getParameter(gl.VIEWPORT);
.EE
.SH SEE ALSO
.IP \(bu 2
\f[CR]WebGLRenderingContext.enable()\f[R]
.IP \(bu 2
\f[CR]WebGLRenderingContext.disable()\f[R]
.IP \(bu 2
\f[CR]EXT_texture_filter_anisotropic\f[R]
.IP \(bu 2
\f[CR]OES_standard_derivatives\f[R]
.IP \(bu 2
\f[CR]WEBGL_draw_buffers\f[R]
.IP \(bu 2
\f[CR]EXT_disjoint_timer_query\f[R]
