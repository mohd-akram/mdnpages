.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "SVGSVGELEMENT.CHECKENCLOSURE" "3JS" "February 2, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
SVGSVGElement.checkEnclosure \- SVGSVGElement: checkEnclosure() method
.SH SYNOPSIS
The \f[CR]checkEnclosure()\f[R] method of the \f[CR]SVGSVGElement\f[R]
interface checks if the rendered content of the given element is
entirely contained within the supplied rectangle.
.PP
Each candidate graphics element is to be considered a match only if the
same graphics element can be a target of pointer events as defined in
\f[CR]pointer\-events\f[R] processing.
.SH SYNTAX
.IP
.EX
checkEnclosure(element, rect)
.EE
.SS Parameters
.TP
\f[B]element\f[R]
An \f[CR]Element\f[R] representing the SVG graphics element to check.
.TP
\f[B]rect\f[R]
An \f[CR]SVGRect\f[R] object that defines the rectangle to check
against.
.SS Return value
A boolean.
.SH EXAMPLES
.SS Checking if an Element is Enclosed in a Rectangle
.IP
.EX
<\f[B]svg\f[R] id=\(dqexampleSVG\(dq width=\(dq200\(dq height=\(dq200\(dq>
  <\f[B]rect\f[R]
    id=\(dqcheckRect\(dq
    x=\(dq10\(dq
    y=\(dq10\(dq
    width=\(dq100\(dq
    height=\(dq100\(dq
    fill=\(dqnone\(dq
    stroke=\(dqred\(dq />
  <\f[B]circle\f[R] id=\(dqtargetElement\(dq cx=\(dq50\(dq cy=\(dq50\(dq r=\(dq30\(dq fill=\(dqblue\(dq />
</\f[B]svg\f[R]>
<\f[B]button\f[R] id=\(dqcheckEnclosureBtn\(dq>Check Enclosure</\f[B]button\f[R]>
<\f[B]pre\f[R] id=\(dqresult\(dq></\f[B]pre\f[R]>
.EE
.IP
.EX
\f[B]const\f[R] svgElement = document.getElementById(\(dqexampleSVG\(dq);
\f[B]const\f[R] checkRect = svgElement.getElementById(\(dqcheckRect\(dq);
\f[B]const\f[R] targetElement = svgElement.getElementById(\(dqtargetElement\(dq);
\f[B]const\f[R] resultDisplay = document.getElementById(\(dqresult\(dq);

document.getElementById(\(dqcheckEnclosureBtn\(dq).addEventListener(\(dqclick\(dq, () \f[B]=>\f[R] {
  \f[B]const\f[R] rect = svgElement.createSVGRect();
  rect.x = checkRect.x.baseVal.value;
  rect.y = checkRect.y.baseVal.value;
  rect.width = checkRect.width.baseVal.value;
  rect.height = checkRect.height.baseVal.value;

  \f[B]const\f[R] isEnclosed = svgElement.checkEnclosure(targetElement, rect);
  resultDisplay.textContent = \(gaIs the circle enclosed in the rectangle? ${isEnclosed}\(ga;
});
.EE
.SH SEE ALSO
.IP \(bu 2
\f[CR]SVGSVGElement.checkIntersection()\f[R]
