.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "INTL.LOCALE.NUMBERINGSYSTEM" "3JS" "June 20, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Intl.Locale.numberingSystem \- Intl.Locale.prototype.numberingSystem
.SH SYNOPSIS
The \f[B]\f[CB]numberingSystem\f[B]\f[R] accessor property of
\f[CR]Intl.Locale\f[R] instances returns the \c
.UR https://en.wikipedia.org/wiki/Numeral_system
numeral system
.UE \c
\ for this locale.
.SH DESCRIPTION
A numeral system is a system for expressing numbers.
The \f[CR]numberingSystem\f[R] property\(cqs value is set at
construction time, either through the \f[CR]nu\f[R] key of the locale
identifier or through the \f[CR]numberingSystem\f[R] option of the
\f[CR]Intl.Locale()\f[R] constructor.
The latter takes priority if they are both present; and if neither is
present, the property has value \f[CR]undefined\f[R].
.PP
For a list of supported numbering system types, see
\f[CR]Intl.supportedValuesOf()\f[R].
.SH EXAMPLES
Like other locale subtags, the numbering system type can be added to the
\f[CR]Intl.Locale\f[R] object via the locale string, or a configuration
object argument to the constructor.
.SS Adding a numbering system via the locale string
In the \c
.UR https://www.unicode.org/reports/tr35/
Unicode locale string spec
.UE \c
, numbering system types are locale key \(lqextension subtags\(rq.
These subtags add additional data about the locale, and are added to
locale identifiers by using the \f[CR]\-u\f[R] extension.
Thus, the numbering system type can be added to the initial locale
identifier string that is passed into the \f[CR]Intl.Locale()\f[R]
constructor.
To add the numbering system type, first add the \f[CR]\-u\f[R] extension
key to the string.
Next, add the \f[CR]\-nu\f[R] extension to indicate that you are adding
a numbering system.
Finally, add the numbering system type to the string.
.IP
.EX
\f[B]const\f[R] locale = \f[B]new\f[R] Intl.Locale(\(dqfr\-Latn\-FR\-u\-nu\-mong\(dq);
console.log(locale.numberingSystem); \f[I]// \(dqmong\(dq\f[R]
.EE
.SS Adding a numbering system via the configuration object argument
The \f[CR]Intl.Locale()\f[R] constructor has an optional configuration
object argument, which can contain any of several extension types,
including numbering system types.
Set the \f[CR]numberingSystem\f[R] property of the configuration object
to your desired numbering system type, and then pass it into the
constructor.
.IP
.EX
\f[B]const\f[R] locale = \f[B]new\f[R] Intl.Locale(\(dqen\-Latn\-US\(dq, { numberingSystem: \(dqlatn\(dq });
console.log(locale.numberingSystem); \f[I]// \(dqlatn\(dq\f[R]
.EE
.SH SEE ALSO
.IP \(bu 2
\f[CR]Intl.Locale\f[R]
.IP \(bu 2
\f[CR]Intl.Locale.prototype.getNumberingSystems()\f[R]
.IP \(bu 2
\c
.UR https://github.com/unicode-org/cldr/blob/main/common/supplemental/numberingSystems.xml
Details on the standard Unicode numeral systems
.UE \c
