.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "RTCStatsReport.entries" "JS" "June 6, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
RTCStatsReport.entries \- RTCStatsReport: entries() method
.SH SYNOPSIS
The \f[B]\f[CB]entries()\f[B]\f[R] method of the
\f[CR]RTCStatsReport\f[R] interface returns a new iterator object that
can be used to iterate through the key/value pairs for each element in
the \f[CR]RTCStatsReport\f[R] object, in insertion order.
.PP
The keys are unique \f[CR]id\f[R] values for monitored statistics
objects from which the statistics are derived, and the associated values
are statistics dictionary objects.
.PP
The method is otherwise the same as \f[CR]Map.prototype.entries()\f[R].
.SH SYNTAX
.IP
.EX
entries()
.EE
.SS Parameters
None.
.SS Return value
A new iterable iterator object.
.SH EXAMPLES
This example shows how to iterate through a \f[CR]RTCStatsReport\f[R]
using the iterator returned by \f[CR]entries()\f[R].
.PP
Given a variable \f[CR]myPeerConnection\f[R], which is an instance of
\f[CR]RTCPeerConnection\f[R], the code calls \f[CR]getStats()\f[R] with
\f[CR]await\f[R] to wait for the statistics report.
It then uses a for\&...of loop, with the iterator returned by
\f[CR]entries()\f[R], to iterate through the entries.
The properties of statistics objects with the \f[CR]type\f[R] of
\f[CR]outbound\-rtp\f[R] are logged to the console (other objects are
discarded).
.IP
.EX
\f[B]const\f[R] stats = \f[B]await\f[R] myPeerConnection.getStats();

\f[B]for\f[R] (\f[B]const\f[R] stat \f[B]of\f[R] stats.entries()) {
  \f[B]if\f[R] (stat.type != \[dq]outbound\-rtp\[dq]) \f[B]continue\f[R];
  Object.keys(stat).forEach((statName) \f[B]=>\f[R] {
    console.log(\[ga]${statName}: ${report[statName]}\[ga]);
  });
}
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]Map.prototype.entries()\f[R]
.IP \[bu] 2
\f[CR]RTCStatsReport.values()\f[R]
.IP \[bu] 2
\f[CR]RTCStatsReport.keys()\f[R]
