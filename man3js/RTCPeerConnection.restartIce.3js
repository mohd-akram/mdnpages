.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "RTCPeerConnection.restartIce" "JS" "March 25, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
RTCPeerConnection.restartIce \- RTCPeerConnection: restartIce() method
.SH SYNOPSIS
The \f[B]\f[CB]restartIce()\f[B]\f[R] method of the
\f[CR]RTCPeerConnection\f[R] interface allows a web application to
request that ICE candidate gathering be redone on both ends of the
connection.
This simplifies the process by allowing the same method to be used by
either the caller or the receiver to trigger an ICE restart.
.PP
After \f[CR]restartIce()\f[R] returns, the offer returned by the next
call to \f[CR]createOffer()\f[R] is automatically configured to trigger
ICE restart on both the local peer (once the local peer has been set)
and on the remote peer, once the offer is sent across your signaling
mechanism and the remote peer has set its description as well.
.PP
\f[CR]restartIce()\f[R] causes the \f[CR]negotiationneeded\f[R] event to
be fired on the \f[CR]RTCPeerConnection\f[R] to inform the application
that it should perform negotiation using its signaling channel.
.PP
If negotiation fails to complete\[em]either due to rollback or because
incoming offers are in the process of being negotiated\[em]the
\f[CR]RTCPeerConnection\f[R] will remember that you requested ICE
restart.
The next time the connection\[cq]s \f[CR]signalingState\f[R] changes to
\f[CR]stable\f[R], the connection will fire the
\f[CR]negotiationneeded\f[R] event.
This process continues until an ICE restart has been successfully
completed.
.SH SYNTAX
.IP
.EX
restartIce()
.EE
.SS Parameters
None.
.SS Return value
None (\f[CR]undefined\f[R]).
.SH USAGE NOTES
After calling \f[CR]restartIce()\f[R], the next offer created using
\f[CR]createOffer()\f[R] will initiate ICE restart once sent to the
remote peer over your signaling mechanism.
Restarting ICE essentially resets ICE so that it creates all new
candidates using new credentials.
Existing media transmissions continue uninterrupted during this process.
.PP
For details about how ICE restart works, see ICE restart and RFC 5245,
section 9.1.1.1: ICE specification.
.SH EXAMPLES
This example creates a handler for the
\f[CR]iceconnectionstatechange\f[R] event that handles a transition to
the \f[CR]failed\f[R] state by restarting ICE in order to try again.
.IP
.EX
pc.addEventListener(\[dq]iceconnectionstatechange\[dq], (event) \f[B]=>\f[R] {
  \f[B]if\f[R] (pc.iceConnectionState === \[dq]failed\[dq]) {
    \f[I]/* possibly reconfigure the connection in some way here */\f[R]
    \f[I]/* then request ICE restart */\f[R]
    pc.restartIce();
  }
});
.EE
.PP
With this code in place, a transition to the \f[CR]failed\f[R] state
during ICE negotiation will cause a \f[CR]negotiationneeded\f[R] event
to be fired, in response to which your code should renegotiate as usual.
However, because you have called \f[CR]restartIce()\f[R], your call to
\f[CR]createOffer()\f[R] which occurs in the handler for
\f[CR]negotiationneeded\f[R] will trigger an ICE restart rather than
just a regular renegotiation.
.SH SEE ALSO
.IP \[bu] 2
WebRTC API
.IP \[bu] 2
Lifetime of a WebRTC session
.IP \[bu] 2
Signaling and video calling
