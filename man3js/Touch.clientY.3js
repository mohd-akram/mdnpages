.\" Automatically generated by Pandoc 3.4
.\"
.TH "Touch.clientY" "JS" "September 1, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Touch.clientY \- Touch: clientY property
.SH SYNOPSIS
The \f[B]\f[CB]Touch.clientY\f[B]\f[R] read\-only property returns the Y
coordinate of the touch point relative to the browser\[cq]s viewport,
not including any scroll offset.
.SH VALUE
A \f[CR]double\f[R] floating point value representing the Y coordinate
of the touch point relative to the viewport, not including any scroll
offset.
.SH EXAMPLES
This example illustrates using the \f[CR]Touch\f[R] object\[cq]s
\f[CR]Touch.clientX\f[R] and \f[CR]Touch.clientY\f[R] properties.
The \f[CR]Touch.clientX\f[R] property is the horizontal coordinate of a
touch point relative to the browser\[cq]s viewport excluding any scroll
offset.
The \f[CR]Touch.clientY\f[R] property is the vertical coordinate of the
touch point relative to the browser\[cq]s viewport excluding any scroll
offset.
.PP
In this example, we assume the user initiates a touch on an element with
an id of \f[CR]source\f[R], moves within the element or out of the
element and then releases contact with the surface.
When the \f[CR]touchend\f[R] event handler is invoked, the changes in
the \f[CR]Touch.clientX\f[R] and \f[CR]Touch.clientY\f[R] coordinates,
from the starting touch point to the ending touch point, are calculated.
.IP
.EX
\f[I]// Register touchstart and touchend listeners for element \[aq]source\[aq]\f[R]
\f[B]const\f[R] src = document.getElementById(\[dq]source\[dq]);
\f[B]let\f[R] clientX;
\f[B]let\f[R] clientY;

src.addEventListener(
  \[dq]touchstart\[dq],
  (e) \f[B]=>\f[R] {
    \f[I]// Cache the client X/Y coordinates\f[R]
    clientX = e.touches[0].clientX;
    clientY = e.touches[0].clientY;
  },
  \f[B]false\f[R],
);

src.addEventListener(
  \[dq]touchend\[dq],
  (e) \f[B]=>\f[R] {
    \f[B]let\f[R] deltaX;
    \f[B]let\f[R] deltaY;

    \f[I]// Compute the change in X and Y coordinates.\f[R]
    \f[I]// The first touch point in the changedTouches\f[R]
    \f[I]// list is the touch point that was just removed from the surface.\f[R]
    deltaX = e.changedTouches[0].clientX \- clientX;
    deltaY = e.changedTouches[0].clientY \- clientY;

    \f[I]// Process the data\&...\f[R]
  },
  \f[B]false\f[R],
);
.EE
