.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "ReadableByteStreamController.enqueue" "JS" "April 22, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
ReadableByteStreamController.enqueue \- ReadableByteStreamController:
enqueue() method
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]enqueue()\f[B]\f[R] method of the
\f[CR]ReadableByteStreamController\f[R] interface enqueues a given chunk
on the associated readable byte stream (the chunk is copied into the
stream\[cq]s internal queues).
.PP
This should only be used to transfer data to the queue when
\f[CR]byobRequest\f[R] is \f[CR]null\f[R].
.SH SYNTAX
.IP
.EX
enqueue(chunk)
.EE
.SS Parameters
.TP
\f[B]chunk\f[R]
The chunk to enqueue.
.SS Return value
None (\f[CR]undefined\f[R]).
.SS Exceptions
.TP
\f[B]TypeError\f[R]
Thrown if the source object is not a
\f[CR]ReadableByteStreamController\f[R], or the stream cannot be read
for some other reason, or the chunk is not an object, or the chunk\[cq]s
internal array buffer is non\-existent, zero\-length, or detached.
It is also thrown if the stream has been closed.
.SH EXAMPLES
The example in Using readable byte streams > Creating a readable socket
push byte stream shows how you can use \f[CR]enqueue()\f[R] to copy data
to the stream if there is no outstanding \f[CR]byobRequest\f[R].
If there is a \f[CR]byobRequest\f[R] then it should be used!
.PP
The code below shows data being read into an \f[CR]ArrayBuffer\f[R]
using a \[lq]hypothetical\[rq] \f[CR]socket.readInto()\f[R] method and
then enqueued (but only if data was actually copied):
.IP
.EX
\f[B]const\f[R] buffer = \f[B]new\f[R] ArrayBuffer(DEFAULT_CHUNK_SIZE);
bytesRead = socket.readInto(buffer, 0, DEFAULT_CHUNK_SIZE);
\f[B]if\f[R] (bytesRead === 0) {
  controller.close();
} \f[B]else\f[R] {
  controller.enqueue(\f[B]new\f[R] Uint8Array(buffer, 0, bytesRead));
}
.EE
.SH SEE ALSO
.IP \[bu] 2
Using readable byte streams
.IP \[bu] 2
\f[CR]ReadableByteStreamController\f[R]
