.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "LARGESTCONTENTFULPAINT.TOJSON" "3JS" "January 13, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
LargestContentfulPaint.toJSON \- LargestContentfulPaint: toJSON() method
.SH SYNOPSIS
The \f[B]\f[CB]toJSON()\f[B]\f[R] method of the
\f[CR]LargestContentfulPaint\f[R] interface is a serializer; it returns
a JSON representation of the \f[CR]LargestContentfulPaint\f[R] object.
.SH SYNTAX
.IP
.EX
toJSON()
.EE
.SS Parameters
None.
.SS Return value
A \f[CR]JSON\f[R] object that is the serialization of the
\f[CR]LargestContentfulPaint\f[R] object.
.PP
The JSON doesn\(cqt contain the \f[CR]element\f[R] property because it
is of type \f[CR]Element\f[R], which doesn\(cqt provide a
\f[CR]toJSON()\f[R] operation.
.SH EXAMPLES
.SS Using the toJSON method
In this example, calling \f[CR]entry.toJSON()\f[R] returns a JSON
representation of the \f[CR]LargestContentfulPaint\f[R] object.
.IP
.EX
\f[B]const\f[R] observer = \f[B]new\f[R] PerformanceObserver((list) \f[B]=>\f[R] {
  list.getEntries().forEach((entry) \f[B]=>\f[R] {
    console.log(entry.toJSON());
  });
});

observer.observe({ type: \(dqlargest\-contentful\-paint\(dq, buffered: \f[B]true\f[R] });
.EE
.PP
This would log a JSON object like so:
.IP
.EX
{
  \(dqname\(dq: \(dq\(dq,
  \(dqentryType\(dq: \(dqlargest\-contentful\-paint\(dq,
  \(dqstartTime\(dq: 468.2,
  \(dqduration\(dq: 0,
  \(dqsize\(dq: 19824,
  \(dqrenderTime\(dq: 468.2,
  \(dqloadTime\(dq: 0,
  \(dqid\(dq: \(dq\(dq,
  \(dqurl\(dq: \(dq\(dq
}
.EE
.PP
To get a JSON string, you can use \f[CR]JSON.stringify(entry)\f[R]
directly; it will call \f[CR]toJSON()\f[R] automatically.
.SH SEE ALSO
.IP \(bu 2
\f[CR]JSON\f[R]
