.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "HTMLInputElement.selectionDirection" "JS" "July 26, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
HTMLInputElement.selectionDirection \- HTMLInputElement:
selectionDirection property
.SH SYNOPSIS
The \f[B]\f[CB]selectionDirection\f[B]\f[R] property of the
\f[CR]HTMLInputElement\f[R] interface is a string that indicates the
direction in which the user is selecting the text.
.SH VALUE
A string.
It can have one of the following values:
.TP
\f[B]forward\f[R]
The user is extending the selection towards the end of the input text.
.TP
\f[B]backward\f[R]
The user is extending the selection towards the start of the input text.
.TP
\f[B]none\f[R]
The user is not extending the selection.
.RS
.PP
\f[B]Note:\f[R] On Windows, the direction indicates the position of the
caret relative to the selection: a \[lq]forward\[rq] selection has the
caret at the end of the selection and a \[lq]backward\[rq] selection has
the caret at the start of the selection.
Windows has no \[lq]none\[rq] direction.
.RE
.RS
.PP
\f[B]Note:\f[R] On Mac, the direction indicates which end of the
selection is affected when the user adjusts the size of the selection
using the arrow keys with the Shift modifier: the \[lq]forward\[rq]
direction means the end of the selection is modified, and the
\[lq]backward\[rq] direction means the start of the selection is
modified.
The \[lq]none\[rq] direction is the default on Mac, it indicates that no
particular direction has yet been selected.
The user sets the direction implicitly when first adjusting the
selection, based on which directional arrow key was used.
.RE
.SH EXAMPLES
.SS HTML
.IP
.EX
<\f[B]label\f[R] for=\[dq]selectionDirection\[dq]>selectionDirection property</\f[B]label\f[R]>
<\f[B]input\f[R] type=\[dq]text\[dq] id=\[dq]selectionDirection\[dq] value=\[dq]MDN\[dq] />
<\f[B]p\f[R] id=\[dq]direction\[dq]></\f[B]p\f[R]>
.EE
.SS JavaScript
.IP
.EX
\f[B]const\f[R] textSelectionDirection = document.querySelector(\[dq]#selectionDirection\[dq]);
\f[B]const\f[R] pConsole = document.querySelector(\[dq]#direction\[dq]);
pConsole.textContent =
  \[dq]Selection direction : \[dq] + textSelectionDirection.selectionDirection;
.EE
.SS Result
.SH SEE ALSO
.IP \[bu] 2
\f[CR]HTMLTextAreaElement.selectionDirection\f[R] property
.IP \[bu] 2
\f[CR]HTMLInputElement.selectionStart\f[R] property
.IP \[bu] 2
\f[CR]HTMLInputElement.selectionEnd\f[R] property
.IP \[bu] 2
\f[CR]HTMLInputElement.setSelectionRange\f[R] method
