.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "Document.createNSResolver" "JS" "April 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Document.createNSResolver \- Document: createNSResolver() method
.SH SYNOPSIS
Creates an \f[CR]XPathNSResolver\f[R] which resolves namespaces with
respect to the definitions in scope for a specified node.
.SH SYNTAX
.IP
.EX
createNSResolver(node)
.EE
.SS Parameters
.IP \[bu] 2
\f[CR]node\f[R] is the node to be used as a context for namespace
resolution.
.SS Return value
.IP \[bu] 2
\f[CR]nsResolver\f[R] is an XPathNSResolver object.
.SH NOTES
Adapts any DOM node to resolve namespaces so that an XPath expression
can be easily evaluated relative to the context of the node where it
appeared within the document.
This adapter works like the DOM Level 3 method
\f[CR]lookupNamespaceURI\f[R] on nodes in resolving the
\f[CR]namespaceURI\f[R] from a given prefix using the current
information available in the node\[cq]s hierarchy at the time
\f[CR]lookupNamespaceURI\f[R] is called.
Also correctly resolves the implicit \f[CR]xml\f[R] prefix.
.PP
Note, XPath defines QNames without prefix to match only elements in the
null namespace.
There is no way in XPath to pick up the default namespace as applied to
a regular element reference (e.g., \f[CR]p[\[at]id=\[aq]_myid\[aq]\f[R]]
for \f[CR]xmlns=\[aq]http://www.w3.org/1999/xhtml\[aq]\f[R]).
To match default elements in a non\-null namespace, you either have to
refer to a particular element using a form such as
\f[CR]*namespace\-uri()=http://www.w3.org/1999/xhtml and name()=p[\[at]id=\[aq]_myid\[aq]]\f[R]
(this approach works well for dynamic XPath expressions where the
namespaces might not be known) or use prefixed name tests, and create a
namespace resolver mapping the prefix to the namespace.
Read more on how to create a user defined namespace resolver if you wish
to take the latter approach.
.PP
\f[CR]createNSResolver\f[R] was introduced in DOM Level 3.
.SH SEE ALSO
.IP \[bu] 2
document.evaluate
.IP \[bu] 2
Introduction to using XPath in JavaScript
