.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "HTMLBUTTONELEMENT.REPORTVALIDITY" "3JS" "May 27, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
HTMLButtonElement.reportValidity \- HTMLButtonElement: reportValidity()
method
.SH SYNOPSIS
The \f[B]\f[CB]reportValidity()\f[B]\f[R] method of the
\f[CR]HTMLButtonElement\f[R] interface performs the same validity
checking steps as the \f[CR]checkValidity()\f[R] method.
In addition, if the \f[CR]invalid\f[R] event is not canceled, the
browser displays the problem to the user.
.SH SYNTAX
.IP
.EX
reportValidity()
.EE
.SS Parameters
None.
.SS Return value
Returns \f[CR]true\f[R] if the element\(cqs value has no validity
problems; otherwise, returns \f[CR]false\f[R].
.SS Examples
This far fetched example demonstrates how a button can be made invalid.
.SS HTML
We create a form that only contains a few buttons:
.IP
.EX
<\f[B]form\f[R] action=\(dq#\(dq id=\(dqform\(dq method=\(dqpost\(dq>
  <\f[B]p\f[R]>
    <\f[B]input\f[R] type=\(dqsubmit\(dq value=\(dqSubmit\(dq />
    <\f[B]button\f[R] id=\(dqexample\(dq type=\(dqsubmit\(dq value=\(dqfixed\(dq>THIS BUTTON</\f[B]button\f[R]>
  </\f[B]p\f[R]>
  <\f[B]p\f[R]>
    <\f[B]button\f[R] type=\(dqbutton\(dq id=\(dqreport\(dq>reportValidity()</\f[B]button\f[R]>
  </\f[B]p\f[R]>
</\f[B]form\f[R]>

<\f[B]p\f[R] id=\(dqlog\(dq></\f[B]p\f[R]>
.EE
.SS CSS
We add a bit of CSS, including \f[CR]:valid\f[R] and \f[CR]:invalid\f[R]
styles for our button:
.IP
.EX
input[type=\(dqsubmit\(dq],
button {
  \f[B]background\-color\f[R]: #33a;
  \f[B]border\f[R]: none;
  \f[B]font\-size\f[R]: 1.3rem;
  \f[B]padding\f[R]: 5px 10px;
  \f[B]color\f[R]: white;
}
button\f[BI]:invalid\f[R] {
  \f[B]background\-color\f[R]: #a33;
}
button\f[BI]:valid\f[R] {
  \f[B]background\-color\f[R]: #3a3;
}
.EE
.SS JavaScript
We include a function to toggle the value, content, and validation
message of the example button:
.IP
.EX
\f[B]const\f[R] reportButton = document.querySelector(\(dq#report\(dq);
\f[B]const\f[R] exampleButton = document.querySelector(\(dq#example\(dq);
\f[B]const\f[R] output = document.querySelector(\(dq#log\(dq);

reportButton.addEventListener(\(dqclick\(dq, () \f[B]=>\f[R] {
  \f[B]const\f[R] reportVal = exampleButton.reportValidity();
  output.innerHTML = \(gareportValidity returned: ${reportVal} <br/> custom error: ${exampleButton.validationMessage}\(ga;
});

exampleButton.addEventListener(\(dqinvalid\(dq, () \f[B]=>\f[R] {
  console.log(\(dqInvalid event fired on exampleButton\(dq);
});

exampleButton.addEventListener(\(dqclick\(dq, (e) \f[B]=>\f[R] {
  e.preventDefault();
  \f[B]if\f[R] (exampleButton.value === \(dqerror\(dq) {
    breakOrFixButton(\(dqfixed\(dq);
  } \f[B]else\f[R] {
    breakOrFixButton(\(dqerror\(dq);
  }
  output.innerHTML = \(gavalidation message: ${exampleButton.validationMessage} <br/> custom error: ${exampleButton.validationMessage}\(ga;
});

\f[B]const\f[R] breakOrFixButton = () \f[B]=>\f[R] {
  \f[B]const\f[R] state = toggleButton();
  \f[B]if\f[R] (state === \(dqerror\(dq) {
    exampleButton.setCustomValidity(\(dqThis is a custom error message\(dq);
  } \f[B]else\f[R] {
    exampleButton.setCustomValidity(\(dq\(dq);
  }
};

\f[B]const\f[R] toggleButton = () \f[B]=>\f[R] {
  \f[B]if\f[R] (exampleButton.value === \(dqerror\(dq) {
    exampleButton.value = \(dqfixed\(dq;
    exampleButton.innerHTML = \(dqNo error\(dq;
  } \f[B]else\f[R] {
    exampleButton.value = \(dqerror\(dq;
    exampleButton.innerHTML = \(dqCustom error\(dq;
  }
  \f[B]return\f[R] exampleButton.value;
};
.EE
.SS Results
The button is by default valid.
Activate \(lqTHIS BUTTON\(rq to change the value, content, and add a
custom error message.
Activating the \(lqreportValidity()\(rq button checks the validity of
the button, reporting the custom error message to the user and throwing
an \f[CR]invalid\f[R] event if the button does not pass constraint
validation due to the message.
.SH SEE ALSO
.IP \(bu 2
\f[CR]HTMLButtonElement.checkValidity()\f[R]
.IP \(bu 2
\f[CR]<button>\f[R]
.IP \(bu 2
\f[CR]<form>\f[R]
.IP \(bu 2
Learn: Client\-side form validation
.IP \(bu 2
Guide: Constraint validation
.IP \(bu 2
CSS \f[CR]:valid\f[R] and \f[CR]:invalid\f[R] pseudo\-classes
