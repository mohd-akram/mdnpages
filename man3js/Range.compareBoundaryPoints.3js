.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "RANGE.COMPAREBOUNDARYPOINTS" "3JS" "March 21, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Range.compareBoundaryPoints \- Range: compareBoundaryPoints() method
.SH SYNOPSIS
The \f[B]\f[CB]compareBoundaryPoints()\f[B]\f[R] method of the
\f[CR]Range\f[R] interface compares the boundary points of the
\f[CR]Range\f[R] with those of another range.
.SH SYNTAX
.IP
.EX
compareBoundaryPoints(how, otherRange)
.EE
.SS Parameters
.TP
\f[B]how\f[R]
A constant describing the comparison method:
.RS
.IP \(bu 2
\f[CR]Range.END_TO_END\f[R] compares the end boundary\-point of this
\f[CR]Range\f[R] to the end boundary\-point of \f[CR]otherRange\f[R].
.IP \(bu 2
\f[CR]Range.END_TO_START\f[R] compares the start boundary\-point of this
\f[CR]Range\f[R] to the end boundary\-point of \f[CR]otherRange\f[R].
.IP \(bu 2
\f[CR]Range.START_TO_END\f[R] compares the end boundary\-point of this
\f[CR]Range\f[R] to the start boundary\-point of \f[CR]otherRange\f[R].
.IP \(bu 2
\f[CR]Range.START_TO_START\f[R] compares the start boundary\-point of
this \f[CR]Range\f[R] to the start boundary\-point of
\f[CR]otherRange\f[R].
.RE
.TP
\f[B]otherRange\f[R]
A \f[CR]Range\f[R] to compare boundary points with the range.
.SS Return value
A number.
.IP \(bu 2
\f[CR]\-1\f[R] if the specified boundary\-point of this \f[CR]Range\f[R]
is before the specified boundary\-point of \f[CR]otherRange\f[R].
.IP \(bu 2
\f[CR]0\f[R] if the specified boundary\-point of this \f[CR]Range\f[R]
is the same as the specified boundary\-point of \f[CR]otherRange\f[R].
.IP \(bu 2
\f[CR]1\f[R] if the specified boundary\-point of this \f[CR]Range\f[R]
is after the specified boundary\-point of \f[CR]otherRange\f[R].
.PP
This API is consistent with the general convention that, when comparing
A to B, a negative number means A comes before B and vice versa (see for
example \f[CR]Array.prototype.sort()\f[R]).
The ranges are compared in the direction of \f[CR]this\f[R] to
\f[CR]other\f[R], the same as
\f[CR]String.prototype.localeCompare()\f[R].
However, the boundary points are specified in the reverse order for the
\f[CR]how\f[R] parameter: \f[CR]END_TO_START\f[R] compares the
\f[I]start\f[R] of \f[CR]this\f[R] to the \f[I]end\f[R] of
\f[CR]other\f[R].
.SS Exceptions
.TP
\f[B]NotSupportedError\f[R] \f[B]DOMException\f[R]
Thrown if the value of the \f[CR]how\f[R] parameter is invalid.
.SH EXAMPLES
Below, we create two ranges on the same text node and compare their
different boundary points.
.IP
.EX
\f[B]const\f[R] text = \f[B]new\f[R] Text(\(dq0123456789\(dq);

\f[B]const\f[R] thisRange = \f[B]new\f[R] Range();
thisRange.setStart(text, 1);
thisRange.setEnd(text, 6);

\f[B]const\f[R] otherRange = \f[B]new\f[R] Range();
otherRange.setStart(text, 1);
otherRange.setEnd(text, 4);

\f[I]// The ranges look like this:\f[R]
\f[I]// thisRange start   v\-\-\-\-\-\-\-\-\-v thisRange end\f[R]
\f[I]//                  0 1 2 3 4 5 6 7 8 9\f[R]
\f[I]// otherRange start  \(ha\-\-\-\-\-\(ha otherRange end\f[R]

\f[I]// this start is *same as* other start\f[R]
thisRange.compareBoundaryPoints(Range.START_TO_START, otherRange); \f[I]// 0\f[R]

\f[I]// this end is *after* other start\f[R]
thisRange.compareBoundaryPoints(Range.START_TO_END, otherRange); \f[I]// 1\f[R]

\f[I]// this start is *after* other end\f[R]
thisRange.compareBoundaryPoints(Range.END_TO_START, otherRange); \f[I]// \-1\f[R]

\f[I]// this end is *after* other end\f[R]
thisRange.compareBoundaryPoints(Range.END_TO_END, otherRange); \f[I]// 1\f[R]
.EE
.SH SEE ALSO
.IP \(bu 2
The DOM interfaces index
