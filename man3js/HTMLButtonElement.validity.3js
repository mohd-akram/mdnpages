.\" Automatically generated by Pandoc 3.4
.\"
.TH "HTMLButtonElement.validity" "JS" "December 24, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
HTMLButtonElement.validity \- HTMLButtonElement: validity property
.SH SYNOPSIS
The \f[B]\f[CB]validity\f[B]\f[R] read\-only property of the
\f[CR]HTMLButtonElement\f[R] interface returns a
\f[CR]ValidityState\f[R] object that represents the validity states this
element is in.
.SH VALUE
A \f[CR]ValidityState\f[R] object.
.SH EXAMPLES
The following example demonstrates that a \f[CR]<button>\f[R] is in an
invalid state when a \f[CR]customError\f[R] is set; in this state, the
\f[CR]validityState\f[R]\[cq]s \f[CR]validity\f[R] property is
\f[CR]false\f[R], while \f[CR]checkValidity()\f[R] returns
\f[CR]true\f[R] if the button\[cq]s \f[CR]type\f[R] is not
\f[CR]\[dq]submit\[dq]\f[R], because such buttons are not candidates for
constraint validation.
.IP
.EX
\f[B]const\f[R] button = document.getElementById(\[dq]myButton\[dq]);
button.setCustomValidity(\[dq]This button is invalid.\[dq]);
\f[B]const\f[R] validityState = button.validity;
console.log(validityState.valid); \f[I]// false\f[R]
console.log(validityState.customError); \f[I]// true\f[R]
console.log(button.checkValidity()); \f[I]// false if the button is of the \[dq]submit\[dq] type, true otherwise\f[R]
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]HTMLButtonElement.checkValidity()\f[R]
.IP \[bu] 2
\f[CR]<button>\f[R]
.IP \[bu] 2
\f[CR]<form>\f[R]
.IP \[bu] 2
Learn: Client\-side form validation
.IP \[bu] 2
Guide: Constraint validation
