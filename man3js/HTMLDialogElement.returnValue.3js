.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "HTMLDialogElement.returnValue" "JS" "August 14, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
HTMLDialogElement.returnValue \- HTMLDialogElement: returnValue property
.SH SYNOPSIS
The \f[B]\f[CB]returnValue\f[B]\f[R] property of the
\f[CR]HTMLDialogElement\f[R] interface gets or sets the return value for
the \f[CR]<dialog>\f[R], usually to indicate which button the user
pressed to close it.
.SH VALUE
A string representing the \f[CR]returnValue\f[R] of the dialog.
.SH EXAMPLES
The following example displays a button to open a \f[CR]<dialog>\f[R]
containing a form via the \f[CR]showModal()\f[R] method.
The script assigns the \f[CR]returnValue\f[R] an initial value of
\f[CR]initialValue\f[R].
The confirm button (\f[CR]confirmBtn\f[R]) submits the form with
validation and the \[lq]X\[rq] button submits the form without
validation.
Submitting a form with a \f[CR]method=\[dq]dialog\[dq]\f[R] closes the
dialog and sets the return value to the \f[CR]value\f[R], if any, of the
\f[CR]button\f[R] or \f[CR]input\f[R] elements of
\f[CR]type=submit\f[R].
The reset button has an event handler that closes the dialog; it has no
impact on the \f[CR]returnValue\f[R].
Neither does closing the dialog with the Esc key.
.IP
.EX
\f[I]<!\-\- Simple pop\-up dialog box containing a form \-\->\f[R]
<\f[B]dialog\f[R] id=\[dq]favDialog\[dq]>
  <\f[B]form\f[R] method=\[dq]dialog\[dq]>
    <\f[B]input\f[R]
      type=\[dq]submit\[dq]
      aria\-label=\[dq]close\[dq]
      value=\[dq]X\[dq]
      name=\[dq]Xbutton\[dq]
      formnovalidate />
    <\f[B]p\f[R]>
      <\f[B]label\f[R]
        >Favorite animal:
        <\f[B]select\f[R] name=\[dq]favAnimal\[dq] required>
          <\f[B]option\f[R]></\f[B]option\f[R]>
          <\f[B]option\f[R]>Brine shrimp</\f[B]option\f[R]>
          <\f[B]option\f[R]>Red panda</\f[B]option\f[R]>
          <\f[B]option\f[R]>Spider monkey</\f[B]option\f[R]>
        </\f[B]select\f[R]>
      </\f[B]label\f[R]>
    </\f[B]p\f[R]>
    <\f[B]menu\f[R]>
      <\f[B]button\f[R] type=\[dq]reset\[dq] value=\[dq]resetBtn\[dq]>Reset</\f[B]button\f[R]>
      <\f[B]button\f[R] type=\[dq]submit\[dq] value=\[dq]confirmBtn\[dq]>Confirm</\f[B]button\f[R]>
    </\f[B]menu\f[R]>
  </\f[B]form\f[R]>
</\f[B]dialog\f[R]>

<\f[B]p\f[R]>
  <\f[B]button\f[R] id=\[dq]openDialog\[dq]>Open Dialog</\f[B]button\f[R]>
</\f[B]p\f[R]>
<\f[B]p\f[R] id=\[dq]text\[dq]></\f[B]p\f[R]>

<\f[B]script\f[R]>
  (() \f[B]=>\f[R] {
    \f[B]const\f[R] openDialog = document.getElementById(\[dq]openDialog\[dq]);
    \f[B]const\f[R] dialog = document.getElementById(\[dq]favDialog\[dq]);
    \f[B]const\f[R] text = document.getElementById(\[dq]text\[dq]);
    \f[B]const\f[R] reset = document.querySelector(\[dq][type=\[aq]reset\[aq]]\[dq]);
    dialog.returnValue = \[dq]initialValue\[dq];

    \f[B]function\f[R] openCheck(dialog) {
      \f[B]if\f[R] (dialog.open) {
        text.innerText = \[dq]Dialog open\[dq];
      } \f[B]else\f[R] {
        text.innerText = \[dq]Dialog closed\[dq];
      }
    }

    \f[B]function\f[R] handleUserInput(returnValue) {
      \f[B]if\f[R] (!returnValue) {
        text.innerText += \[dq]. There was no return value\[dq];
      } \f[B]else\f[R] {
        text.innerText += \[dq]. Return value: \[dq] + returnValue;
      }
    }

    \f[I]// \[dq]Open Dialog\[dq] button opens the <dialog> modally\f[R]
    openDialog.addEventListener(\[dq]click\[dq], () \f[B]=>\f[R] {
      dialog.showModal();
      openCheck(dialog);
      handleUserInput(dialog.returnValue);
    });

    reset.addEventListener(\[dq]click\[dq], () \f[B]=>\f[R] {
      dialog.close();
    });

    \f[I]// when the dialog is closed, no matter how it is closed\f[R]
    dialog.addEventListener(\[dq]close\[dq], () \f[B]=>\f[R] {
      openCheck(dialog);
      handleUserInput(dialog.returnValue);
    });
  })();
</\f[B]script\f[R]>
<\f[B]style\f[R]>
  [aria\-label=\[dq]close\[dq]] {
    \f[B]appearance\f[R]: none;
    \f[B]border\-radius\f[R]: 50%;
    \f[B]border\f[R]: 1px solid;
    \f[B]float\f[R]: right;
  }
</\f[B]style\f[R]>
.EE
.SS Result
.SH SEE ALSO
.IP \[bu] 2
The HTML element implementing this interface: \f[CR]<dialog>\f[R].
