.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "Date.setUTCMilliseconds" "JS" "April 28, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Date.setUTCMilliseconds \- Date.prototype.setUTCMilliseconds()
.SH SYNOPSIS
The \f[B]\f[CB]setUTCMilliseconds()\f[B]\f[R] method of \f[CR]Date\f[R]
instances changes the milliseconds for this date according to universal
time.
.SH SYNTAX
.IP
.EX
setUTCMilliseconds(millisecondsValue)
.EE
.SS Parameters
.TP
\f[B]millisecondsValue\f[R]
An integer between 0 and 999 representing the milliseconds.
.SS Return value
Changes the \f[CR]Date\f[R] object in place, and returns its new
timestamp.
If \f[CR]millisecondsValue\f[R] is \f[CR]NaN\f[R] (or other values that
get coerced to \f[CR]NaN\f[R], such as \f[CR]undefined\f[R]), the date
is set to Invalid Date and \f[CR]NaN\f[R] is returned.
.SH DESCRIPTION
If a parameter you specify is outside of the expected range,
\f[CR]setUTCMilliseconds()\f[R] attempts to update the date information
in the \f[CR]Date\f[R] object accordingly.
For example, if you use 1100 for \f[CR]millisecondsValue\f[R], the
seconds stored in the \f[CR]Date\f[R] object will be incremented by 1,
and 100 will be used for milliseconds.
.SH EXAMPLES
.SS Using setUTCMilliseconds()
.IP
.EX
\f[B]const\f[R] theBigDay = \f[B]new\f[R] Date();
theBigDay.setUTCMilliseconds(500);
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]Date.prototype.getUTCMilliseconds()\f[R]
.IP \[bu] 2
\f[CR]Date.prototype.setMilliseconds()\f[R]
