.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "RTCICECANDIDATESTATS" "3JS" "May 14, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
RTCIceCandidateStats \- RTCIceCandidateStats
.SH SYNOPSIS
The \f[B]\f[CB]RTCIceCandidateStats\f[B]\f[R] dictionary of the WebRTC
API is used to report statistics related to an
\f[CR]RTCIceCandidate\f[R].
.PP
The statistics can be obtained by iterating the
\f[CR]RTCStatsReport\f[R] returned by
\f[CR]RTCPeerConnection.getStats()\f[R] until you find a report with the
\f[CR]type\f[R] of \f[CR]local\-candidate\f[R].
.SH INSTANCE PROPERTIES
.TP
\f[B]address\f[R] \f[I](optional)\f[R]
A string containing the address of the candidate.
This value may be an IPv4 address, an IPv6 address, or a
fully\-qualified domain name.
This property was previously named \f[CR]ip\f[R] and only accepted IP
addresses.
Corresponds to \f[CR]RTCIceCandidate.address\f[R].
.TP
\f[B]candidateType\f[R]
A string matching one of the values in \f[CR]RTCIceCandidate.type\f[R],
indicating what kind of candidate the object provides statistics for.
.TP
\f[B]deleted\f[R]
A boolean indicating whether or not the candidate has been deleted or
released.
.TP
\f[B]foundation\f[R] \f[I](optional)\f[R] \f[I](experimental)\f[R]
A string that uniquely identifies the candidate across multiple
transports.
Corresponds to \f[CR]RTCIceCandidate.foundation\f[R].
.TP
\f[B]port\f[R] \f[I](optional)\f[R]
The network port number used by the candidate.
Corresponds to \f[CR]RTCIceCandidate.port\f[R].
.TP
\f[B]priority\f[R] \f[I](optional)\f[R]
The candidate\(cqs priority.
Corresponds to \f[CR]RTCIceCandidate.priority\f[R].
.TP
\f[B]protocol\f[R] \f[I](optional)\f[R]
A string specifying the protocol (\f[CR]tcp\f[R] or \f[CR]udp\f[R]) used
to transmit data on the \f[CR]port\f[R].
Corresponds to \f[CR]RTCIceCandidate.protocol\f[R].
.TP
\f[B]relayProtocol\f[R]
A string specifying the protocol being used by a local ICE candidate to
communicate with the TURN server.
.TP
\f[B]transportId\f[R]
A string uniquely identifying the transport object that was inspected in
order to obtain the \f[CR]RTCTransportStats\f[R] associated with the
candidate corresponding to these statistics.
.TP
\f[B]url\f[R] \f[I](optional)\f[R]
A string specifying the URL of the ICE server from which the described
candidate was obtained.
This property is \f[I]only\f[R] available for local candidates.
.TP
\f[B]usernameFragment\f[R] \f[I](optional)\f[R] \f[I](experimental)\f[R]
A string containing the ICE username fragment (\(lqice\-ufrag\(rq).
Corresponds to \f[CR]RTCIceCandidate.usernameFragment\f[R].
.SS Common instance properties
The following properties are common to all WebRTC statistics objects.
.TP
\f[B]id\f[R]
A string that uniquely identifies the object that is being monitored to
produce this set of statistics.
.TP
\f[B]timestamp\f[R]
A \f[CR]DOMHighResTimeStamp\f[R] object indicating the time at which the
sample was taken for this statistics object.
.TP
\f[B]type\f[R]
A string with the value \f[CR]\(dqlocal\-candidate\(dq\f[R], indicating
the type of statistics that the object contains.
.SH EXAMPLES
Given a variable \f[CR]myPeerConnection\f[R], which is an instance of
\f[CR]RTCPeerConnection\f[R], the code below uses \f[CR]await\f[R] to
wait for the statistics report, and then iterates it using
\f[CR]RTCStatsReport.forEach()\f[R].
It then filters the dictionaries for just those reports that have the
type of \f[CR]local\-candidate\f[R] and logs the result.
.IP
.EX
\f[B]const\f[R] stats = \f[B]await\f[R] myPeerConnection.getStats();

stats.forEach((report) \f[B]=>\f[R] {
  \f[B]if\f[R] (report.type === \(dqlocal\-candidate\(dq) {
    \f[I]// Log the ICE candidate information\f[R]
    console.log(report);
  }
});
.EE
