.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "PERFORMANCEOBSERVERENTRYLIST" "3JS" "October 12, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
PerformanceObserverEntryList \- PerformanceObserverEntryList
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]PerformanceObserverEntryList\f[B]\f[R] interface is a
list of performance events that were explicitly observed via the
\f[CR]observe()\f[R] method.
.SH INSTANCE METHODS
.TP
\f[B]PerformanceObserverEntryList.getEntries()\f[R]
Returns a list of all explicitly observed \f[CR]PerformanceEntry\f[R]
objects.
.TP
\f[B]PerformanceObserverEntryList.getEntriesByType()\f[R]
Returns a list of all explicitly observed \f[CR]PerformanceEntry\f[R]
objects of the given entry type.
.TP
\f[B]PerformanceObserverEntryList.getEntriesByName()\f[R]
Returns a list of all explicitly observed \f[CR]PerformanceEntry\f[R]
objects based on the given name and entry type.
.SH EXAMPLE
.SS Using PerformanceObserverEntryList
In the following example, \f[CR]list\f[R] is the
\f[CR]PerformanceObserverEntryList\f[R] object.
The \f[CR]getEntries()\f[R] method is called to get all explicitly
observed \f[CR]PerformanceEntry\f[R] objects which are \(lqmeasure\(rq
and \(lqmark\(rq in this case.
.IP
.EX
\f[B]function\f[R] perfObserver(list, observer) {
  list.getEntries().forEach((entry) \f[B]=>\f[R] {
    \f[B]if\f[R] (entry.entryType === \(dqmark\(dq) {
      console.log(\(ga${entry.name}\(aqs startTime: ${entry.startTime}\(ga);
    }
    \f[B]if\f[R] (entry.entryType === \(dqmeasure\(dq) {
      console.log(\(ga${entry.name}\(aqs duration: ${entry.duration}\(ga);
    }
  });
}
\f[B]const\f[R] observer = \f[B]new\f[R] PerformanceObserver(perfObserver);
observer.observe({ entryTypes: [\(dqmeasure\(dq, \(dqmark\(dq] });
.EE
