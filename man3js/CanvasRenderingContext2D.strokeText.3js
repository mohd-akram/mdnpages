.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "CanvasRenderingContext2D.strokeText" "JS" "April 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
CanvasRenderingContext2D.strokeText \- CanvasRenderingContext2D:
strokeText() method
.SH SYNOPSIS
The \f[CR]CanvasRenderingContext2D\f[R] method
\f[B]\f[CB]strokeText()\f[B]\f[R], part of the Canvas 2D API, strokes
\[em] that is, draws the outlines of \[em] the characters of a text
string at the specified coordinates.
An optional parameter allows specifying a maximum width for the rendered
text, which the user agent will achieve by condensing the text or by
using a lower font size.
.PP
This method draws directly to the canvas without modifying the current
path, so any subsequent \f[CR]fill()\f[R] or \f[CR]stroke()\f[R] calls
will have no effect on it.
.RS
.PP
\f[B]Note:\f[R] Use the \f[CR]fillText()\f[R] method to fill the text
characters rather than having just their outlines drawn.
.RE
.SH SYNTAX
.IP
.EX
strokeText(text, x, y)
strokeText(text, x, y, maxWidth)
.EE
.SS Parameters
.TP
\f[B]text\f[R]
A string specifying the text string to render into the context.
The text is rendered using the settings specified by \f[CR]font\f[R],
\f[CR]textAlign\f[R], \f[CR]textBaseline\f[R], and \f[CR]direction\f[R].
.TP
\f[B]x\f[R]
The x\-axis coordinate of the point at which to begin drawing the text.
.TP
\f[B]y\f[R]
The y\-axis coordinate of the point at which to begin drawing the text.
.TP
\f[B]maxWidth\f[R] \f[I](optional)\f[R]
The maximum width the text may be once rendered.
If not specified, there is no limit to the width of the text.
However, if this value is provided, the user agent will adjust the
kerning, select a more horizontally condensed font (if one is available
or can be generated without loss of quality), or scale down to a smaller
font size in order to fit the text in the specified width.
.SS Return value
None (\f[CR]undefined\f[R]).
.SH EXAMPLES
.SS Drawing text outlines
This example writes the words \[lq]Hello world\[rq] using the
\f[CR]strokeText()\f[R] method.
.SS HTML
First, we need a canvas to draw into.
This code creates a context 400 pixels wide and 150 pixels high.
.IP
.EX
<\f[B]canvas\f[R] id=\[dq]canvas\[dq] width=\[dq]400\[dq] height=\[dq]150\[dq]></\f[B]canvas\f[R]>
.EE
.SS JavaScript
The JavaScript code for this example follows.
.IP
.EX
\f[B]const\f[R] canvas = document.getElementById(\[dq]canvas\[dq]);
\f[B]const\f[R] ctx = canvas.getContext(\[dq]2d\[dq]);

ctx.font = \[dq]50px serif\[dq];
ctx.strokeText(\[dq]Hello world\[dq], 50, 90);
.EE
.PP
This code obtains a reference to the \f[CR]<canvas>\f[R], then gets a
reference to its 2D graphics context.
.PP
With that in hand, we set the \f[CR]font\f[R] to 50\-pixel\-tall
\[lq]serif\[rq] (the user\[cq]s default \c
.UR https://en.wikipedia.org/wiki/Serif
serif
.UE \c
\ font), then call \f[CR]strokeText()\f[R] to draw the text \[lq]Hello
world,\[rq] starting at the coordinates (50, 90).
.SS Result
.SS Restricting the text size
This example writes the words \[lq]Hello world,\[rq] restricting its
width to 140 pixels.
.SS HTML
.IP
.EX
<\f[B]canvas\f[R] id=\[dq]canvas\[dq] width=\[dq]400\[dq] height=\[dq]150\[dq]></\f[B]canvas\f[R]>
.EE
.SS JavaScript
.IP
.EX
\f[B]const\f[R] canvas = document.getElementById(\[dq]canvas\[dq]);
\f[B]const\f[R] ctx = canvas.getContext(\[dq]2d\[dq]);

ctx.font = \[dq]50px serif\[dq];
ctx.strokeText(\[dq]Hello world\[dq], 50, 90, 140);
.EE
.SS Result
.SH SEE ALSO
.IP \[bu] 2
Drawing text
.IP \[bu] 2
The interface defining this method: \f[CR]CanvasRenderingContext2D\f[R]
.IP \[bu] 2
\f[CR]CanvasRenderingContext2D.fillText()\f[R]
