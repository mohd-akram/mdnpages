.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "HTMLCanvasElement.captureStream" "JS" "July 26, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
HTMLCanvasElement.captureStream \- HTMLCanvasElement: captureStream()
method
.SH SYNOPSIS
The \f[B]\f[CB]captureStream()\f[B]\f[R] method of the
\f[CR]HTMLCanvasElement\f[R] interface returns a \f[CR]MediaStream\f[R]
which includes a \f[CR]CanvasCaptureMediaStreamTrack\f[R] containing a
real\-time video capture of the canvas\[cq]s contents.
.SH SYNTAX
.IP
.EX
captureStream()
captureStream(frameRate)
.EE
.SS Parameters
.TP
\f[B]frameRate\f[R] \f[I](optional)\f[R]
A double\-precision floating\-point value that indicates the rate of
capture of each frame.
If not set, a new frame will be captured each time the canvas changes;
if set to \f[CR]0\f[R], frames will not be captured automatically;
instead, they will only be captured when the returned track\[cq]s
\f[CR]requestFrame()\f[R] method is called.
.SS Return value
A reference to a \f[CR]MediaStream\f[R] object, which has a single
\f[CR]CanvasCaptureMediaStreamTrack\f[R] in it.
.SS Exceptions
.TP
\f[B]NotSupportedError\f[R] \f[B]DOMException\f[R]
Thrown if the value of \f[CR]frameRate\f[R] is negative.
.TP
\f[B]SecurityError\f[R] \f[B]DOMException\f[R]
The canvas\[cq]s bitmap is not origin clean; at least some of its
contents have or may have been loaded from a site other than the one
from which the document itself was loaded.
.SH EXAMPLE
.IP
.EX
\f[I]// Find the canvas element to capture\f[R]
\f[B]const\f[R] canvasElt = document.querySelector(\[dq]canvas\[dq]);

\f[I]// Get the stream\f[R]
\f[B]const\f[R] stream = canvasElt.captureStream(25); \f[I]// 25 FPS\f[R]

\f[I]// Do things to the stream\f[R]
\f[I]// E.g. Send it to another computer using an RTCPeerConnection\f[R]
\f[I]//      pc is an RTCPeerConnection created elsewhere\f[R]
stream.getTracks().forEach((track) \f[B]=>\f[R] pc.addTrack(track, stream));
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]HTMLMediaElement.captureStream()\f[R], which allows capturing a
stream from a media element.
.IP \[bu] 2
\f[CR]MediaStream\f[R]
.IP \[bu] 2
Media Capture and Streams API
