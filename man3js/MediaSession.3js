.\" Automatically generated by Pandoc 3.4
.\"
.TH "MediaSession" "JS" "December 16, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
MediaSession \- MediaSession
.SH SYNOPSIS
The \f[B]\f[CB]MediaSession\f[B]\f[R] interface of the Media Session API
allows a web page to provide custom behaviors for standard media
playback interactions, and to report metadata that can be sent by the
user agent to the device or operating system for presentation in
standardized user interface elements.
.PP
For example, a smartphone might have a standard panel in its lock screen
that provides controls for media playback and information display.
A browser on the device can use \f[CR]MediaSession\f[R] to make browser
playback controllable from that standard/global user interface.
.SH INSTANCE PROPERTIES
.TP
\f[B]metadata\f[R]
Returns an instance of \f[CR]MediaMetadata\f[R], which contains rich
media metadata for display in a platform UI.
.TP
\f[B]playbackState\f[R]
Indicates whether the current media session is playing.
Valid values are \f[CR]none\f[R], \f[CR]paused\f[R], or
\f[CR]playing\f[R].
.SH INSTANCE METHODS
.TP
\f[B]setActionHandler()\f[R]
Sets an action handler for a media session action, such as play or
pause.
.TP
\f[B]setCameraActive()\f[R] \f[I](experimental)\f[R]
Indicates to the user agent whether the user\[cq]s camera is considered
to be active.
.TP
\f[B]setMicrophoneActive()\f[R] \f[I](experimental)\f[R]
Indicates to the user agent whether the user\[cq]s microphone is
considered to be currently muted.
.TP
\f[B]setPositionState()\f[R]
Sets the current playback position and speed of the media currently
being presented.
.SH EXAMPLES
.SS Setting up action handlers for a music player
The following example creates a new media session and assigns action
handlers to it:
.IP
.EX
\f[B]if\f[R] (\[dq]mediaSession\[dq] \f[B]in\f[R] navigator) {
  navigator.mediaSession.metadata = \f[B]new\f[R] MediaMetadata({
    title: \[dq]Unforgettable\[dq],
    artist: \[dq]Nat King Cole\[dq],
    album: \[dq]The Ultimate Collection (Remastered)\[dq],
    artwork: [
      {
        src: \[dq]https://dummyimage.com/96x96\[dq],
        sizes: \[dq]96x96\[dq],
        type: \[dq]image/png\[dq],
      },
      {
        src: \[dq]https://dummyimage.com/128x128\[dq],
        sizes: \[dq]128x128\[dq],
        type: \[dq]image/png\[dq],
      },
      {
        src: \[dq]https://dummyimage.com/192x192\[dq],
        sizes: \[dq]192x192\[dq],
        type: \[dq]image/png\[dq],
      },
      {
        src: \[dq]https://dummyimage.com/256x256\[dq],
        sizes: \[dq]256x256\[dq],
        type: \[dq]image/png\[dq],
      },
      {
        src: \[dq]https://dummyimage.com/384x384\[dq],
        sizes: \[dq]384x384\[dq],
        type: \[dq]image/png\[dq],
      },
      {
        src: \[dq]https://dummyimage.com/512x512\[dq],
        sizes: \[dq]512x512\[dq],
        type: \[dq]image/png\[dq],
      },
    ],
  });

  navigator.mediaSession.setActionHandler(\[dq]play\[dq], () \f[B]=>\f[R] {
    \f[I]/* Code excerpted. */\f[R]
  });
  navigator.mediaSession.setActionHandler(\[dq]pause\[dq], () \f[B]=>\f[R] {
    \f[I]/* Code excerpted. */\f[R]
  });
  navigator.mediaSession.setActionHandler(\[dq]stop\[dq], () \f[B]=>\f[R] {
    \f[I]/* Code excerpted. */\f[R]
  });
  navigator.mediaSession.setActionHandler(\[dq]seekbackward\[dq], () \f[B]=>\f[R] {
    \f[I]/* Code excerpted. */\f[R]
  });
  navigator.mediaSession.setActionHandler(\[dq]seekforward\[dq], () \f[B]=>\f[R] {
    \f[I]/* Code excerpted. */\f[R]
  });
  navigator.mediaSession.setActionHandler(\[dq]seekto\[dq], () \f[B]=>\f[R] {
    \f[I]/* Code excerpted. */\f[R]
  });
  navigator.mediaSession.setActionHandler(\[dq]previoustrack\[dq], () \f[B]=>\f[R] {
    \f[I]/* Code excerpted. */\f[R]
  });
  navigator.mediaSession.setActionHandler(\[dq]nexttrack\[dq], () \f[B]=>\f[R] {
    \f[I]/* Code excerpted. */\f[R]
  });
  navigator.mediaSession.setActionHandler(\[dq]skipad\[dq], () \f[B]=>\f[R] {
    \f[I]/* Code excerpted. */\f[R]
  });
  navigator.mediaSession.setActionHandler(\[dq]togglecamera\[dq], () \f[B]=>\f[R] {
    \f[I]/* Code excerpted. */\f[R]
  });
  navigator.mediaSession.setActionHandler(\[dq]togglemicrophone\[dq], () \f[B]=>\f[R] {
    \f[I]/* Code excerpted. */\f[R]
  });
  navigator.mediaSession.setActionHandler(\[dq]hangup\[dq], () \f[B]=>\f[R] {
    \f[I]/* Code excerpted. */\f[R]
  });
}
.EE
.PP
The following example sets up two functions for playing and pausing,
then uses them as callbacks with the relevant action handlers.
.IP
.EX
\f[B]const\f[R] actionHandlers = [
  \f[I]// play\f[R]
  [
    \[dq]play\[dq],
    \f[B]async\f[R] () \f[B]=>\f[R] {
      \f[I]// play our audio\f[R]
      \f[B]await\f[R] audioEl.play();
      \f[I]// set playback state\f[R]
      navigator.mediaSession.playbackState = \[dq]playing\[dq];
      \f[I]// update our status element\f[R]
      updateStatus(allMeta[index], \[dq]Action: play  |  Track is playing\&...\[dq]);
    },
  ],
  [
    \[dq]pause\[dq],
    () \f[B]=>\f[R] {
      \f[I]// pause out audio\f[R]
      audioEl.pause();
      \f[I]// set playback state\f[R]
      navigator.mediaSession.playbackState = \[dq]paused\[dq];
      \f[I]// update our status element\f[R]
      updateStatus(allMeta[index], \[dq]Action: pause  |  Track has been paused\&...\[dq]);
    },
  ],
];

\f[B]for\f[R] (\f[B]const\f[R] [action, handler] \f[B]of\f[R] actionHandlers) {
  \f[B]try\f[R] {
    navigator.mediaSession.setActionHandler(action, handler);
  } \f[B]catch\f[R] (error) {
    console.log(\[ga]The media session action \[dq]${action}\[dq] is not supported yet.\[ga]);
  }
}
.EE
.SS Using action handlers to control a slide presentation
The \f[CR]\[dq]previousslide\[dq]\f[R] and
\f[CR]\[dq]nextslide\[dq]\f[R] action handlers can be used to handle
moving forward and backward through a slide presentation, for example
when the user puts their presentation into a Picture\-in\-Picture
window, and presses the browser\-supplied controls for navigating
through slides.
.IP
.EX
\f[B]try\f[R] {
  navigator.mediaSession.setActionHandler(\[dq]previousslide\[dq], () \f[B]=>\f[R] {
    log(\[aq]> User clicked \[dq]Previous Slide\[dq] icon.\[aq]);
    \f[B]if\f[R] (slideNumber > 1) slideNumber\-\-;
    updateSlide();
  });
} \f[B]catch\f[R] (error) {
  log(\[aq]Warning! The \[dq]previousslide\[dq] media session action is not supported.\[aq]);
}

\f[B]try\f[R] {
  navigator.mediaSession.setActionHandler(\[dq]nextslide\[dq], () \f[B]=>\f[R] {
    log(\[aq]> User clicked \[dq]Next Slide\[dq] icon.\[aq]);
    slideNumber++;
    updateSlide();
  });
} \f[B]catch\f[R] (error) {
  log(\[aq]Warning! The \[dq]nextslide\[dq] media session action is not supported.\[aq]);
}
.EE
.PP
See \c
.UR https://googlechrome.github.io/samples/media-session/slides.html
Presenting Slides / Media Session Sample
.UE \c
\ for a working example.
