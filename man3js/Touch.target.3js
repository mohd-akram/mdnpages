.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "TOUCH.TARGET" "3JS" "July 25, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Touch.target \- Touch: target property
.SH SYNOPSIS
The read\-only \f[B]\f[CB]target\f[B]\f[R] property of the
\f[CR]Touch\f[R] interface returns the (\f[CR]EventTarget\f[R]) on which
the touch contact started when it was first placed on the surface, even
if the touch point has since moved outside the interactive area of that
element or even been removed from the document.
Note that if the target element is removed from the document, events
will still be targeted at it, and hence won\(cqt necessarily bubble up
to the window or document anymore.
If there is any risk of an element being removed while it is being
touched, the best practice is to attach the touch listeners directly to
the target.
.SH VALUE
The \f[CR]EventTarget\f[R] the \f[CR]Touch\f[R] object applies to.
.SH EXAMPLES
This example illustrates how to access the \f[CR]Touch\f[R] object\(cqs
\f[CR]Touch.target\f[R] property.
The \f[CR]Touch.target\f[R] property is an \f[CR]Element\f[R]
(\f[CR]EventTarget\f[R]) on which a touch point is started when contact
is first placed on the surface.
.PP
In following simple code snippet, we assume the user initiates one or
more touch contacts on the \f[CR]source\f[R] element.
When the \f[CR]touchstart\f[R] event handler for this element is
invoked, each touch point\(cqs \f[CR]Touch.target\f[R] property is
accessed via the event\(cqs \f[CR]TouchEvent.targetTouches\f[R] list.
.IP
.EX
\f[I]// Register a touchmove listener for the \(aqsource\(aq element\f[R]
\f[B]const\f[R] src = document.getElementById(\(dqsource\(dq);

src.addEventListener(
  \(dqtouchstart\(dq,
  (e) \f[B]=>\f[R] {
    \f[I]// Iterate through the touch points that were activated\f[R]
    \f[I]// for this element.\f[R]
    \f[B]for\f[R] (\f[B]let\f[R] i = 0; i < e.targetTouches.length; i++) {
      console.log(\(gatouchpoint[${i}].target = ${e.targetTouches[i].target}\(ga);
    }
  },
  \f[B]false\f[R],
);
.EE
