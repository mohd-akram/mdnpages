'\" t
.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "Intl.Locale.getTimeZones" "JS" "July 26, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Intl.Locale.getTimeZones \- Intl.Locale.prototype.getTimeZones()
.SH SYNOPSIS
The \f[B]\f[CB]getTimeZones()\f[B]\f[R] method of \f[CR]Intl.Locale\f[R]
instances returns a list of supported time zones for this locale.
.RS
.PP
\f[B]Note:\f[R] In some versions of some browsers, this method was
implemented as an accessor property called \f[CR]timeZones\f[R].
However, because it returns a new array on each access, it is now
implemented as a method to prevent the situation of
\f[CR]locale.timeZones === locale.timeZones\f[R] returning
\f[CR]false\f[R].
Check the browser compatibility table for details.
.RE
.SH SYNTAX
.IP
.EX
getTimeZones()
.EE
.SS Parameters
None.
.SS Return value
An array of strings representing supported time zones for the associated
\f[CR]Locale\f[R], where each value is an \c
.UR https://en.wikipedia.org/wiki/Daylight_saving_time#IANA_time_zone_database
IANA time zone canonical name
.UE \c
, sorted in alphabetical order.
If the locale identifier does not contain a region subtag, the returned
value is \f[CR]undefined\f[R].
.PP
Note that while the IANA database changes from time to time, \c
.UR https://unicode.org/reports/tr35/#Time_Zone_Identifiers
the Unicode CLDR database (which browsers use) keeps old time zone names
for stability purposes
.UE \c
\&.
For example, here are a few notable name changes:
.PP
.TS
tab(@);
l l.
T{
Current IANA name
T}@T{
CDLR database
T}
_
T{
\f[CR]America/Argentina/Buenos_Aires\f[R]
T}@T{
\f[CR]America/Buenos_Aires\f[R]
T}
T{
\f[CR]Asia/Kolkata\f[R]
T}@T{
\f[CR]Asia/Calcutta\f[R]
T}
T{
\f[CR]Asia/Ho_Chi_Minh\f[R]
T}@T{
\f[CR]Asia/Saigon\f[R]
T}
T{
\f[CR]Europe/Kyiv\f[R]
T}@T{
\f[CR]Europe/Kiev\f[R]
T}
.TE
.PP
Some browsers (Firefox) override these legacy names, while others
don\[cq]t (Safari and Chrome).
For more information, check the \c
.UR https://github.com/unicode-org/cldr-json/blob/main/cldr-json/cldr-bcp47/bcp47/timezone.json
CLDR database
.UE \c
\&.
(IANA names are marked with \f[CR]\[dq]_iana\[dq]\f[R], if different.)
There is \c
.UR https://github.com/tc39/proposal-canonical-tz
an effort in TC39 to properly handle these canonical identifiers
.UE \c
, which also contains links to related CLDR issues.
.SH EXAMPLES
.SS Obtaining supported time zones
List supported time zones for a given \f[CR]Locale\f[R].
.IP
.EX
\f[B]const\f[R] arEG = \f[B]new\f[R] Intl.Locale(\[dq]ar\-EG\[dq]);
console.log(arEG.getTimeZones()); \f[I]// [\[dq]Africa/Cairo\[dq]]\f[R]
.EE
.IP
.EX
\f[B]const\f[R] jaJP = \f[B]new\f[R] Intl.Locale(\[dq]ja\-JP\[dq]);
console.log(jaJP.getTimeZones()); \f[I]// [\[dq]Asia/Tokyo\[dq]]\f[R]
.EE
.IP
.EX
\f[B]const\f[R] ar = \f[B]new\f[R] Intl.Locale(\[dq]ar\[dq]);
console.log(ar.getTimeZones()); \f[I]// undefined\f[R]
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]Intl.Locale\f[R]
.IP \[bu] 2
\c
.UR https://en.wikipedia.org/wiki/Daylight_saving_time#IANA_time_zone_database
IANA time zone database
.UE \c
\ on Wikipedia
