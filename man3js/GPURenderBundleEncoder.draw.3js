.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "GPURENDERBUNDLEENCODER.DRAW" "3JS" "June 18, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
GPURenderBundleEncoder.draw \- GPURenderBundleEncoder: draw() method
.SH SYNOPSIS
\f[B]Secure context:\f[R] This feature is available only in secure
contexts (HTTPS).
.PP
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]draw()\f[B]\f[R] method of the
\f[CR]GPURenderBundleEncoder\f[R] interface draws primitives based on
the vertex buffers provided by \f[CR]setVertexBuffer()\f[R].
.RS
.PP
\f[B]Note:\f[R] This method is functionally identical to its equivalent
on \f[CR]GPURenderPassEncoder\f[R] \(em \f[CR]draw()\f[R].
.RE
.SH SYNTAX
.IP
.EX
draw(vertexCount)
draw(vertexCount, instanceCount)
draw(vertexCount, instanceCount, firstVertex)
draw(vertexCount, instanceCount, firstVertex, firstInstance)
.EE
.SS Parameters
.TP
\f[B]vertexCount\f[R]
A number defining the number of vertices to draw.
.TP
\f[B]instanceCount\f[R] \f[I](optional)\f[R]
A number defining the number of instances to draw.
If omitted, \f[CR]instanceCount\f[R] defaults to 1.
.TP
\f[B]firstVertex\f[R] \f[I](optional)\f[R]
A number defining the offset into the vertex buffers, in vertices, to
begin drawing from.
If omitted, \f[CR]firstVertex\f[R] defaults to 0.
.TP
\f[B]firstInstance\f[R] \f[I](optional)\f[R]
A number defining the first instance to draw.
If omitted, \f[CR]firstInstance\f[R] defaults to 0.
.SS Return value
None (\f[CR]Undefined\f[R]).
.SH EXAMPLES
.IP
.EX
\f[B]function\f[R] recordRenderPass(passEncoder) {
  \f[B]if\f[R] (settings.dynamicOffsets) {
    passEncoder.setPipeline(dynamicPipeline);
  } \f[B]else\f[R] {
    passEncoder.setPipeline(pipeline);
  }
  passEncoder.setVertexBuffer(0, vertexBuffer);
  passEncoder.setBindGroup(0, timeBindGroup);
  \f[B]const\f[R] dynamicOffsets = [0];
  \f[B]for\f[R] (\f[B]let\f[R] i = 0; i < numTriangles; ++i) {
    \f[B]if\f[R] (settings.dynamicOffsets) {
      dynamicOffsets[0] = i * alignedUniformBytes;
      passEncoder.setBindGroup(1, dynamicBindGroup, dynamicOffsets);
    } \f[B]else\f[R] {
      passEncoder.setBindGroup(1, bindGroups[i]);
    }
    passEncoder.draw(3, 1, 0, 0);
  }
}
.EE
.PP
The above snippet is taken from the WebGPU Samples \c
.UR https://webgpu.github.io/webgpu-samples/samples/animometer/
Animometer example
.UE \c
\&.
.SH SEE ALSO
.IP \(bu 2
The WebGPU API
