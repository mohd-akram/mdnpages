.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "ContentVisibilityAutoStateChangeEvent" "JS" "July 4, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
ContentVisibilityAutoStateChangeEvent \-
ContentVisibilityAutoStateChangeEvent
.SH SYNOPSIS
The \f[B]\f[CB]ContentVisibilityAutoStateChangeEvent\f[B]\f[R] interface
is the event object for the \f[CR]contentvisibilityautostatechange\f[R]
event, which fires on any element with
\f[CR]content\-visibility: auto\f[R] set on it when it starts or stops
being relevant to the user and skipping its contents.
.PP
While the element is not relevant (between the start and end events),
the user agent skips an element\[cq]s rendering, including layout and
painting.
This can significantly improve page rendering speed.
The \f[CR]contentvisibilityautostatechange\f[R] event provides a way for
an app\[cq]s code to also start or stop rendering processes
(e.g.\ drawing on a \f[CR]<canvas>\f[R]) when they are not needed,
thereby conserving processing power.
.PP
Note that even when hidden from view, element contents will remain
semantically relevant (e.g.\ to assistive technology users), so this
signal should not be used to skip significant semantic DOM updates.
.SH CONSTRUCTOR
.TP
\f[B]ContentVisibilityAutoStateChangeEvent()\f[R]
Creates a new \f[CR]ContentVisibilityAutoStateChangeEvent\f[R] object
instance.
.SH INSTANCE PROPERTIES
\f[I]Inherits properties from its parent, \f[CI]Event\f[I].\f[R]
.TP
\f[B]skipped\f[R] \f[I](read\-only)\f[R]
Returns \f[CR]true\f[R] if the user agent is skipping the element\[cq]s
rendering, or \f[CR]false\f[R] otherwise.
.SH EXAMPLES
.IP
.EX
\f[B]const\f[R] canvasElem = document.querySelector(\[dq]canvas\[dq]);

canvasElem.addEventListener(\[dq]contentvisibilityautostatechange\[dq], stateChanged);
canvasElem.style.contentVisibility = \[dq]auto\[dq];

\f[B]function\f[R] stateChanged(event) {
  \f[B]if\f[R] (event.skipped) {
    stopCanvasUpdates(canvasElem);
  } \f[B]else\f[R] {
    startCanvasUpdates(canvasElem);
  }
}

\f[I]// Call this when the canvas updates need to start.\f[R]
\f[B]function\f[R] startCanvasUpdates(canvas) {
  \f[I]// \&...\f[R]
}

\f[I]// Call this when the canvas updates need to stop.\f[R]
\f[B]function\f[R] stopCanvasUpdates(canvas) {
  \f[I]// \&...\f[R]
}
.EE
.SH SEE ALSO
.IP \[bu] 2
The \f[CR]contentvisibilityautostatechange\f[R] event
.IP \[bu] 2
CSS Containment
.IP \[bu] 2
The \f[CR]content\-visibility\f[R] property
.IP \[bu] 2
The \f[CR]contain\f[R] property
