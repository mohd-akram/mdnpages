.\" Automatically generated by Pandoc 3.4
.\"
.TH "Date.setMinutes" "JS" "April 28, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Date.setMinutes \- Date.prototype.setMinutes()
.SH SYNOPSIS
The \f[B]\f[CB]setMinutes()\f[B]\f[R] method of \f[CR]Date\f[R]
instances changes the minutes for this date according to local time.
.SH SYNTAX
.IP
.EX
setMinutes(minutesValue)
setMinutes(minutesValue, secondsValue)
setMinutes(minutesValue, secondsValue, msValue)
.EE
.SS Parameters
.TP
\f[B]minutesValue\f[R]
An integer between 0 and 59 representing the minutes.
.TP
\f[B]secondsValue\f[R] \f[I](optional)\f[R]
An integer between 0 and 59 representing the seconds.
If you specify \f[CR]secondsValue\f[R], you must also specify
\f[CR]minutesValue\f[R].
.TP
\f[B]msValue\f[R] \f[I](optional)\f[R]
An integer between 0 and 999 representing the milliseconds.
If you specify \f[CR]msValue\f[R], you must also specify
\f[CR]minutesValue\f[R] and \f[CR]secondsValue\f[R].
.SS Return value
Changes the \f[CR]Date\f[R] object in place, and returns its new
timestamp.
If a parameter is \f[CR]NaN\f[R] (or other values that get coerced to
\f[CR]NaN\f[R], such as \f[CR]undefined\f[R]), the date is set to
Invalid Date and \f[CR]NaN\f[R] is returned.
.SH DESCRIPTION
If you do not specify the \f[CR]secondsValue\f[R] and \f[CR]msValue\f[R]
parameters, the same values as what are returned by
\f[CR]getSeconds()\f[R] and \f[CR]getMilliseconds()\f[R] are used.
.PP
If a parameter you specify is outside of the expected range, other
parameters and the date information in the \f[CR]Date\f[R] object are
updated accordingly.
For example, if you specify 100 for \f[CR]secondsValue\f[R], the minutes
is incremented by 1 (\f[CR]minutesValue + 1\f[R]), and 40 is used for
seconds.
.SH EXAMPLES
.SS Using setMinutes()
.IP
.EX
\f[B]const\f[R] theBigDay = \f[B]new\f[R] Date();
theBigDay.setMinutes(45);
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]Date.prototype.getMinutes()\f[R]
.IP \[bu] 2
\f[CR]Date.prototype.setUTCMinutes()\f[R]
