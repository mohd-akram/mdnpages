.\" Automatically generated by Pandoc 3.4
.\"
.TH "PublicKeyCredential.parseRequestOptionsFromJSON_static" "JS" "August 27, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
PublicKeyCredential.parseRequestOptionsFromJSON_static \-
PublicKeyCredential: parseRequestOptionsFromJSON() static method
.SH SYNOPSIS
\f[B]Secure context:\f[R] This feature is available only in secure
contexts (HTTPS).
.PP
The \f[B]\f[CB]parseRequestOptionsFromJSON()\f[B]\f[R] static method of
the \f[CR]PublicKeyCredential\f[R] interface converts a JSON type
representation into a \f[CR]PublicKeyCredentialRequestOptions\f[R]
instance.
.PP
The method is a convenience function for converting information provided
by a relying server to a web app in order to request an existing
credential.
.SH SYNTAX
.IP
.EX
PublicKeyCredential.parseRequestOptionsFromJSON(options)
.EE
.SS Parameters
.TP
\f[B]options\f[R]
An object with the same structure as a
\f[CR]PublicKeyCredentialRequestOptions\f[R] instance, but with
base64url\-encoded strings used in place of buffer properties.
.SS Return value
A \f[CR]PublicKeyCredentialRequestOptions\f[R] instance.
.SS Exceptions
.TP
\f[B]EncodingError\f[R] \f[B]DOMException\f[R]
Thrown if any part of the \f[CR]options\f[R] object cannot be converted
into a \f[CR]PublicKeyCredentialRequestOptions\f[R] instance.
.SH DESCRIPTION
The Web Authentication process for authenticating a (registered) user
involves a relying party server sending the web app information needed
to find an existing credential, including details about the user
identity, the relying party, a \[lq]challenge\[rq], and optionally where
to look for the credential: for example on a local built\-in
authenticator, or on an external one over USB, BLE, and so on.
The web app passes this information to an authenticator to find the
credential, by calling \f[CR]navigator.credentials.get()\f[R] with an
argument that contains the server\-supplied data as a
\f[CR]PublicKeyCredentialRequestOptions\f[R] instance
.PP
The specification does not define how the information needed for
requesting a credential is sent.
A convenient approach is for the server to encapsulate the information
in a JSON type representation of a
\f[CR]PublicKeyCredentialRequestOptions\f[R] instance, that mirrors its
structure but encodes buffer properties such as the \f[CR]challenge\f[R]
as base64url strings.
This object can be serialized to a JSON string, sent to the web app and
deserialized, and then converted to a
\f[CR]PublicKeyCredentialRequestOptions\f[R] instance using
\f[B]\f[CB]parseRequestOptionsFromJSON()\f[B]\f[R].
.SH EXAMPLES
When authorizing an already registered user, a relying party server will
supply the web app with information about the requested credentials, the
relying party, and a challenge.
The code below defines this information in the form described in the
\f[CR]options\f[R] parameter above:
.IP
.EX
\f[B]const\f[R] requestCredentialOptionsJSON =  {
    challenge: \f[B]new\f[R] Uint8Array([139, 66, 181, 87, 7, 203, ...]),
    rpId: \[dq]acme.com\[dq],
    allowCredentials: [{
      type: \[dq]public\-key\[dq],
      id: \f[B]new\f[R] Uint8Array([64, 66, 25, 78, 168, 226, 174, ...])
    }],
    userVerification: \[dq]required\[dq],
  }
.EE
.PP
Because this object only uses JSON data types, it can be serialized to
JSON using \f[CR]JSON.stringify()\f[R] and sent to the web app.
.IP
.EX
JSON.stringify(requestCredentialOptionsJSON);
.EE
.PP
The web app can deserialize the JSON string back to a
\f[CR]requestCredentialOptionsJSON\f[R] object (not shown).
The \f[B]\f[CB]parseRequestOptionsFromJSON()\f[B]\f[R] method is used to
convert that object to the form that can be used in
\f[CR]navigator.credentials.get()\f[R]:
.IP
.EX
\f[I]// Convert options to form used by get()\f[R]
\f[B]const\f[R] publicKey = PublicKeyCredential.parseRequestOptionsFromJSON(
  requestCredentialOptionsJSON, \f[I]// JSON\-type representation\f[R]
);

navigator.credentials
  .get({ publicKey })
  .then((returnedCredentialInfo) \f[B]=>\f[R] {
    \f[I]// Handle the returned credential information here.\f[R]
  })
  .catch((err) \f[B]=>\f[R] {
    console.error(err);
  });
.EE
.SH SEE ALSO
.IP \[bu] 2
Web Authentication API
.IP \[bu] 2
\f[CR]PublicKeyCredential.parseCreationOptionsFromJSON()\f[R]
