.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "WeakMap.set" "JS" "August 9, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
WeakMap.set \- WeakMap.prototype.set()
.SH SYNOPSIS
The \f[B]\f[CB]set()\f[B]\f[R] method of \f[CR]WeakMap\f[R] instances
adds a new element with a specified key and value to this
\f[CR]WeakMap\f[R].
.SH SYNTAX
.IP
.EX
set(key, value)
.EE
.SS Parameters
.TP
\f[B]key\f[R]
Must be either an object or a non\-registered symbol.
The key of the entry to add to the \f[CR]WeakMap\f[R] object.
.TP
\f[B]value\f[R]
Any value representing the value of the entry to add to the
\f[CR]WeakMap\f[R] object.
.SS Return value
The \f[CR]WeakMap\f[R] object.
.SS Exceptions
.TP
\f[B]TypeError\f[R]
Thrown if \f[CR]key\f[R] is not an object or a non\-registered symbol.
.SH EXAMPLES
.SS Using the set() method
.IP
.EX
\f[B]const\f[R] wm = \f[B]new\f[R] WeakMap();
\f[B]const\f[R] obj = {};

\f[I]// Add new elements to the WeakMap\f[R]
wm.set(obj, \[dq]foo\[dq]).set(window, \[dq]bar\[dq]); \f[I]// chainable\f[R]

\f[I]// Update an element in the WeakMap\f[R]
wm.set(obj, \[dq]baz\[dq]);

\f[I]// Using a non\-registered symbol as key\f[R]
\f[B]const\f[R] sym = Symbol(\[dq]foo\[dq]);
wm.set(sym, \[dq]baz\[dq]);
wm.set(Symbol.iterator, \[dq]qux\[dq]);
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]WeakMap\f[R]
.IP \[bu] 2
\f[CR]WeakMap.prototype.get()\f[R]
.IP \[bu] 2
\f[CR]WeakMap.prototype.has()\f[R]
