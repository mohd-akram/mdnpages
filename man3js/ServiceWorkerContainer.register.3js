.\" Automatically generated by Pandoc 3.4
.\"
.TH "ServiceWorkerContainer.register" "JS" "December 20, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
ServiceWorkerContainer.register \- ServiceWorkerContainer: register()
method
.SH SYNOPSIS
\f[B]Secure context:\f[R] This feature is available only in secure
contexts (HTTPS).
.PP
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]register()\f[B]\f[R] method of the
\f[CR]ServiceWorkerContainer\f[R] interface creates or updates a
\f[CR]ServiceWorkerRegistration\f[R] for the given scope.
If successful, the registration associates the provided script URL to a
\f[I]scope\f[R], which is subsequently used for matching documents to a
specific service worker.
.PP
A single registration is created for each unique scope.
If \f[CR]register()\f[R] is called for a scope that has an existing
registration, the registration is updated with any changes to the
scriptURL or options.
If there are no changes, then the existing registration is returned.
Note that calling \f[CR]register()\f[R] with the same scope and
\f[CR]scriptURL\f[R] does not restart the installation process.
You can therefore call this method unconditionally from a controlled
page: you don\[cq]t need to first check whether there\[cq]s an active
registration or service worker.
.PP
A document can potentially be within the scope of several registrations
with different service workers and options.
The browser will associate the document with the matching registration
that has the most specific scope.
This ensures that only one service worker runs for each document.
.RS
.PP
\f[B]Note:\f[R] It is generally safer not to define registrations that
have overlapping scopes.
.RE
.SH SYNTAX
.IP
.EX
register(scriptURL)
register(scriptURL, options)
.EE
.SS Parameters
.TP
\f[B]scriptURL\f[R]
The URL of the service worker script.
The registered service worker file needs to have a valid JavaScript MIME
type.
.TP
\f[B]options\f[R] \f[I](optional)\f[R]
An object containing registration options.
Currently available options are:
.RS
.TP
\f[B]scope\f[R]
A string representing a URL that defines a service worker\[cq]s
registration scope; that is, what range of URLs a service worker can
control.
.RS
.PP
This is usually specified as a URL that is relative to the base URL of
the site (e.g.\ \f[CR]/some/path/\f[R]), so that the resolved scope is
the same irrespective of what page the registration code is called from.
The default \f[CR]scope\f[R] for a service worker registration is the
directory where the service worker script is located (resolving
\f[CR]./\f[R] against \f[CR]scriptURL\f[R]).
.PP
The scope should be used to specify documents that are in the same
directory or more deeply nested than the service worker.
If you need a broader scope, this can be permitted via the HTTP
\f[CR]Service\-Worker\-Allowed\f[R] header.
See the Examples section for information on broadening the default scope
of a service worker.
.RE
.TP
\f[B]type\f[R]
A string specifying the type of worker to create.
Valid values are:
.RS
.TP
\f[B]\[aq]classic\[aq]\f[R]
The loaded service worker is in a standard script.
This is the default.
.TP
\f[B]\[aq]module\[aq]\f[R]
The loaded service worker is in an ES module and the import statement is
available on worker contexts.
For ES module compatibility info, see the browser compatibility data
table for the \f[CR]ServiceWorker\f[R] interface.
.RE
.TP
\f[B]updateViaCache\f[R]
A string indicating how the HTTP cache is used for service worker
scripts resources during updates.
Note: This only refers to the service worker script and its imports, not
other resources fetched by these scripts.
.RS
.TP
\f[B]\[aq]all\[aq]\f[R]
The HTTP cache will be queried for the main script, and all imported
scripts.
If no fresh entry is found in the HTTP cache, then the scripts are
fetched from the network.
.TP
\f[B]\[aq]imports\[aq]\f[R]
The HTTP cache will be queried for imports, but the main script will
always be updated from the network.
If no fresh entry is found in the HTTP cache for the imports,
they\[cq]re fetched from the network.
.TP
\f[B]\[aq]none\[aq]\f[R]
The HTTP cache will not be used for the main script or its imports.
All service worker script resources will be updated from the network.
.RE
.RE
.SS Return value
A \f[CR]Promise\f[R] that resolves with a
\f[CR]ServiceWorkerRegistration\f[R] object.
.SS Exceptions
.TP
\f[B]TypeError\f[R]
The \f[CR]scriptURL\f[R] or \f[CR]scope URL\f[R] is a failure.
This can happen if the URL can\[cq]t be resolved to a valid URL or uses
a scheme that is not \f[CR]http:\f[R] or \f[CR]https\f[R].
It may also happen if \f[CR]scriptURL\f[R] is not a
\f[CR]TrustedScriptURL\f[R], and this is a requirement of the site\[cq]s
Trusted Types Policy.
.RS
.PP
The exception is also raised if the \f[CR]scriptURL\f[R] or
\f[CR]scope URL\f[R] path contains the case\-insensitive ASCII
\[lq]%2f\[rq] (\f[CR]*\f[R]) or \[lq]%5c\[rq] (\f[CR]=\f[R])
.RE
.TP
\f[B]SecurityError\f[R] \f[B]DOMException\f[R]
The \f[CR]scriptURL\f[R] is not a potentially trustworthy origin, such
as \f[CR]localhost\f[R] or an \f[CR]https\f[R] URL.
The \f[CR]scriptURL\f[R] and scope are not same\-origin with the
registering page.
.SH EXAMPLES
The examples below should be read together to understand how service
worker scope applies to a page.
.SS Register a service worker with default scope
The following example uses the default value of \f[CR]scope\f[R] by
omitting it, which sets it to be the same location as the script URL.
.PP
Suppose the service worker code is at \f[CR]example.com/sw.js\f[R], and
the registration code at \f[CR]example.com/index.html\f[R].
The service worker code will control \f[CR]example.com/index.html\f[R],
as well as pages underneath it, like
\f[CR]example.com/product/description.html\f[R].
.IP
.EX
\f[B]if\f[R] (\[dq]serviceWorker\[dq] \f[B]in\f[R] navigator) {
  \f[I]// Register a service worker hosted at the root of the\f[R]
  \f[I]// site using the default scope.\f[R]
  navigator.serviceWorker.register(\[dq]/sw.js\[dq]).then(
    (registration) \f[B]=>\f[R] {
      console.log(\[dq]Service worker registration succeeded:\[dq], registration);
    },
    (error) \f[B]=>\f[R] {
      console.error(\[ga]Service worker registration failed: ${error}\[ga]);
    },
  );
} \f[B]else\f[R] {
  console.error(\[dq]Service workers are not supported.\[dq]);
}
.EE
.PP
Note that we have registered the \f[CR]scriptURL\f[R] relative to the
site root rather than the current page.
This allows the same registration code to be used from any page.
.SS Register a service worker with an explicit default scope
The code below is almost identical, except we have specified the scope
explicitly using \f[CR]{ scope: \[dq]/\[dq] }\f[R].
We\[cq]ve specified the scope as site\-relative so the same registration
code can be used from anywhere in the site.
.IP
.EX
\f[B]if\f[R] (\[dq]serviceWorker\[dq] \f[B]in\f[R] navigator) {
  \f[I]// declaring scope manually\f[R]
  navigator.serviceWorker.register(\[dq]./sw.js\[dq], { scope: \[dq]/\[dq] }).then(
    (registration) \f[B]=>\f[R] {
      console.log(\[dq]Service worker registration succeeded:\[dq], registration);
    },
    (error) \f[B]=>\f[R] {
      console.error(\[ga]Service worker registration failed: ${error}\[ga]);
    },
  );
} \f[B]else\f[R] {
  console.error(\[dq]Service workers are not supported.\[dq]);
}
.EE
.PP
This scope is the same as the default scope, so the registration applies
to exactly the same pages as the previous example.
Note that if we were to run this code after the previous example,
browsers should recognize that we\[cq]re updating an existing
registration rather than a new one.
.SS Register a service worker using page\-relative URLs
There is nothing to stop you from using page\-relative URLs except that
this makes it harder to move your pages around, and it is easy to
accidentally create unwanted registrations if you do so.
.PP
In this example the service worker code is at
\f[CR]example.com/product/sw.js\f[R], and the registration code at
\f[CR]example.com/product/description.html\f[R].
We\[cq]re using URLs that are relative to the current directory for the
\f[CR]scriptURL\f[R] and the \f[CR]scope\f[R], where the current
directory is the base URL of the page that is calling
\f[CR]register()\f[R] (\f[CR]example.com/product/\f[R]).
The service worker applies to resources under
\f[CR]example.com/product/\f[R].
.IP
.EX
\f[B]if\f[R] (\[dq]serviceWorker\[dq] \f[B]in\f[R] navigator) {
  \f[I]// declaring scope manually\f[R]
  navigator.serviceWorker.register(\[dq]./sw.js\[dq], { scope: \[dq]./\[dq] }).then(
    (registration) \f[B]=>\f[R] {
      console.log(\[dq]Service worker registration succeeded:\[dq], registration);
    },
    (error) \f[B]=>\f[R] {
      console.error(\[ga]Service worker registration failed: ${error}\[ga]);
    },
  );
} \f[B]else\f[R] {
  console.error(\[dq]Service workers are not supported.\[dq]);
}
.EE
.SS Using Service\-Worker\-Allowed to increase service worker scope
A service worker can\[cq]t have a scope broader than its own location,
unless the server specifies a broader maximum scope in a
\f[CR]Service\-Worker\-Allowed\f[R] header on the service worker script.
Use the \f[CR]scope\f[R] option when you need a \f[I]narrower\f[R] scope
than the default.
.PP
The following code, if included in \f[CR]example.com/index.html\f[R], at
the root of a site, would only apply to resources under
\f[CR]example.com/product\f[R].
.IP
.EX
\f[B]if\f[R] (\[dq]serviceWorker\[dq] \f[B]in\f[R] navigator) {
  \f[I]// declaring scope manually\f[R]
  navigator.serviceWorker.register(\[dq]./sw.js\[dq], { scope: \[dq]/product/\[dq] }).then(
    (registration) \f[B]=>\f[R] {
      console.log(\[dq]Service worker registration succeeded:\[dq], registration);
    },
    (error) \f[B]=>\f[R] {
      console.error(\[ga]Service worker registration failed: ${error}\[ga]);
    },
  );
} \f[B]else\f[R] {
  console.error(\[dq]Service workers are not supported.\[dq]);
}
.EE
.PP
As noted above, servers can change the default scope by setting the
\f[CR]Service\-Worker\-Allowed\f[R] header on the service worker script.
This allows the \f[CR]scope\f[R] option to be set outside the path
defined by the service worker\[cq]s location.
.PP
The following code, if included in
\f[CR]example.com/product/index.html\f[R], would apply to all resources
under \f[CR]example.com\f[R] if the server set the
\f[CR]Service\-Worker\-Allowed\f[R] header to \f[CR]/\f[R] or
\f[CR]https://example.com/\f[R] when serving \f[CR]sw.js\f[R].
If the server doesn\[cq]t set the header, the service worker
registration will fail, as the requested \f[CR]scope\f[R] is too broad.
.IP
.EX
\f[B]if\f[R] (\[dq]serviceWorker\[dq] \f[B]in\f[R] navigator) {
  \f[I]// Declaring a broadened scope\f[R]
  navigator.serviceWorker.register(\[dq]./sw.js\[dq], { scope: \[dq]/\[dq] }).then(
    (registration) \f[B]=>\f[R] {
      \f[I]// The registration succeeded because the Service\-Worker\-Allowed header\f[R]
      \f[I]// had set a broadened maximum scope for the service worker script\f[R]
      console.log(\[dq]Service worker registration succeeded:\[dq], registration);
    },
    (error) \f[B]=>\f[R] {
      \f[I]// This happens if the Service\-Worker\-Allowed header doesn\[aq]t broaden the scope\f[R]
      console.error(\[ga]Service worker registration failed: ${error}\[ga]);
    },
  );
} \f[B]else\f[R] {
  console.error(\[dq]Service workers are not supported.\[dq]);
}
.EE
.SH SEE ALSO
.IP \[bu] 2
ServiceWorkerRegistration: \f[CR]unregister()\f[R] method
.IP \[bu] 2
Service worker API
.IP \[bu] 2
Using service workers
.IP \[bu] 2
\f[CR]Service\-Worker\-Allowed\f[R] HTTP header
