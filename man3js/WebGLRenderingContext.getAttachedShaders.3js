.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "WEBGLRENDERINGCONTEXT.GETATTACHEDSHADERS" "3JS" "September 28, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
WebGLRenderingContext.getAttachedShaders \- WebGLRenderingContext:
getAttachedShaders() method
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]WebGLRenderingContext.getAttachedShaders()\f[B]\f[R]
method of the WebGL API returns a list of \f[CR]WebGLShader\f[R] objects
attached to a \f[CR]WebGLProgram\f[R].
.SH SYNTAX
.IP
.EX
getAttachedShaders(program)
.EE
.SS Parameters
.TP
\f[B]program\f[R]
A \f[CR]WebGLProgram\f[R] object to get attached shaders for.
.SS Return value
An \f[CR]Array\f[R] of \f[CR]WebGLShader\f[R] objects that are attached
to the given \f[CR]WebGLProgram\f[R].
.SH EXAMPLES
.IP
.EX
\f[B]const\f[R] program = gl.createProgram();

\f[I]// Attach pre\-existing shaders\f[R]
gl.attachShader(program, vertexShader);
gl.attachShader(program, fragmentShader);
gl.linkProgram(program);

gl.getAttachedShaders(program);
.EE
.SH SEE ALSO
.IP \(bu 2
\f[CR]WebGLRenderingContext.createShader()\f[R]
.IP \(bu 2
\f[CR]WebGLRenderingContext.isShader()\f[R]
.IP \(bu 2
\f[CR]WebGLRenderingContext.deleteShader()\f[R]
