.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "RegExp.source" "JS" "February 11, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
RegExp.source \- RegExp.prototype.source
.SH SYNOPSIS
The \f[B]\f[CB]source\f[B]\f[R] accessor property of \f[CR]RegExp\f[R]
instances returns a string containing the source text of this regular
expression, without the two forward slashes on both sides or any flags.
.IP
.EX
\f[B]const\f[R] regex1 = /fooBar/gi;

console.log(regex1.source);
\f[I]// Expected output: \[dq]fooBar\[dq]\f[R]

console.log(\f[B]new\f[R] RegExp().source);
\f[I]// Expected output: \[dq](?:)\[dq]\f[R]

console.log(\f[B]new\f[R] RegExp(\[dq]\[rs]n\[dq]).source === \[dq]\[rs]\[rs]n\[dq]);
\f[I]// Expected output: true (starting with ES5)\f[R]
\f[I]// Due to escaping\f[R]
.EE
.SH DESCRIPTION
Conceptually, the \f[CR]source\f[R] property is the text between the two
forward slashes in the regular expression literal.
The language requires the returned string to be properly escaped, so
that when the \f[CR]source\f[R] is concatenated with a forward slash on
both ends, it would form a parsable regex literal.
For example, for \f[CR]new RegExp(\[dq]/\[dq])\f[R], the
\f[CR]source\f[R] is \f[CR]\[rs]\[rs]/\f[R], because if it generates
\f[CR]/\f[R], the resulting literal becomes \f[CR]///\f[R], which is a
line comment.
Similarly, all line terminators will be escaped because line terminator
\f[I]characters\f[R] would break up the regex literal.
There\[cq]s no requirement for other characters, as long as the result
is parsable.
For empty regular expressions, the string \f[CR](?:)\f[R] is returned.
.SH EXAMPLES
.SS Using source
.IP
.EX
\f[B]const\f[R] regex = /fooBar/gi;

console.log(regex.source); \f[I]// \[dq]fooBar\[dq], doesn\[aq]t contain /.../ and \[dq]gi\[dq].\f[R]
.EE
.SS Empty regular expressions and escaping
.IP
.EX
\f[B]new\f[R] RegExp().source; \f[I]// \[dq](?:)\[dq]\f[R]

\f[B]new\f[R] RegExp(\[dq]\[rs]n\[dq]).source === \[dq]\[rs]\[rs]n\[dq]; \f[I]// true, starting with ES5\f[R]
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]RegExp.prototype.flags\f[R]
