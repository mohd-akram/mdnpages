.\" Automatically generated by Pandoc 3.4
.\"
.TH "CanvasRenderingContext2D.shadowColor" "JS" "July 26, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
CanvasRenderingContext2D.shadowColor \- CanvasRenderingContext2D:
shadowColor property
.SH SYNOPSIS
The \f[B]\f[CB]CanvasRenderingContext2D.shadowColor\f[B]\f[R] property
of the Canvas 2D API specifies the color of shadows.
.PP
Be aware that the shadow\[cq]s rendered opacity will be affected by the
opacity of the \f[CR]fillStyle\f[R] color when filling, and of the
\f[CR]strokeStyle\f[R] color when stroking.
.RS
.PP
\f[B]Note:\f[R] Shadows are only drawn if the \f[CR]shadowColor\f[R]
property is set to a non\-transparent value.
One of the \f[CR]shadowBlur\f[R], \f[CR]shadowOffsetX\f[R], or
\f[CR]shadowOffsetY\f[R] properties must be non\-zero, as well.
.RE
.SH VALUE
A string parsed as a CSS \f[CR]&lt;color&gt;\f[R] value.
The default value is fully\-transparent black.
.SH EXAMPLES
.SS Adding a shadow to shapes
This example adds a shadow to two squares; the first one is filled, and
the second one is stroked.
The \f[CR]shadowColor\f[R] property sets the shadows\[cq] color, while
\f[CR]shadowOffsetX\f[R] and \f[CR]shadowOffsetY\f[R] set their position
relative to the shapes.
.SS HTML
.IP
.EX
<\f[B]canvas\f[R] id=\[dq]canvas\[dq]></\f[B]canvas\f[R]>
.EE
.SS JavaScript
.IP
.EX
\f[B]const\f[R] canvas = document.getElementById(\[dq]canvas\[dq]);
\f[B]const\f[R] ctx = canvas.getContext(\[dq]2d\[dq]);

\f[I]// Shadow\f[R]
ctx.shadowColor = \[dq]red\[dq];
ctx.shadowOffsetX = 10;
ctx.shadowOffsetY = 10;

\f[I]// Filled rectangle\f[R]
ctx.fillRect(20, 20, 100, 100);

\f[I]// Stroked rectangle\f[R]
ctx.lineWidth = 6;
ctx.strokeRect(170, 20, 100, 100);
.EE
.SS Result
.SS Shadows on translucent shapes
A shadow\[cq]s opacity is affected by the transparency level of its
parent object (even when \f[CR]shadowColor\f[R] specifies a completely
opaque value).
This example strokes and fills a rectangle with translucent colors.
.SS HTML
.IP
.EX
<\f[B]canvas\f[R] id=\[dq]canvas\[dq]></\f[B]canvas\f[R]>
.EE
.SS JavaScript
The resulting alpha value of the fill shadow is \f[CR].8 * .2\f[R], or
\f[CR].16\f[R].
The alpha of the stroke shadow is \f[CR].8 * .6\f[R], or \f[CR].48\f[R].
.IP
.EX
\f[B]const\f[R] canvas = document.getElementById(\[dq]canvas\[dq]);
\f[B]const\f[R] ctx = canvas.getContext(\[dq]2d\[dq]);

\f[I]// Shadow\f[R]
ctx.shadowColor = \[dq]rgb(255 0 0 / 80%)\[dq];
ctx.shadowBlur = 8;
ctx.shadowOffsetX = 30;
ctx.shadowOffsetY = 20;

\f[I]// Filled rectangle\f[R]
ctx.fillStyle = \[dq]rgb(0 255 0 / 20%)\[dq];
ctx.fillRect(10, 10, 150, 100);

\f[I]// Stroked rectangle\f[R]
ctx.lineWidth = 10;
ctx.strokeStyle = \[dq]rgb(0 0 255 / 60%)\[dq];
ctx.strokeRect(10, 10, 150, 100);
.EE
.SS Result
.SS WebKit/Blink\-specific notes
In WebKit\- and Blink\-based browsers, the non\-standard and deprecated
method \f[CR]ctx.setShadow()\f[R] is implemented besides this property.
.IP
.EX
setShadow(width, height, blur, color, alpha);
setShadow(width, height, blur, graylevel, alpha);
setShadow(width, height, blur, r, g, b, a);
setShadow(width, height, blur, c, m, y, k, a);
.EE
.SH SEE ALSO
.IP \[bu] 2
The interface defining this property:
\f[CR]CanvasRenderingContext2D\f[R]
