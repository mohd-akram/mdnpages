.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "MediaStream.getVideoTracks" "JS" "July 26, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
MediaStream.getVideoTracks \- MediaStream: getVideoTracks() method
.SH SYNOPSIS
The \f[B]\f[CB]getVideoTracks()\f[B]\f[R] method of the
\f[CR]MediaStream\f[R] interface returns a sequence of
\f[CR]MediaStreamTrack\f[R] objects representing the video tracks in
this stream.
.SH SYNTAX
.IP
.EX
getVideoTracks()
.EE
.SS Parameters
None.
.SS Return value
An array of \f[CR]MediaStreamTrack\f[R] objects, one for each video
track contained in the media stream.
Video tracks are those tracks whose \f[CR]kind\f[R] property is
\f[CR]video\f[R].
The array is empty if the stream contains no video tracks.
.RS
.PP
\f[B]Note:\f[R] The order of the tracks is not defined by the
specification, and may not be the same from one call to
\f[CR]getVideoTracks()\f[R] to another.
.RE
.SH EXAMPLES
The following example, extracted from \c
.UR https://googlechrome.github.io/samples/image-capture/photo-resolution.html
Chrome\[cq]s Image Capture / Photo Resolution Sample
.UE \c
, uses \f[CR]getVideoTracks()\f[R] to retrieve a track for passing to
the \f[CR]ImageCapture()\f[R] constructor.
.IP
.EX
\f[B]let\f[R] imageCapture;

navigator.mediaDevices.getUserMedia({ video: \f[B]true\f[R] }).then((mediaStream) \f[B]=>\f[R] {
  document.querySelector(\[dq]video\[dq]).srcObject = mediaStream;

  \f[B]const\f[R] track = mediaStream.getVideoTracks()[0];
  imageCapture = \f[B]new\f[R] ImageCapture(track);

  \f[B]return\f[R] imageCapture.getPhotoCapabilities();
});
.EE
