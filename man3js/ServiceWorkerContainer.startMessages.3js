.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "ServiceWorkerContainer.startMessages" "JS" "February 5, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
ServiceWorkerContainer.startMessages \- ServiceWorkerContainer:
startMessages() method
.SH SYNOPSIS
\f[B]Secure context:\f[R] This feature is available only in secure
contexts (HTTPS).
.PP
The \f[B]\f[CB]startMessages()\f[B]\f[R] method of the
\f[CR]ServiceWorkerContainer\f[R] interface explicitly starts the flow
of messages being dispatched from a service worker to pages under its
control (e.g.\ sent via \f[CR]Client.postMessage()\f[R]).
This can be used to react to sent messages earlier, even before that
page\[cq]s content has finished loading.
.SH EXPLANATION
By default, all messages sent from a page\[cq]s controlling service
worker to the page (using \f[CR]Client.postMessage()\f[R]) are queued
while the page is loading, and get dispatched once the page\[cq]s HTML
document has been loaded and parsed (i.e.\ after the
\f[CR]DOMContentLoaded\f[R] event fires).
It\[cq]s possible to start dispatching these messages earlier by calling
\f[CR]ServiceWorkerContainer.startMessages()\f[R], for example if
you\[cq]ve invoked a message handler using
\f[CR]EventTarget.addEventListener()\f[R] before the page has finished
loading, but want to start processing the messages right away.
.RS
.PP
\f[B]Note:\f[R] The messages start being sent automatically when setting
the handler directly using \f[CR]onmessage\f[R].
In this you don\[cq]t need \f[CR]startMessages()\f[R].
.RE
.SH SYNTAX
.IP
.EX
startMessages()
.EE
.SS Parameters
None.
.SS Return value
\f[CR]undefined\f[R].
.SH EXAMPLES
.IP
.EX
\f[B]if\f[R] (\[dq]serviceWorker\[dq] \f[B]in\f[R] navigator) {
  navigator.serviceWorker.register(\[dq]/sw.js\[dq]).then(() \f[B]=>\f[R] {
    console.log(\[dq]Service Worker Registered\[dq]);
  });
}

\f[I]// \&...\f[R]

navigator.serviceWorker.addEventListener(\[dq]message\[dq], (e) \f[B]=>\f[R] {
  \f[I]// \&...\f[R]
});

navigator.serviceWorker.startMessages();
.EE
