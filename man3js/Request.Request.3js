.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "Request.Request" "JS" "June 3, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Request.Request \- Request: Request() constructor
.SH SYNOPSIS
The \f[B]\f[CB]Request()\f[B]\f[R] constructor creates a new
\f[CR]Request\f[R] object.
.SH SYNTAX
.IP
.EX
new Request(input)
new Request(input, options)
.EE
.SS Parameters
.TP
\f[B]input\f[R]
Defines the resource that you wish to fetch.
This can either be:
.RS
.IP \[bu] 2
A string containing the URL of the resource you want to fetch.
The URL may be relative to the base URL, which is the document\[cq]s
\f[CR]baseURI\f[R] in a window context, or
\f[CR]WorkerGlobalScope.location\f[R] in a worker context.
.IP \[bu] 2
A \f[CR]Request\f[R] object, effectively creating a copy.
Note the following behavioral updates to retain security while making
the constructor less likely to throw exceptions:
.RS 2
.IP \[bu] 2
If this object exists on another origin to the constructor call, the
\f[CR]Request.referrer\f[R] is stripped out.
.IP \[bu] 2
If this object has a \f[CR]Request.mode\f[R] of \f[CR]navigate\f[R], the
\f[CR]mode\f[R] value is converted to \f[CR]same\-origin\f[R].
.RE
.RE
.TP
\f[B]options\f[R] \f[I](optional)\f[R]
An object containing any custom settings that you want to apply to the
request.
The possible options are:
.RS
.TP
\f[B]attributionReporting\f[R] \f[I](experimental)\f[R]
Indicates that you want the request\[cq]s response to be able to
register a JavaScript\-based attribution source or attribution trigger.
\f[CR]attributionReporting\f[R] is an object containing the following
properties:
.RS
.TP
\f[B]eventSourceEligible\f[R]
A boolean.
If set to \f[CR]true\f[R], the request\[cq]s response is eligible to
register an attribution source.
If set to \f[CR]false\f[R], it isn\[cq]t.
.TP
\f[B]triggerEligible\f[R]
A boolean.
If set to \f[CR]true\f[R], the request\[cq]s response is eligible to
register an attribution trigger.
If set to \f[CR]false\f[R], it isn\[cq]t.
.RS
.PP
\f[B]Note:\f[R] See the Attribution Reporting API for more details.
.RE
.RE
.TP
\f[B]body\f[R]
Any body that you want to add to your request: this can be a
\f[CR]Blob\f[R], an \f[CR]ArrayBuffer\f[R], a \f[CR]TypedArray\f[R], a
\f[CR]DataView\f[R], a \f[CR]FormData\f[R], a
\f[CR]URLSearchParams\f[R], a string, or a \f[CR]ReadableStream\f[R]
object.
Note that a request using the \f[CR]GET\f[R] or \f[CR]HEAD\f[R] method
cannot have a body.
.TP
\f[B]browsingTopics\f[R] \f[I](experimental)\f[R]
A boolean specifying that the selected topics for the current user
should be sent in a \f[CR]Sec\-Browsing\-Topics\f[R] header with the
associated request.
See Using the Topics API for more details.
.TP
\f[B]cache\f[R]
The cache mode you want to use for the request.
.TP
\f[B]credentials\f[R]
The request credentials you want to use for the request:
\f[CR]omit\f[R], \f[CR]same\-origin\f[R], or \f[CR]include\f[R].
The default is \f[CR]same\-origin\f[R].
.TP
\f[B]headers\f[R]
Any headers you want to add to your request, contained within a
\f[CR]Headers\f[R] object or an object literal with \f[CR]String\f[R]
values.
.TP
\f[B]integrity\f[R]
Contains the subresource integrity value of the request (e.g.,
\f[CR]sha256\-BpfBw7ivV8q2jLiT13fxDYAe2tJllusRSZ273h2nFSE=\f[R]).
.TP
\f[B]keepalive\f[R]
A boolean that indicates whether to make a persistent connection for
multiple requests/responses.
.TP
\f[B]method\f[R]
The request method, e.g., \f[CR]GET\f[R], \f[CR]POST\f[R].
The default is \f[CR]GET\f[R].
.TP
\f[B]mode\f[R]
The mode you want to use for the request, e.g., \f[CR]cors\f[R],
\f[CR]no\-cors\f[R], \f[CR]same\-origin\f[R], or \f[CR]navigate\f[R].
The default is \f[CR]cors\f[R].
.TP
\f[B]priority\f[R]
Specifies the priority of the fetch request relative to other requests
of the same type.
Must be one of the following strings:
.RS
.IP \[bu] 2
\f[CR]high\f[R]: A high priority fetch request relative to other
requests of the same type.
.IP \[bu] 2
\f[CR]low\f[R]: A low priority fetch request relative to other requests
of the same type.
.IP \[bu] 2
\f[CR]auto\f[R]: Automatically determine the priority of the fetch
request relative to other requests of the same type (default).
.RE
.TP
\f[B]redirect\f[R]
The redirect mode to use: \f[CR]follow\f[R], \f[CR]error\f[R], or
\f[CR]manual\f[R].
The default is \f[CR]follow\f[R].
.TP
\f[B]referrer\f[R]
A string specifying \f[CR]no\-referrer\f[R], \f[CR]client\f[R], or a
URL.
The default is \f[CR]about:client\f[R].
.TP
\f[B]referrerPolicy\f[R]
A string that changes how the referrer header is populated during
certain actions (e.g., fetching subresources, prefetching, performing
navigations).
.TP
\f[B]signal\f[R]
An AbortSignal object which can be used to communicate with/abort a
request.
.PP
If you construct a new \f[CR]Request\f[R] from an existing
\f[CR]Request\f[R], any options you set in an \f[I]options\f[R] argument
for the new request replace any corresponding options set in the
original \f[CR]Request\f[R].
For example:
.IP
.EX
\f[B]const\f[R] oldRequest = \f[B]new\f[R] Request(
  \[dq]https://github.com/mdn/content/issues/12959\[dq],
  { headers: { From: \[dq]webmaster\[at]example.org\[dq] } },
);
oldRequest.headers.get(\[dq]From\[dq]); \f[I]// \[dq]webmaster\[at]example.org\[dq]\f[R]
\f[B]const\f[R] newRequest = \f[B]new\f[R] Request(oldRequest, {
  headers: { From: \[dq]developer\[at]example.org\[dq] },
});
newRequest.headers.get(\[dq]From\[dq]); \f[I]// \[dq]developer\[at]example.org\[dq]\f[R]
.EE
.RE
.SH ERRORS
Type
Description
TypeError
Since Firefox 43, Request() will throw a TypeError if the URL has
credentials, such as http://user:password\[at]example.com.
.SH EXAMPLES
In our \c
.UR https://github.com/mdn/dom-examples/tree/main/fetch/fetch-request
Fetch Request example
.UE \c
\ (see \c
.UR https://mdn.github.io/dom-examples/fetch/fetch-request/
Fetch Request live
.UE \c
) we create a new \f[CR]Request\f[R] object using the constructor, then
fetch it using a \f[CR]fetch()\f[R] call.
Since we are fetching an image, we run \f[CR]Response.blob\f[R] on the
response to give it the proper MIME type so it will be handled properly,
then create an Object URL of it and display it in an \f[CR]<img>\f[R]
element.
.IP
.EX
\f[B]const\f[R] myImage = document.querySelector(\[dq]img\[dq]);
\f[B]const\f[R] myRequest = \f[B]new\f[R] Request(\[dq]flowers.jpg\[dq]);

fetch(myRequest)
  .then((response) \f[B]=>\f[R] response.blob())
  .then((response) \f[B]=>\f[R] {
    \f[B]const\f[R] objectURL = URL.createObjectURL(response);
    myImage.src = objectURL;
  });
.EE
.PP
In our \c
.UR https://github.com/mdn/dom-examples/tree/main/fetch/fetch-request-with-init
Fetch Request with init example
.UE \c
\ (see \c
.UR https://mdn.github.io/dom-examples/fetch/fetch-request-with-init
Fetch Request init live
.UE \c
) we do the same thing except that we pass in an \f[I]options\f[R]
object when we invoke \f[CR]fetch()\f[R].
In this case, we can set a \f[CR]Cache\-Control\f[R] value to indicate
what kind of cached responses we\[cq]re okay with:
.IP
.EX
\f[B]const\f[R] myImage = document.querySelector(\[dq]img\[dq]);
\f[B]const\f[R] reqHeaders = \f[B]new\f[R] Headers();

\f[I]// A cached response is okay unless it\[aq]s more than a week old.\f[R]
reqHeaders.set(\[dq]Cache\-Control\[dq], \[dq]max\-age=604800\[dq]);

\f[B]const\f[R] options = {
  headers: reqHeaders,
};

\f[I]// pass init as an \[dq]options\[dq] object with our headers\f[R]
\f[B]const\f[R] req = \f[B]new\f[R] Request(\[dq]flowers.jpg\[dq], options);

fetch(req).then((response) \f[B]=>\f[R] {
  \f[I]// ...\f[R]
});
.EE
.PP
Note that you could also pass \f[CR]options\f[R] into the
\f[CR]fetch\f[R] call to get the same effect, e.g.:
.IP
.EX
fetch(req, options).then((response) \f[B]=>\f[R] {
  \f[I]// ...\f[R]
});
.EE
.PP
You can also use an object literal as \f[CR]headers\f[R] in
\f[CR]options\f[R].
.IP
.EX
\f[B]const\f[R] options = {
  headers: {
    \[dq]Cache\-Control\[dq]: \[dq]max\-age=60480\[dq],
  },
};

\f[B]const\f[R] req = \f[B]new\f[R] Request(\[dq]flowers.jpg\[dq], options);
.EE
.PP
You may also pass a \f[CR]Request\f[R] object to the
\f[CR]Request()\f[R] constructor to create a copy of the Request (This
is similar to calling the \f[CR]clone()\f[R] method.)
.IP
.EX
\f[B]const\f[R] copy = \f[B]new\f[R] Request(req);
.EE
.RS
.PP
\f[B]Note:\f[R] This last usage is probably only useful in
ServiceWorkers.
.RE
.SH SEE ALSO
.IP \[bu] 2
ServiceWorker API
.IP \[bu] 2
HTTP access control (CORS)
.IP \[bu] 2
HTTP
