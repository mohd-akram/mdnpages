.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "REQUEST.REQUEST" "3JS" "April 28, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Request.Request \- Request: Request() constructor
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]Request()\f[B]\f[R] constructor creates a new
\f[CR]Request\f[R] object.
.SH SYNTAX
.IP
.EX
new Request(input)
new Request(input, options)
.EE
.SS Parameters
.TP
\f[B]input\f[R]
Defines the resource that you wish to fetch.
This can either be:
.RS
.IP \(bu 2
A string containing the URL of the resource you want to fetch.
The URL may be relative to the base URL, which is the document\(cqs
\f[CR]baseURI\f[R] in a window context, or
\f[CR]WorkerGlobalScope.location\f[R] in a worker context.
.IP \(bu 2
A \f[CR]Request\f[R] object, effectively creating a copy.
Note the following behavioral updates to retain security while making
the constructor less likely to throw exceptions:
.RS 2
.IP \(bu 2
If this object exists on another origin to the constructor call, the
\f[CR]Request.referrer\f[R] is stripped out.
.IP \(bu 2
If this object has a \f[CR]Request.mode\f[R] of \f[CR]navigate\f[R], the
\f[CR]mode\f[R] value is converted to \f[CR]same\-origin\f[R].
.RE
.RE
.TP
\f[B]options\f[R] \f[I](optional)\f[R]
A \f[CR]RequestInit\f[R] object containing any custom settings that you
want to apply to the request.
.RS
.PP
If you construct a new \f[CR]Request\f[R] from an existing
\f[CR]Request\f[R], any options you set in an \f[I]options\f[R] argument
for the new request replace any corresponding options set in the
original \f[CR]Request\f[R].
For example:
.IP
.EX
\f[B]const\f[R] oldRequest = \f[B]new\f[R] Request(
  \(dqhttps://github.com/mdn/content/issues/12959\(dq,
  { headers: { From: \(dqwebmaster\(atexample.org\(dq } },
);
oldRequest.headers.get(\(dqFrom\(dq); \f[I]// \(dqwebmaster\(atexample.org\(dq\f[R]
\f[B]const\f[R] newRequest = \f[B]new\f[R] Request(oldRequest, {
  headers: { From: \(dqdeveloper\(atexample.org\(dq },
});
newRequest.headers.get(\(dqFrom\(dq); \f[I]// \(dqdeveloper\(atexample.org\(dq\f[R]
.EE
.RE
.SS Exceptions
.TP
\f[B]TypeError\f[R]
The URL has credentials, such as
\f[CR]http://user:password\(atexample.com\f[R], or cannot be parsed.
.SH EXAMPLES
In our \c
.UR https://github.com/mdn/dom-examples/tree/main/fetch/fetch-request
Fetch Request example
.UE \c
\ (see \c
.UR https://mdn.github.io/dom-examples/fetch/fetch-request/
Fetch Request live
.UE \c
) we create a new \f[CR]Request\f[R] object using the constructor, then
fetch it using a \f[CR]fetch()\f[R] call.
Since we are fetching an image, we run \f[CR]Response.blob\f[R] on the
response to give it the proper MIME type so it will be handled properly,
then create an Object URL of it and display it in an \f[CR]<img>\f[R]
element.
.IP
.EX
\f[B]const\f[R] myImage = document.querySelector(\(dqimg\(dq);
\f[B]const\f[R] myRequest = \f[B]new\f[R] Request(\(dqflowers.jpg\(dq);

fetch(myRequest)
  .then((response) \f[B]=>\f[R] response.blob())
  .then((response) \f[B]=>\f[R] {
    \f[B]const\f[R] objectURL = URL.createObjectURL(response);
    myImage.src = objectURL;
  });
.EE
.PP
In our \c
.UR https://github.com/mdn/dom-examples/tree/main/fetch/fetch-request-with-init
Fetch Request with init example
.UE \c
\ (see \c
.UR https://mdn.github.io/dom-examples/fetch/fetch-request-with-init/
Fetch Request init live
.UE \c
) we do the same thing except that we pass in an \f[I]options\f[R]
object when we invoke \f[CR]fetch()\f[R].
In this case, we can set a \f[CR]Cache\-Control\f[R] value to indicate
what kind of cached responses we\(cqre okay with:
.IP
.EX
\f[B]const\f[R] myImage = document.querySelector(\(dqimg\(dq);
\f[B]const\f[R] reqHeaders = \f[B]new\f[R] Headers();

\f[I]// A cached response is okay unless it\(aqs more than a week old.\f[R]
reqHeaders.set(\(dqCache\-Control\(dq, \(dqmax\-age=604800\(dq);

\f[B]const\f[R] options = {
  headers: reqHeaders,
};

\f[I]// pass init as an \(dqoptions\(dq object with our headers\f[R]
\f[B]const\f[R] req = \f[B]new\f[R] Request(\(dqflowers.jpg\(dq, options);

fetch(req).then((response) \f[B]=>\f[R] {
  \f[I]// \&...\f[R]
});
.EE
.PP
Note that you could also pass \f[CR]options\f[R] into the
\f[CR]fetch\f[R] call to get the same effect, e.g.:
.IP
.EX
fetch(req, options).then((response) \f[B]=>\f[R] {
  \f[I]// \&...\f[R]
});
.EE
.PP
You can also use an object literal as \f[CR]headers\f[R] in
\f[CR]options\f[R].
.IP
.EX
\f[B]const\f[R] options = {
  headers: {
    \(dqCache\-Control\(dq: \(dqmax\-age=60480\(dq,
  },
};

\f[B]const\f[R] req = \f[B]new\f[R] Request(\(dqflowers.jpg\(dq, options);
.EE
.PP
You may also pass a \f[CR]Request\f[R] object to the
\f[CR]Request()\f[R] constructor to create a copy of the Request (This
is similar to calling the \f[CR]clone()\f[R] method.)
.IP
.EX
\f[B]const\f[R] copy = \f[B]new\f[R] Request(req);
.EE
.RS
.PP
\f[B]Note:\f[R] This last usage is probably only useful in
ServiceWorkers.
.RE
.SH SEE ALSO
.IP \(bu 2
ServiceWorker API
.IP \(bu 2
HTTP access control (CORS)
.IP \(bu 2
HTTP
