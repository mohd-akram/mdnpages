.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "ValidityState.stepMismatch" "JS" "July 15, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
ValidityState.stepMismatch \- ValidityState: stepMismatch property
.SH SYNOPSIS
The read\-only \f[B]\f[CB]stepMismatch\f[B]\f[R] property of the
\f[CR]ValidityState\f[R] interface indicates if the value of an
\f[CR]<input>\f[R], after having been edited by the user, does not
conform to the constraints set by the element\[cq]s \f[CR]step\f[R]
attribute.
.PP
If the field is numeric in nature, including the \f[CR]date\f[R],
\f[CR]month\f[R], \f[CR]week\f[R], \f[CR]time\f[R],
\f[CR]datetime\-local\f[R], \f[CR]number\f[R] and \f[CR]range\f[R] types
and the step value is not \f[CR]any\f[R], if the value don\[cq]t
doesn\[cq]t conform to the constraints set by the \f[CR]step\f[R] and
\f[CR]min\f[R] values, then \f[CR]stepMismatch\f[R] will be true.
If the remainder of the form control\[cq]s value less the \f[CR]min\f[R]
value, divided by the \f[CR]step\f[R] value (which defaults to 1 if
omitted) is not zero, there is a mismatch.
.SH VALUE
A boolean that is \f[CR]true\f[R] if the \f[CR]ValidityState\f[R] does
not conform to the constraints.
.SH EXAMPLES
.SS Input with step mismatch
The following example checks the validity of a numeric input element.
A constraint has been added using the \f[CR]step\f[R] attribute which
means the input expects increments of 5 as values.
If the user enters a number that\[cq]s not divisible by 5, the element
fails constraint validation, and the styles matching \f[CR]:invalid\f[R]
CSS pseudo\-class are applied.
.IP
.EX
input\f[BI]:invalid\f[R] {
  \f[B]outline\f[R]: red solid 3px;
}
.EE
.IP
.EX
<\f[B]pre\f[R] id=\[dq]log\[dq]>Validation logged here...</\f[B]pre\f[R]>
<\f[B]input\f[R] type=\[dq]number\[dq] id=\[dq]degrees\[dq] step=\[dq]5\[dq] />
.EE
.IP
.EX
\f[B]const\f[R] userInput = document.getElementById(\[dq]degrees\[dq]);
\f[B]const\f[R] logElement = document.getElementById(\[dq]log\[dq]);

\f[B]function\f[R] log(text) {
  logElement.innerText = text;
}

userInput.addEventListener(\[dq]input\[dq], () \f[B]=>\f[R] {
  userInput.reportValidity();
  \f[B]if\f[R] (userInput.validity.stepMismatch) {
    log(\[dq]Input must be divisible by 5\[dq]);
  } \f[B]else\f[R] {
    log(\[dq]Input is valid\&...\[dq]);
  }
});
.EE
.SH SEE ALSO
.IP \[bu] 2
Constraint validation
.IP \[bu] 2
Forms: Data form validation
.IP \[bu] 2
\f[CR]step\f[R] attribute
