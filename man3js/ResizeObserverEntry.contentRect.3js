.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "ResizeObserverEntry.contentRect" "JS" "July 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
ResizeObserverEntry.contentRect \- ResizeObserverEntry: contentRect
property
.SH SYNOPSIS
The \f[CR]contentRect\f[R] read\-only property of the
\f[CR]ResizeObserverEntry\f[R] interface returns a
\f[CR]DOMRectReadOnly\f[R] object containing the new size of the
observed element when the callback is run.
Note that this is better supported than
\f[CR]ResizeObserverEntry.borderBoxSize\f[R] or
\f[CR]ResizeObserverEntry.contentBoxSize\f[R], but it is left over from
an earlier implementation of the Resize Observer API, is still included
in the spec for web compat reasons, and may be deprecated in future
versions.
.SH VALUE
A \f[CR]DOMRectReadOnly\f[R] object containing the new size of the
element indicated by the \f[CR]target\f[R] property.
.PP
If the \f[CR]target\f[R] is an HTML \f[CR]Element\f[R], the returned
\f[CR]contentRect\f[R] is the element\[cq]s content box.
If the \f[CR]target\f[R] is an \f[CR]SVGElement\f[R], the returned
\f[CR]contentRect\f[R] is the SVG\[cq]s bounding box.
.SH EXAMPLES
The following snippet is taken from the \c
.UR https://mdn.github.io/dom-examples/resize-observer/resize-observer-text.html
resize\-observer\-text.html
.UE \c
\ (\c
.UR https://github.com/mdn/dom-examples/blob/main/resize-observer/resize-observer-text.html
see source
.UE \c
) example.
This uses a simple feature detection test to see if the browser supports
the newer \f[CR]ResizeObserverEntry.contentBoxSize\f[R] property \[em]
if so, it uses that to get the sizing data it needs.
If not, it uses \f[CR]contentRect\f[R].
.IP
.EX
\f[B]const\f[R] resizeObserver = \f[B]new\f[R] ResizeObserver((entries) \f[B]=>\f[R] {
  \f[B]for\f[R] (\f[B]const\f[R] entry \f[B]of\f[R] entries) {
    \f[B]if\f[R] (entry.contentBoxSize) {
      h1Elem.style.fontSize = \[ga]${Math.max(
        1.5,
        entry.contentBoxSize.inlineSize / 200,
      )}rem\[ga];
      pElem.style.fontSize = \[ga]${Math.max(
        1,
        entry.contentBoxSize.inlineSize / 600,
      )}rem\[ga];
    } \f[B]else\f[R] {
      h1Elem.style.fontSize = \[ga]${Math.max(
        1.5,
        entry.contentRect.width / 200,
      )}rem\[ga];
      pElem.style.fontSize = \[ga]${Math.max(1, entry.contentRect.width / 600)}rem\[ga];
    }
  }
});

resizeObserver.observe(divElem);
.EE
