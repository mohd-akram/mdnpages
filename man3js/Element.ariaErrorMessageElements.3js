.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "ELEMENT.ARIAERRORMESSAGEELEMENTS" "3JS" "May 14, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Element.ariaErrorMessageElements \- Element: ariaErrorMessageElements
property
.SH SYNOPSIS
The \f[B]\f[CB]ariaErrorMessageElements\f[B]\f[R] property of the
\f[CR]Element\f[R] interface is an array containing the element (or
elements) that provide an error message for the element it is applied
to.
.PP
The \f[CR]aria\-errormessage\f[R] topic contains additional information
about how the attribute and property should be used.
.SH VALUE
An array of subclasses of \f[CR]HTMLElement\f[R].
The inner text of these elements can be joined with spaces to get the
error message.
.PP
When read, the returned array is a static and read\-only.
When written, the assigned array is copied: subsequent changes to the
array do not affect the value of the property.
.SH DESCRIPTION
The property is a flexible alternative to using the
\f[CR]aria\-errormessage\f[R] attribute to set the error message for an
element.
Unlike \f[CR]aria\-errormessage\f[R], the elements assigned to this
property do not have to have an \f[CR]id\f[R] attribute.
.PP
The property reflects the element\(cqs \f[CR]aria\-errormessage\f[R]
attribute when it is defined, but only for listed reference
\f[CR]id\f[R] values that match valid in\-scope elements.
If the property is set, then the corresponding attribute is cleared.
For more information about reflected element references and scope see
Reflected element references in the \f[I]Reflected attributes\f[R]
guide.
.SH EXAMPLES
.SS Email input with error message
This example shows how we use the \f[CR]aria\-errormessage\f[R] to set
the error message for reporting entry of an invalid email address, and
demonstrates how we can get and set the message using
\f[CR]ariaErrorMessageElements\f[R].
.SS HTML
First we define an HTML email input, setting its
\f[CR]aria\-errormessage\f[R] attribute to reference an element with the
\f[CR]id\f[R] of \f[CR]err1\f[R].
We then define a \f[CR]<span>\f[R] element that has this id, and which
contains an error message.
.IP
.EX
<\f[B]p\f[R]>
  <\f[B]label\f[R] for=\(dqemail\(dq>Email address:</\f[B]label\f[R]>
  <\f[B]input\f[R] type=\(dqemail\(dq name=\(dqemail\(dq id=\(dqemail\(dq aria\-errormessage=\(dqerr1\(dq />
  <\f[B]span\f[R] id=\(dqerr1\(dq class=\(dqerrormessage\(dq>Error: Enter a valid email address</\f[B]span\f[R]>
</\f[B]p\f[R]>
.EE
.SS CSS
We create some styles to hide the error message by default, but make it
visible and styled as an error when \f[CR]aria\-invalid\f[R] is set on
the element.
.IP
.EX
\&.errormessage {
  \f[B]visibility\f[R]: hidden;
}

[aria\-invalid=\(dqtrue\(dq] {
  \f[B]outline\f[R]: 2px solid red;
}

[aria\-invalid=\(dqtrue\(dq] \(ti .errormessage {
  \f[B]visibility\f[R]: visible;
}
.EE
.SS JavaScript
We then check for input, and set \f[CR]ariaInvalid\f[R] to
\f[CR]true\f[R] or \f[CR]false\f[R] based on the \f[CR]typeMismatch\f[R]
constraint violation.
\f[CR]ariaInvalid\f[R] is in turn reflected in the
\f[CR]aria\-invalid\f[R] attribute, which hides and displays the error
as needed.
.IP
.EX
\f[B]const\f[R] email = document.querySelector(\(dq#email\(dq);

email.addEventListener(\(dqinput\(dq, (event) \f[B]=>\f[R] {
  \f[B]if\f[R] (email.validity.typeMismatch) {
    email.ariaInvalid = \f[B]true\f[R];
  } \f[B]else\f[R] {
    email.ariaInvalid = \f[B]false\f[R];
  }
});
.EE
.PP
We then log the value of the \f[CR]aria\-errormessage\f[R] attribute,
the \f[CR]ariaErrorMessageElements\f[R] and the inner text of the
\f[CR]ariaErrorMessageElements\f[R]
.IP
.EX
log(\(gaaria\-errormessage: ${email.getAttribute(\(dqaria\-errormessage\(dq)}\(ga);
\f[I]// Feature test for ariaErrorMessageElements\f[R]
\f[B]if\f[R] (\(dqariaErrorMessageElements\(dq \f[B]in\f[R] Element.prototype) {
  \f[I]// Get ariaErrorMessageElements\f[R]
  \f[B]const\f[R] propElements = email.ariaErrorMessageElements;
  log(\(gaariaErrorMessageElements: ${propElements}\(ga);

  \f[I]// Accessible text from element inner text\f[R]
  \f[B]const\f[R] text = propElements.map((e) \f[B]=>\f[R] e.textContent.trim).join(\(dq \(dq);
  log(\(gaError message details: ${text.trim()}\(ga);
} \f[B]else\f[R] {
  log(\(dqelement.ariaErrorMessageElements: not supported by browser\(dq);
}
.EE
.SS Result
As you enter an email address, the error text will be displayed until
the email address is valid.
Note that the log shows the error message reference read from the
attribute, the element from \f[CR]ariaErrorMessageElements\f[R], and the
inner text of the element, which is its error message.
.SH SEE ALSO
.IP \(bu 2
\f[CR]aria\-errormessage\f[R] attribute
.IP \(bu 2
\f[CR]ElementInternals.ariaErrorMessageElements\f[R]
.IP \(bu 2
Reflected element references in the \f[I]Attribute reflection\f[R]
guide.
