.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "GPURENDERBUNDLEENCODER.SETPIPELINE" "3JS" "June 18, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
GPURenderBundleEncoder.setPipeline \- GPURenderBundleEncoder:
setPipeline() method
.SH SYNOPSIS
\f[B]Secure context:\f[R] This feature is available only in secure
contexts (HTTPS).
.PP
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]setPipeline()\f[B]\f[R] method of the
\f[CR]GPURenderBundleEncoder\f[R] interface sets the
\f[CR]GPURenderPipeline\f[R] to use for subsequent render bundle
commands.
.RS
.PP
\f[B]Note:\f[R] This method is functionally identical to its equivalent
on \f[CR]GPURenderPassEncoder\f[R] \(em \f[CR]setPipeline()\f[R].
.RE
.SH SYNTAX
.IP
.EX
setPipeline(pipeline)
.EE
.SS Parameters
.TP
\f[B]pipeline\f[R]
The \f[CR]GPURenderPipeline\f[R] to use for subsequent render bundle
commands.
.SS Return value
None (\f[CR]Undefined\f[R]).
.SS Validation
The following criteria must be met when calling
\f[B]\f[CB]setPipeline()\f[B]\f[R], otherwise a
\f[CR]GPUValidationError\f[R] is generated and the
\f[CR]GPURenderBundleEncoder\f[R] becomes invalid:
.IP \(bu 2
If the \f[CR]GPURenderPipeline\f[R] writes to the depth component of the
depth/stencil attachment, \f[CR]depthReadOnly\f[R] (as specified in the
descriptor of the originating
\f[CR]GPUCommandEncoder.beginRenderPass()\f[R] call) is \f[CR]true\f[R].
.IP \(bu 2
If the \f[CR]GPURenderPipeline\f[R] writes to the stencil component of
the depth/stencil attachment, \f[CR]stencilReadOnly\f[R] (as specified
in the descriptor of the originating
\f[CR]GPUCommandEncoder.beginRenderPass()\f[R] call) is \f[CR]true\f[R].
.SH EXAMPLES
.IP
.EX
\f[B]function\f[R] recordRenderPass(passEncoder) {
  \f[B]if\f[R] (settings.dynamicOffsets) {
    passEncoder.setPipeline(dynamicPipeline);
  } \f[B]else\f[R] {
    passEncoder.setPipeline(pipeline);
  }
  passEncoder.setVertexBuffer(0, vertexBuffer);
  passEncoder.setBindGroup(0, timeBindGroup);
  \f[B]const\f[R] dynamicOffsets = [0];
  \f[B]for\f[R] (\f[B]let\f[R] i = 0; i < numTriangles; ++i) {
    \f[B]if\f[R] (settings.dynamicOffsets) {
      dynamicOffsets[0] = i * alignedUniformBytes;
      passEncoder.setBindGroup(1, dynamicBindGroup, dynamicOffsets);
    } \f[B]else\f[R] {
      passEncoder.setBindGroup(1, bindGroups[i]);
    }
    passEncoder.draw(3, 1, 0, 0);
  }
}
.EE
.PP
The above snippet is taken from the WebGPU Samples \c
.UR https://webgpu.github.io/webgpu-samples/samples/animometer/
Animometer example
.UE \c
\&.
.SH SEE ALSO
.IP \(bu 2
The WebGPU API
