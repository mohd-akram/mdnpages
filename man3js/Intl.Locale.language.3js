.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "Intl.Locale.language" "JS" "September 25, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Intl.Locale.language \- Intl.Locale.prototype.language
.SH SYNOPSIS
The \f[B]\f[CB]language\f[B]\f[R] accessor property of
\f[CR]Intl.Locale\f[R] instances returns the language associated with
this locale.
.SH DESCRIPTION
Language is one of the core features of a locale.
The Unicode specification treats the language identifier of a locale as
the language and the region together (to make a distinction between
dialects and variations, e.g.\ British English vs.\ American English).
The \f[CR]language\f[R] property of a \f[CR]Intl.Locale\f[R] returns
strictly the locale\[cq]s language subtag.
.SH EXAMPLES
.SS Setting the language in the locale identifier string argument
In order to be a valid Unicode locale identifier, a string must start
with the language subtag.
The main argument to the \f[CR]Intl.Locale()\f[R] constructor must be a
valid Unicode locale identifier, so whenever the constructor is used, it
must be passed an identifier with a language subtag.
.IP
.EX
\f[B]const\f[R] locale = \f[B]new\f[R] Intl.Locale(\[dq]en\-Latn\-US\[dq]);
console.log(locale.language); \f[I]// Prints \[dq]en\[dq]\f[R]
.EE
.SS Overriding language via the configuration object
While the language subtag must be specified, the
\f[CR]Intl.Locale()\f[R] constructor takes a configuration object, which
can override the language subtag.
.IP
.EX
\f[B]const\f[R] locale = \f[B]new\f[R] Intl.Locale(\[dq]en\-Latn\-US\[dq], { language: \[dq]es\[dq] });
console.log(locale.language); \f[I]// Prints \[dq]es\[dq]\f[R]
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]Intl.Locale\f[R]
.IP \[bu] 2
\c
.UR https://www.unicode.org/reports/tr35/#unicode_language_subtag_validity
Unicode language subtag
.UE \c
\ in the Unicode locale data markup language spec
