.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "WebGLRenderingContext.pixelStorei" "JS" "April 8, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
WebGLRenderingContext.pixelStorei \- WebGLRenderingContext:
pixelStorei() method
.SH SYNOPSIS
The \f[B]\f[CB]WebGLRenderingContext.pixelStorei()\f[B]\f[R] method of
the WebGL API specifies the pixel storage modes.
.SH SYNTAX
.IP
.EX
pixelStorei(pname, param)
.EE
.SS Parameters
.TP
\f[B]pname\f[R]
A \f[CR]GLenum\f[R] specifying which parameter to set.
See below for possible values.
.TP
\f[B]param\f[R]
A \f[CR]GLint\f[R] specifying a value to set the \f[CR]pname\f[R]
parameter to.
See below for possible values.
.SS Return value
None (\f[CR]undefined\f[R]).
.SH PIXEL STORAGE PARAMETERS
Parameter name (for pname)
Description
Type
Default value
Allowed values (for param)
Specified in
gl.PACK_ALIGNMENT
Packing of pixel data into memory
\f[CR]GLint\f[R]
4
1, 2, 4, 8
OpenGL ES 2.0
gl.UNPACK_ALIGNMENT
Unpacking of pixel data from memory.
\f[CR]GLint\f[R]
4
1, 2, 4, 8
OpenGL ES 2.0
gl.UNPACK_FLIP_Y_WEBGL
Flips the source data along its vertical axis if true.
\f[CR]GLboolean\f[R]
false
true, false
WebGL
gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL
Multiplies the alpha channel into the other color channels
\f[CR]GLboolean\f[R]
false
true, false
WebGL
gl.UNPACK_COLORSPACE_CONVERSION_WEBGL
Default color space conversion or no color space conversion.
\f[CR]GLenum\f[R]
gl.BROWSER_DEFAULT_WEBGL
gl.BROWSER_DEFAULT_WEBGL, gl.NONE
WebGL
.PP
When using a WebGL 2 context, the following values are available
additionally:
Constant
Description
Type
Default value
Allowed values (for param)
Specified in
gl.PACK_ROW_LENGTH
Number of pixels in a row.
\f[CR]GLint\f[R]
0
0 to Infinity
OpenGL ES 3.0
gl.PACK_SKIP_PIXELS
Number of pixel locations skipped before the first pixel is written into
memory.
\f[CR]GLint\f[R]
0
0 to Infinity
OpenGL ES 3.0
gl.PACK_SKIP_ROWS
Number of rows of pixel locations skipped before the first pixel is
written into memory
\f[CR]GLint\f[R]
0
0 to Infinity
OpenGL ES 3.0
gl.UNPACK_ROW_LENGTH
Number of pixels in a row.
\f[CR]GLint\f[R]
0
0 to Infinity
OpenGL ES 3.0
gl.UNPACK_IMAGE_HEIGHT
Image height used for reading pixel data from memory
\f[CR]GLint\f[R]
0
0 to Infinity
OpenGL ES 3.0
gl.UNPACK_SKIP_PIXELS
Number of pixel images skipped before the first pixel is read from
memory
\f[CR]GLint\f[R]
0
0 to Infinity
OpenGL ES 3.0
gl.UNPACK_SKIP_ROWS
Number of rows of pixel locations skipped before the first pixel is read
from memory
\f[CR]GLint\f[R]
0
0 to Infinity
OpenGL ES 3.0
gl.UNPACK_SKIP_IMAGES
Number of pixel images skipped before the first pixel is read from
memory
\f[CR]GLint\f[R]
0
0 to Infinity
OpenGL ES 3.0
.SH EXAMPLES
Setting the pixel storage mode affects the
\f[CR]WebGLRenderingContext.readPixels()\f[R] operations, as well as
unpacking of textures with the
\f[CR]WebGLRenderingContext.texImage2D()\f[R] and
\f[CR]WebGLRenderingContext.texSubImage2D()\f[R] methods.
.IP
.EX
\f[B]const\f[R] tex = gl.createTexture();
gl.bindTexture(gl.TEXTURE_2D, tex);
gl.pixelStorei(gl.PACK_ALIGNMENT, 4);
.EE
.PP
To check the values for packing and unpacking of pixel data, you can
query the same pixel storage parameters with
\f[CR]WebGLRenderingContext.getParameter()\f[R].
.IP
.EX
gl.getParameter(gl.PACK_ALIGNMENT);
gl.getParameter(gl.UNPACK_ALIGNMENT);
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]WebGLRenderingContext.readPixels()\f[R]
.IP \[bu] 2
\f[CR]WebGLRenderingContext.texImage2D()\f[R]
.IP \[bu] 2
\f[CR]WebGLRenderingContext.texSubImage2D()\f[R]
