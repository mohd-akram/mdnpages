.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "MediaSource.readyState" "JS" "April 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
MediaSource.readyState \- MediaSource: readyState property
.SH SYNOPSIS
The \f[B]\f[CB]readyState\f[B]\f[R] read\-only property of the
\f[CR]MediaSource\f[R] interface returns an enum representing the state
of the current \f[CR]MediaSource\f[R].
The three possible values are:
.IP \[bu] 2
\f[CR]closed\f[R]: The source is not currently attached to a media
element.
.IP \[bu] 2
\f[CR]open\f[R]: The source is attached to a media element and ready to
receive \f[CR]SourceBuffer\f[R] objects.
.IP \[bu] 2
\f[CR]ended\f[R]: The source is attached to a media element but the
stream has been ended via a call to
\f[CR]MediaSource.endOfStream()\f[R].
.SH VALUE
A string.
.SH EXAMPLES
The following snippet is from a simple example written by Nick
Desaulniers (\c
.UR https://nickdesaulniers.github.io/netfix/demo/bufferAll.html
view the full demo live
.UE \c
, or \c
.UR https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferAll.html
download the source
.UE \c
\ for further investigation).
The function \f[CR]getMediaSource()\f[R], which is not defined here,
returns a \f[CR]MediaSource\f[R].
.IP
.EX
\f[B]let\f[R] mediaSource;

\f[B]if\f[R] (\[dq]MediaSource\[dq] \f[B]in\f[R] window && MediaSource.isTypeSupported(mimeCodec)) {
  mediaSource = getMediaSource();
  console.log(mediaSource.readyState); \f[I]// closed\f[R]
  video.src = URL.createObjectURL(mediaSource);
  mediaSource.addEventListener(\[dq]sourceopen\[dq], sourceOpen);
} \f[B]else\f[R] {
  console.error(\[dq]Unsupported MIME type or codec: \[dq], mimeCodec);
}

\f[B]function\f[R] sourceOpen() {
  console.log(\f[B]this\f[R].readyState); \f[I]// open\f[R]
  \f[B]const\f[R] sourceBuffer = mediaSource.addSourceBuffer(mimeCodec);
  fetchAB(assetURL, (buf) \f[B]=>\f[R] {
    sourceBuffer.addEventListener(\[dq]updateend\[dq], () \f[B]=>\f[R] {
      mediaSource.endOfStream();
      video.play();
      console.log(mediaSource.readyState); \f[I]// ended\f[R]
    });
    sourceBuffer.appendBuffer(buf);
  });
}
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]SourceBuffer\f[R]
.IP \[bu] 2
\f[CR]SourceBufferList\f[R]
