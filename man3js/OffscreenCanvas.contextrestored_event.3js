.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "OFFSCREENCANVAS.CONTEXTRESTORED_EVENT" "3JS" "May 2, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
OffscreenCanvas.contextrestored_event \- OffscreenCanvas:
contextrestored event
.SH SYNOPSIS
The \f[B]\f[CB]contextrestored\f[B]\f[R] event of the
\f[CR]OffscreenCanvas\f[R] interface is fired if the browser restores a
\f[CR]OffscreenCanvasRenderingContext2D\f[R] context that was previously
lost.
.PP
You can redraw, re\-retrieve resources, and reinitialize the state of
your context after receiving this event.
.SH SYNTAX
Use the event name in methods like \f[CR]addEventListener()\f[R], or set
an event handler property.
.IP
.EX
addEventListener(\(dqcontextrestored\(dq, (event) => { })

oncontextrestored = (event) => { }
.EE
.SH EVENT TYPE
A generic \f[CR]Event\f[R].
.SH EXAMPLES
The code fragment below detects the context restored event.
.IP
.EX
\f[B]const\f[R] canvas = \f[B]new\f[R] OffscreenCanvas(256, 256);
\f[B]const\f[R] gl = offscreen.getContext(\(dq2d\(dq);

canvas.addEventListener(
  \(dqcontextrestored\(dq,
  (e) \f[B]=>\f[R] {
    console.log(e);
    \f[I]// call to redrawCanvas() or similar\f[R]
  },
  \f[B]false\f[R],
);
.EE
.SH SEE ALSO
.IP \(bu 2
\f[CR]OffscreenCanvas: contextlost\f[R] event
.IP \(bu 2
\f[CR]OffscreenCanvasRenderingContext2D.isContextLost()\f[R]
.IP \(bu 2
\f[CR]HTMLCanvasElement: contextrestored\f[R] event
