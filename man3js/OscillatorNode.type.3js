.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "OSCILLATORNODE.TYPE" "3JS" "July 21, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
OscillatorNode.type \- OscillatorNode: type property
.SH SYNOPSIS
The \f[B]\f[CB]type\f[B]\f[R] property of the \f[CR]OscillatorNode\f[R]
interface specifies what shape of \c
.UR https://en.wikipedia.org/wiki/Waveform
waveform
.UE \c
\ the oscillator will output.
There are several common waveforms available, as well as an option to
specify a custom waveform shape.
The shape of the waveform will affect the tone that is produced.
.SH VALUE
A string specifying the shape of oscillator wave.
The different available values are:
.TP
\f[B]sine\f[R]
A \c
.UR https://en.wikipedia.org/wiki/Sine_wave
sine wave
.UE \c
\&.
This is the default value.
.TP
\f[B]square\f[R]
A \c
.UR https://en.wikipedia.org/wiki/Square_wave
square wave
.UE \c
\ with a \c
.UR https://en.wikipedia.org/wiki/Duty_cycle
duty cycle
.UE \c
\ of 0.5; that is, the signal is \(lqhigh\(rq for half of each period.
.TP
\f[B]sawtooth\f[R]
A \c
.UR https://en.wikipedia.org/wiki/Sawtooth_wave
sawtooth wave
.UE \c
\&.
.TP
\f[B]triangle\f[R]
A \c
.UR https://en.wikipedia.org/wiki/Triangle_wave
triangle wave
.UE \c
\&.
.TP
\f[B]custom\f[R]
A custom waveform.
You never set \f[CR]type\f[R] to \f[CR]custom\f[R] manually; instead,
use the \f[CR]setPeriodicWave()\f[R] method to provide the data
representing the waveform.
Doing so automatically sets the \f[CR]type\f[R] to \f[CR]custom\f[R].
.SS Exceptions
.TP
\f[B]InvalidStateError\f[R] \f[B]DOMException\f[R]
Thrown if the value \f[CR]custom\f[R] was specified.
To set a custom waveform, just call \f[CR]setPeriodicWave()\f[R].
Doing so automatically sets the type for you.
.SH EXAMPLES
The following example shows basic usage of an \f[CR]AudioContext\f[R] to
create an oscillator node.
For an applied example, check out our \c
.UR https://mdn.github.io/webaudio-examples/violent-theremin/
Violent Theremin demo
.UE \c
\ (\c
.UR https://github.com/mdn/webaudio-examples/blob/main/violent-theremin/scripts/app.js
see app.js
.UE \c
\ for relevant code).
.IP
.EX
\f[I]// create web audio api context\f[R]
\f[B]const\f[R] audioCtx = \f[B]new\f[R] AudioContext();

\f[I]// create Oscillator node\f[R]
\f[B]const\f[R] oscillator = audioCtx.createOscillator();

oscillator.type = \(dqsquare\(dq;
oscillator.frequency.setValueAtTime(440, audioCtx.currentTime); \f[I]// value in hertz\f[R]
oscillator.start();
.EE
.SH SEE ALSO
.IP \(bu 2
Using the Web Audio API
