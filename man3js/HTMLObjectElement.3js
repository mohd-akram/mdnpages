.\" Automatically generated by Pandoc 3.4
.\"
.TH "HTMLObjectElement" "JS" "November 28, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
HTMLObjectElement \- HTMLObjectElement
.SH SYNOPSIS
The \f[B]\f[CB]HTMLObjectElement\f[B]\f[R] interface provides special
properties and methods (beyond those on the \f[CR]HTMLElement\f[R]
interface it also has available to it by inheritance) for manipulating
the layout and presentation of \f[CR]<object>\f[R] element, representing
external resources.
.SH INSTANCE PROPERTIES
\f[I]Inherits properties from its parent, \f[CI]HTMLElement\f[I].\f[R]
.TP
\f[B]HTMLObjectElement.align\f[R] \f[I](deprecated)\f[R]
A string representing an enumerated property indicating alignment of the
element\[cq]s contents with respect to the surrounding context.
The possible values are \f[CR]\[dq]left\[dq]\f[R],
\f[CR]\[dq]right\[dq]\f[R], \f[CR]\[dq]justify\[dq]\f[R], and
\f[CR]\[dq]center\[dq]\f[R].
.TP
\f[B]HTMLObjectElement.archive\f[R] \f[I](deprecated)\f[R]
A string that reflects the \f[CR]archive\f[R] HTML attribute, containing
a list of archives for resources for this object.
.TP
\f[B]HTMLObjectElement.border\f[R] \f[I](deprecated)\f[R]
A string that reflects the \f[CR]border\f[R] HTML attribute, specifying
the width of a border around the object.
.TP
\f[B]HTMLObjectElement.code\f[R] \f[I](deprecated)\f[R]
A string representing the name of an applet class file, containing
either the applet\[cq]s subclass, or the path to get to the class,
including the class file itself.
.TP
\f[B]HTMLObjectElement.codeBase\f[R] \f[I](deprecated)\f[R]
A string that reflects the \f[CR]codebase\f[R] HTML attribute,
specifying the base path to use to resolve relative URIs.
.TP
\f[B]HTMLObjectElement.codeType\f[R] \f[I](deprecated)\f[R]
A string that reflects the \f[CR]codetype\f[R] HTML attribute,
specifying the content type of the data.
.TP
\f[B]HTMLObjectElement.contentDocument\f[R] \f[I](read\-only)\f[R]
Returns a \f[CR]Document\f[R] representing the active document of the
object element\[cq]s nested browsing context, if any; otherwise
\f[CR]null\f[R].
.TP
\f[B]HTMLObjectElement.contentWindow\f[R] \f[I](read\-only)\f[R]
Returns a WindowProxy representing the window proxy of the object
element\[cq]s nested browsing context, if any; otherwise
\f[CR]null\f[R].
.TP
\f[B]HTMLObjectElement.data\f[R]
Returns a string that reflects the \f[CR]data\f[R] HTML attribute,
specifying the address of a resource\[cq]s data.
.TP
\f[B]HTMLObjectElement.declare\f[R] \f[I](deprecated)\f[R]
A boolean value that reflects the \f[CR]declare\f[R] HTML attribute,
indicating that this is a declaration, not an instantiation, of the
object.
.TP
\f[B]HTMLObjectElement.form\f[R] \f[I](read\-only)\f[R]
Returns a \f[CR]HTMLFormElement\f[R] representing the object
element\[cq]s form owner, or null if there isn\[cq]t one.
.TP
\f[B]HTMLObjectElement.height\f[R]
Returns a string that reflects the \f[CR]height\f[R] HTML attribute,
specifying the displayed height of the resource in CSS pixels.
.TP
\f[B]HTMLObjectElement.hspace\f[R] \f[I](deprecated)\f[R]
A \f[CR]long\f[R] representing the horizontal space in pixels around the
control.
.TP
\f[B]HTMLObjectElement.name\f[R]
Returns a string that reflects the \f[CR]name\f[R] HTML attribute,
specifying the name of the browsing context.
.TP
\f[B]HTMLObjectElement.standby\f[R] \f[I](deprecated)\f[R]
A string that reflects the \f[CR]standby\f[R] HTML attribute, specifying
a message to display while the object loads.
.TP
\f[B]HTMLObjectElement.type\f[R]
A string that reflects the \f[CR]type\f[R] HTML attribute, specifying
the MIME type of the resource.
.TP
\f[B]HTMLObjectElement.useMap\f[R] \f[I](deprecated)\f[R]
A string that reflects the \f[CR]usemap\f[R] HTML attribute, specifying
a \f[CR]<map>\f[R] element to use.
.TP
\f[B]HTMLObjectElement.validationMessage\f[R] \f[I](read\-only)\f[R]
Returns a string representing a localized message that describes the
validation constraints that the control does not satisfy (if any).
This is the empty string if the control is not a candidate for
constraint validation (\f[CR]willValidate\f[R] is \f[CR]false\f[R]), or
it satisfies its constraints.
.TP
\f[B]HTMLObjectElement.validity\f[R] \f[I](read\-only)\f[R]
Returns a \f[CR]ValidityState\f[R] with the validity states that this
element is in.
.TP
\f[B]HTMLObjectElement.vspace\f[R] \f[I](deprecated)\f[R]
A \f[CR]long\f[R] representing the horizontal space in pixels around the
control.
.TP
\f[B]HTMLObjectElement.width\f[R]
A string that reflects the \f[CR]width\f[R] HTML attribute, specifying
the displayed width of the resource in CSS pixels.
.TP
\f[B]HTMLObjectElement.willValidate\f[R] \f[I](read\-only)\f[R]
Returns a boolean value that indicates whether the element is a
candidate for constraint validation.
Always \f[CR]false\f[R] for \f[CR]HTMLObjectElement\f[R] objects.
.SH INSTANCE METHODS
\f[I]Inherits methods from its parent, \f[CI]HTMLElement\f[I].\f[R]
.TP
\f[B]HTMLObjectElement.checkValidity()\f[R]
Always returns \f[CR]true\f[R] because \f[CR]<object>\f[R] elements are
never candidates for constraint validation.
.TP
\f[B]HTMLObjectElement.getSVGDocument()\f[R]
Returns the embedded SVG as a \f[CR]Document\f[R].
.TP
\f[B]HTMLObjectElement.reportValidity()\f[R]
Always returns \f[CR]true\f[R] because \f[CR]<object>\f[R] elements are
never candidates for constraint validation.
.TP
\f[B]HTMLObjectElement.setCustomValidity()\f[R]
Sets a custom validity message for the element.
If this message is not the empty string, then the element is suffering
from a custom validity error, and does not validate.
.SH SEE ALSO
.IP \[bu] 2
The HTML element implementing this interface: \f[CR]<object>\f[R]
