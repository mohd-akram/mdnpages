.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "PerformanceResourceTiming.transferSize" "JS" "April 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
PerformanceResourceTiming.transferSize \- PerformanceResourceTiming:
transferSize property
.SH SYNOPSIS
The \f[B]\f[CB]transferSize\f[B]\f[R] read\-only property represents the
size (in octets) of the fetched resource.
The size includes the response header fields plus the response payload
body (as defined by \c
.UR https://httpwg.org/specs/rfc7230.html#message.body
RFC7230
.UE \c
).
.PP
If the resource is fetched from a local cache, or if it is a
cross\-origin resource, this property returns zero.
.SH VALUE
The \f[CR]transferSize\f[R] property can have the following values:
.IP \[bu] 2
A number representing the size (in octets) of the fetched resource.
The size includes the response header fields plus the \c
.UR https://httpwg.org/specs/rfc7230.html#message.body
response payload body
.UE \c
\ (RFC7230).
.IP \[bu] 2
\f[CR]0\f[R] if the resource was instantaneously retrieved from a cache.
.IP \[bu] 2
\f[CR]0\f[R] if the resource is a cross\-origin request and no
\f[CR]Timing\-Allow\-Origin\f[R] HTTP response header is used.
.SH EXAMPLES
.SS Checking if a cache was hit
For environments not supporting the \f[CR]responseStatus\f[R] property,
the \f[CR]transferSize\f[R] property can be used to determine cache
hits.
If \f[CR]transferSize\f[R] is zero and the resource has a non\-zero
decoded body size (meaning the resource is same\-origin or has
\f[CR]Timing\-Allow\-Origin\f[R]), the resource was fetched from a local
cache.
.PP
Example using a \f[CR]PerformanceObserver\f[R], which notifies of new
\f[CR]resource\f[R] performance entries as they are recorded in the
browser\[cq]s performance timeline.
Use the \f[CR]buffered\f[R] option to access entries from before the
observer creation.
.IP
.EX
\f[B]const\f[R] observer = \f[B]new\f[R] PerformanceObserver((list) \f[B]=>\f[R] {
  list.getEntries().forEach((entry) \f[B]=>\f[R] {
    \f[B]if\f[R] (entry.transferSize === 0 && entry.decodedBodySize > 0) {
      console.log(\[ga]${entry.name} was loaded from cache\[ga]);
    }
  });
});

observer.observe({ type: \[dq]resource\[dq], buffered: \f[B]true\f[R] });
.EE
.PP
Example using \f[CR]Performance.getEntriesByType()\f[R], which only
shows \f[CR]resource\f[R] performance entries present in the
browser\[cq]s performance timeline at the time you call this method:
.IP
.EX
\f[B]const\f[R] resources = performance.getEntriesByType(\[dq]resource\[dq]);
resources.forEach((entry) \f[B]=>\f[R] {
  \f[B]if\f[R] (entry.transferSize === 0 && entry.decodedBodySize > 0) {
    console.log(\[ga]${entry.name} was loaded from cache\[ga]);
  }
});
.EE
.SS Cross\-origin content size information
If the value of the \f[CR]transferSize\f[R] property is \f[CR]0\f[R] and
wasn\[cq]t loaded from a local cache, the resource might be a
cross\-origin request.
To expose cross\-origin content size information, the
\f[CR]Timing\-Allow\-Origin\f[R] HTTP response header needs to be set.
.PP
For example, to allow \f[CR]https://developer.mozilla.org\f[R] to see
content sizes, the cross\-origin resource should send:
.IP
.EX
Timing\-Allow\-Origin: https://developer.mozilla.org
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]Timing\-Allow\-Origin\f[R]
