.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "GPUBUFFER.LABEL" "3JS" "June 18, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
GPUBuffer.label \- GPUBuffer: label property
.SH SYNOPSIS
\f[B]Secure context:\f[R] This feature is available only in secure
contexts (HTTPS).
.PP
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]label\f[B]\f[R] property of the \f[CR]GPUBuffer\f[R]
interface provides a label that can be used to identify the object, for
example in \f[CR]GPUError\f[R] messages or console warnings.
.PP
This can be set by providing a \f[CR]label\f[R] property in the
descriptor object passed into the originating
\f[CR]GPUDevice.createBuffer()\f[R] call, or you can get and set it
directly on the \f[CR]GPUBuffer\f[R] object.
.SH VALUE
A string.
If this has not been previously set as described above, it will be an
empty string.
.SH EXAMPLES
Setting and getting a label via \f[CR]GPUBuffer.label\f[R]:
.IP
.EX
\f[B]const\f[R] output = device.createBuffer({
  size: BUFFER_SIZE,
  usage: GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC,
});

output.label = \(dqmy_buffer\(dq;

console.log(output.label); \f[I]// \(dqmy_buffer\(dq\f[R]
.EE
.PP
Setting a label via the originating \f[CR]GPUDevice.createBuffer()\f[R]
call, and then getting it via \f[CR]GPUBuffer.label\f[R]:
.IP
.EX
\f[B]const\f[R] output = device.createBuffer({
  size: BUFFER_SIZE,
  usage: GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC,
  label: \(dqmy_buffer\(dq,
});

console.log(output.label); \f[I]// \(dqmy_buffer\(dq\f[R]
.EE
.SH SEE ALSO
.IP \(bu 2
The WebGPU API
