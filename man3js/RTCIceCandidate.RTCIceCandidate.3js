.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "RTCICECANDIDATE.RTCICECANDIDATE" "3JS" "July 26, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
RTCIceCandidate.RTCIceCandidate \- RTCIceCandidate: RTCIceCandidate()
constructor
.SH SYNOPSIS
The \f[B]\f[CB]RTCIceCandidate()\f[B]\f[R] constructor creates and
returns a new \f[CR]RTCIceCandidate\f[R] object, which can be configured
to represent a single ICE candidate.
.SH SYNTAX
.IP
.EX
new RTCIceCandidate()
new RTCIceCandidate(candidateInfo)
.EE
.SS Parameters
.TP
\f[B]candidateInfo\f[R] \f[I](optional)\f[R]
An optional object that can be provided to configure the candidate.
The object has the following properties:
.RS
.TP
\f[B]candidate\f[R] \f[I](optional)\f[R]
A string describing the properties of the candidate, taken directly from
the SDP attribute \f[CR]\(dqcandidate\(dq\f[R].
The candidate string specifies the network connectivity information for
the candidate.
If the \f[CR]candidate\f[R] is an empty string (\f[CR]\(dq\(dq\f[R]),
the end of the candidate list has been reached; this candidate is known
as the \(lqend\-of\-candidates\(rq marker.
.RS
.PP
The syntax of the candidate string is described in RFC 5245, section
15.1.
For an a\-line (attribute line) that looks like this:
.IP
.EX
a=candidate:4234997325 1 udp 2043278322 192.0.2.172 44323 typ host
.EE
.PP
the corresponding \f[CR]candidate\f[R] string\(cqs value will be
\f[CR]\(dqcandidate:4234997325 1 udp 2043278322 192.0.2.172 44323 typ host\(dq\f[R].
.PP
The user agent always prefers candidates with the highest
\f[CR]priority\f[R], all else being equal.
In the example above, the priority is \f[CR]2043278322\f[R].
The attributes are all separated by a single space character, and are in
a specific order.
The complete list of attributes for this example candidate is:
.IP \(bu 2
\f[CR]foundation\f[R] = 4234997325
.IP \(bu 2
\f[CR]component\f[R] = \f[CR]\(dqrtp\(dq\f[R] (the number 1 is encoded
to this string; 2 becomes \f[CR]\(dqrtcp\(dq\f[R])
.IP \(bu 2
\f[CR]protocol\f[R] = \f[CR]\(dqudp\(dq\f[R]
.IP \(bu 2
\f[CR]priority\f[R] = 2043278322
.IP \(bu 2
\f[CR]ip\f[R] = \f[CR]\(dq192.0.2.172\(dq\f[R]
.IP \(bu 2
\f[CR]port\f[R] = 44323
.IP \(bu 2
\f[CR]type\f[R] = \f[CR]\(dqhost\(dq\f[R]
.PP
Additional information can be found in
\f[CR]RTCIceCandidate.candidate\f[R].
.RS
.PP
\f[B]Note:\f[R] For backward compatibility with older versions of the
WebRTC specification, the constructor also accepts this string directly
as an argument.
.RE
.RE
.TP
\f[B]sdpMid\f[R] \f[I](optional)\f[R]
A string containing the identification tag of the media stream with
which the candidate is associated, or \f[CR]null\f[R] if there is no
associated media stream.
The default is \f[CR]null\f[R].
.RS
.PP
Additional information can be found in
\f[CR]RTCIceCandidate.sdpMid\f[R].
.RE
.TP
\f[B]sdpMLineIndex\f[R] \f[I](optional)\f[R]
A number property containing the zero\-based index of the m\-line with
which the candidate is associated, within the SDP of the media
description, or \f[CR]null\f[R] if no such associated exists.
The default is \f[CR]null\f[R].
.RS
.PP
Additional information can be found in
\f[CR]RTCIceCandidate.sdpMLineIndex\f[R].
.RE
.TP
\f[B]usernameFragment\f[R] \f[I](optional)\f[R]
A string containing the username fragment (usually referred to in
shorthand as \(lqufrag\(rq or \(lqice\-ufrag\(rq).
This fragment, along with the ICE password (\(lqice\-pwd\(rq), uniquely
identifies a single ongoing ICE interaction (including for any
communication with the STUN server).
.RS
.PP
The string is generated by WebRTC at the beginning of the session.
It may be up to 256 characters long, and at least 24 bits must contain
random data.
It has no default value and is not present unless set explicitly.
.PP
Additional information can be found in
\f[CR]RTCIceCandidate.usernameFragment\f[R].
.RE
.RE
.SS Return value
A newly\-created \f[CR]RTCIceCandidate\f[R] object.
.PP
If \f[CR]candidateInfo\f[R] is provided, the new
\f[CR]RTCIceCandidate\f[R] is initialized as follows:
.IP \(bu 2
Each member of the \f[CR]RTCIceCandidate\f[R] object is initialized to
the value of the property by the same name from
\f[CR]candidateInfo\f[R].
This includes the \f[CR]candidate\f[R], \f[CR]sdpMid\f[R],
\f[CR]sdpMLineIndex\f[R], and \f[CR]usernameFragment\f[R] properties.
.IP \(bu 2
The \f[CR]candidate\f[R] string (which is SDP text) is parsed; each
property found is stored in the corresponding field in the
\f[CR]RTCIceCandidate\f[R].
If any of the fields is invalid, parsing of the string silently aborts
without throwing an exception.
The default value of \f[CR]candidate\f[R] is the empty string, which
indicates that the candidate is an \(lqend\-of\-candidates\(rq message.
.IP \(bu 2
The following fields are initialized to \f[CR]null\f[R] if they are not
included in the \f[CR]RTCIceCandidate.candidate\f[R] property:
\f[CR]foundation\f[R], \f[CR]component\f[R], \f[CR]priority\f[R],
\f[CR]address\f[R], \f[CR]protocol\f[R], \f[CR]port\f[R],
\f[CR]type\f[R], \f[CR]tcpType\f[R], \f[CR]relatedAddress\f[R], and
\f[CR]relatedPort\f[R].
.RS
.PP
\f[B]Note:\f[R] Parsing of the \f[CR]candidate\f[R] string is performed
using the \c
.UR https://w3c.github.io/webrtc-pc/#candidate-attribute-grammar
candidate\-attribute grammar
.UE \c
\ from the WebRTC Specification.
.RE
.SS Exceptions
.TP
\f[B]TypeError\f[R]
Thrown if the specified \f[CR]candidateInfo\f[R] has values of
\f[CR]null\f[R] in \f[B]both\f[R] the \f[CR]sdpMid\f[R] and
\f[CR]sdpMLineIndex\f[R] properties.
.SH USAGE NOTES
This constructor does not do complete validation of the specified
\f[CR]candidateInfo\f[R] object or string.
.SH SEE ALSO
.IP \(bu 2
Introduction to WebRTC protocols
.IP \(bu 2
WebRTC connectivity
.IP \(bu 2
Lifetime of a WebRTC session
.IP \(bu 2
Signaling and video calling
