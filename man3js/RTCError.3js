.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "RTCError" "JS" "August 6, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
RTCError \- RTCError
.SH SYNOPSIS
The \f[B]\f[CB]RTCError\f[B]\f[R] interface describes an error which has
occurred while handling WebRTC operations.
It\[cq]s based upon the standard \f[CR]DOMException\f[R] interface that
describes general DOM errors.
.SH CONSTRUCTOR
.TP
\f[B]RTCError()\f[R]
Creates and returns a new \f[CR]RTCError\f[R] object initialized with
the different parameters and, optionally, a string to use as the value
of the error\[cq]s \f[CR]message\f[R] property.
.SH INSTANCE PROPERTIES
\f[I]In addition to the properties defined by the parent interface,
\f[CI]DOMException\f[I], \f[CI]RTCError\f[I] includes the following
properties:\f[R]
.TP
\f[B]errorDetail\f[R] \f[I](read\-only)\f[R]
A string specifying the WebRTC\-specific error code identifying the type
of error that occurred.
.TP
\f[B]receivedAlert\f[R] \f[I](read\-only)\f[R]
An unsigned long integer value indicating the fatal DTLS error which was
received from the network.
Only valid if the \f[CR]errorDetail\f[R] string is
\f[CR]dtls\-failure\f[R].
If \f[CR]null\f[R], no DTLS error was received.
.TP
\f[B]sctpCauseCode\f[R] \f[I](read\-only)\f[R]
If \f[CR]errorDetail\f[R] is \f[CR]sctp\-failure\f[R], this property is
a long integer specifying the SCTP cause code indicating the cause of
the failed SCTP negotiation.
\f[CR]null\f[R] if the error isn\[cq]t an SCTP error.
.TP
\f[B]sdpLineNumber\f[R] \f[I](read\-only)\f[R]
If \f[CR]errorDetail\f[R] is \f[CR]sdp\-syntax\-error\f[R], this
property is a long integer identifying the line number of the SDP on
which the syntax error occurred.
\f[CR]null\f[R] if the error isn\[cq]t an SDP syntax error.
.TP
\f[B]sentAlert\f[R] \f[I](read\-only)\f[R]
If \f[CR]errorDetail\f[R] is \f[CR]dtls\-failure\f[R], this property is
an unsigned long integer indicating the fatal DTLS error that was sent
out by this device.
If \f[CR]null\f[R], no DTLS error was transmitted.
.RS
.PP
\f[B]Note:\f[R] All \f[CR]RTCError\f[R] objects have their
\f[CR]name\f[R] set to \f[CR]OperationError\f[R].
.RE
.SH EXAMPLES
In this example, a handler is established for an
\f[CR]RTCDataChannel\f[R]\[cq]s \f[CR]error\f[R] event.
.IP
.EX
dataChannel.addEventListener(\[dq]error\[dq], (event) \f[B]=>\f[R] {
  \f[B]let\f[R] error = event.error; \f[I]// event.error is an RTCError\f[R]

  \f[B]if\f[R] (error.errorDetail === \[dq]sdp\-syntax\-error\[dq]) {
    \f[B]let\f[R] errLine = error.sdpLineNumber;
    \f[B]let\f[R] errMessage = error.message;

    \f[B]let\f[R] alertMessage = \[ga]A syntax error occurred interpreting line ${errLine} of the SDP: ${errMessage}\[ga];
    showMyAlertMessage(\[dq]Data Channel Error\[dq], alertMessage);
  } \f[B]else\f[R] {
    terminateMyConnection();
  }
});
.EE
.PP
If the error is an SDP syntax error\[em]indicated by its
\f[CR]errorDetail\f[R] property being
\f[CR]sdp\-syntax\-error\f[R]\[em], a message string is constructed to
present the error message and the line number within the SDP at which
the error occurred.
This message is then displayed using a function called
\f[CR]showMyAlertMessage()\f[R], which stands in for whatever output
mechanism this code might use.
.PP
Any other error is treated as terminal, causing a
\f[CR]terminateMyConnection()\f[R] function to be called.
.PP
The above example uses \f[CR]addEventListener()\f[R] to add the handler
for \f[CR]error\f[R] events.
You can also use the \f[CR]RTCDataChannel\f[R] object\[cq]s
\f[CR]onerror\f[R] event handler property, like this:
.IP
.EX
dataChannel.onerror = (event) \f[B]=>\f[R] {
  \f[B]let\f[R] error = event.error;

  \f[I]/* and so forth */\f[R]
};
.EE
