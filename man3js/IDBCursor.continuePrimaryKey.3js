.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "IDBCursor.continuePrimaryKey" "JS" "March 6, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
IDBCursor.continuePrimaryKey \- IDBCursor: continuePrimaryKey() method
.SH SYNOPSIS
This feature is available in Web Workers.
.PP
The \f[B]\f[CB]continuePrimaryKey()\f[B]\f[R] method of the
\f[CR]IDBCursor\f[R] interface advances the cursor to the item whose key
matches the key parameter as well as whose primary key matches the
primary key parameter.
.PP
A typical use case, is to resume the iteration where a previous cursor
has been closed, without having to compare the keys one by one.
.PP
Calling this method more than once before new cursor data has been
loaded \- for example, calling \f[CR]continuePrimaryKey()\f[R] twice
from the same onsuccess handler \- results in an
\f[CR]InvalidStateError\f[R] being thrown on the second call because the
cursor\[cq]s got value flag has been unset.
.PP
This method is only valid for cursors coming from an index.
Using it for cursors coming from an object store will throw an error.
.SH SYNTAX
.IP
.EX
continuePrimaryKey(key, primaryKey)
.EE
.SS Parameters
.TP
\f[B]key\f[R]
The key to position the cursor at.
.TP
\f[B]primaryKey\f[R]
The primary key to position the cursor at.
.SS Return value
None (\f[CR]undefined\f[R]).
.SS Exceptions
This method may raise a \f[CR]DOMException\f[R] of one of the following
types:
.TP
\f[B]TransactionInactiveError\f[R] \f[B]DOMException\f[R]
Thrown if this IDBCursor\[cq]s transaction is inactive.
.TP
\f[B]DataError\f[R] \f[B]DOMException\f[R]
Thrown if the key parameter has any of the following conditions:
.RS
.IP \[bu] 2
The key is not a valid key.
.IP \[bu] 2
The key is less than or equal to this cursor\[cq]s position and the
cursor\[cq]s direction is \f[CR]next\f[R] or \f[CR]nextunique\f[R].
.IP \[bu] 2
The key is greater than or equal to this cursor\[cq]s position and this
cursor\[cq]s direction is \f[CR]prev\f[R] or \f[CR]prevunique\f[R].
.RE
.TP
\f[B]InvalidStateError\f[R] \f[B]DOMException\f[R]
Thrown if the cursor is currently being iterated or has iterated past
its end.
.TP
\f[B]InvalidAccessError\f[R] \f[B]DOMException\f[R]
Thrown if the cursor\[cq]s direction is not \f[CR]prev\f[R] or
\f[CR]next\f[R].
.SH EXAMPLES
here\[cq]s how you can resume an iteration of all articles tagged with
\f[CR]\[dq]javascript\[dq]\f[R] since your last visit:
.IP
.EX
\f[B]let\f[R] request = articleStore.index(\[dq]tag\[dq]).openCursor();
\f[B]let\f[R] count = 0;
\f[B]let\f[R] unreadList = [];
request.onsuccess = (event) \f[B]=>\f[R] {
  \f[B]let\f[R] cursor = event.target.result;
  \f[B]if\f[R] (!cursor) {
    \f[B]return\f[R];
  }
  \f[B]let\f[R] lastPrimaryKey = getLastIteratedArticleId();
  \f[B]if\f[R] (lastPrimaryKey > cursor.primaryKey) {
    cursor.continuePrimaryKey(\[dq]javascript\[dq], lastPrimaryKey);
    \f[B]return\f[R];
  }
  \f[I]// update lastIteratedArticleId\f[R]
  setLastIteratedArticleId(cursor.primaryKey);
  \f[I]// preload 5 articles into the unread list;\f[R]
  unreadList.push(cursor.value);
  \f[B]if\f[R] (++count < 5) {
    cursor.continue();
  }
};
.EE
.SH SEE ALSO
.IP \[bu] 2
Using IndexedDB
.IP \[bu] 2
Starting transactions: \f[CR]IDBDatabase\f[R]
.IP \[bu] 2
Using transactions: \f[CR]IDBTransaction\f[R]
.IP \[bu] 2
Setting a range of keys: \f[CR]IDBKeyRange\f[R]
.IP \[bu] 2
Retrieving and making changes to your data: \f[CR]IDBObjectStore\f[R]
.IP \[bu] 2
Using cursors: \f[CR]IDBCursor\f[R]
.IP \[bu] 2
Reference example: \c
.UR https://github.com/mdn/dom-examples/tree/main/to-do-notifications
To\-do Notifications
.UE \c
\ (\c
.UR https://mdn.github.io/dom-examples/to-do-notifications/
View the example live
.UE \c
).
