.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "DATE.GETUTCMINUTES" "3JS" "June 20, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Date.getUTCMinutes \- Date.prototype.getUTCMinutes()
.SH SYNOPSIS
The \f[B]\f[CB]getUTCMinutes()\f[B]\f[R] method of \f[CR]Date\f[R]
instances returns the minutes for this date according to universal time.
.IP
.EX
\f[B]const\f[R] date1 = \f[B]new\f[R] Date(\(dq1 January 2000 03:15:30 GMT+07:00\(dq);
\f[B]const\f[R] date2 = \f[B]new\f[R] Date(\(dq1 January 2000 03:15:30 GMT+03:30\(dq);

console.log(date1.getUTCMinutes()); \f[I]// 31 Dec 1999 20:15:30 GMT\f[R]
\f[I]// Expected output: 15\f[R]

console.log(date2.getUTCMinutes()); \f[I]// 31 Dec 1999 23:45:30 GMT\f[R]
\f[I]// Expected output: 45\f[R]
.EE
.SH SYNTAX
.IP
.EX
getUTCMinutes()
.EE
.SS Parameters
None.
.SS Return value
An integer, between 0 and 59, representing the minutes for the given
date according to universal time.
Returns \f[CR]NaN\f[R] if the date is invalid.
.SH EXAMPLES
.SS Using getUTCMinutes()
The following example assigns the minutes portion of the current time to
the variable \f[CR]minutes\f[R].
.IP
.EX
\f[B]const\f[R] today = \f[B]new\f[R] Date();
\f[B]const\f[R] minutes = today.getUTCMinutes();
.EE
.SH SEE ALSO
.IP \(bu 2
\f[CR]Date.prototype.getMinutes()\f[R]
.IP \(bu 2
\f[CR]Date.prototype.setUTCMinutes()\f[R]
