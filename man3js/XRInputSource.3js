.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "XRINPUTSOURCE" "3JS" "August 28, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
XRInputSource \- XRInputSource
.SH SYNOPSIS
\f[B]Secure context:\f[R] This feature is available only in secure
contexts (HTTPS).
.PP
The WebXR Device API\(cqs \f[B]\f[CB]XRInputSource\f[B]\f[R] interface
describes a single source of control input which is part of the
user\(cqs WebXR\-compatible virtual or augmented reality system.
The device is specific to the platform being used, but provides the
direction in which it is being aimed and optionally may generate events
if the user triggers performs actions using the device.
.SH INSTANCE PROPERTIES
.TP
\f[B]gamepad\f[R] \f[I](read\-only)\f[R]
A \f[CR]Gamepad\f[R] object describing the state of the buttons and axes
on the XR input source, if it is a gamepad or comparable device.
If the device isn\(cqt a gamepad\-like device, this property\(cqs value
is \f[CR]null\f[R].
.TP
\f[B]gripSpace\f[R] \f[I](read\-only)\f[R]
An \f[CR]XRSpace\f[R] whose origin tracks the pose which is used to
render objects which should appear as if they\(cqre held in the hand
indicated by \f[CR]handedness\f[R].
The orientation of this space indicates the angle at which the hand is
gripping the object.
Read on in the main article on \f[CR]gripSpace\f[R] for more details on
how to use this space.
.TP
\f[B]hand\f[R] \f[I](read\-only)\f[R]
An \f[CR]XRHand\f[R] object providing access to the underlying
hand\-tracking device.
.TP
\f[B]handedness\f[R] \f[I](read\-only)\f[R]
A string that indicates which hand the device represented by this
\f[CR]XRInputSource\f[R] is being used in, if any.
The value will be \f[CR]left\f[R], \f[CR]right\f[R], or \f[CR]none\f[R].
.TP
\f[B]profiles\f[R] \f[I](read\-only)\f[R]
An array of strings, each specifying the name of an input profile
describing the preferred visual representation and behavior of this
input source.
.TP
\f[B]targetRayMode\f[R] \f[I](read\-only)\f[R]
A string indicating the methodology used to produce the target ray:
\f[CR]gaze\f[R], \f[CR]tracked\-pointer\f[R], or \f[CR]screen\f[R].
.TP
\f[B]targetRaySpace\f[R] \f[I](read\-only)\f[R]
An \f[CR]XRSpace\f[R] object defining the origin of the target ray and
the direction in which it extends.
This space is established using the method defined by
\f[CR]targetRayMode\f[R].
.SH INSTANCE METHODS
\f[I]The \f[CI]XRInputSource\f[I] interface defines no methods.\f[R]
.SH USAGE NOTES
.SS Actions and the target ray
If the device provides an indication of the direction in which it is
pointed, this is done using a \f[B]target ray\f[R].
This is a ray extending from the position of the device outward in the
direction in which it is pointed.
.PP
\f[B]A target ray emitted by a hand controller.\f[R]
[IMAGE: \c
.UR https://mdn.github.io/shared-assets/images/examples/hand-controller-target-ray.gif
A screenshot showing a target ray being emitted by a hand controller
.UE \c
]
A screenshot showing a target ray being emitted by a hand controller
.PP
If the device includes a trigger or other squeezable input, such as a
hand gesture device that recognizes when the user squeezes their fist,
that action is called a \f[B]primary squeeze action\f[R].
A primary squeeze action should correspond to a gripping act in reality,
such as taking hold of an object or pressing a trigger on a tool or
weapon.
When a squeeze action begins, such as by the user pressing the trigger
or tightening their grip, a \f[CR]squeezestart\f[R] event is sent to the
\f[CR]XRSession\f[R].
Once the action is completed and the user has released the trigger or
the grip, a \f[CR]squeeze\f[R] event is sent.
This is followed by a \f[CR]squeezeend\f[R], which is also sent if the
action is aborted rather than completed.
.PP
If the device has a button or other pressable input control, it is a
\f[B]primary input source\f[R], and this button is a \f[B]primary
action\f[R].
A primary action may occur when the user presses a button, clicks on a
touchpad or the top button of a thumb stick, or uses a hand gesture or
spoken command that invokes the button\-like action.
When a primary action begins, a \f[CR]selectstart\f[R] event is sent to
the \f[CR]XRSession\f[R].
When the action has completed (such as when the user releases the
button), a \f[CR]select\f[R] event is sent.
Finally, once that is done\(emor if the user aborts the action\(ema
\f[CR]selectend\f[R] event is sent to the session object.
.PP
An action may be aborted either by the user in some device\-specific
fashion or if the input device is disconnected before the action is
completed.
.SS Local coordinate system
Each input source has its own local coordinate system, which is
described by the \f[CR]gripSpace\f[R] property, which is an
\f[CR]XRSpace\f[R] used to map the input\(cqs coordinate system into the
world coordinate system.
The grip space\(cqs coordinate system can then be used to render objects
so they appear to be held in the user\(cqs hand.
[IMAGE: A diagram showing the coordinate system defined by the gripSpace
property]
A diagram showing the coordinate system defined by the gripSpace
property
.PP
For more details on the input source\(cqs coordinate system, see the
article that covers the \f[CR]gripSpace\f[R] property in detail.
.SH SEE ALSO
.IP \(bu 2
WebXR Device API
.IP \(bu 2
Inputs and input sources
.IP \(bu 2
\f[CR]XRInputSourceArray\f[R]
.IP \(bu 2
\f[CR]XRSpace\f[R]
