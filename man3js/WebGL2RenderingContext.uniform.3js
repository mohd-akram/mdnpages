.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "WEBGL2RENDERINGCONTEXT.UNIFORM" "3JS" "March 18, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
WebGL2RenderingContext.uniform \- WebGL2RenderingContext:
uniform[1234][uif]v method
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]WebGL2RenderingContext.uniform[1234][uif][v]()\f[B]\f[R]
methods of the WebGL API specify values of uniform variables.
.PP
The names of these methods are formed by:
.IP \(bu 2
The number of components in the uniform variable (1, 2, 3, or 4).
.IP \(bu 2
The type of the uniform variable (\f[CR]i\f[R] for integer, \f[CR]f\f[R]
for float, \f[CR]ui\f[R] for unsigned integer).
.IP \(bu 2
The presence of a vector (\f[CR]v\f[R]) suffix for vector types.
.PP
They can be matched by the regex \f[CR]uniform[1234](u?i|f)v?\f[R].
.PP
Most of these signatures are inherited from the WebGL 1 API.
WebGL 2 adds the unsigned integer versions, and the additional
\f[CR]srcOffset\f[R] and \f[CR]srcLength\f[R] parameters to the vector
methods.
.SH SYNTAX
.IP
.EX
uniform1ui(location, v0)
uniform2ui(location, v0, v1)
uniform3ui(location, v0, v1, v2)
uniform4ui(location, v0, v1, v2, v3)

uniform1fv(location, data)
uniform1fv(location, data, srcOffset)
uniform1fv(location, data, srcOffset, srcLength)

uniform2fv(location, data)
uniform2fv(location, data, srcOffset)
uniform2fv(location, data, srcOffset, srcLength)

uniform3fv(location, data)
uniform3fv(location, data, srcOffset)
uniform3fv(location, data, srcOffset, srcLength)

uniform4fv(location, data)
uniform4fv(location, data, srcOffset)
uniform4fv(location, data, srcOffset, srcLength)

uniform1iv(location, data)
uniform1iv(location, data, srcOffset)
uniform1iv(location, data, srcOffset, srcLength)

uniform2iv(location, data)
uniform2iv(location, data, srcOffset)
uniform2iv(location, data, srcOffset, srcLength)

uniform3iv(location, data)
uniform3iv(location, data, srcOffset)
uniform3iv(location, data, srcOffset, srcLength)

uniform4iv(location, data)
uniform4iv(location, data, srcOffset)
uniform4iv(location, data, srcOffset, srcLength)

uniform1uiv(location, data)
uniform1uiv(location, data, srcOffset)
uniform1uiv(location, data, srcOffset, srcLength)

uniform2uiv(location, data)
uniform2uiv(location, data, srcOffset)
uniform2uiv(location, data, srcOffset, srcLength)

uniform3uiv(location, data)
uniform3uiv(location, data, srcOffset)
uniform3uiv(location, data, srcOffset, srcLength)

uniform4uiv(location, data)
uniform4uiv(location, data, srcOffset)
uniform4uiv(location, data, srcOffset, srcLength)
.EE
.SS Parameters
.TP
\f[B]location\f[R]
A \f[CR]WebGLUniformLocation\f[R] object containing the location of the
uniform attribute to modify.
.TP
\f[B]data\f[R], \f[B]v0\f[R], \f[B]v1\f[R], \f[B]v2\f[R], \f[B]v3\f[R]
A new value to be used for the uniform variable.
Possible types:
.RS
.IP \(bu 2
A \f[CR]Number\f[R] for unsigned integer values (methods with
\f[CR]ui\f[R]), for integer values (methods with \f[CR]i\f[R]), or for
floats (methods with \f[CR]f\f[R]).
.IP \(bu 2
A \f[CR]Uint32Array\f[R] (or an \f[CR]Array\f[R] of unsigned integer
numbers) for unsigned integer vector methods (methods with
\f[CR]uiv\f[R]).
.IP \(bu 2
A \f[CR]Int32Array\f[R] (or an \f[CR]Array\f[R] of integer numbers) for
integer vector methods (methods with \f[CR]iv\f[R]).
.IP \(bu 2
A \f[CR]Float32Array\f[R] (or an \f[CR]Array\f[R] of numbers) for
floating point vector methods (methods with \f[CR]fv\f[R]).
.RE
.TP
\f[B]srcOffset\f[R] \f[I](optional)\f[R]
A non\-negative integer specifying the index of the first element in the
\f[CR]data\f[R] array to be used.
Defaults to \f[CR]0\f[R].
.TP
\f[B]srcLength\f[R] \f[I](optional)\f[R]
A non\-negative integer specifying the number of elements in the
\f[CR]data\f[R] array to be used.
Defaults to \f[CR]0\f[R], which gets treated as
\f[CR]data.length \- srcOffset\f[R].
\f[CR]srcOffset + srcLength\f[R] must be less than or equal to
\f[CR]data.length\f[R].
.SS Return value
None (\f[CR]undefined\f[R]).
.SH SEE ALSO
.IP \(bu 2
\f[CR]WebGLRenderingContext.uniform[1234][fi][v]()\f[R]
