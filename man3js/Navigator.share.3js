.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "Navigator.share" "JS" "April 12, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Navigator.share \- Navigator: share() method
.SH SYNOPSIS
\f[B]Secure context\f[R]: This feature is available only in secure
contexts (HTTPS).
.PP
The \f[B]\f[CB]share()\f[B]\f[R] method of the \f[CR]Navigator\f[R]
interface invokes the native sharing mechanism of the device to share
data such as text, URLs, or files.
The available \f[I]share targets\f[R] depend on the device, but might
include the clipboard, contacts and email applications, websites,
Bluetooth, etc.
.PP
The method resolves a \f[CR]Promise\f[R] with \f[CR]undefined\f[R].
On Windows this happens when the share popup is launched, while on
Android the promise resolves once the data has successfully been passed
to the \f[I]share target\f[R].
.PP
The Web Share API is gated by the web\-share permission policy.
The \f[CR]share()\f[R] method will throw exceptions if the permission is
supported but has not been granted.
.SH SYNTAX
.IP
.EX
navigator.share(data)
.EE
.SS Parameters
.TP
\f[B]data\f[R] \f[I](optional)\f[R]
An object containing data to share.
.RS
.PP
Properties that are unknown to the user agent are ignored; share data is
only assessed on properties understood by the user agent.
All properties are optional but at least one known data property must be
specified.
.PP
Possible values are:
.TP
\f[B]url\f[R] \f[I](optional)\f[R]
A string representing a URL to be shared.
.TP
\f[B]text\f[R] \f[I](optional)\f[R]
A string representing text to be shared.
.TP
\f[B]title\f[R] \f[I](optional)\f[R]
A string representing a title to be shared.
May be ignored by the target.
.TP
\f[B]files\f[R] \f[I](optional)\f[R]
An array of \f[CR]File\f[R] objects representing files to be shared.
See below for shareable file types.
.RE
.SS Return value
A \f[CR]Promise\f[R] that resolves with \f[CR]undefined\f[R], or
rejected with one of the Exceptions given below.
.SS Exceptions
The \f[CR]Promise\f[R] may be rejected with one of the following
\f[CR]DOMException\f[R] values:
.TP
\f[B]InvalidStateError\f[R] \f[B]DOMException\f[R]
The document is not fully active, or other sharing operations are in
progress.
.TP
\f[B]NotAllowedError\f[R] \f[B]DOMException\f[R]
A \f[CR]web\-share\f[R] Permissions Policy has been used to block the
use of this feature, the window does not have transient activation, or a
file share is being blocked due to security considerations.
.TP
\f[B]TypeError\f[R]
The specified share data cannot be validated.
Possible reasons include:
.RS
.IP \[bu] 2
The \f[CR]data\f[R] parameter was omitted completely or only contains
properties with unknown values.
Note that any properties that are not recognized by the user agent are
ignored.
.IP \[bu] 2
A URL is badly formatted.
.IP \[bu] 2
Files are specified but the implementation does not support file
sharing.
.IP \[bu] 2
Sharing the specified data would be considered a \[lq]hostile share\[rq]
by the user\-agent.
.RE
.TP
\f[B]AbortError\f[R] \f[B]DOMException\f[R]
The user canceled the share operation or there are no share targets
available.
.TP
\f[B]DataError\f[R] \f[B]DOMException\f[R]
There was a problem starting the share target or transmitting the data.
.SH SHAREABLE FILE TYPES
The following is a list of usually shareable file types.
However, you should always test with \f[CR]navigator.canShare()\f[R] if
sharing would succeed.
.IP \[bu] 2
Application
.RS 2
.IP \[bu] 2
\f[CR].pdf\f[R] \- \f[CR]application/pdf\f[R]
.RE
.IP \[bu] 2
Audio
.RS 2
.IP \[bu] 2
\f[CR].flac\f[R] \- \f[CR]audio/flac\f[R]
.IP \[bu] 2
\f[CR].m4a\f[R] \- \f[CR]audio/x\-m4a\f[R]
.IP \[bu] 2
\f[CR].mp3\f[R] \- \f[CR]audio/mpeg\f[R] (also accepts
\f[CR]audio/mp3\f[R])
.IP \[bu] 2
\f[CR].oga\f[R] \- \f[CR]audio/ogg\f[R]
.IP \[bu] 2
\f[CR].ogg\f[R] \- \f[CR]audio/ogg\f[R]
.IP \[bu] 2
\f[CR].opus\f[R] \- \f[CR]audio/ogg\f[R]
.IP \[bu] 2
\f[CR].wav\f[R] \- \f[CR]audio/wav\f[R]
.IP \[bu] 2
\f[CR].weba\f[R] \- \f[CR]audio/webm\f[R]
.RE
.IP \[bu] 2
Image
.RS 2
.IP \[bu] 2
\f[CR].avif\f[R] \- \f[CR]image/avif\f[R]
.IP \[bu] 2
\f[CR].bmp\f[R] \- \f[CR]image/bmp\f[R]
.IP \[bu] 2
\f[CR].gif\f[R] \- \f[CR]image/gif\f[R]
.IP \[bu] 2
\f[CR].ico\f[R] \- \f[CR]image/x\-icon\f[R]
.IP \[bu] 2
\f[CR].jfif\f[R] \- \f[CR]image/jpeg\f[R]
.IP \[bu] 2
\f[CR].jpeg\f[R] \- \f[CR]image/jpeg\f[R]
.IP \[bu] 2
\f[CR].jpg\f[R] \- \f[CR]image/jpeg\f[R]
.IP \[bu] 2
\f[CR].pjp\f[R] \- \f[CR]image/jpeg\f[R]
.IP \[bu] 2
\f[CR].pjpeg\f[R] \- \f[CR]image/jpeg\f[R]
.IP \[bu] 2
\f[CR].png\f[R] \- \f[CR]image/png\f[R]
.IP \[bu] 2
\f[CR].svg\f[R] \- \f[CR]image/svg+xml\f[R]
.IP \[bu] 2
\f[CR].svgz\f[R] \- \f[CR]image/svg+xml\f[R]
.IP \[bu] 2
\f[CR].tif\f[R] \- \f[CR]image/tiff\f[R]
.IP \[bu] 2
\f[CR].tiff\f[R] \- \f[CR]image/tiff\f[R]
.IP \[bu] 2
\f[CR].webp\f[R] \- \f[CR]image/webp\f[R]
.IP \[bu] 2
\f[CR].xbm\f[R] \- \f[CR]image/x\-xbitmap\f[R]
.RE
.IP \[bu] 2
Text
.RS 2
.IP \[bu] 2
\f[CR].css\f[R] \- \f[CR]text/css\f[R]
.IP \[bu] 2
\f[CR].csv\f[R] \- \f[CR]text/csv\f[R]
.IP \[bu] 2
\f[CR].ehtml\f[R] \- \f[CR]text/html\f[R]
.IP \[bu] 2
\f[CR].htm\f[R] \- \f[CR]text/html\f[R]
.IP \[bu] 2
\f[CR].html\f[R] \- \f[CR]text/html\f[R]
.IP \[bu] 2
\f[CR].shtm\f[R] \- \f[CR]text/html\f[R]
.IP \[bu] 2
\f[CR].shtml\f[R] \- \f[CR]text/html\f[R]
.IP \[bu] 2
\f[CR].text\f[R] \- \f[CR]text/plain\f[R]
.IP \[bu] 2
\f[CR].txt\f[R] \- \f[CR]text/plain\f[R]
.RE
.IP \[bu] 2
Video
.RS 2
.IP \[bu] 2
\f[CR].m4v\f[R] \- \f[CR]video/mp4\f[R]
.IP \[bu] 2
\f[CR].mp4\f[R] \- \f[CR]video/mp4\f[R]
.IP \[bu] 2
\f[CR].mpeg\f[R] \- \f[CR]video/mpeg\f[R]
.IP \[bu] 2
\f[CR].mpg\f[R] \- \f[CR]video/mpeg\f[R]
.IP \[bu] 2
\f[CR].ogm\f[R] \- \f[CR]video/ogg\f[R]
.IP \[bu] 2
\f[CR].ogv\f[R] \- \f[CR]video/ogg\f[R]
.IP \[bu] 2
\f[CR].webm\f[R] \- \f[CR]video/webm\f[R]
.RE
.SH SECURITY
This method requires that the current document have the web\-share
Permissions Policy and transient activation.
(It must be triggered off a UI event like a button click and cannot be
launched at arbitrary points by a script.)
Further, the method must specify valid data that is supported for
sharing by the native implementation.
.SH EXAMPLES
.SS Sharing a URL
The example below shows a button click invoking the Web Share API to
share MDN\[cq]s URL.
This is taken from our \c
.UR https://mdn.github.io/dom-examples/web-share/
Web share test
.UE \c
\ (\c
.UR https://github.com/mdn/dom-examples/blob/main/web-share/index.html
see the source code
.UE \c
).
.SS HTML
The HTML just creates a button to trigger the share, and a paragraph in
which to display the result of the test.
.IP
.EX
<\f[B]p\f[R]><\f[B]button\f[R]>Share MDN!</\f[B]button\f[R]></\f[B]p\f[R]>
<\f[B]p\f[R] class=\[dq]result\[dq]></\f[B]p\f[R]>
.EE
.SS JavaScript
.IP
.EX
\f[B]const\f[R] shareData = {
  title: \[dq]MDN\[dq],
  text: \[dq]Learn web development on MDN!\[dq],
  url: \[dq]https://developer.mozilla.org\[dq],
};

\f[B]const\f[R] btn = document.querySelector(\[dq]button\[dq]);
\f[B]const\f[R] resultPara = document.querySelector(\[dq].result\[dq]);

\f[I]// Share must be triggered by \[dq]user activation\[dq]\f[R]
btn.addEventListener(\[dq]click\[dq], \f[B]async\f[R] () \f[B]=>\f[R] {
  \f[B]try\f[R] {
    \f[B]await\f[R] navigator.share(shareData);
    resultPara.textContent = \[dq]MDN shared successfully\[dq];
  } \f[B]catch\f[R] (err) {
    resultPara.textContent = \[ga]Error: ${err}\[ga];
  }
});
.EE
.SS Result
Click the button to launch the share dialog on your platform.
Text will appear below the button to indicate whether the share was
successful or provide an error code.
.SS Sharing files
To share files, first test for and call \f[CR]navigator.canShare()\f[R].
Then include the list of files in the call to
\f[CR]navigator.share()\f[R].
.SS HTML
.IP
.EX
<\f[B]div\f[R]>
  <\f[B]label\f[R] for=\[dq]files\[dq]>Select images to share:</\f[B]label\f[R]>
  <\f[B]input\f[R] id=\[dq]files\[dq] type=\[dq]file\[dq] accept=\[dq]image/*\[dq] multiple />
</\f[B]div\f[R]>
<\f[B]button\f[R] id=\[dq]share\[dq] type=\[dq]button\[dq]>Share your images!</\f[B]button\f[R]>
<\f[B]output\f[R] id=\[dq]output\[dq]></\f[B]output\f[R]>
.EE
.SS JavaScript
Note that the data object passed to the \f[CR]navigator.canShare()\f[R]
only includes the \f[CR]files\f[R] property, as the \f[CR]title\f[R] and
\f[CR]text\f[R] shouldn\[cq]t matter.
.IP
.EX
\f[B]const\f[R] input = document.getElementById(\[dq]files\[dq]);
\f[B]const\f[R] output = document.getElementById(\[dq]output\[dq]);

document.getElementById(\[dq]share\[dq]).addEventListener(\[dq]click\[dq], \f[B]async\f[R] () \f[B]=>\f[R] {
  \f[B]const\f[R] files = input.files;

  \f[B]if\f[R] (files.length === 0) {
    output.textContent = \[dq]No files selected.\[dq];
    \f[B]return\f[R];
  }

  \f[I]// feature detecting navigator.canShare() also implies\f[R]
  \f[I]// the same for the navigator.share()\f[R]
  \f[B]if\f[R] (!navigator.canShare) {
    output.textContent = \[ga]Your browser doesn\[aq]t support the Web Share API.\[ga];
    \f[B]return\f[R];
  }

  \f[B]if\f[R] (navigator.canShare({ files })) {
    \f[B]try\f[R] {
      \f[B]await\f[R] navigator.share({
        files,
        title: \[dq]Images\[dq],
        text: \[dq]Beautiful images\[dq],
      });
      output.textContent = \[dq]Shared!\[dq];
    } \f[B]catch\f[R] (error) {
      output.textContent = \[ga]Error: ${error.message}\[ga];
    }
  } \f[B]else\f[R] {
    output.textContent = \[ga]Your system doesn\[aq]t support sharing these files.\[ga];
  }
});
.EE
.SS Result
.SH SEE ALSO
.IP \[bu] 2
\f[CR]navigator.canShare()\f[R]
.IP \[bu] 2
\c
.UR https://wpt.live/web-share/
.UE \c
\ (web platform tests)
