.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "HTMLINPUTELEMENT.SELECTIONEND" "3JS" "July 26, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
HTMLInputElement.selectionEnd \- HTMLInputElement: selectionEnd property
.SH SYNOPSIS
The \f[B]\f[CB]selectionEnd\f[B]\f[R] property of the
\f[CR]HTMLInputElement\f[R] interface is a number that represents the
end index of the selected text.
When there is no selection, this returns the offset of the character
immediately following the current text input cursor position.
.RS
.PP
\f[B]Note:\f[R] According to the \c
.UR https://html.spec.whatwg.org/multipage/forms.html#concept-input-apply
WHATWG forms spec
.UE \c
\ \f[CR]selectionEnd\f[R] property applies only to inputs of types text,
search, URL, tel, and password.
In modern browsers, throws an exception while setting
\f[CR]selectionEnd\f[R] property on the rest of input types.
Additionally, this property returns \f[CR]null\f[R] while accessing
\f[CR]selectionEnd\f[R] property on non\-text input elements.
.RE
.PP
If \f[CR]selectionEnd\f[R] is less than \f[CR]selectionStart\f[R], then
both are treated as the value of \f[CR]selectionEnd\f[R].
.SH VALUE
A non\-negative number.
.SH EXAMPLES
.SS HTML
.IP
.EX
\f[I]<!\-\- using selectionEnd on non text input element \-\->\f[R]
<\f[B]label\f[R] for=\(dqcolor\(dq>selectionStart property on type=color</\f[B]label\f[R]>
<\f[B]input\f[R] id=\(dqcolor\(dq type=\(dqcolor\(dq />

\f[I]<!\-\- using selectionEnd on text input element \-\->\f[R]
<\f[B]fieldset\f[R]>
  <\f[B]legend\f[R]>selectionEnd property on type=text</\f[B]legend\f[R]>
  <\f[B]label\f[R] for=\(dqpin\(dq>Input PIN</\f[B]label\f[R]>
  <\f[B]input\f[R] type=\(dqtext\(dq id=\(dqpin\(dq value=\(dqimpossible PIN: 102\-12\-145\(dq />
  <\f[B]button\f[R] id=\(dqpin\-btn\(dq type=\(dqbutton\(dq>PIN correction</\f[B]button\f[R]>
</\f[B]fieldset\f[R]>
.EE
.SS JavaScript
.IP
.EX
\f[B]const\f[R] colorEnd = document.getElementById(\(dqcolor\(dq);
\f[B]const\f[R] text = document.querySelector(\(dq#pin\(dq);
\f[B]const\f[R] pinBtn = document.querySelector(\(dq#pin\-btn\(dq);
\f[B]const\f[R] validPinChecker = /[\(ha\(rsd{3}\-\(rsd{2}\-\(rsd{3}]/g;
\f[B]const\f[R] selectionEnd = text.value.length;
\f[B]const\f[R] selectedText = text.value.substring(text.selectionStart, selectionEnd);

pinBtn.addEventListener(\(dqclick\(dq, () \f[B]=>\f[R] {
  \f[B]const\f[R] correctedText = selectedText.replace(validPinChecker, \(dq\(dq);
  text.value = correctedText;
});

\f[I]// open browser console to verify output\f[R]
console.log(colorEnd.selectionEnd); \f[I]// Output : null\f[R]
.EE
.SS Result
.SH SEE ALSO
.IP \(bu 2
\f[CR]HTMLTextAreaElement.selectionEnd\f[R] property
.IP \(bu 2
\f[CR]HTMLInputElement.selectionStart\f[R] property
.IP \(bu 2
\f[CR]HTMLInputElement.setSelectionRange\f[R] method
