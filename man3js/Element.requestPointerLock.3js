.\" Automatically generated by Pandoc 3.4
.\"
.TH "Element.requestPointerLock" "JS" "July 26, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Element.requestPointerLock \- Element: requestPointerLock() method
.SH SYNOPSIS
The \f[B]\f[CB]requestPointerLock()\f[B]\f[R] method of the
\f[CR]Element\f[R] interface lets you asynchronously ask for the pointer
to be locked on the given element.
.PP
To track the success or failure of the request, it is necessary to
listen for the \f[CR]pointerlockchange\f[R] and
\f[CR]pointerlockerror\f[R] events at the \f[CR]Document\f[R] level.
.RS
.PP
\f[B]Note:\f[R] In the current specification,
\f[CR]requestPointerLock()\f[R] only communicates the success or failure
of the request by firing \f[CR]pointerlockchange\f[R] or
\f[CR]pointerlockerror\f[R] events.
\c
.UR https://github.com/w3c/pointerlock/pull/49
A proposed update to the specification
.UE \c
\ updates \f[CR]requestPointerLock()\f[R] to return a \f[CR]Promise\f[R]
which communicates success or failure.
This page documents the version that returns a \f[CR]Promise\f[R].
However, note that this version is not yet a standard and is not
implemented by all browsers.
See Browser compatibility for more information.
.RE
.SH SYNTAX
.IP
.EX
requestPointerLock()
requestPointerLock(options)
.EE
.SS Parameters
.TP
\f[B]options\f[R] \f[I](optional)\f[R]
An options object that can contain the following properties:
.RS
.TP
\f[B]unadjustedMovement\f[R] \f[I](optional)\f[R]
Disables OS\-level adjustment for mouse acceleration, and accesses raw
mouse input instead.
The default value is \f[CR]false\f[R]; setting it to \f[CR]true\f[R]
will disable mouse acceleration.
.RE
.SS Return value
A \f[CR]Promise\f[R] that resolves with \f[CR]undefined\f[R].
.SH SECURITY
Transient activation is required when calling
\f[CR]requestPointerLock()\f[R].
The user has to interact with the page or a UI element in order for this
feature to work.
Also, the target element\[cq]s associated document must be in the active
state.
.PP
If calling \f[CR]requestPointerLock()\f[R] immediately after releasing
the pointer lock via the default unlock gesture (instead of through a
\f[CR]exitPointerLock()\f[R] call), the call will fail, even if a
transient activation is available.
.PP
If calling \f[CR]requestPointerLock()\f[R] with
\f[CR]requestFullscreen()\f[R], the \f[CR]requestPointerLock()\f[R] must
be called first, because the \f[CR]requestFullscreen()\f[R] will consume
the state of transient activation.
.PP
The \f[CR]allow\-pointer\-lock\f[R] sandbox token must be added when
calling \f[CR]requestPointerLock()\f[R] in an \f[CR]<iframe>\f[R]
element.
Also, no other elements in other \f[CR]<iframe>\f[R] elements may be in
pointer lock mode.
.SH EXAMPLES
Pointer lock is often used in online games, when you want your mouse
movement to be focused on controlling the game, without the distraction
of the mouse pointer moving around, going outside the game area, or
reaching the edge of the window.
.PP
To enable pointer lock, you would get the user to interact with the UI
in some way, perhaps by pressing a button, or the game canvas itself.
.IP
.EX
canvas.addEventListener(\[dq]click\[dq], \f[B]async\f[R] () \f[B]=>\f[R] {
  \f[B]await\f[R] canvas.requestPointerLock();
});
.EE
.PP
Operating systems enable mouse acceleration by default, which is useful
when you sometimes want slow precise movement (think about you might use
a graphics package), but also want to move great distances with a faster
mouse movement (think about scrolling, and selecting several files).
For some first\-person perspective games however, raw mouse input data
is preferred for controlling camera rotation \[em] where the same
distance movement, fast or slow, results in the same rotation.
This results in a better gaming experience and higher accuracy,
according to professional gamers.
.PP
To disable OS\-level mouse acceleration and access raw mouse input, you
can set the \f[CR]unadjustedMovement\f[R] to \f[CR]true\f[R]:
.IP
.EX
canvas.addEventListener(\[dq]click\[dq], \f[B]async\f[R] () \f[B]=>\f[R] {
  \f[B]await\f[R] canvas.requestPointerLock({
    unadjustedMovement: \f[B]true\f[R],
  });
});
.EE
.PP
For more example code, see:
.IP \[bu] 2
\c
.UR https://mdn.github.io/dom-examples/pointer-lock/
pointer lock demo
.UE \c
\ (\c
.UR https://github.com/mdn/dom-examples/tree/main/pointer-lock
see source code
.UE \c
)
.IP \[bu] 2
Pointer Lock API
.IP \[bu] 2
\c
.UR https://web.dev/articles/disable-mouse-acceleration
Disable mouse acceleration to provide a better FPS gaming experience
.UE \c
.SH SEE ALSO
.IP \[bu] 2
\f[CR]Document.pointerLockElement\f[R]
.IP \[bu] 2
\f[CR]Document.exitPointerLock()\f[R]
.IP \[bu] 2
Pointer Lock
