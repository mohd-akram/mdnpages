.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "Navigator.hardwareConcurrency" "JS" "October 16, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Navigator.hardwareConcurrency \- Navigator: hardwareConcurrency property
.SH SYNOPSIS
The \f[B]\f[CB]navigator.hardwareConcurrency\f[B]\f[R] read\-only
property returns the number of logical processors available to run
threads on the user\[cq]s computer.
.SH VALUE
A number between 1 and the number of logical processors potentially
available to the user agent.
.PP
Modern computers have multiple physical processor cores in their CPU
(two or four cores is typical), but each physical core is also usually
able to run more than one thread at a time using advanced scheduling
techniques.
So a four\-core CPU may offer eight \f[B]logical processor cores\f[R],
for example.
The number of logical processor cores can be used to measure the number
of threads which can effectively be run at once without them having to
context switch.
.PP
The browser may, however, choose to report a lower number of logical
cores in order to represent more accurately the number of
\f[CR]Worker\f[R]s that can run at once, so don\[cq]t treat this as an
absolute measurement of the number of cores in the user\[cq]s system.
.SH EXAMPLES
In this example, one \f[CR]Worker\f[R] is created for each logical
processor reported by the browser and a record is created which includes
a reference to the new worker as well as a Boolean value indicating
whether or not we\[cq]re using that worker yet; these objects are, in
turn, stored into an array for later use.
This creates a pool of workers we can use to process requests later.
.IP
.EX
\f[B]let\f[R] workerList = [];

\f[B]for\f[R] (\f[B]let\f[R] i = 0; i < window.navigator.hardwareConcurrency; i++) {
  \f[B]let\f[R] newWorker = {
    worker: \f[B]new\f[R] Worker(\[dq]cpu\-worker.js\[dq]),
    inUse: \f[B]false\f[R],
  };
  workerList.push(newWorker);
}
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]Navigator\f[R]
.IP \[bu] 2
\f[CR]WorkerNavigator\f[R]
