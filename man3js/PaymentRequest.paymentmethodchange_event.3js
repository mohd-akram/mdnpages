.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "PaymentRequest.paymentmethodchange_event" "JS" "January 23, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
PaymentRequest.paymentmethodchange_event \- PaymentRequest:
paymentmethodchange event
.SH SYNOPSIS
\f[B]Secure context:\f[R] This feature is available only in secure
contexts (HTTPS).
.PP
The \f[B]\f[CB]paymentmethodchange\f[B]\f[R] event is delivered the
Payment Request API to a \f[CR]PaymentRequest\f[R] object when the user
changes the payment method within a given payment handler.
.PP
For example, if the user switches from one credit card to another on
their \c
.UR https://www.apple.com/apple-pay/
Apple Pay
.UE \c
\ account, a \f[CR]paymentmethodchange\f[R] event is fired to let you
know about the change.
.PP
This event is not cancelable and does not bubble.
.SH SYNTAX
Use the event name in methods like \f[CR]addEventListener()\f[R], or set
an event handler property.
.IP
.EX
addEventListener(\[dq]paymentmethodchange\[dq], (event) \f[B]=>\f[R] {});

onpaymentmethodchange = (event) \f[B]=>\f[R] {};
.EE
.SH EVENT TYPE
A \f[CR]PaymentMethodChangeEvent\f[R].
Inherits from \f[CR]Event\f[R].
.SH EVENT PROPERTIES
\f[I]In addition to the properties below, this interface includes
properties inherited from \f[CI]PaymentRequestUpdateEvent\f[I].\f[R]
.TP
\f[B]methodDetails\f[R] \f[I](read\-only)\f[R]
An object containing payment method\-specific data useful when handling
a payment method change.
If no such information is available, this value is \f[CR]null\f[R].
.TP
\f[B]methodName\f[R] \f[I](read\-only)\f[R]
A string containing the payment method identifier, a string which
uniquely identifies a particular payment method.
This identifier is usually a URL used during the payment process, but
may be a standardized non\-URL string as well, such as
\f[CR]basic\-card\f[R].
The default value is the empty string, \f[CR]\[dq]\[dq]\f[R].
.SH EXAMPLES
Let\[cq]s take a look at an example.
This code creates a new \f[CR]PaymentRequest\f[R], adds a handler for
the \f[CR]paymentmethodchange\f[R] event by calling the request\[cq]s
\f[CR]addEventListener()\f[R], then calls \f[CR]show()\f[R] to present
the payment interface to the user.
.PP
The code assumes the existence of a method
\f[CR]detailsForTransaction()\f[R], which will return an object that can
be passed as the \f[CR]details\f[R] argument to the
\f[CR]PaymentRequest\f[R] constructor.
.IP
.EX
\f[B]const\f[R] paymentRequest = \f[B]new\f[R] PaymentRequest(
  paymentMethods,
  detailsForTransaction(),
);

paymentRequest.addEventListener(
  \[dq]paymentmethodchange\[dq],
  handlePaymentChange,
  \f[B]false\f[R],
);

paymentRequest
  .show()
  .then((response) \f[B]=>\f[R] response.complete(\[dq]success\[dq]))
  .catch((err) \f[B]=>\f[R] console.error(\[ga]Error handling payment request: ${err}\[ga]));
.EE
.PP
The event handler function itself, \f[CR]handlePaymentChange()\f[R],
looks like this:
.IP
.EX
handlePaymentChange = (event) \f[B]=>\f[R] {
  \f[B]const\f[R] detailsUpdate = {};

  \f[B]if\f[R] (event.methodName === \[dq]https://apple.com/apple\-pay\[dq]) {
    \f[B]const\f[R] serviceFeeInfo = calculateServiceFee(event.methodDetails);
    Object.assign(detailsUpdate, serviceFeeInfo);
  }

  event.updateWith(detailsUpdate);
};
.EE
.PP
This begins by looking at the event\[cq]s \f[CR]methodName\f[R]
property; if that indicates that the user is trying to use Apple Pay, we
pass the \f[CR]methodDetails\f[R] into a function called
\f[CR]calculateServiceFee()\f[R], which we might create to take the
information about the transaction, such as the underlying credit card
being used to service the Apple Pay request, and compute and return an
object that specifies changes to be applied to the
\f[CR]PaymentRequest\f[R] in order to add any service fees that the
payment method might require.
.PP
Before the event handler returns, it calls the event\[cq]s
\f[CR]updateWith()\f[R] method to integrate the changes into the
request.
.SH SEE ALSO
.IP \[bu] 2
Payment Request API
.IP \[bu] 2
Using the Payment Request API
.IP \[bu] 2
\f[CR]merchantvalidation\f[R] event
.IP \[bu] 2
\f[CR]shippingaddresschange\f[R] event
.IP \[bu] 2
\f[CR]shippingoptionchange\f[R] event
