.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "Intl.RelativeTimeFormat.formatToParts" "JS" "February 11, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Intl.RelativeTimeFormat.formatToParts \-
Intl.RelativeTimeFormat.prototype.formatToParts()
.SH SYNOPSIS
The \f[B]\f[CB]formatToParts()\f[B]\f[R] method of
\f[CR]Intl.RelativeTimeFormat\f[R] instances returns an array of objects
representing each part of the formatted string that would be returned by
\f[CR]format()\f[R].
It is useful for building custom strings from the locale\-specific
tokens.
.IP
.EX
\f[B]const\f[R] rtf1 = \f[B]new\f[R] Intl.RelativeTimeFormat(\[dq]en\[dq], { numeric: \[dq]auto\[dq] });
\f[B]const\f[R] parts = rtf1.formatToParts(10, \[dq]seconds\[dq]);

console.log(parts[0].value);
\f[I]// Expected output: \[dq]in \[dq]\f[R]

console.log(parts[1].value);
\f[I]// Expected output: \[dq]10\[dq]\f[R]

console.log(parts[2].value);
\f[I]// Expected output: \[dq] seconds\[dq]\f[R]
.EE
.SH SYNTAX
.IP
.EX
formatToParts(value, unit)
.EE
.SS Parameters
.TP
\f[B]value\f[R]
Numeric value to use in the internationalized relative time message.
.TP
\f[B]unit\f[R]
Unit to use in the relative time internationalized message.
Possible values are: \f[CR]\[dq]year\[dq]\f[R],
\f[CR]\[dq]quarter\[dq]\f[R], \f[CR]\[dq]month\[dq]\f[R],
\f[CR]\[dq]week\[dq]\f[R], \f[CR]\[dq]day\[dq]\f[R],
\f[CR]\[dq]hour\[dq]\f[R], \f[CR]\[dq]minute\[dq]\f[R],
\f[CR]\[dq]second\[dq]\f[R].
Plural forms are also permitted.
.SS Return value
An \f[CR]Array\f[R] of objects containing the formatted relative time in
parts.
Each object has two or three properties, \f[CR]type\f[R],
\f[CR]value\f[R], and optionally \f[CR]unit\f[R], each containing a
string.
The string concatenation of \f[CR]value\f[R], in the order provided,
will result in the same string as \f[CR]format()\f[R].
The parts can be thought of as directly obtained from calling
\f[CR]Intl.NumberFormat.prototype.formatToParts()\f[R] with the numeric
value, passing only the \f[CR]numberingSystem\f[R] option, and then
adding additional \f[CR]type: \[dq]literal\[dq]\f[R] tokens, such as
\f[CR]\[dq]in \[dq]\f[R], \f[CR]\[dq] days ago\[dq]\f[R], etc.
All tokens that are produced by the \f[CR]NumberFormat\f[R] have an
additional \f[CR]unit\f[R] property, which is the singular form of the
input \f[CR]unit\f[R]; this is for programmatic usage and is not
localized.
The localized unit is output as a part of a literal token.
.PP
When \f[CR]options.numeric\f[R] is \f[CR]\[dq]auto\[dq]\f[R], and
there\[cq]s a special string for the value, the returned array is a
single literal token.
.SH EXAMPLES
.SS Using formatToParts()
.IP
.EX
\f[B]const\f[R] rtf = \f[B]new\f[R] Intl.RelativeTimeFormat(\[dq]en\[dq], { numeric: \[dq]auto\[dq] });

\f[I]// Format relative time using the day unit\f[R]
rtf.formatToParts(\-1, \[dq]day\[dq]);
\f[I]// [{ type: \[dq]literal\[dq], value: \[dq]yesterday\[dq]}]\f[R]

rtf.formatToParts(100, \[dq]day\[dq]);
\f[I]// [\f[R]
\f[I]//   { type: \[dq]literal\[dq], value: \[dq]in \[dq] },\f[R]
\f[I]//   { type: \[dq]integer\[dq], value: \[dq]100\[dq], unit: \[dq]day\[dq] },\f[R]
\f[I]//   { type: \[dq]literal\[dq], value: \[dq] days\[dq] }\f[R]
\f[I]// ]\f[R]
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]Intl.RelativeTimeFormat\f[R]
.IP \[bu] 2
\f[CR]Intl.RelativeTimeFormat.prototype.format()\f[R]
