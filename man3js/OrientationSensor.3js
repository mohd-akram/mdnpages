.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "ORIENTATIONSENSOR" "3JS" "March 13, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
OrientationSensor \- OrientationSensor
.SH SYNOPSIS
\f[B]Secure context:\f[R] This feature is available only in secure
contexts (HTTPS).
.PP
The \f[B]\f[CB]OrientationSensor\f[B]\f[R] interface of the Sensor APIs
is the base class for orientation sensors.
This interface cannot be used directly.
Instead it provides properties and methods accessed by interfaces that
inherit from it.
.PP
This feature may be blocked by a Permissions Policy set on your server.
.SH INTERFACES BASED ON ORIENTATIONSENSOR
Below is a list of interfaces based on the OrientationSensor interface.
.IP \(bu 2
\f[CR]AbsoluteOrientationSensor\f[R]
.IP \(bu 2
\f[CR]RelativeOrientationSensor\f[R]
.SH INSTANCE PROPERTIES
.TP
\f[B]OrientationSensor.quaternion\f[R] \f[I](read\-only)\f[R]
Returns a four element \f[CR]Array\f[R] whose elements contain the
components of the unit quaternion representing the device\(cqs
orientation.
.SH INSTANCE METHODS
.TP
\f[B]OrientationSensor.populateMatrix()\f[R]
Populates the given object with the rotation matrix based on the latest
sensor reading.
.SH EXAMPLES
.SS Basic Example
The following example, which is loosely based on \c
.UR https://intel.github.io/generic-sensor-demos/orientation-phone/
Intel\(cqs Orientation Phone demo
.UE \c
, instantiates an \f[CR]AbsoluteOrientationSensor\f[R] with a frequency
of 60 times a second.
On each reading it uses \f[CR]OrientationSensor.quaternion\f[R] to
rotate a visual model of a phone.
.IP
.EX
\f[B]const\f[R] options = { frequency: 60, referenceFrame: \(dqdevice\(dq };
\f[B]const\f[R] sensor = \f[B]new\f[R] AbsoluteOrientationSensor(options);

sensor.addEventListener(\(dqreading\(dq, () \f[B]=>\f[R] {
  \f[I]// model is a Three.js object instantiated elsewhere.\f[R]
  model.quaternion.fromArray(sensor.quaternion).inverse();
});
sensor.addEventListener(\(dqerror\(dq, (error) \f[B]=>\f[R] {
  \f[B]if\f[R] (event.error.name === \(dqNotReadableError\(dq) {
    console.log(\(dqSensor is not available.\(dq);
  }
});
sensor.start();
.EE
.SS Permissions Example
Using orientation sensors requires requesting permissions for multiple
device sensors.
Because the \f[CR]Permissions\f[R] interface uses promises, a good way
to request permissions is to use \f[CR]Promise.all\f[R].
.IP
.EX
\f[B]const\f[R] sensor = \f[B]new\f[R] AbsoluteOrientationSensor();
Promise.all([
  navigator.permissions.query({ name: \(dqaccelerometer\(dq }),
  navigator.permissions.query({ name: \(dqmagnetometer\(dq }),
  navigator.permissions.query({ name: \(dqgyroscope\(dq }),
]).then((results) \f[B]=>\f[R] {
  \f[B]if\f[R] (results.every((result) \f[B]=>\f[R] result.state === \(dqgranted\(dq)) {
    sensor.start();
    \f[I]// \&...\f[R]
  } \f[B]else\f[R] {
    console.log(\(dqNo permissions to use AbsoluteOrientationSensor.\(dq);
  }
});
.EE
