.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "String.trimStart" "JS" "February 11, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
String.trimStart \- String.prototype.trimStart()
.SH SYNOPSIS
The \f[B]\f[CB]trimStart()\f[B]\f[R] method of \f[CR]String\f[R] values
removes whitespace from the beginning of this string and returns a new
string, without modifying the original string.
\f[CR]trimLeft()\f[R] is an alias of this method.
.IP
.EX
\f[B]const\f[R] greeting = \[dq]   Hello world!   \[dq];

console.log(greeting);
\f[I]// Expected output: \[dq]   Hello world!   \[dq];\f[R]

console.log(greeting.trimStart());
\f[I]// Expected output: \[dq]Hello world!   \[dq];\f[R]
.EE
.SH SYNTAX
.IP
.EX
trimStart()

trimLeft()
.EE
.SS Parameters
None.
.SS Return value
A new string representing \f[CR]str\f[R] stripped of whitespace from its
beginning (left side).
Whitespace is defined as white space characters plus line terminators.
.PP
If the beginning of \f[CR]str\f[R] has no whitespace, a new string is
still returned (essentially a copy of \f[CR]str\f[R]).
.SS Aliasing
After \f[CR]trim()\f[R] was standardized, engines also implemented the
non\-standard method \f[CR]trimLeft\f[R].
However, for consistency with \f[CR]padStart()\f[R], when the method got
standardized, its name was chosen as \f[CR]trimStart\f[R].
For web compatibility reasons, \f[CR]trimLeft\f[R] remains as an alias
to \f[CR]trimStart\f[R], and they refer to the exact same function
object.
In some engines this means:
.IP
.EX
String.prototype.trimLeft.name === \[dq]trimStart\[dq];
.EE
.SH EXAMPLES
.SS Using trimStart()
The following example trims whitespace from the start of \f[CR]str\f[R],
but not from its end.
.IP
.EX
\f[B]let\f[R] str = \[dq]   foo  \[dq];

console.log(str.length); \f[I]// 8\f[R]

str = str.trimStart();
console.log(str.length); \f[I]// 5\f[R]
console.log(str); \f[I]// \[aq]foo  \[aq]\f[R]
.EE
.SH SEE ALSO
.IP \[bu] 2
\c
.UR https://github.com/zloirock/core-js#ecmascript-string-and-regexp
Polyfill of \f[CR]String.prototype.trimStart\f[R] in \f[CR]core\-js\f[R]
.UE \c
.IP \[bu] 2
\f[CR]String.prototype.trim()\f[R]
.IP \[bu] 2
\f[CR]String.prototype.trimEnd()\f[R]
