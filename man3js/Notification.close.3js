.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "Notification.close" "JS" "March 6, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Notification.close \- Notification: close() method
.SH SYNOPSIS
\f[B]Secure context:\f[R] This feature is available only in secure
contexts (HTTPS).
.PP
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]close()\f[B]\f[R] method of the \f[CR]Notification\f[R]
interface is used to close/remove a previously displayed notification.
.RS
.PP
\f[B]Note:\f[R] This API shouldn\[cq]t be used just to have the
notification removed from the screen after a fixed delay since this
method will also remove the notification from any notification tray,
preventing users from interacting with it after it was initially shown.
A valid use for this API would be to remove a notification that is no
longer relevant (e.g.\ the user already read the notification on the
webpage in the case of a messaging app or the following song is already
playing in a music app).
.RE
.SH SYNTAX
.IP
.EX
close()
.EE
.SS Parameters
None.
.SS Return value
None (\f[CR]undefined\f[R]).
.SH EXAMPLES
In the following snippet, we have a simple function that when called
creates an \f[CR]options\f[R] object and then a new notification.
At the end of the function, it also calls \f[CR]close()\f[R] inside a
\f[CR]addEventListener()\f[R] function to remove the notification when
the relevant content has been read on the webpage.
.IP
.EX
\f[B]function\f[R] spawnNotification(theBody, theIcon, theTitle) {
  \f[B]const\f[R] options = {
    body: theBody,
    icon: theIcon,
  };

  \f[B]const\f[R] n = \f[B]new\f[R] Notification(theTitle, options);
  document.addEventListener(\[dq]visibilitychange\[dq], () \f[B]=>\f[R] {
    \f[B]if\f[R] (document.visibilityState === \[dq]visible\[dq]) {
      \f[I]// The tab has become visible so clear the now\-stale Notification.\f[R]
      n.close();
    }
  });
}
.EE
.SH SEE ALSO
.IP \[bu] 2
Using the Notifications API
