.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "STRING.TRIMEND" "3JS" "June 20, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
String.trimEnd \- String.prototype.trimEnd()
.SH SYNOPSIS
The \f[B]\f[CB]trimEnd()\f[B]\f[R] method of \f[CR]String\f[R] values
removes whitespace from the end of this string and returns a new string,
without modifying the original string.
\f[CR]trimRight()\f[R] is an alias of this method.
.IP
.EX
\f[B]const\f[R] greeting = \(dq   Hello world!   \(dq;

console.log(greeting);
\f[I]// Expected output: \(dq   Hello world!   \(dq;\f[R]

console.log(greeting.trimEnd());
\f[I]// Expected output: \(dq   Hello world!\(dq;\f[R]
.EE
.SH SYNTAX
.IP
.EX
trimEnd()

trimRight()
.EE
.SS Parameters
None.
.SS Return value
A new string representing \f[CR]str\f[R] stripped of whitespace from its
end (right side).
Whitespace is defined as white space characters plus line terminators.
.PP
If the end of \f[CR]str\f[R] has no whitespace, a new string is still
returned (essentially a copy of \f[CR]str\f[R]).
.SS Aliasing
After \f[CR]trim()\f[R] was standardized, engines also implemented the
non\-standard method \f[CR]trimRight\f[R].
However, for consistency with \f[CR]padEnd()\f[R], when the method got
standardized, its name was chosen as \f[CR]trimEnd\f[R].
For web compatibility reasons, \f[CR]trimRight\f[R] remains as an alias
to \f[CR]trimEnd\f[R], and they refer to the exact same function object.
In some engines this means:
.IP
.EX
String.prototype.trimRight.name === \(dqtrimEnd\(dq;
.EE
.SH EXAMPLES
.SS Using trimEnd()
The following example trims whitespace from the end of \f[CR]str\f[R],
but not from its start.
.IP
.EX
\f[B]let\f[R] str = \(dq   foo  \(dq;

console.log(str.length); \f[I]// 8\f[R]

str = str.trimEnd();
console.log(str.length); \f[I]// 6\f[R]
console.log(str); \f[I]// \(aq   foo\(aq\f[R]
.EE
.SH SEE ALSO
.IP \(bu 2
\c
.UR https://github.com/zloirock/core-js#ecmascript-string-and-regexp
Polyfill of \f[CR]String.prototype.trimEnd\f[R] in \f[CR]core\-js\f[R]
.UE \c
.IP \(bu 2
\c
.UR https://www.npmjs.com/package/string.prototype.trimend
es\-shims polyfill of \f[CR]String.prototype.trimEnd\f[R]
.UE \c
.IP \(bu 2
\f[CR]String.prototype.trim()\f[R]
.IP \(bu 2
\f[CR]String.prototype.trimStart()\f[R]
