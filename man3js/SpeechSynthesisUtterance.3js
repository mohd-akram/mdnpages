.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "SpeechSynthesisUtterance" "JS" "June 29, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
SpeechSynthesisUtterance \- SpeechSynthesisUtterance
.SH SYNOPSIS
The \f[B]\f[CB]SpeechSynthesisUtterance\f[B]\f[R] interface of the Web
Speech API represents a speech request.
It contains the content the speech service should read and information
about how to read it (e.g.\ language, pitch and volume.)
.SH CONSTRUCTOR
.TP
\f[B]SpeechSynthesisUtterance()\f[R]
Returns a new \f[CR]SpeechSynthesisUtterance\f[R] object instance.
.SH INSTANCE PROPERTIES
\f[I]\f[CI]SpeechSynthesisUtterance\f[I] also inherits properties from
its parent interface, \f[CI]EventTarget\f[I].\f[R]
.TP
\f[B]SpeechSynthesisUtterance.lang\f[R]
Gets and sets the language of the utterance.
.TP
\f[B]SpeechSynthesisUtterance.pitch\f[R]
Gets and sets the pitch at which the utterance will be spoken at.
.TP
\f[B]SpeechSynthesisUtterance.rate\f[R]
Gets and sets the speed at which the utterance will be spoken at.
.TP
\f[B]SpeechSynthesisUtterance.text\f[R]
Gets and sets the text that will be synthesized when the utterance is
spoken.
.TP
\f[B]SpeechSynthesisUtterance.voice\f[R]
Gets and sets the voice that will be used to speak the utterance.
.TP
\f[B]SpeechSynthesisUtterance.volume\f[R]
Gets and sets the volume that the utterance will be spoken at.
.SH EVENTS
Listen to these events using \f[CR]addEventListener()\f[R] or by
assigning an event listener to the \f[CR]oneventname\f[R] property of
this interface.
.TP
\f[B]boundary\f[R]
Fired when the spoken utterance reaches a word or sentence boundary.
Also available via the \f[CR]onboundary\f[R] property.
.TP
\f[B]end\f[R]
Fired when the utterance has finished being spoken.
Also available via the \f[CR]onend\f[R] property.
.TP
\f[B]error\f[R]
Fired when an error occurs that prevents the utterance from being
successfully spoken.
Also available via the \f[CR]onerror\f[R] property
.TP
\f[B]mark\f[R]
Fired when the spoken utterance reaches a named SSML \[lq]mark\[rq] tag.
Also available via the \f[CR]onmark\f[R] property.
.TP
\f[B]pause\f[R]
Fired when the utterance is paused part way through.
Also available via the \f[CR]onpause\f[R] property.
.TP
\f[B]resume\f[R]
Fired when a paused utterance is resumed.
Also available via the \f[CR]onresume\f[R] property.
.TP
\f[B]start\f[R]
Fired when the utterance has begun to be spoken.
Also available via the \f[CR]onstart\f[R] property.
.SH EXAMPLES
In our basic \c
.UR https://mdn.github.io/dom-examples/web-speech-api/speak-easy-synthesis/
Speech synthesizer demo
.UE \c
, we first grab a reference to the SpeechSynthesis controller using
\f[CR]window.speechSynthesis\f[R].
After defining some necessary variables, we retrieve a list of the
voices available using \f[CR]SpeechSynthesis.getVoices()\f[R] and
populate a select menu with them so the user can choose what voice they
want.
.PP
Inside the \f[CR]inputForm.onsubmit\f[R] handler, we stop the form
submitting with \f[CR]preventDefault()\f[R], use the
\f[CR]constructor\f[R] to create a new utterance instance containing the
text from the text \f[CR]<input>\f[R], set the utterance\[cq]s
\f[CR]voice\f[R] to the voice selected in the \f[CR]<select>\f[R]
element, and start the utterance speaking via the
\f[CR]SpeechSynthesis.speak()\f[R] method.
.IP
.EX
\f[B]const\f[R] synth = window.speechSynthesis;

\f[B]const\f[R] inputForm = document.querySelector(\[dq]form\[dq]);
\f[B]const\f[R] inputTxt = document.querySelector(\[dq]input\[dq]);
\f[B]const\f[R] voiceSelect = document.querySelector(\[dq]select\[dq]);

\f[B]let\f[R] voices;

\f[B]function\f[R] loadVoices() {
  voices = synth.getVoices();
  \f[B]for\f[R] (\f[B]let\f[R] i = 0; i < voices.length; i++) {
    \f[B]const\f[R] option = document.createElement(\[dq]option\[dq]);
    option.textContent = \[ga]${voices[i].name} (${voices[i].lang})\[ga];
    option.value = i;
    voiceSelect.appendChild(option);
  }
}

\f[I]// in Google Chrome the voices are not ready on page load\f[R]
\f[B]if\f[R] (\[dq]onvoiceschanged\[dq] \f[B]in\f[R] synth) {
  synth.onvoiceschanged = loadVoices;
} \f[B]else\f[R] {
  loadVoices();
}

inputForm.onsubmit = (event) \f[B]=>\f[R] {
  event.preventDefault();

  \f[B]const\f[R] utterThis = \f[B]new\f[R] SpeechSynthesisUtterance(inputTxt.value);
  utterThis.voice = voices[voiceSelect.value];
  synth.speak(utterThis);
  inputTxt.blur();
};
.EE
.SH SEE ALSO
.IP \[bu] 2
Web Speech API
