.\" Automatically generated by Pandoc 3.4
.\"
.TH "BaseAudioContext.currentTime" "JS" "July 5, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
BaseAudioContext.currentTime \- BaseAudioContext: currentTime property
.SH SYNOPSIS
The \f[CR]currentTime\f[R] read\-only property of the
\f[CR]BaseAudioContext\f[R] interface returns a double representing an
ever\-increasing hardware timestamp in seconds that can be used for
scheduling audio playback, visualizing timelines, etc.
It starts at 0.
.SH VALUE
A floating point number.
.SH EXAMPLES
.IP
.EX
\f[B]const\f[R] audioCtx = \f[B]new\f[R] AudioContext();
\f[I]// Older webkit/blink browsers require a prefix\f[R]

\f[I]// \&...\f[R]

console.log(audioCtx.currentTime);
.EE
.SH REDUCED TIME PRECISION
To offer protection against timing attacks and fingerprinting, the
precision of \f[CR]audioCtx.currentTime\f[R] might get rounded depending
on browser settings.
In Firefox, the \f[CR]privacy.reduceTimerPrecision\f[R] preference is
enabled by default and defaults to 2ms.
You can also enable \f[CR]privacy.resistFingerprinting\f[R], in which
case the precision will be 100ms or the value of
\f[CR]privacy.resistFingerprinting.reduceTimerPrecision.microseconds\f[R],
whichever is larger.
.PP
For example, with reduced time precision, the result of
\f[CR]audioCtx.currentTime\f[R] will always be a multiple of 0.002, or a
multiple of 0.1 (or
\f[CR]privacy.resistFingerprinting.reduceTimerPrecision.microseconds\f[R])
with \f[CR]privacy.resistFingerprinting\f[R] enabled.
.IP
.EX
\f[I]// reduced time precision (2ms) in Firefox 60\f[R]
audioCtx.currentTime;
\f[I]// Might be:\f[R]
\f[I]// 23.404\f[R]
\f[I]// 24.192\f[R]
\f[I]// 25.514\f[R]
\f[I]// \&...\f[R]

\f[I]// reduced time precision with \[ga]privacy.resistFingerprinting\[ga] enabled\f[R]
audioCtx.currentTime;
\f[I]// Might be:\f[R]
\f[I]// 49.8\f[R]
\f[I]// 50.6\f[R]
\f[I]// 51.7\f[R]
\f[I]// \&...\f[R]
.EE
.SH SEE ALSO
.IP \[bu] 2
Using Web Audio API
