.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "CanvasRenderingContext2D.ellipse" "JS" "August 7, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
CanvasRenderingContext2D.ellipse \- CanvasRenderingContext2D: ellipse()
method
.SH SYNOPSIS
The \f[B]\f[CB]CanvasRenderingContext2D.ellipse()\f[B]\f[R] method of
the Canvas 2D API adds an elliptical arc to the current sub\-path.
.SH SYNTAX
.IP
.EX
ellipse(x, y, radiusX, radiusY, rotation, startAngle, endAngle)
ellipse(x, y, radiusX, radiusY, rotation, startAngle, endAngle, counterclockwise)
.EE
.PP
The \f[CR]ellipse()\f[R] method creates an elliptical arc centered at
\f[CR](x, y)\f[R] with the radii \f[CR]radiusX\f[R] and
\f[CR]radiusY\f[R].
The path starts at \f[CR]startAngle\f[R] and ends at
\f[CR]endAngle\f[R], and travels in the direction given by
\f[CR]counterclockwise\f[R] (defaulting to clockwise).
.SS Parameters
.TP
\f[B]x\f[R]
The x\-axis (horizontal) coordinate of the ellipse\[cq]s center.
.TP
\f[B]y\f[R]
The y\-axis (vertical) coordinate of the ellipse\[cq]s center.
.TP
\f[B]radiusX\f[R]
The ellipse\[cq]s major\-axis radius.
Must be non\-negative.
.TP
\f[B]radiusY\f[R]
The ellipse\[cq]s minor\-axis radius.
Must be non\-negative.
.TP
\f[B]rotation\f[R]
The rotation of the ellipse, expressed in radians.
.TP
\f[B]startAngle\f[R]
The \c
.UR https://en.wikipedia.org/wiki/Angular_eccentricity
eccentric angle
.UE \c
\ at which the ellipse starts, measured clockwise from the positive
x\-axis and expressed in radians.
.TP
\f[B]endAngle\f[R]
The \c
.UR https://en.wikipedia.org/wiki/Angular_eccentricity
eccentric angle
.UE \c
\ at which the ellipse ends, measured clockwise from the positive
x\-axis and expressed in radians.
.TP
\f[B]counterclockwise\f[R] \f[I](optional)\f[R]
An optional boolean value which, if \f[CR]true\f[R], draws the ellipse
counterclockwise (anticlockwise).
The default value is \f[CR]false\f[R] (clockwise).
.SS Return value
None (\f[CR]undefined\f[R]).
.SH EXAMPLES
.SS Drawing a full ellipse
This example draws an ellipse at an angle of π/4 radians (45°).
To make a full ellipse, the arc begins at an angle of 0 radians (0°),
and ends at an angle of 2π radians (360°).
.SS HTML
.IP
.EX
<\f[B]canvas\f[R] id=\[dq]canvas\[dq] width=\[dq]200\[dq] height=\[dq]200\[dq]></\f[B]canvas\f[R]>
.EE
.SS JavaScript
.IP
.EX
\f[B]const\f[R] canvas = document.getElementById(\[dq]canvas\[dq]);
\f[B]const\f[R] ctx = canvas.getContext(\[dq]2d\[dq]);

\f[I]// Draw the ellipse\f[R]
ctx.beginPath();
ctx.ellipse(100, 100, 50, 75, Math.PI / 4, 0, 2 * Math.PI);
ctx.stroke();

\f[I]// Draw the ellipse\[aq]s line of reflection\f[R]
ctx.beginPath();
ctx.setLineDash([5, 5]);
ctx.moveTo(0, 200);
ctx.lineTo(200, 0);
ctx.stroke();
.EE
.SS Result
.SS Various elliptical arcs
This example creates three elliptical paths with varying properties.
.SS HTML
.IP
.EX
<\f[B]canvas\f[R] id=\[dq]canvas\[dq]></\f[B]canvas\f[R]>
.EE
.SS JavaScript
.IP
.EX
\f[B]const\f[R] canvas = document.getElementById(\[dq]canvas\[dq]);
\f[B]const\f[R] ctx = canvas.getContext(\[dq]2d\[dq]);

ctx.fillStyle = \[dq]red\[dq];
ctx.beginPath();
ctx.ellipse(60, 75, 50, 30, Math.PI * 0.25, 0, Math.PI * 1.5);
ctx.fill();

ctx.fillStyle = \[dq]blue\[dq];
ctx.beginPath();
ctx.ellipse(150, 75, 50, 30, Math.PI * 0.25, 0, Math.PI);
ctx.fill();

ctx.fillStyle = \[dq]green\[dq];
ctx.beginPath();
ctx.ellipse(240, 75, 50, 30, Math.PI * 0.25, 0, Math.PI, \f[B]true\f[R]);
ctx.fill();
.EE
.SS Result
.SH SEE ALSO
.IP \[bu] 2
The interface defining this method: \f[CR]CanvasRenderingContext2D\f[R]
.IP \[bu] 2
Use \f[CR]CanvasRenderingContext2D.arc()\f[R] to draw a circular arc
