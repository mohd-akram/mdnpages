.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "Intl.Locale.collation" "JS" "April 22, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Intl.Locale.collation \- Intl.Locale.prototype.collation
.SH SYNOPSIS
The \f[B]\f[CB]collation\f[B]\f[R] accessor property of
\f[CR]Intl.Locale\f[R] instances returns the \c
.UR https://www.unicode.org/reports/tr35/tr35-collation.html#CLDR_Collation
collation type
.UE \c
\ for this locale, which is used to order strings according to the
locale\[cq]s rules.
.SH DESCRIPTION
Collation is the process of ordering strings of characters.
It is used whenever strings must be sorted and placed into a certain
order, from search query results to ordering records in a database.
While the idea of placing strings in order might seem trivial, the idea
of order can vary from region to region and language to language.
The \f[CR]collation\f[R] property\[cq]s value is set at construction
time, either through the \f[CR]co\f[R] key of the locale identifier or
through the \f[CR]collation\f[R] option of the \f[CR]Intl.Locale()\f[R]
constructor.
The latter takes priority if they are both present; and if neither is
present, the property has value \f[CR]undefined\f[R].
.PP
For a list of supported collation types, see
\f[CR]Intl.Locale.prototype.getCollations()\f[R].
.PP
The set accessor of \f[CR]collation\f[R] is \f[CR]undefined\f[R].
You cannot change this property directly.
.SH EXAMPLES
Like other locale subtags, the collation type can be added to the
\f[CR]Intl.Locale\f[R] object via the locale string, or a configuration
object argument to the constructor.
.SS Adding a collation type via the locale string
In the \c
.UR https://www.unicode.org/reports/tr35/
Unicode locale string spec
.UE \c
, collation types are locale key \[lq]extension subtags\[rq].
These subtags add additional data about the locale, and are added to
locale identifiers by using the \f[CR]\-u\f[R] extension.
Thus, the collation type can be added to the initial locale identifier
string that is passed into the \f[CR]Intl.Locale()\f[R] constructor.
To add the collation type, first add the \f[CR]\-u\f[R] extension to the
string.
Next, add the \f[CR]\-co\f[R] extension to indicate that you are adding
a collation type.
Finally, add the collation type to the string.
.IP
.EX
\f[B]const\f[R] locale = \f[B]new\f[R] Intl.Locale(\[dq]zh\-Hant\-u\-co\-zhuyin\[dq]);
console.log(locale.collation); \f[I]// \[dq]zhuyin\[dq]\f[R]
.EE
.SS Adding a collation type via the configuration object argument
The \f[CR]Intl.Locale()\f[R] constructor has an optional configuration
object argument, which can contain any of several extension types,
including collation types.
Set the \f[CR]collation\f[R] property of the configuration object to
your desired collation type, and then pass it into the constructor.
.IP
.EX
\f[B]const\f[R] locale = \f[B]new\f[R] Intl.Locale(\[dq]zh\-Hant\[dq], { collation: \[dq]zhuyin\[dq] });
console.log(locale.collation); \f[I]// \[dq]zhuyin\[dq]\f[R]
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]Intl.Locale\f[R]
.IP \[bu] 2
\f[CR]Intl.Locale.prototype.getCollations()\f[R]
