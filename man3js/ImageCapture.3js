.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "IMAGECAPTURE" "3JS" "February 26, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
ImageCapture \- ImageCapture
.SH SYNOPSIS
The \f[B]\f[CB]ImageCapture\f[B]\f[R] interface of the MediaStream Image
Capture API provides methods to enable the capture of images or photos
from a camera or other photographic device.
It provides an interface for capturing images from a photographic device
referenced through a valid \f[CR]MediaStreamTrack\f[R].
.SH CONSTRUCTOR
.TP
\f[B]ImageCapture()\f[R]
Creates a new \f[CR]ImageCapture\f[R] object which can be used to
capture still frames (photos) from a given \f[CR]MediaStreamTrack\f[R]
which represents a video stream.
.SH INSTANCE PROPERTIES
.TP
\f[B]ImageCapture.track\f[R] \f[I](read\-only)\f[R]
Returns a reference to the \f[CR]MediaStreamTrack\f[R] passed to the
constructor.
.SH INSTANCE METHODS
.TP
\f[B]ImageCapture.takePhoto()\f[R]
Takes a single exposure using the video capture device sourcing a
\f[CR]MediaStreamTrack\f[R] and returns a \f[CR]Promise\f[R] that
resolves with a \f[CR]Blob\f[R] containing the data.
.TP
\f[B]ImageCapture.getPhotoCapabilities()\f[R]
Returns a \f[CR]Promise\f[R] that resolves with an object containing the
ranges of available configuration options.
.TP
\f[B]ImageCapture.getPhotoSettings()\f[R]
Returns a \f[CR]Promise\f[R] that resolves with an object containing the
current photo configuration settings.
.TP
\f[B]ImageCapture.grabFrame()\f[R] \f[I](experimental)\f[R]
Takes a snapshot of the live video in a \f[CR]MediaStreamTrack\f[R],
returning an \f[CR]ImageBitmap\f[R], if successful.
.SH EXAMPLE
The following code is taken from \c
.UR https://googlechrome.github.io/samples/image-capture/grab-frame-take-photo.html
Chrome\(cqs Grab Frame \- Take Photo Sample
.UE \c
\&.
Since \f[CR]ImageCapture\f[R] requires some place to capture an image
from, the example below starts with a device\(cqs media device (in other
words a camera).
.PP
This example shows, roughly, a \f[CR]MediaStreamTrack\f[R] extracted
from a device\(cqs \f[CR]MediaStream\f[R].
The track is then used to create an \f[CR]ImageCapture\f[R] object so
that \f[CR]takePhoto()\f[R] and \f[CR]grabFrame()\f[R] can be called.
Finally, it shows how to apply the results of these calls to a canvas
object.
.IP
.EX
\f[B]let\f[R] imageCapture;

\f[B]function\f[R] onGetUserMediaButtonClick() {
  navigator.mediaDevices
    .getUserMedia({ video: \f[B]true\f[R] })
    .then((mediaStream) \f[B]=>\f[R] {
      document.querySelector(\(dqvideo\(dq).srcObject = mediaStream;

      \f[B]const\f[R] track = mediaStream.getVideoTracks()[0];
      imageCapture = \f[B]new\f[R] ImageCapture(track);
    })
    .catch((error) \f[B]=>\f[R] console.error(error));
}

\f[B]function\f[R] onGrabFrameButtonClick() {
  imageCapture
    .grabFrame()
    .then((imageBitmap) \f[B]=>\f[R] {
      \f[B]const\f[R] canvas = document.querySelector(\(dq#grabFrameCanvas\(dq);
      drawCanvas(canvas, imageBitmap);
    })
    .catch((error) \f[B]=>\f[R] console.error(error));
}

\f[B]function\f[R] onTakePhotoButtonClick() {
  imageCapture
    .takePhoto()
    .then((blob) \f[B]=>\f[R] createImageBitmap(blob))
    .then((imageBitmap) \f[B]=>\f[R] {
      \f[B]const\f[R] canvas = document.querySelector(\(dq#takePhotoCanvas\(dq);
      drawCanvas(canvas, imageBitmap);
    })
    .catch((error) \f[B]=>\f[R] console.error(error));
}

\f[I]/* Utils */\f[R]

\f[B]function\f[R] drawCanvas(canvas, img) {
  canvas.width = getComputedStyle(canvas).width.split(\(dqpx\(dq)[0];
  canvas.height = getComputedStyle(canvas).height.split(\(dqpx\(dq)[0];
  \f[B]let\f[R] ratio = Math.min(canvas.width / img.width, canvas.height / img.height);
  \f[B]let\f[R] x = (canvas.width \- img.width * ratio) / 2;
  \f[B]let\f[R] y = (canvas.height \- img.height * ratio) / 2;
  canvas.getContext(\(dq2d\(dq).clearRect(0, 0, canvas.width, canvas.height);
  canvas
    .getContext(\(dq2d\(dq)
    .drawImage(
      img,
      0,
      0,
      img.width,
      img.height,
      x,
      y,
      img.width * ratio,
      img.height * ratio,
    );
}

document.querySelector(\(dqvideo\(dq).addEventListener(\(dqplay\(dq, () \f[B]=>\f[R] {
  document.querySelector(\(dq#grabFrameButton\(dq).disabled = \f[B]false\f[R];
  document.querySelector(\(dq#takePhotoButton\(dq).disabled = \f[B]false\f[R];
});
.EE
