.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "URLSearchParams.delete" "JS" "July 1, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
URLSearchParams.delete \- URLSearchParams: delete() method
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]delete()\f[B]\f[R] method of the
\f[CR]URLSearchParams\f[R] interface deletes specified parameters and
their associated value(s) from the list of all search parameters.
.PP
A parameter name and optional value are used to match parameters.
If only a parameter name is specified, then all search parameters that
match the name are deleted, along with their associated values.
If both a parameter name and value are specified, then all search
parameters that match both the parameter name and value are deleted.
.SH SYNTAX
.IP
.EX
delete(name)
delete(name, value)
.EE
.SS Parameters
.TP
\f[B]name\f[R]
The name of the parameters to be deleted.
.TP
\f[B]value\f[R] \f[I](optional)\f[R]
The value that parameters must match, along with the given name, to be
deleted.
.SS Return value
None (\f[CR]undefined\f[R]).
.SH EXAMPLES
.SS Delete all parameters with specified name
This example shows how to delete all query parameters (and values) that
have a particular name.
.IP
.EX
\f[B]const\f[R] url = \f[B]new\f[R] URL(\[dq]https://example.com?foo=1&bar=2&foo=3\[dq]);
\f[B]const\f[R] params = \f[B]new\f[R] URLSearchParams(url.search);
console.log(\[ga]Query string (before):\[rs]t ${params}\[ga]);
params.delete(\[dq]foo\[dq]);
console.log(\[ga]Query string (after):\[rs]t ${params}\[ga]);
.EE
.PP
The log below shows that all parameters that have the name of
\f[CR]foo\f[R] are deleted.
.IP
.EX
Query string (before):  foo=1&bar=2&foo=3
Query string (after):   bar=2
.EE
.SS Delete parameters with specified name and value
This example shows how to delete query parameters that match a
particular name and value.
.IP
.EX
\f[B]const\f[R] url = \f[B]new\f[R] URL(\[dq]https://example.com?foo=1&bar=2&foo=3&foo=1\[dq]);
\f[B]const\f[R] params = \f[B]new\f[R] URLSearchParams(url.search);
console.log(\[ga]Query string (before):\[rs]t ${params}\[ga]);
params.delete(\[dq]foo\[dq], \[dq]1\[dq]);
console.log(\[ga]Query string (after):\[rs]t ${params}\[ga]);
.EE
.PP
All parameters that match both the parameter \f[CR]name\f[R] and
\f[CR]value\f[R] should be deleted (there is no reason to specify two
parameters with the same name and value as shown above).
.IP
.EX
Query string (before):  foo=1&bar=2&foo=3&foo=1
Query string (after):   bar=2&foo=3
.EE
.PP
If your browser supports the \f[CR]value\f[R] option, the
\[lq]after\[rq] string should be \f[CR]bar=2&foo=3\f[R].
Otherwise the result will be the same as in the previous example
(\f[CR]bar=2\f[R]).
.SH SEE ALSO
.IP \[bu] 2
\c
.UR https://github.com/zloirock/core-js#url-and-urlsearchparams
Polyfill of \f[CR]URLSearchParams\f[R] in \f[CR]core\-js\f[R]
.UE \c
