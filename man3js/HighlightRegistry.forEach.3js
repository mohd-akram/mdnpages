.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "HighlightRegistry.forEach" "JS" "December 2, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
HighlightRegistry.forEach \- HighlightRegistry: forEach() method
.SH SYNOPSIS
The \f[B]\f[CB]forEach()\f[B]\f[R] method of the
\f[CR]HighlightRegistry\f[R] interface executes a provided function once
for each \f[CR]Highlight\f[R] object in the registry, in insertion
order.
.PP
\f[CR]HighlightRegistry\f[R] is a \f[CR]Map\f[R]\-like object, so this
is similar to using \f[CR]Map.forEach()\f[R].
.SH SYNTAX
.IP
.EX
forEach(callbackFn)
forEach(callbackFn, thisArg)
.EE
.SS Parameters
.TP
\f[B]callback\f[R]
Function to execute for each \f[CR]Highlight\f[R] object, taking three
arguments:
.RS
.TP
\f[B]highlight\f[R]
The current highlight.
.TP
\f[B]name\f[R]
The highlight name.
.TP
\f[B]registry\f[R]
The registry object which \f[CR]forEach()\f[R] was called upon.
.RE
.TP
\f[B]thisArg\f[R]
Value to use as \f[CR]this\f[R] when executing \f[CR]callbackFn\f[R].
.SS Return value
None (\f[CR]undefined\f[R]).
.SH EXAMPLES
The code snippet below shows how create a new highlight with two ranges,
and then log the ranges by using the \f[CR]forEach()\f[R] method:
.IP
.EX
\f[B]function\f[R] logAllHighlights(highlight, name) {
  console.log(\[ga]Highlight ${name} exists in the registry\[ga], highlight);
}

\f[B]const\f[R] customHighlight1 = \f[B]new\f[R] Highlight();
\f[B]const\f[R] customHighlight2 = \f[B]new\f[R] Highlight();
\f[B]const\f[R] customHighlight3 = \f[B]new\f[R] Highlight();

CSS.highlights.set(\[dq]custom\-highlight\-1\[dq], customHighlight1);
CSS.highlights.set(\[dq]custom\-highlight\-2\[dq], customHighlight2);
CSS.highlights.set(\[dq]custom\-highlight\-3\[dq], customHighlight3);

CSS.highlights.forEach(logAllHighlights);
.EE
.SH SEE ALSO
.IP \[bu] 2
The CSS Custom Highlight API
.IP \[bu] 2
\c
.UR https://css-tricks.com/css-custom-highlight-api-early-look/
CSS Custom Highlight API: The Future of Highlighting Text Ranges on the
Web
.UE \c
