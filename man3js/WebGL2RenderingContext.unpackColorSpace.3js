.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "WebGL2RenderingContext.unpackColorSpace" "JS" "November 5, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
WebGL2RenderingContext.unpackColorSpace \- WebGL2RenderingContext:
unpackColorSpace property
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]WebGL2RenderingContext.unpackColorSpace\f[B]\f[R]
property specifies the color space to convert to when importing
textures.
Along with the default (\f[CR]srgb\f[R]), the \f[CR]display\-p3\f[R]
color space can be used.
.PP
Texture image sources can be the following:
.IP \[bu] 2
\f[CR]ImageBitmap\f[R]
.IP \[bu] 2
\f[CR]ImageData\f[R]
.IP \[bu] 2
\f[CR]HTMLImageElement\f[R]
.IP \[bu] 2
\f[CR]HTMLCanvasElement\f[R]
.IP \[bu] 2
\f[CR]HTMLVideoElement\f[R]
.IP \[bu] 2
\f[CR]OffscreenCanvas\f[R]
.IP \[bu] 2
\f[CR]VideoFrame\f[R]
.PP
Textures are imported using the
\f[CR]WebGLRenderingContext.texImage2D()\f[R] and
\f[CR]WebGLRenderingContext.texSubImage2D()\f[R] methods and conversion
to the specified \f[CR]unpackColorSpace\f[R] color space happens during
import.
.PP
Note that this doesn\[cq]t apply to \f[CR]HTMLImageElement\f[R] when the
\f[CR]UNPACK_COLORSPACE_CONVERSION_WEBGL\f[R] pixel storage parameter is
set to \f[CR]NONE\f[R].
.SH VALUE
This property can have the following values:
.IP \[bu] 2
\f[CR]\[dq]srgb\[dq]\f[R] selects the \c
.UR https://en.wikipedia.org/wiki/SRGB
sRGB color space
.UE \c
\&.
This is the default value.
.IP \[bu] 2
\f[CR]\[dq]display\-p3\[dq]\f[R] selects the \c
.UR https://en.wikipedia.org/wiki/DCI-P3
display\-p3 color space
.UE \c
\&.
.PP
If an invalid value is specified, then the value of
\f[CR]unpackColorSpace\f[R] will remain unchanged.
.SH EXAMPLES
.SS Converting sRGB ImageData to display\-p3 in a texture
.IP
.EX
\f[B]const\f[R] canvas = document.getElementById(\[dq]canvas\[dq]);
\f[B]const\f[R] gl = canvas.getContext(\[dq]webgl\[dq]);

gl.drawingBufferColorSpace = \[dq]display\-p3\[dq];
gl.unpackColorSpace = \[dq]display\-p3\[dq];

\f[I]// Some sRGB ImageData\f[R]
\f[I]// Will be converted from sRGB to Display P3\f[R]
\f[B]const\f[R] imageData = \f[B]new\f[R] ImageData(data, 32, 32);

\f[B]const\f[R] tex = gl.createTexture();
gl.bindTexture(gl.TEXTURE_2D, tex);
gl.texImage2D(
  gl.TEXTURE_2D,
  0,
  gl.RGBA,
  width,
  height,
  0,
  gl.RGBA,
  gl.UNSIGNED_BYTE,
  imageData,
);
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]WebGL2RenderingContext.drawingBufferColorSpace\f[R]
