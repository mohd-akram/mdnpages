.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "GPUOUTOFMEMORYERROR" "3JS" "June 18, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
GPUOutOfMemoryError \- GPUOutOfMemoryError
.SH SYNOPSIS
\f[B]Secure context:\f[R] This feature is available only in secure
contexts (HTTPS).
.PP
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]GPUOutOfMemoryError\f[B]\f[R] interface of the WebGPU API
describes an out\-of\-memory (oom) error indicating that there was not
enough free memory to complete the requested operation.
.PP
It represents one of the types of errors surfaced by
\f[CR]GPUDevice.popErrorScope\f[R] and the \f[CR]uncapturederror\f[R]
event.
.PP
Out\-of\-memory errors should be relatively rare in a well\-behaved app
but are less predictable than \f[CR]GPUValidationError\f[R]s.
This is because they are dependent on the device your app is running on
as well as other apps that are using GPU resources at the time.
.SH CONSTRUCTOR
.TP
\f[B]GPUOutOfMemoryError()\f[R]
Creates a new \f[CR]GPUOutOfMemoryError\f[R] object instance.
.SH INSTANCE PROPERTIES
The \f[CR]message\f[R] property is inherited from its parent,
\f[CR]GPUError\f[R]:
.TP
\f[B]message\f[R] \f[I](experimental)\f[R] \f[I](read\-only)\f[R]
A string providing a human\-readable message that explains why the error
occurred.
.SH EXAMPLES
The following example uses an error scope to capture an out\-of\-memory
error, logging it to the console.
.IP
.EX
device.pushErrorScope(\(dqout\-of\-memory\(dq);

\f[B]let\f[R] buffer = device.createBuffer({
  size: 100_000_000_000, \f[I]// 100GB; far too big\f[R]
  usage: GPUBufferUsage.COPY_SRC | GPUBufferUsage.MAP_WRITE,
});

device.popErrorScope().then((error) \f[B]=>\f[R] {
  \f[B]if\f[R] (error) {
    \f[I]// error is a GPUOutOfMemoryError object instance\f[R]
    buffer = \f[B]null\f[R];
    console.error(\(gaOut of memory, buffer too large. Error: ${error.message}\(ga);
  }
});
.EE
.SH SEE ALSO
.IP \(bu 2
The WebGPU API
.IP \(bu 2
\c
.UR https://toji.dev/webgpu-best-practices/error-handling
WebGPU Error Handling best practices
.UE \c
