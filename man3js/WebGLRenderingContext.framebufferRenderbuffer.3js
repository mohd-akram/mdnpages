.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "WebGLRenderingContext.framebufferRenderbuffer" "JS" "July 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
WebGLRenderingContext.framebufferRenderbuffer \- WebGLRenderingContext:
framebufferRenderbuffer() method
.SH SYNOPSIS
The \f[B]\f[CB]WebGLRenderingContext.framebufferRenderbuffer()\f[B]\f[R]
method of the WebGL API attaches a \f[CR]WebGLRenderbuffer\f[R] object
to a \f[CR]WebGLFramebuffer\f[R] object.
.SH SYNTAX
.IP
.EX
framebufferRenderbuffer(target, attachment, renderbuffertarget, renderbuffer)
.EE
.SS Parameters
.TP
\f[B]target\f[R]
A \f[CR]GLenum\f[R] specifying the binding point (target) for the
framebuffer.
Possible values:
.RS
.TP
\f[B]gl.FRAMEBUFFER\f[R]
Collection buffer data storage of color, alpha, depth and stencil
buffers used to render an image.
.PP
When using a WebGL 2 context, the following values are available
additionally:
.TP
\f[B]gl.DRAW_FRAMEBUFFER\f[R]
Equivalent to \f[CR]gl.FRAMEBUFFER\f[R].
Used as a destination for drawing, rendering, clearing, and writing
operations.
.TP
\f[B]gl.READ_FRAMEBUFFER\f[R]
Used as a source for reading operations.
.RE
.TP
\f[B]attachment\f[R]
A \f[CR]GLenum\f[R] specifying the attachment point for the render
buffer.
Possible values:
.RS
.IP \[bu] 2
\f[CR]gl.COLOR_ATTACHMENT0\f[R]: color buffer.
.IP \[bu] 2
\f[CR]gl.DEPTH_ATTACHMENT\f[R]: depth buffer.
.IP \[bu] 2
\f[CR]gl.DEPTH_STENCIL_ATTACHMENT\f[R]: depth and stencil buffer.
.IP \[bu] 2
\f[CR]gl.STENCIL_ATTACHMENT\f[R]: stencil buffer.
.PP
When using a WebGL 2 context, the following values are available
additionally:
.IP \[bu] 2
\f[CR]gl.COLOR_ATTACHMENT1 gl.COLOR_ATTACHMENT2 gl.COLOR_ATTACHMENT3 gl.COLOR_ATTACHMENT4 gl.COLOR_ATTACHMENT5 gl.COLOR_ATTACHMENT6 gl.COLOR_ATTACHMENT7 gl.COLOR_ATTACHMENT8 gl.COLOR_ATTACHMENT9 gl.COLOR_ATTACHMENT10 gl.COLOR_ATTACHMENT11 gl.COLOR_ATTACHMENT12 gl.COLOR_ATTACHMENT13 gl.COLOR_ATTACHMENT14 gl.COLOR_ATTACHMENT15\f[R]
.PP
When using the \f[CR]WEBGL_draw_buffers\f[R] extension:
.IP \[bu] 2
\f[CR]ext.COLOR_ATTACHMENT0_WEBGL\f[R] (same as
\f[CR]gl.COLOR_ATTACHMENT0\f[R])
.IP \[bu] 2
\f[CR]ext.COLOR_ATTACHMENT1_WEBGL ext.COLOR_ATTACHMENT2_WEBGL ext.COLOR_ATTACHMENT3_WEBGL ext.COLOR_ATTACHMENT4_WEBGL ext.COLOR_ATTACHMENT5_WEBGL ext.COLOR_ATTACHMENT6_WEBGL ext.COLOR_ATTACHMENT7_WEBGL ext.COLOR_ATTACHMENT8_WEBGL ext.COLOR_ATTACHMENT9_WEBGL ext.COLOR_ATTACHMENT10_WEBGL ext.COLOR_ATTACHMENT11_WEBGL ext.COLOR_ATTACHMENT12_WEBGL ext.COLOR_ATTACHMENT13_WEBGL ext.COLOR_ATTACHMENT14_WEBGL ext.COLOR_ATTACHMENT15_WEBGL\f[R]
.RE
.TP
\f[B]renderbuffertarget\f[R]
A \f[CR]GLenum\f[R] specifying the binding point (target) for the render
buffer.
Possible values:
.RS
.TP
\f[B]gl.RENDERBUFFER\f[R]
Buffer data storage for single images in a renderable internal format.
.RE
.TP
\f[B]renderbuffer\f[R]
A \f[CR]WebGLRenderbuffer\f[R] object to attach.
.SS Return value
None (\f[CR]undefined\f[R]).
.SS Exceptions
.IP \[bu] 2
A \f[CR]gl.INVALID_ENUM\f[R] error is thrown if \f[CR]target\f[R] is not
\f[CR]gl.FRAMEBUFFER\f[R], \f[CR]gl.DRAW_FRAMEBUFFER\f[R], or
\f[CR]gl.READ_FRAMEBUFFER\f[R].
.IP \[bu] 2
A \f[CR]gl.INVALID_ENUM\f[R] error is thrown if
\f[CR]renderbuffertarget\f[R] is not \f[CR]gl.RENDERBUFFER\f[R].
.IP \[bu] 2
A \f[CR]gl.INVALID_ENUM\f[R] error is thrown if \f[CR]attachment\f[R] is
not one of the allowed enums.
.SH EXAMPLES
.IP
.EX
gl.framebufferRenderbuffer(
  gl.FRAMEBUFFER,
  gl.COLOR_ATTACHMENT0,
  gl.RENDERBUFFER,
  renderbuffer,
);
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]WebGLRenderingContext.createFramebuffer()\f[R]
.IP \[bu] 2
\f[CR]WebGLRenderingContext.deleteFramebuffer()\f[R]
.IP \[bu] 2
\f[CR]WebGLRenderingContext.isFramebuffer()\f[R]
.IP \[bu] 2
Other buffers: \f[CR]WebGLBuffer\f[R], \f[CR]WebGLRenderbuffer\f[R]
.IP \[bu] 2
\f[CR]WEBGL_draw_buffers\f[R]
