.\" Automatically generated by Pandoc 3.4
.\"
.TH "Int8Array.Int8Array" "JS" "June 12, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Int8Array.Int8Array \- Int8Array() constructor
.SH SYNOPSIS
The \f[B]\f[CB]Int8Array()\f[B]\f[R] constructor creates
\f[CR]Int8Array\f[R] objects.
The contents are initialized to \f[CR]0\f[R] unless initialization data
is explicitly provided.
.SH SYNTAX
.IP
.EX
new Int8Array()
new Int8Array(length)
new Int8Array(typedArray)
new Int8Array(object)

new Int8Array(buffer)
new Int8Array(buffer, byteOffset)
new Int8Array(buffer, byteOffset, length)
.EE
.RS
.PP
\f[B]Note:\f[R] \f[CR]Int8Array()\f[R] can only be constructed with
\f[CR]new\f[R].
Attempting to call it without \f[CR]new\f[R] throws a
\f[CR]TypeError\f[R].
.RE
.SS Parameters
See \f[CR]TypedArray\f[R].
.SS Exceptions
See \f[CR]TypedArray\f[R].
.SH EXAMPLES
.SS Different ways to create an Int8Array
.IP
.EX
\f[I]// From a length\f[R]
\f[B]const\f[R] int8 = \f[B]new\f[R] Int8Array(2);
int8[0] = 42;
console.log(int8[0]); \f[I]// 42\f[R]
console.log(int8.length); \f[I]// 2\f[R]
console.log(int8.BYTES_PER_ELEMENT); \f[I]// 1\f[R]

\f[I]// From an array\f[R]
\f[B]const\f[R] x = \f[B]new\f[R] Int8Array([21, 31]);
console.log(x[1]); \f[I]// 31\f[R]

\f[I]// From another TypedArray\f[R]
\f[B]const\f[R] y = \f[B]new\f[R] Int8Array(x);
console.log(y[0]); \f[I]// 21\f[R]

\f[I]// From an ArrayBuffer\f[R]
\f[B]const\f[R] buffer = \f[B]new\f[R] ArrayBuffer(8);
\f[B]const\f[R] z = \f[B]new\f[R] Int8Array(buffer, 1, 4);
console.log(z.byteOffset); \f[I]// 1\f[R]

\f[I]// From an iterable\f[R]
\f[B]const\f[R] iterable = (\f[B]function\f[R]* () {
  \f[B]yield\f[R]* [1, 2, 3];
})();
\f[B]const\f[R] int8FromIterable = \f[B]new\f[R] Int8Array(iterable);
console.log(int8FromIterable);
\f[I]// Int8Array [1, 2, 3]\f[R]
.EE
.SH SEE ALSO
.IP \[bu] 2
\c
.UR https://github.com/zloirock/core-js#ecmascript-typed-arrays
Polyfill of \f[CR]Int8Array\f[R] in \f[CR]core\-js\f[R]
.UE \c
.IP \[bu] 2
JavaScript typed arrays guide
.IP \[bu] 2
\f[CR]TypedArray\f[R]
.IP \[bu] 2
\f[CR]ArrayBuffer\f[R]
.IP \[bu] 2
\f[CR]DataView\f[R]
