.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "ValidityState.rangeOverflow" "JS" "July 15, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
ValidityState.rangeOverflow \- ValidityState: rangeOverflow property
.SH SYNOPSIS
The read\-only \f[B]\f[CB]rangeOverflow\f[B]\f[R] property of the
\f[CR]ValidityState\f[R] interface indicates if the value of an
\f[CR]<input>\f[R], after having been edited by the user, does not
conform to the constraints set by the element\[cq]s \f[CR]max\f[R]
attribute.
.PP
If the field is numeric in nature, including the \f[CR]date\f[R],
\f[CR]month\f[R], \f[CR]week\f[R], \f[CR]time\f[R],
\f[CR]datetime\-local\f[R], \f[CR]number\f[R] and \f[CR]range\f[R] types
and a \f[CR]max\f[R] value is set, if the value doesn\[cq]t conform to
the constraints set by the \f[CR]max\f[R] value, the
\f[CR]rangeOverflow\f[R] property will be true.
.SH VALUE
A boolean that is \f[CR]true\f[R] if the \f[CR]ValidityState\f[R] does
not conform to the constraints.
.SH EXAMPLES
.SS Input with numeric overflow
The following example checks the validity of a numeric input element.
A constraint has been added using the \f[CR]max\f[R] attribute which
sets a maximum value of \f[CR]18\f[R] for the input.
If the user enters a number higher than 18, the element fails constraint
validation, and the styles matching \f[CR]:invalid\f[R] and
\f[CR]:out\-of\-range\f[R] CSS pseudo\-classes
.IP
.EX
\f[I]/* or :invalid */\f[R]
input\f[BI]:out\-of\-range\f[R] {
  \f[B]outline\f[R]: red solid 3px;
}
.EE
.IP
.EX
<\f[B]pre\f[R] id=\[dq]log\[dq]>Validation logged here...</\f[B]pre\f[R]>
<\f[B]input\f[R] type=\[dq]number\[dq] id=\[dq]age\[dq] max=\[dq]18\[dq] />
.EE
.IP
.EX
\f[B]const\f[R] userInput = document.getElementById(\[dq]age\[dq]);
\f[B]const\f[R] logElement = document.getElementById(\[dq]log\[dq]);

\f[B]function\f[R] log(text) {
  logElement.innerText = text;
}

userInput.addEventListener(\[dq]input\[dq], () \f[B]=>\f[R] {
  userInput.reportValidity();
  \f[B]if\f[R] (userInput.validity.rangeOverflow) {
    log(\[dq]Number is too high!\[dq]);
  } \f[B]else\f[R] {
    log(\[dq]Input is valid\&...\[dq]);
  }
});
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]ValidityState.rangeUnderflow\f[R]
.IP \[bu] 2
Constraint validation
.IP \[bu] 2
Forms: Data form validation
.IP \[bu] 2
\f[CR]step\f[R] attribute
.IP \[bu] 2
\f[CR]min\f[R] attribute
