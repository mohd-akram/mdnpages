.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "KeyframeEffect.KeyframeEffect" "JS" "July 12, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
KeyframeEffect.KeyframeEffect \- KeyframeEffect: KeyframeEffect()
constructor
.SH SYNOPSIS
The \f[B]\f[CB]KeyframeEffect()\f[B]\f[R] constructor of the Web
Animations API returns a new \f[CR]KeyframeEffect\f[R] object instance,
and also allows you to clone an existing keyframe effect object
instance.
.SH SYNTAX
.IP
.EX
new KeyframeEffect(target, keyframes)
new KeyframeEffect(target, keyframes, options)
new KeyframeEffect(sourceKeyFrames)
.EE
.SS Parameters
The multi\-argument constructor (see above) creates a completely new
\f[CR]KeyframeEffect\f[R] object instance.
Its parameters are:
.TP
\f[B]target\f[R]
The DOM element to be animated, or \f[CR]null\f[R].
.TP
\f[B]keyframes\f[R]
A keyframes object or \f[CR]null\f[R].
.TP
\f[B]options\f[R] \f[I](optional)\f[R]
Either an integer representing the animation\[cq]s duration (in
milliseconds), or an object containing one or more of the following:
.RS
.TP
\f[B]delay\f[R] \f[I](optional)\f[R]
The number of milliseconds to delay the start of the animation.
Defaults to 0.
.TP
\f[B]direction\f[R] \f[I](optional)\f[R]
Whether the animation runs forwards (\f[CR]normal\f[R]), backwards
(\f[CR]reverse\f[R]), switches direction after each iteration
(\f[CR]alternate\f[R]), or runs backwards and switches direction after
each iteration (\f[CR]alternate\-reverse\f[R]).
Defaults to \f[CR]\[dq]normal\[dq]\f[R].
.TP
\f[B]duration\f[R] \f[I](optional)\f[R]
The number of milliseconds each iteration of the animation takes to
complete.
Defaults to 0.
Although this is technically optional, keep in mind that your animation
will not run if this value is 0.
.TP
\f[B]easing\f[R] \f[I](optional)\f[R]
The rate of the animation\[cq]s change over time.
Accepts an \f[CR]easing\-function\f[R], such as
\f[CR]\[dq]linear\[dq]\f[R], \f[CR]\[dq]ease\-in\[dq]\f[R],
\f[CR]\[dq]step\-end\[dq]\f[R], or
\f[CR]\[dq]cubic\-bezier(0.42, 0, 0.58, 1)\[dq]\f[R].
Defaults to \f[CR]\[dq]linear\[dq]\f[R].
.TP
\f[B]endDelay\f[R] \f[I](optional)\f[R]
The number of milliseconds to delay after the end of an animation.
This is primarily of use when sequencing animations based on the end
time of another animation.
Defaults to 0.
.TP
\f[B]fill\f[R] \f[I](optional)\f[R]
Dictates whether the animation\[cq]s effects should be reflected by the
element(s) prior to playing (\f[CR]\[dq]backwards\[dq]\f[R]), retained
after the animation has completed playing
(\f[CR]\[dq]forwards\[dq]\f[R]), or \f[CR]both\f[R].
Defaults to \f[CR]\[dq]none\[dq]\f[R].
.TP
\f[B]iterationStart\f[R] \f[I](optional)\f[R]
Describes at what point in the iteration the animation should start.
0.5 would indicate starting halfway through the first iteration for
example, and with this value set, an animation with 2 iterations would
end halfway through a third iteration.
Defaults to 0.0.
.TP
\f[B]iterations\f[R] \f[I](optional)\f[R]
The number of times the animation should repeat.
Defaults to \f[CR]1\f[R], and can also take a value of
\f[CR]Infinity\f[R] to make it repeat for as long as the element exists.
.TP
\f[B]composite\f[R] \f[I](optional)\f[R]
Determines how values are combined between this animation and other,
separate animations that do not specify their own specific composite
operation.
Defaults to \f[CR]replace\f[R].
.RS
.IP \[bu] 2
\f[CR]add\f[R] dictates an additive effect, where each successive
iteration builds on the last.
For instance with \f[CR]transform\f[R], a \f[CR]translateX(\-200px)\f[R]
would not override an earlier \f[CR]rotate(20deg)\f[R] value but result
in \f[CR]translateX(\-200px) rotate(20deg)\f[R].
.IP \[bu] 2
\f[CR]accumulate\f[R] is similar but a little smarter:
\f[CR]blur(2)\f[R] and \f[CR]blur(5)\f[R] become \f[CR]blur(7)\f[R], not
\f[CR]blur(2) blur(5)\f[R].
.IP \[bu] 2
\f[CR]replace\f[R] overwrites the previous value with the new one.
.RE
.TP
\f[B]iterationComposite\f[R] \f[I](optional)\f[R]
Determines how values build from iteration to iteration in this
animation.
Can be set to \f[CR]accumulate\f[R] or \f[CR]replace\f[R] (see above).
Defaults to \f[CR]replace\f[R].
.TP
\f[B]pseudoElement\f[R] \f[I](optional)\f[R]
A \f[CR]string\f[R] containing a \f[CR]pseudo\-element\f[R] selector,
such as \f[CR]\[dq]::before\[dq]\f[R].
If present, the effect is applied to the selected pseudo\-element of
\f[CR]target\f[R], rather than to \f[CR]target\f[R] itself.
.RE
.PP
The single argument constructor (see above) creates a clone of an
existing \f[CR]KeyframeEffect\f[R] object instance.
Its parameter is as follows:
.TP
\f[B]sourceKeyFrames\f[R]
A \f[CR]KeyframeEffect\f[R] object that you want to clone.
.SH EXAMPLES
In the following example, the KeyframeEffect constructor is used to
create a set of keyframes that dictate how the emoji should roll on the
floor:
.IP
.EX
\f[B]const\f[R] emoji = document.querySelector(\[dq]div\[dq]); \f[I]// element to animate\f[R]

\f[B]const\f[R] rollingKeyframes = \f[B]new\f[R] KeyframeEffect(
  emoji,
  [
    { transform: \[dq]translateX(0) rotate(0)\[dq] }, \f[I]// keyframe\f[R]
    { transform: \[dq]translateX(200px) rotate(1.3turn)\[dq] }, \f[I]// keyframe\f[R]
  ],
  {
    \f[I]// keyframe options\f[R]
    duration: 2000,
    direction: \[dq]alternate\[dq],
    easing: \[dq]ease\-in\-out\[dq],
    iterations: \[dq]Infinity\[dq],
  },
);

\f[B]const\f[R] rollingAnimation = \f[B]new\f[R] Animation(rollingKeyframes, document.timeline);
rollingAnimation.play();
.EE
.IP
.EX
<\f[B]div\f[R]>ðŸ¤£</\f[B]div\f[R]>
.EE
.SH SEE ALSO
.IP \[bu] 2
KeyframeEffect Interface
.IP \[bu] 2
Web Animations API
.IP \[bu] 2
\f[CR]Animation\f[R]
