.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "PUBLICKEYCREDENTIAL.SIGNALCURRENTUSERDETAILS_STATIC" "3JS" "June 18, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
PublicKeyCredential.signalCurrentUserDetails_static \-
PublicKeyCredential: signalCurrentUserDetails() static method
.SH SYNOPSIS
\f[B]Secure context:\f[R] This feature is available only in secure
contexts (HTTPS).
.PP
The \f[B]\f[CB]signalCurrentUserDetails()\f[B]\f[R] static method of the
\f[CR]PublicKeyCredential\f[R] interface signals to the authenticator
that a particular user has updated their user name and/or display name
on the \c
.UR https://en.wikipedia.org/wiki/Relying_party
relying party
.UE \c
\ (RP) server.
.PP
This allows the authenticator to update user account details, to make
sure they stay in sync with those held by the RP.
It should only be used when the current user is authenticated \(em after
sign in, or when they change the metadata associated with their
credentials on the RP web app.
.SH SYNTAX
.IP
.EX
signalCurrentUserDetails(options)
.EE
.SS Parameters
.TP
\f[B]options\f[R]
An object representing the updated user information, which contains the
following properties:
.RS
.TP
\f[B]displayName\f[R]
A string representing the updated user \f[CR]displayName\f[R].
.TP
\f[B]name\f[R]
A string representing the updated user \f[CR]name\f[R].
.TP
\f[B]rpId\f[R]
A string representing the \f[CR]id\f[R] of the RP that sent the signal.
.TP
\f[B]userId\f[R]
A base64url\-encoded string representing the \f[CR]id\f[R] of the user
the credentials relate to.
.RE
.SS Return value
A \f[CR]Promise\f[R] that resolves to \f[CR]undefined\f[R].
.SS Exceptions
The promise rejects with the following exceptions:
.TP
\f[B]SecurityError\f[R] \f[B]DOMException\f[R]
The RP domain is not valid.
.TP
\f[B]TypeError\f[R] \f[B]DOMException\f[R]
The \f[CR]credentialId\f[R] is not a valid base64url\-encoded string.
.SH DESCRIPTION
It is possible for the information stored in a user\(cqs authenticator
about a discoverable credential (for example, \c
.UR https://passkeys.dev/
a passkey
.UE \c
) to go out sync with the RP server.
This can occur when the user updates their user name or display name on
the RP web app without updating the authenticator.
.PP
The next time they try to sign in with a discoverable credential, the
credential will still be presented to them with the old user
name/display name in the relevant UI, which can result in a confusing
user experience.
.PP
To avoid this issue, \f[CR]signalCurrentUserDetails()\f[R] should be
called on the RP web app each time a user updates their user account
details or signs in, to tell the authenticator that the user information
has been updated.
It is up to the authenticator how to handle this information, but the
expectation is that it will synchronize its user information with the
provided update.
.SH EXAMPLES
.SS Signaling the current user details
In this example, we invoke the \f[CR]signalCurrentUserDetail()\f[R]
method, passing it the details of a credential the user has just edited
on the RP.
As a result, the authenticator should update its own copy of the
credential so that it stays in sync with the RP.
.IP
.EX
\f[B]if\f[R] (PublicKeyCredential.signalCurrentUserDetails) {
  \f[B]await\f[R] PublicKeyCredential.signalCurrentUserDetails({
    rpId: \(dqexample.com\(dq,
    userId: \(dqM2YPl\-KGnA8\(dq, \f[I]// base64url\-encoded user ID\f[R]
    name: \(dqa.new.email.address\(atexample.com\(dq, \f[I]// username\f[R]
    displayName: \(dqJohn Doe\(dq,
  });
} \f[B]else\f[R] {
  \f[I]// Encourage the user to update their details in the authenticator\f[R]
}
.EE
.PP
For a complete example, see \c
.UR https://signal-api-demo.glitch.me/
WebAuthn Signal API Demo
.UE \c
\ (see \c
.UR https://glitch.com/edit/#!/signal-api-demo?path=site.js
the source code
.UE \c
).
.SH SEE ALSO
.IP \(bu 2
\f[CR]PublicKeyCredential.signalAllAcceptedCredentials()\f[R]
.IP \(bu 2
\f[CR]PublicKeyCredential.signalUnknownCredential()\f[R]
.IP \(bu 2
\c
.UR https://developer.chrome.com/docs/identity/webauthn-signal-api
Keep passkeys consistent with credentials on your server with the Signal
API
.UE \c
\ on developer.chrome.com (2024)
