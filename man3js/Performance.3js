.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "Performance" "JS" "May 6, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Performance \- Performance
.SH SYNOPSIS
The \f[B]\f[CB]Performance\f[B]\f[R] interface provides access to
performance\-related information for the current page.
.PP
Performance entries are specific to each execution context.
You can access performance information for code running in a window via
\f[CR]Window.performance\f[R], and for code running in a worker via
\f[CR]WorkerGlobalScope.performance\f[R].
.SH INSTANCE PROPERTIES
\f[I]The \f[CI]Performance\f[I] interface doesn\[cq]t inherit any
properties.\f[R]
.TP
\f[B]Performance.eventCounts\f[R] \f[I](read\-only)\f[R]
An \f[CR]EventCounts\f[R] map containing the number of events which have
been dispatched per event type.
.TP
\f[B]Performance.navigation\f[R] \f[I](read\-only)\f[R] \f[I](deprecated)\f[R]
A legacy \f[CR]PerformanceNavigation\f[R] object that provides useful
context about the operations included in the times listed in
\f[CR]timing\f[R], including whether the page was a load or a refresh,
how many redirections occurred, and so forth.
.TP
\f[B]Performance.timing\f[R] \f[I](read\-only)\f[R] \f[I](deprecated)\f[R]
A legacy \f[CR]PerformanceTiming\f[R] object containing latency\-related
performance information.
.TP
\f[B]Performance.memory\f[R] \f[I](read\-only)\f[R] \f[I](non\-standard)\f[R] \f[I](deprecated)\f[R]
A \f[I]non\-standard\f[R] extension added in Chrome, this property
provides an object with basic memory usage information.
\f[I]You \f[BI]should not use\f[I] this non\-standard API.\f[R]
.TP
\f[B]Performance.timeOrigin\f[R] \f[I](read\-only)\f[R]
Returns the high resolution timestamp of the start time of the
performance measurement.
.SH INSTANCE METHODS
\f[I]The \f[CI]Performance\f[I] interface doesn\[cq]t inherit any
methods.\f[R]
.TP
\f[B]Performance.clearMarks()\f[R]
Removes the given \f[I]mark\f[R] from the browser\[cq]s performance
entry buffer.
.TP
\f[B]Performance.clearMeasures()\f[R]
Removes the given \f[I]measure\f[R] from the browser\[cq]s performance
entry buffer.
.TP
\f[B]Performance.clearResourceTimings()\f[R]
Removes all \f[CR]performance entries\f[R] with a \f[CR]entryType\f[R]
of \[lq]\f[CR]resource\f[R]\[rq] from the browser\[cq]s performance data
buffer.
.TP
\f[B]Performance.getEntries()\f[R]
Returns a list of \f[CR]PerformanceEntry\f[R] objects based on the given
\f[I]filter\f[R].
.TP
\f[B]Performance.getEntriesByName()\f[R]
Returns a list of \f[CR]PerformanceEntry\f[R] objects based on the given
\f[I]name\f[R] and \f[I]entry type\f[R].
.TP
\f[B]Performance.getEntriesByType()\f[R]
Returns a list of \f[CR]PerformanceEntry\f[R] objects of the given
\f[I]entry type\f[R].
.TP
\f[B]Performance.mark()\f[R]
Creates a \f[CR]timestamp\f[R] in the browser\[cq]s \f[I]performance
entry buffer\f[R] with the given name.
.TP
\f[B]Performance.measure()\f[R]
Creates a named \f[CR]timestamp\f[R] in the browser\[cq]s performance
entry buffer between two specified marks (known as the \f[I]start
mark\f[R] and \f[I]end mark\f[R], respectively).
.TP
\f[B]Performance.measureUserAgentSpecificMemory()\f[R] \f[I](experimental)\f[R]
Estimates the memory usage of a web application including all its
iframes and workers.
.TP
\f[B]Performance.now()\f[R]
Returns a \f[CR]DOMHighResTimeStamp\f[R] representing the number of
milliseconds elapsed since a reference instant.
.TP
\f[B]Performance.setResourceTimingBufferSize()\f[R]
Sets the browser\[cq]s resource timing buffer size to the specified
number of \[lq]\f[CR]resource\f[R]\[rq] \f[CR]type\f[R]
\f[CR]performance entry\f[R] objects.
.TP
\f[B]Performance.toJSON()\f[R]
Returns a JSON representation of the \f[CR]Performance\f[R] object.
.SH EVENTS
Listen to these events using \f[CR]addEventListener()\f[R] or by
assigning an event listener to the \f[CR]oneventname\f[R] property of
this interface.
.TP
\f[B]resourcetimingbufferfull\f[R]
Fired when the browser\[cq]s resource timing buffer is full.
