.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "FORMDATAEVENT.FORMDATA" "3JS" "April 28, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
FormDataEvent.formData \- FormDataEvent: formData property
.SH SYNOPSIS
The \f[CR]formData\f[R] read\-only property of the
\f[CR]FormDataEvent\f[R] interface contains the \f[CR]FormData\f[R]
object representing the data contained in the form when the event was
fired.
.SH VALUE
A \f[CR]FormData\f[R] object.
.SH EXAMPLES
.IP
.EX
\f[I]// grab reference to form\f[R]

\f[B]const\f[R] formElem = document.querySelector(\(dqform\(dq);

\f[I]// submit handler\f[R]

formElem.addEventListener(\(dqsubmit\(dq, (e) \f[B]=>\f[R] {
  \f[I]// on form submission, prevent default\f[R]
  e.preventDefault();

  \f[I]// construct a FormData object, which fires the formdata event\f[R]
  \f[B]new\f[R] FormData(formElem);
});

\f[I]// formdata handler to retrieve data\f[R]

formElem.addEventListener(\(dqformdata\(dq, (e) \f[B]=>\f[R] {
  console.log(\(dqformdata fired\(dq);

  \f[I]// Get the form data from the event object\f[R]
  \f[B]let\f[R] data = e.formData;
  \f[B]for\f[R] (\f[B]const\f[R] value \f[B]of\f[R] data.values()) {
    console.log(value);
  }

  \f[I]// submit the data via XHR\f[R]
  \f[B]const\f[R] request = \f[B]new\f[R] XMLHttpRequest();
  request.open(\(dqPOST\(dq, \(dq/formHandler\(dq);
  request.send(data);
});
.EE
.SH SEE ALSO
.IP \(bu 2
\f[CR]XMLHttpRequest\f[R]
.IP \(bu 2
Using XMLHttpRequest
.IP \(bu 2
Using FormData objects
.IP \(bu 2
\f[CR]<Form>\f[R]
