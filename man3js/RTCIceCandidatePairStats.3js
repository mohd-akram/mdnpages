.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "RTCIceCandidatePairStats" "JS" "November 2, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
RTCIceCandidatePairStats \- RTCIceCandidatePairStats
.SH SYNOPSIS
The \f[B]\f[CB]RTCIceCandidatePairStats\f[B]\f[R] dictionary of the
WebRTC API is used to report statistics that provide insight into the
quality and performance of an \f[CR]RTCPeerConnection\f[R] while
connected and configured as described by the specified pair of ICE
candidates.
.PP
The statistics can be obtained by iterating the
\f[CR]RTCStatsReport\f[R] returned by
\f[CR]RTCPeerConnection.getStats()\f[R] until you find an entry with the
\f[CR]type\f[R] of \f[CR]\[dq]candidate\-pair\[dq]\f[R].
.SH INSTANCE PROPERTIES
.TP
\f[B]availableIncomingBitrate\f[R] \f[I](optional)\f[R] 
A number representing the available inbound capacity of the network.
This reports the total number of bits per second available for all of
the candidate pair\[cq]s incoming RTP streams.
It does not take into account the size of the Internet Protocol (IP)
overhead, nor any other transport layers such as TCP or UDP.
.TP
\f[B]availableOutgoingBitrate\f[R] \f[I](optional)\f[R]
A number representing the approximate available outbound capacity of the
network.
This reports the total number of bits per second available for all of
the candidate pair\[cq]s outgoing RTP streams.
It does not take into account the size of the IP overhead, nor any other
transport layers such as TCP or UDP.
.TP
\f[B]bytesDiscardedOnSend\f[R] \f[I](optional)\f[R] \f[I](experimental)\f[R]
An integer representing the total number of bytes discarded due to
socket errors on this candidate pair.
.TP
\f[B]bytesReceived\f[R] \f[I](optional)\f[R]
An integer representing the total number of payload bytes received on
this candidate pair.
.TP
\f[B]bytesSent\f[R] \f[I](optional)\f[R]
An integer representing the total number of payload bytes sent on this
candidate pair (the total number of bytes sent excluding any headers,
padding, or other protocol overhead).
.TP
\f[B]consentRequestsSent\f[R] \f[I](optional)\f[R] \f[I](experimental)\f[R]
An integer representing the total number of STUN consent requests sent
on this candidate pair.
.TP
\f[B]currentRoundTripTime\f[R] \f[I](optional)\f[R]
A number representing the total time, in seconds, that elapsed between
the most recently\-sent STUN request and the response being received.
This may be based upon requests that were involved in confirming
permission to open the connection.
.TP
\f[B]lastPacketReceivedTimestamp\f[R] \f[I](optional)\f[R]
A \f[CR]DOMHighResTimeStamp\f[R] value indicating the time at which the
last packet was received by the local peer from the remote peer for this
candidate pair.
Timestamps are not recorded for STUN packets.
.TP
\f[B]lastPacketSentTimestamp\f[R] \f[I](optional)\f[R]
A \f[CR]DOMHighResTimeStamp\f[R] value indicating the time at which the
last packet was sent from the local peer to the remote peer for this
candidate pair.
Timestamps are not recorded for STUN packets.
.TP
\f[B]localCandidateId\f[R] \f[I](optional)\f[R]
A string representing the unique ID corresponding to the
\f[CR]RTCIceCandidate\f[R] from the data included in the
\f[CR]RTCIceCandidateStats\f[R] object providing statistics for the
candidate pair\[cq]s local candidate.
.TP
\f[B]nominated\f[R] \f[I](optional)\f[R]
A Boolean value which, if \f[CR]true\f[R], indicates that the candidate
pair described by this object is one which has been proposed for use,
and will be (or was) used if its priority is the highest among the
nominated candidate pairs.
See RFC 5245, section 7.1.3.2.4) for details.
.TP
\f[B]packetsDiscardedOnSend\f[R] \f[I](optional)\f[R] \f[I](experimental)\f[R]
An integer representing the total number of packets discarded due to
socket errors on this candidate pair.
.TP
\f[B]packetsReceived\f[R] \f[I](optional)\f[R] \f[I](experimental)\f[R]
An integer representing the total number of packets received on this
candidate pair.
.TP
\f[B]packetsSent\f[R] \f[I](optional)\f[R] \f[I](experimental)\f[R]
An integer representing the total number of packets sent on this
candidate pair.
.TP
\f[B]remoteCandidateId\f[R] \f[I](optional)\f[R]
A string containing a unique ID corresponding to the remote candidate
from which data was taken to construct the
\f[CR]RTCIceCandidateStats\f[R] object describing the remote end of the
connection.
.TP
\f[B]requestsReceived\f[R] \f[I](optional)\f[R]
An integer representing the total number of connectivity check requests
that have been received, including retransmissions.
This value includes both connectivity checks and STUN consent checks.
.TP
\f[B]requestsSent\f[R] \f[I](optional)\f[R]
An integer representing the total number of connectivity check requests
that have been sent, \f[I]not\f[R] including retransmissions.
.TP
\f[B]responsesReceived\f[R] \f[I](optional)\f[R]
An integer representing the total number of connectivity check responses
that have been received.
.TP
\f[B]responsesSent\f[R] \f[I](optional)\f[R]
An integer representing the total number of connectivity check responses
that have been sent.
This includes both connectivity check requests and STUN consent
requests.
.TP
\f[B]state\f[R] \f[I](optional)\f[R]
A string which indicates the state of the connection between the two
candidates.
.TP
\f[B]totalRoundTripTime\f[R] \f[I](optional)\f[R]
A number indicating the total time, in seconds, that has elapsed between
sending STUN requests and receiving responses to them, for all such
requests made to date on this candidate pair.
This includes both connectivity check and consent check requests.
You can compute the average round trip time (RTT) by dividing this value
by \f[CR]responsesReceived\f[R].
.TP
\f[B]transportId\f[R] \f[I](optional)\f[R]
A string that uniquely identifies the \f[CR]RTCIceTransport\f[R] that
was inspected to obtain the transport\-related statistics (as found in
\f[CR]RTCTransportStats\f[R]) used in generating this object.
.SS Common instance properties
The following properties are common to all WebRTC statistics objects.
.TP
\f[B]id\f[R]
A string that uniquely identifies the object that is being monitored to
produce this set of statistics.
.TP
\f[B]timestamp\f[R]
A \f[CR]DOMHighResTimeStamp\f[R] object indicating the time at which the
sample was taken for this statistics object.
.TP
\f[B]type\f[R]
A string with the value \f[CR]\[dq]candidate\-pair\[dq]\f[R], indicating
the type of statistics that the object contains.
.SS Deprecated properties
The following properties have been removed from the specification and
should no longer be used.
You should update any existing code to avoid using them as soon as is
practical.
Check the compatibility table for details on which browsers support them
and in which versions.
.TP
\f[B]priority\f[R] \f[I](deprecated)\f[R] \f[I](optional)\f[R] \f[I](non\-standard)\f[R]
An integer value indicating the candidate pair\[cq]s priority.
.TP
\f[B]readable\f[R] \f[I](deprecated)\f[R] \f[I](optional)\f[R] \f[I](non\-standard)\f[R]
A Boolean value indicating whether or not data can be sent over the
connection described by the candidate pair.
.TP
\f[B]writable\f[R] \f[I](deprecated)\f[R] \f[I](optional)\f[R] \f[I](non\-standard)\f[R]
A Boolean value indicating whether or not data can be received on the
connection described by the candidate pair.
.SS Non\-standard properties
.TP
\f[B]selected\f[R] \f[I](non\-standard)\f[R] \f[I](optional)\f[R]
A Firefox\-specific Boolean value which is \f[CR]true\f[R] if the
candidate pair described by this object is the one currently in use.
The spec\-compliant way to determine the selected candidate pair is to
look for a stats object of type \f[CR]transport\f[R], which is an
\f[CR]RTCTransportStats\f[R] object.
That object\[cq]s \f[CR]selectedCandidatePairId\f[R] property indicates
whether or not the specified transport is the one being used.
.SH USAGE NOTES
The currently\-active ICE candidate pair\[em]if any\[em]can be obtained
by calling the \f[CR]RTCIceTransport\f[R] method
\f[CR]getSelectedCandidatePair()\f[R], which returns an
\f[CR]RTCIceCandidatePair\f[R] object, or \f[CR]null\f[R] if there
isn\[cq]t a pair selected.
The active candidate pair describes the current configuration of the two
ends of the \f[CR]RTCPeerConnection\f[R].
.PP
Any candidate pair that isn\[cq]t the active pair of candidates for a
transport gets deleted if the \f[CR]RTCIceTransport\f[R] performs an ICE
restart, at which point the \f[CR]state\f[R] of the ICE transport
returns to \f[CR]new\f[R] and negotiation starts once again.
For more information, see ICE restart.
.SH EXAMPLE
This example computes the average time elapsed between connectivity
checks.
.IP
.EX
\f[B]if\f[R] (rtcStats && rtcStats.type === \[dq]candidate\-pair\[dq]) {
  \f[B]let\f[R] elapsed =
    (rtcStats.lastRequestTimestamp \- rtcStats.firstRequestTimestamp) /
    rtcStats.requestsSent;

  console.log(\[ga]Average time between ICE connectivity checks: ${elapsed} ms.\[ga]);
}
.EE
.PP
The code begins by looking at \f[CR]rtcStats\f[R] to see if its
\f[CR]type\f[R] is \f[CR]candidate\-pair\f[R].
If it is, then we know that \f[CR]rtcStats\f[R] is in fact an
\f[CR]RTCIceCandidatePairStats\f[R] object.
We can then compute the average time elapsed between STUN connectivity
checks and log that information.
