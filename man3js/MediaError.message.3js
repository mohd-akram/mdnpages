.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "MEDIAERROR.MESSAGE" "3JS" "May 24, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
MediaError.message \- MediaError: message property
.SH SYNOPSIS
The read\-only property \f[B]\f[CB]MediaError.message\f[B]\f[R] returns
a human\-readable string offering specific diagnostic details related to
the error described by the \f[CR]MediaError\f[R] object, or an empty
string (\f[CR]\(dq\(dq\f[R]) if no diagnostic information can be
determined or provided.
.SH VALUE
A string providing a detailed, specific explanation of what went wrong
and possibly how it might be fixed.
This is \f[I]not\f[R] a generic description of the
\f[CR]MediaError.code\f[R] property\(cqs value, but instead goes deeper
into the specifics of this particular error and its circumstances.
If no specific details are available, this string is empty.
.SH EXAMPLES
This example creates an \f[CR]<audio>\f[R] element, establishes an error
handler for it, then lets the user click buttons to choose whether to
assign a valid audio file or a missing file to the element\(cqs
\f[CR]src\f[R] attribute.
The error handler outputs a message to a box onscreen describing the
error, including both the \f[CR]code\f[R] and the \f[CR]message\f[R].
.PP
Only the relevant parts of the code are displayed; you can \c
.UR https://github.com/mdn/dom-examples/tree/main/media/mediaerror
see the complete source code here
.UE \c
\&.
.PP
The example creates an \f[CR]<audio>\f[R] element and lets the user
assign either a valid music file to it, or a link to a file which
doesn\(cqt exist.
This lets us see the behavior of the \f[CR]error\f[R] event handler,
which is received by an event handler we add to the \f[CR]<audio>\f[R]
element itself.
.PP
The error handler looks like this:
.IP
.EX
audioElement.onerror = () \f[B]=>\f[R] {
  \f[B]let\f[R] s = \(dq\(dq;
  \f[B]const\f[R] err = audioElement.error;

  \f[B]switch\f[R] (err.code) {
    \f[B]case\f[R] MediaError.MEDIA_ERR_ABORTED:
      s += \(dqThe user canceled the audio.\(dq;
      \f[B]break\f[R];
    \f[B]case\f[R] MediaError.MEDIA_ERR_NETWORK:
      s += \(dqA network error occurred while fetching the audio.\(dq;
      \f[B]break\f[R];
    \f[B]case\f[R] MediaError.MEDIA_ERR_DECODE:
      s += \(dqAn error occurred while decoding the audio.\(dq;
      \f[B]break\f[R];
    \f[B]case\f[R] MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED:
      s +=
        \(dqThe audio is missing or is in a format not supported by your browser.\(dq;
      \f[B]break\f[R];
    \f[B]default\f[R]:
      s += \(dqAn unknown error occurred.\(dq;
      \f[B]break\f[R];
  }

  \f[B]const\f[R] message = err.message;

  \f[B]if\f[R] (message?.length > 0) {
    s += \(ga ${message}\(ga;
  }

  displayErrorMessage(\(ga<strong>Error ${err.code}:</strong> ${s}<br>\(ga);
};
.EE
.PP
This gets the \f[CR]MediaError\f[R] object describing the error from the
\f[CR]error\f[R] property on the \f[CR]HTMLAudioElement\f[R]
representing the audio player.
The error\(cqs \f[CR]code\f[R] attribute is checked to determine a
generic error message to display, and, if \f[CR]message\f[R] is not
empty, it\(cqs appended to provide additional details.
Then the resulting text is output to the log.
.SS Result
You can try out this example below, and can \c
.UR https://mdn.github.io/dom-examples/media/mediaerror/
see the example in action outside this page here
.UE \c
\&.
.SH SEE ALSO
.IP \(bu 2
\f[CR]MediaError\f[R]: Interface used to define the
\f[CR]MediaError.message\f[R] property
.IP \(bu 2
\f[CR]<audio>\f[R], \f[CR]<video>\f[R]
