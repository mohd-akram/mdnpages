.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "MediaRecorder.stop_event" "JS" "February 8, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
MediaRecorder.stop_event \- MediaRecorder: stop event
.SH SYNOPSIS
The \f[B]\f[CB]stop\f[B]\f[R] event of the \f[CR]MediaRecorder\f[R]
interface is fired when \f[CR]MediaRecorder.stop()\f[R] is called, or
when the media stream being captured ends.
In each case, the \f[CR]stop\f[R] event is preceded by a
\f[CR]dataavailable\f[R] event, making the \f[CR]Blob\f[R] captured up
to that point available for you to use in your application.
.SH SYNTAX
Use the event name in methods like \f[CR]addEventListener()\f[R], or set
an event handler property.
.IP
.EX
addEventListener(\[dq]stop\[dq], (event) \f[B]=>\f[R] {});

onstop = (event) \f[B]=>\f[R] {};
.EE
.SH EVENT TYPE
A generic \f[CR]Event\f[R].
.SH EXAMPLE
.IP
.EX
mediaRecorder.onstop = (e) \f[B]=>\f[R] {
  console.log(\[dq]data available after MediaRecorder.stop() called.\[dq]);

  \f[B]const\f[R] audio = document.createElement(\[dq]audio\[dq]);
  audio.controls = \f[B]true\f[R];
  \f[B]const\f[R] blob = \f[B]new\f[R] Blob(chunks, { type: \[dq]audio/ogg; codecs=opus\[dq] });
  \f[B]const\f[R] audioURL = window.URL.createObjectURL(blob);
  audio.src = audioURL;
  console.log(\[dq]recorder stopped\[dq]);
};

mediaRecorder.ondataavailable = (e) \f[B]=>\f[R] {
  chunks.push(e.data);
};
.EE
.SH SEE ALSO
.IP \[bu] 2
Using the MediaStream Recording API
.IP \[bu] 2
\c
.UR https://mdn.github.io/dom-examples/media/web-dictaphone/
Web Dictaphone
.UE \c
: MediaRecorder + getUserMedia + Web Audio API visualization demo, by \c
.UR https://github.com/chrisdavidmills
Chris Mills
.UE \c
\ (\c
.UR https://github.com/mdn/dom-examples/tree/main/media/web-dictaphone
source on GitHub
.UE \c
\&.)
.IP \[bu] 2
\c
.UR https://simpl.info/mediarecorder/
simpl.info MediaStream Recording demo
.UE \c
, by \c
.UR https://github.com/samdutton
Sam Dutton
.UE \c
\&.
.IP \[bu] 2
\f[CR]Navigator.getUserMedia\f[R]
