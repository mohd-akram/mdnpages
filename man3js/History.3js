.\" Automatically generated by Pandoc 3.4
.\"
.TH "History" "JS" "July 26, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
History \- History
.SH SYNOPSIS
The \f[B]\f[CB]History\f[B]\f[R] interface of the History API allows
manipulation of the browser \f[I]session history\f[R], that is the pages
visited in the tab or frame that the current page is loaded in.
.PP
There is only one instance of \f[CR]history\f[R] (It is a
\f[I]singleton\f[R].)
accessible via the global object \f[CR]history\f[R].
.RS
.PP
\f[B]Note:\f[R] This interface is only available on the main thread
(\f[CR]Window\f[R]).
It cannot be accessed in \f[CR]Worker\f[R] or \f[CR]Worklet\f[R]
contexts.
.RE
.SH INSTANCE PROPERTIES
\f[I]The \f[CI]History\f[I] interface doesn\[cq]t inherit any
property.\f[R]
.TP
\f[B]length\f[R] \f[I](read\-only)\f[R]
Returns an \f[CR]Integer\f[R] representing the number of elements in the
session history, including the currently loaded page.
For example, for a page loaded in a new tab this property returns
\f[CR]1\f[R].
.TP
\f[B]scrollRestoration\f[R]
Allows web applications to explicitly set default scroll restoration
behavior on history navigation.
This property can be either \f[CR]auto\f[R] or \f[CR]manual\f[R].
.TP
\f[B]state\f[R] \f[I](read\-only)\f[R]
Returns an \f[CR]any\f[R] value representing the state at the top of the
history stack.
This is a way to look at the state without having to wait for a
\f[CR]popstate\f[R] event.
.SH INSTANCE METHODS
\f[I]The \f[CI]History\f[I]\f[R] \f[I]interface doesn\[cq]t inherit any
methods.\f[R]
.TP
\f[B]back()\f[R]
This asynchronous method goes to the previous page in session history,
the same action as when the user clicks the browser\[cq]s Back button.
Equivalent to \f[CR]history.go(\-1)\f[R].
.RS
.PP
Calling this method to go back beyond the first page in the session
history has no effect and doesn\[cq]t raise an exception.
.RE
.TP
\f[B]forward()\f[R]
This asynchronous method goes to the next page in session history, the
same action as when the user clicks the browser\[cq]s Forward button;
this is equivalent to \f[CR]history.go(1)\f[R].
.RS
.PP
Calling this method to go forward beyond the most recent page in the
session history has no effect and doesn\[cq]t raise an exception.
.RE
.TP
\f[B]go()\f[R]
Asynchronously loads a page from the session history, identified by its
relative location to the current page, for example \f[CR]\-1\f[R] for
the previous page or \f[CR]1\f[R] for the next page.
If you specify an out\-of\-bounds value (for instance, specifying
\f[CR]\-1\f[R] when there are no previously\-visited pages in the
session history), this method silently has no effect.
Calling \f[CR]go()\f[R] without parameters or a value of \f[CR]0\f[R]
reloads the current page.
.TP
\f[B]pushState()\f[R]
Pushes the given data onto the session history stack with the specified
title (and, if provided, URL).
The data is treated as opaque by the DOM; you may specify any JavaScript
object that can be serialized.
Note that all browsers but Safari currently ignore the \f[I]title\f[R]
parameter.
For more information, see Working with the History API.
.TP
\f[B]replaceState()\f[R]
Updates the most recent entry on the history stack to have the specified
data, title, and, if provided, URL.
The data is treated as opaque by the DOM; you may specify any JavaScript
object that can be serialized.
Note that all browsers but Safari currently ignore the \f[I]title\f[R]
parameter.
For more information, see Working with the History API.
.SH SEE ALSO
.IP \[bu] 2
\f[CR]history\f[R] global object
