.\" Automatically generated by Pandoc 3.4
.\"
.TH "HTMLMediaElement.setSinkId" "JS" "July 19, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
HTMLMediaElement.setSinkId \- HTMLMediaElement: setSinkId() method
.SH SYNOPSIS
\f[B]Secure context:\f[R] This feature is available only in secure
contexts (HTTPS).
.PP
The \f[B]\f[CB]setSinkId()\f[B]\f[R] method of the
\f[CR]HTMLMediaElement\f[R] interface sets the ID of the audio device to
use for output and returns a \f[CR]Promise\f[R].
.PP
This only works when the application is permitted to use the specified
device.
For more information see the security requirements below.
.SH SYNTAX
.IP
.EX
setSinkId(sinkId)
.EE
.SS Parameters
.TP
\f[B]sinkId\f[R]
The \f[CR]MediaDeviceInfo.deviceId\f[R] of the audio output device.
.SS Return value
A \f[CR]Promise\f[R] that resolves to \f[CR]undefined\f[R].
.SS Exceptions
.TP
\f[B]NotAllowedError\f[R] \f[B]DOMException\f[R]
Returned if a \f[CR]speaker\-selection\f[R] Permissions Policy is used
to block use of audio outputs.
.TP
\f[B]NotFoundError\f[R] \f[B]DOMException\f[R]
Returned if the \f[CR]deviceId\f[R] does not match any audio output
device.
.TP
\f[B]AbortError\f[R] \f[B]DOMException\f[R]
Returned if switching the audio output device to the new audio device
failed.
.SH SECURITY REQUIREMENTS
Access to the API is subject to the following constraints:
.IP \[bu] 2
The method must be called in a secure context.
.IP \[bu] 2
Access may be gated by the \f[CR]speaker\-selection\f[R] HTTP Permission
Policy.
.IP \[bu] 2
User permission is required to access a non\-default device.
The user grants permission by selecting the device associated with the
ID in the prompt displayed by
\f[CR]MediaDevices.selectAudioOutput()\f[R].
.SH EXAMPLES
This example shows how to select an audio output device from the array
returned by \f[CR]MediaDevices.enumerateDevices()\f[R], and set it as
the sink for audio.
Note that the result of \f[CR]enumerateDevices()\f[R] only includes
devices for which user permission is not required or has already been
granted.
.IP
.EX
\f[B]const\f[R] devices = \f[B]await\f[R] navigator.mediaDevices.enumerateDevices();
\f[B]const\f[R] audioDevice = devices.find((device) \f[B]=>\f[R] device.kind === \[dq]audiooutput\[dq]);
\f[B]const\f[R] audio = document.createElement(\[dq]audio\[dq]);
\f[B]await\f[R] audio.setSinkId(audioDevice.deviceId);
console.log(\[ga]Audio is being output on ${audio.sinkId}\[ga]);
.EE
.SH SEE ALSO
.IP \[bu] 2
Audio Output Devices API
.IP \[bu] 2
\f[CR]MediaDevices.selectAudioOutput()\f[R]
.IP \[bu] 2
\f[CR]HTMLMediaElement.sinkId\f[R]
