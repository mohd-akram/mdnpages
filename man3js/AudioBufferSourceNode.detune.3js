.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "AudioBufferSourceNode.detune" "JS" "July 26, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
AudioBufferSourceNode.detune \- AudioBufferSourceNode: detune property
.SH SYNOPSIS
The \f[B]\f[CB]detune\f[B]\f[R] property of the
\f[CR]AudioBufferSourceNode\f[R] interface is a k\-rate
\f[CR]AudioParam\f[R] representing detuning of oscillation in \c
.UR https://en.wikipedia.org/wiki/Cent_%28music%29
cents
.UE \c
\&.
.PP
For example, values of +100 and \-100 detune the source up or down by
one semitone, while +1200 and \-1200 detune it up or down by one octave.
.SH VALUE
A k\-rate \f[CR]AudioParam\f[R] whose value indicates the detuning of
oscillation in \c
.UR https://en.wikipedia.org/wiki/Cent_%28music%29
cents
.UE \c
\&.
.RS
.PP
\f[B]Note:\f[R] Though the \f[CR]AudioParam\f[R] returned is read\-only,
the value it represents is not.
.RE
.SH EXAMPLES
.IP
.EX
\f[B]const\f[R] audioCtx = \f[B]new\f[R] AudioContext();

\f[B]const\f[R] channelCount = 2;
\f[B]const\f[R] frameCount = audioCtx.sampleRate * 2.0; \f[I]// 2 seconds\f[R]

\f[B]const\f[R] myArrayBuffer = audioCtx.createBuffer(
  channelCount,
  frameCount,
  audioCtx.sampleRate,
);

\f[B]for\f[R] (\f[B]let\f[R] channel = 0; channel < channelCount; channel++) {
  \f[B]const\f[R] nowBuffering = myArrayBuffer.getChannelData(channel);
  \f[B]for\f[R] (\f[B]let\f[R] i = 0; i < frameCount; i++) {
    nowBuffering[i] = Math.random() * 2 \- 1;
  }
}

\f[B]const\f[R] source = audioCtx.createBufferSource();
source.buffer = myArrayBuffer;
source.connect(audioCtx.destination);
source.detune.value = 100; \f[I]// value in cents\f[R]
source.start();
.EE
.SH SEE ALSO
.IP \[bu] 2
Using the Web Audio API
.IP \[bu] 2
Web Audio API
