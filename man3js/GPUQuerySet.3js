.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "GPUQUERYSET" "3JS" "June 18, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
GPUQuerySet \- GPUQuerySet
.SH SYNOPSIS
\f[B]Secure context:\f[R] This feature is available only in secure
contexts (HTTPS).
.PP
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]GPUQuerySet\f[B]\f[R] interface of the WebGPU API is used
to record the results of queries on passes, such as occlusion or
timestamp queries.
.IP \(bu 2
Occlusion queries are available on render passes to query whether any
fragment samples pass all the per\-fragment tests for a set of drawing
commands (including scissor, sample mask, alpha to coverage, stencil,
and depth tests).
To run an occlusion query, an appropriate \f[CR]GPUQuerySet\f[R] must be
provided as the value of the \f[CR]occlusionQuerySet\f[R] descriptor
property when invoking \f[CR]GPUCommandEncoder.beginRenderPass()\f[R] to
run a render pass.
.IP \(bu 2
Timestamp queries allow applications to write timestamps to a
\f[CR]GPUQuerySet\f[R].
To run a timestamp query, appropriate \f[CR]GPUQuerySet\f[R]s must be
provided inside the value of the \f[CR]timestampWrites\f[R] descriptor
property when invoking \f[CR]GPUCommandEncoder.beginRenderPass()\f[R] to
run a render pass, or \f[CR]GPUCommandEncoder.beginComputePass()\f[R] to
run a compute pass.
.RS
.PP
\f[B]Note:\f[R] The \f[CR]timestamp\-query\f[R] feature needs to be
enabled to use timestamp queries.
.RE
.PP
A \f[CR]GPUQuerySet\f[R] object instance is created using the
\f[CR]GPUDevice.createQuerySet()\f[R] method.
.SH INSTANCE PROPERTIES
.TP
\f[B]count\f[R] \f[I](read\-only)\f[R]
A number specifying the number of queries managed by the
\f[CR]GPUQuerySet\f[R].
.TP
\f[B]label\f[R]
A string providing a label that can be used to identify the object, for
example in \f[CR]GPUError\f[R] messages or console warnings.
.TP
\f[B]type\f[R] \f[I](read\-only)\f[R]
An enumerated value specifying the type of queries managed by the
\f[CR]GPUQuerySet\f[R].
.SH INSTANCE METHODS
.TP
\f[B]destroy()\f[R]
Destroys the \f[CR]GPUQuerySet\f[R].
.SH EXAMPLES
The following snippet creates a \f[CR]GPUQuerySet\f[R] that holds 32
occlusion query results, and then returns the \f[CR]type\f[R] and
\f[CR]count\f[R]:
.IP
.EX
\f[B]const\f[R] querySet = device.createQuerySet({
  type: \(dqocclusion\(dq,
  count: 32,
});

console.log(querySet.count); \f[I]// 32\f[R]
console.log(querySet.type); \f[I]// \(dqocclusion\(dq\f[R]
.EE
.SH SEE ALSO
.IP \(bu 2
The WebGPU API
