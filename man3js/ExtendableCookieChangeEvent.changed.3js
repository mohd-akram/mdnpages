.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "ExtendableCookieChangeEvent.changed" "JS" "June 7, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
ExtendableCookieChangeEvent.changed \- ExtendableCookieChangeEvent:
changed property
.SH SYNOPSIS
\f[B]Secure context:\f[R] This feature is available only in secure
contexts (HTTPS).
.PP
\f[B]Note:\f[R] This feature is only available in Service Workers.
.PP
The \f[B]\f[CB]changed\f[B]\f[R] read\-only property of the
\f[CR]ExtendableCookieChangeEvent\f[R] interface returns any cookies
that have been changed by the given
\f[CR]ExtendableCookieChangeEvent\f[R] instance.
.SH VALUE
An array of objects containing the changed cookie(s).
Each object contains the following properties:
.TP
\f[B]name\f[R]
A string containing the name of the cookie.
.TP
\f[B]value\f[R]
A string containing the value of the cookie.
.TP
\f[B]domain\f[R]
A string containing the domain of the cookie.
.TP
\f[B]path\f[R]
A string containing the path of the cookie.
.TP
\f[B]expires\f[R]
A timestamp, given as Unix time in milliseconds, containing the
expiration date of the cookie.
.TP
\f[B]secure\f[R]
A \f[CR]boolean\f[R] indicating whether the cookie is used only in a
secure context (HTTPS rather than HTTP).
.TP
\f[B]sameSite\f[R]
One of the following \f[CR]SameSite\f[R] values:
.RS
.TP
\f[B]\[dq]strict\[dq]\f[R]
Cookies will only be sent in a first\-party context and not be sent with
requests initiated by third party websites.
.TP
\f[B]\[dq]lax\[dq]\f[R]
Cookies are not sent on normal cross\-site subrequests (for example to
load images or frames into a third party site), but are sent when a user
is navigating within the origin site (i.e.\ when following a link).
.TP
\f[B]\[dq]none\[dq]\f[R]
Cookies will be sent in all contexts.
.RE
.TP
\f[B]partitioned\f[R]
A boolean indicating whether the cookie is a partitioned cookie
(\f[CR]true\f[R]) or not (\f[CR]false\f[R]).
See Cookies Having Independent Partitioned State (CHIPS) for more
information.
.SH EXAMPLES
In this example when the cookie is set, the event listener logs the
\f[CR]changed\f[R] property to the console.
The first item in that array contains an object representing the cookie
that has just been set.
.IP
.EX
self.addEventListener(\[dq]cookiechange\[dq], (event) \f[B]=>\f[R] {
  console.log(event.changed[0]);
});

\f[B]const\f[R] one_day = 24 * 60 * 60 * 1000;
cookieStore.set({
  name: \[dq]cookie1\[dq],
  value: \[dq]cookie1\-value\[dq],
  expires: Date.now() + one_day,
  domain: \[dq]example.com\[dq],
});
.EE
