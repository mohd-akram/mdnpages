.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "Math.exp" "JS" "February 11, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Math.exp \- Math.exp()
.SH SYNOPSIS
The \f[B]\f[CB]Math.exp()\f[B]\f[R] static method returns e raised to
the power of a number.
That is
.PP
\ 𝙼𝚊𝚝𝚑.𝚎𝚡𝚙(𝚡)=ex = \[ha]x 
.IP
.EX
console.log(Math.exp(0));
\f[I]// Expected output: 1\f[R]

console.log(Math.exp(1));
\f[I]// Expected output: 2.718281828459 (approximately)\f[R]

console.log(Math.exp(\-1));
\f[I]// Expected output: 0.36787944117144233\f[R]

console.log(Math.exp(2));
\f[I]// Expected output: 7.38905609893065\f[R]
.EE
.SH SYNTAX
.IP
.EX
Math.exp(x)
.EE
.SS Parameters
.TP
\f[B]x\f[R]
A number.
.SS Return value
A nonnegative number representing e\[ha]x, where e is the base of the
natural logarithm.
.SH DESCRIPTION
Because \f[CR]exp()\f[R] is a static method of \f[CR]Math\f[R], you
always use it as \f[CR]Math.exp()\f[R], rather than as a method of a
\f[CR]Math\f[R] object you created (\f[CR]Math\f[R] is not a
constructor).
.PP
Beware that \f[CR]e\f[R] to the power of a number very close to 0 will
be very close to 1 and suffer from loss of precision.
In this case, you may want to use \f[CR]Math.expm1\f[R] instead, and
obtain a much higher\-precision fractional part of the answer.
.SH EXAMPLES
.SS Using Math.exp()
.IP
.EX
Math.exp(\-\f[B]Infinity\f[R]); \f[I]// 0\f[R]
Math.exp(\-1); \f[I]// 0.36787944117144233\f[R]
Math.exp(0); \f[I]// 1\f[R]
Math.exp(1); \f[I]// 2.718281828459045\f[R]
Math.exp(\f[B]Infinity\f[R]); \f[I]// Infinity\f[R]
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]Math.E\f[R]
.IP \[bu] 2
\f[CR]Math.expm1()\f[R]
.IP \[bu] 2
\f[CR]Math.log()\f[R]
.IP \[bu] 2
\f[CR]Math.log10()\f[R]
.IP \[bu] 2
\f[CR]Math.log1p()\f[R]
.IP \[bu] 2
\f[CR]Math.log2()\f[R]
.IP \[bu] 2
\f[CR]Math.pow()\f[R]
