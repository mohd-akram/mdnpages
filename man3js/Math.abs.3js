.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "Math.abs" "JS" "February 11, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Math.abs \- Math.abs()
.SH SYNOPSIS
The \f[B]\f[CB]Math.abs()\f[B]\f[R] static method returns the absolute
value of a number.
.IP
.EX
\f[B]function\f[R] difference(a, b) {
  \f[B]return\f[R] Math.abs(a \- b);
}

console.log(difference(3, 5));
\f[I]// Expected output: 2\f[R]

console.log(difference(5, 3));
\f[I]// Expected output: 2\f[R]

console.log(difference(1.23456, 7.89012));
\f[I]// Expected output: 6.6555599999999995\f[R]
.EE
.SH SYNTAX
.IP
.EX
Math.abs(x)
.EE
.SS Parameters
.TP
\f[B]x\f[R]
A number.
.SS Return value
The absolute value of \f[CR]x\f[R].
If \f[CR]x\f[R] is negative or \f[CR]\-0\f[R], returns its opposite
number \f[CR]\-x\f[R] (which is non\-negative).
Otherwise, returns \f[CR]x\f[R] itself.
The result is therefore always a positive number or \f[CR]0\f[R].
.SH DESCRIPTION
Because \f[CR]abs()\f[R] is a static method of \f[CR]Math\f[R], you
always use it as \f[CR]Math.abs()\f[R], rather than as a method of a
\f[CR]Math\f[R] object you created (\f[CR]Math\f[R] is not a
constructor).
.SH EXAMPLES
.SS Using Math.abs()
.IP
.EX
Math.abs(\-\f[B]Infinity\f[R]); \f[I]// Infinity\f[R]
Math.abs(\-1); \f[I]// 1\f[R]
Math.abs(\-0); \f[I]// 0\f[R]
Math.abs(0); \f[I]// 0\f[R]
Math.abs(1); \f[I]// 1\f[R]
Math.abs(\f[B]Infinity\f[R]); \f[I]// Infinity\f[R]
.EE
.SS Coercion of parameter
\f[CR]Math.abs()\f[R] coerces its parameter to a number.
Non\-coercible values will become \f[CR]NaN\f[R], making
\f[CR]Math.abs()\f[R] also return \f[CR]NaN\f[R].
.IP
.EX
Math.abs(\[dq]\-1\[dq]); \f[I]// 1\f[R]
Math.abs(\-2); \f[I]// 2\f[R]
Math.abs(\f[B]null\f[R]); \f[I]// 0\f[R]
Math.abs(\[dq]\[dq]); \f[I]// 0\f[R]
Math.abs([]); \f[I]// 0\f[R]
Math.abs([2]); \f[I]// 2\f[R]
Math.abs([1, 2]); \f[I]// NaN\f[R]
Math.abs({}); \f[I]// NaN\f[R]
Math.abs(\[dq]string\[dq]); \f[I]// NaN\f[R]
Math.abs(); \f[I]// NaN\f[R]
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]Math.ceil()\f[R]
.IP \[bu] 2
\f[CR]Math.floor()\f[R]
.IP \[bu] 2
\f[CR]Math.round()\f[R]
.IP \[bu] 2
\f[CR]Math.sign()\f[R]
.IP \[bu] 2
\f[CR]Math.trunc()\f[R]
