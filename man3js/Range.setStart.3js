.\" Automatically generated by Pandoc 3.4
.\"
.TH "Range.setStart" "JS" "April 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Range.setStart \- Range: setStart() method
.SH SYNOPSIS
The \f[B]\f[CB]Range.setStart()\f[B]\f[R] method sets the start position
of a \f[CR]Range\f[R].
.PP
If the \f[CR]startNode\f[R] is a \f[CR]Node\f[R] of type
\f[CR]Text\f[R], \f[CR]Comment\f[R], or \f[CR]CDataSection\f[R], then
\f[CR]startOffset\f[R] is the number of characters from the start of
\f[CR]startNode\f[R].
For other \f[CR]Node\f[R] types, \f[CR]startOffset\f[R] is the number of
child nodes between the start of the \f[CR]startNode\f[R].
.PP
Setting the start point below (lower in the document) the end point will
result in a collapsed range with the start and end points both set to
the specified start position.
.SH SYNTAX
.IP
.EX
setStart(startNode, startOffset)
.EE
.SS Parameters
.TP
\f[B]startNode\f[R]
The \f[CR]Node\f[R] where the \f[CR]Range\f[R] should start.
.TP
\f[B]startOffset\f[R]
An integer greater than or equal to zero representing the offset for the
start of the \f[CR]Range\f[R] from the start of \f[CR]startNode\f[R].
.SS Return value
None (\f[CR]undefined\f[R]).
.SH EXAMPLES
.SS Highlight part of an element
This example uses the \f[CR]Range.setStart()\f[R] and
\f[CR]Range.setEnd()\f[R] methods to add part of an address to a range.
The selected range is then highlighted using
\f[CR]Range.surroundContents()\f[R].
.PP
The address contains nine nodes: five text nodes, and four
\f[CR]<br>\f[R] elements.
.SS HTML
.IP
.EX
<\f[B]p\f[R] id=\[dq]address\[dq]>
  Wyatt Earp<\f[B]br\f[R] />
  101 E. Main St.<\f[B]br\f[R] />
  Dodge City, KS<\f[B]br\f[R] />
  67801<\f[B]br\f[R] />
  USA
</\f[B]p\f[R]>

<\f[B]hr\f[R] />
<\f[B]p\f[R]>Nodes in the original address:</\f[B]p\f[R]>
<\f[B]ol\f[R] id=\[dq]log\[dq]></\f[B]ol\f[R]>
.EE
.SS JavaScript
.IP
.EX
\f[B]const\f[R] address = document.getElementById(\[dq]address\[dq]);
\f[B]const\f[R] log = document.getElementById(\[dq]log\[dq]);

\f[I]// Log info\f[R]
address.childNodes.forEach((node) \f[B]=>\f[R] {
  \f[B]const\f[R] li = document.createElement(\[dq]li\[dq]);
  li.textContent = \[ga]${node.nodeName}, ${node.nodeValue}\[ga];
  log.appendChild(li);
});

\f[I]// Highlight the street and city\f[R]
\f[B]const\f[R] startOffset = 2; \f[I]// Start at third node: 101 E. Main St.\f[R]
\f[B]const\f[R] endOffset = 5; \f[I]// End at fifth node: Dodge City, KS\f[R]
\f[B]const\f[R] range = document.createRange();
range.setStart(address, startOffset);
range.setEnd(address, endOffset);

\f[B]const\f[R] mark = document.createElement(\[dq]mark\[dq]);
range.surroundContents(mark);
.EE
.SS Result
.SS Get characters from a text node
This example uses the \f[CR]Range.setStart()\f[R] and
\f[CR]Range.setEnd()\f[R] methods to define the contents of a range.
The resulting range contains the first through fifth characters within a
text node.
.SS HTML
.IP
.EX
<\f[B]p\f[R] id=\[dq]content\[dq]>0123456789</\f[B]p\f[R]>
<\f[B]p\f[R] id=\[dq]log\[dq]></\f[B]p\f[R]>
.EE
.SS JavaScript
.IP
.EX
\f[B]const\f[R] element = document.getElementById(\[dq]content\[dq]);
\f[B]const\f[R] textNode = element.childNodes[0];
\f[B]const\f[R] range = document.createRange();
range.setStart(textNode, 0); \f[I]// Start at first character\f[R]
range.setEnd(textNode, 5); \f[I]// End at fifth character\f[R]
document.getElementById(\[dq]log\[dq]).textContent = range;
.EE
.SS Result
.SH SEE ALSO
.IP \[bu] 2
The DOM interfaces index
