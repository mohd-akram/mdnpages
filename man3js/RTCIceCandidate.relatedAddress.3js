.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "RTCIceCandidate.relatedAddress" "JS" "April 26, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
RTCIceCandidate.relatedAddress \- RTCIceCandidate: relatedAddress
property
.SH SYNOPSIS
The \f[B]\f[CB]RTCIceCandidate\f[B]\f[R] interface\[cq]s read\-only
\f[B]\f[CB]relatedAddress\f[B]\f[R] property is a string indicating the
\f[B]related address\f[R] of a relay or reflexive candidate.
.PP
If the candidate is a host candidate (that is, its \f[CR]address\f[R] is
in fact the real IP address of the remote peer),
\f[CR]relatedAddress\f[R] is \f[CR]null\f[R].
.PP
The \f[CR]relatedAddress\f[R] field\[cq]s value is set from the
\f[CR]candidateInfo\f[R] options object passed to the
\f[CR]RTCIceCandidate()\f[R] constructor.
You can\[cq]t specify the value of \f[CR]relatedAddress\f[R] directly in
the options object, but its value is automatically extracted from the
object\[cq]s \f[CR]candidate\f[R] a\-line if it\[cq]s formatted
properly(the \f[CR]rel\-address\f[R] field).
.PP
The related address and port (\f[CR]relatedPort\f[R]) are not used at
all by ICE itself; they are provided for analysis and diagnostic
purposes only, and their inclusion may be blocked by security systems,
so do not rely on them having non\-\f[CR]null\f[R] values.
.SH VALUE
A string which contains the candidate\[cq]s related address.
For both peer and server reflexive candidates, the related address (and
related port) are the base for that server or peer reflexive candidate.
For relay candidates, the related address and port are set to the mapped
address selected by the TURN server.
.PP
For host candidates, \f[CR]relatedAddress\f[R] is \f[CR]null\f[R],
meaning the field is not included in the candidate\[cq]s a\-line.
.SH USAGE NOTES
The related address is included in ICE candidates despite not being used
by ICE itself.
\f[CR]relatedAddress\f[R] can be used for diagnostic purposes; by
observing the relationships between the various types of candidates and
their addresses and related addresses.
\f[CR]relatedAddress\f[R] can also be used by Quality\-of\-Service (QoS)
mechanisms.
.PP
Here\[cq]s an SDP attribute line (a\-line) describing an ICE candidate
discovered by the STUN server:
.IP
.EX
a=candidate:4234997325 1 udp 2043278322 192.0.2.172 6502 typ srflx raddr 198.51.100.45 rport 32768 generation 0
.EE
.PP
The remote address, \f[CR]relatedAddress\f[R], is the dotted quad (for
IPv4) or colon\-delineated 64\-bit address (for IPv6) immediately
following the text \f[CR]\[dq]raddr\[dq]\f[R], or
\f[CR]\[dq]198.51.100.45\[dq]\f[R].
.SH EXAMPLES
In this example, the candidate\[cq]s \f[CR]type\f[R] is checked, and
then debugging output is presented, based on the candidate type,
including the candidate\[cq]s \f[CR]ip\f[R] and
\f[CR]relatedAddress\f[R].
.IP
.EX
\f[B]switch\f[R] (candidate.type) {
  \f[B]case\f[R] \[dq]host\[dq]:
    console.log(\[ga]Host candidate\[aq]s IP address is ${candidate.address}\[ga]);
    \f[B]break\f[R];
  \f[B]case\f[R] \[dq]srflx\[dq]:
    console.log(
      \[ga]Server reflexive candidate\[aq]s base address is ${candidate.relatedAddress}; reachable at ${candidate.address}\[ga],
    );
    \f[B]break\f[R];
  \f[B]case\f[R] \[dq]prflx\[dq]:
    console.log(
      \[ga]Peer reflexive candidate\[aq]s base address is ${candidate.relatedAddress}; reachable at ${candidate.address}\[ga],
    );
    \f[B]break\f[R];
  \f[B]case\f[R] \[dq]relay\[dq]:
    console.log(
      \[ga]Relay candidate\[aq]s address assigned by the TURN server is ${candidate.relatedAddress}; reachable at ${candidate.address}\[ga],
    );
    \f[B]break\f[R];
}
.EE
.SH SEE ALSO
.IP \[bu] 2
WebRTC API
.IP \[bu] 2
Introduction to WebRTC protocols
.IP \[bu] 2
WebRTC connectivity
.IP \[bu] 2
Lifetime of a WebRTC session
.IP \[bu] 2
\f[CR]RTCIceCandidate.relatedPort\f[R]
.IP \[bu] 2
\f[CR]RTCIceCandidate.address\f[R] and \f[CR]RTCIceCandidate.port\f[R]
