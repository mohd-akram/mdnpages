.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "AbortSignal.abort_event" "JS" "May 7, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
AbortSignal.abort_event \- AbortSignal: abort event
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]abort\f[B]\f[R] event of the \f[CR]AbortSignal\f[R] is
fired when the associated request is aborted, i.e.\ using
\f[CR]AbortController.abort()\f[R].
.SH SYNTAX
Use the event name in methods like \f[CR]addEventListener()\f[R], or set
an event handler property.
.IP
.EX
addEventListener(\[aq]abort\[aq], (event) => { })

onabort = (event) => { }
.EE
.SH EVENT TYPE
A generic \f[CR]Event\f[R] with no added properties.
.SH EXAMPLES
In the following snippets, we create a new \f[CR]AbortController\f[R]
object, and get its \f[CR]AbortSignal\f[R] (available using the
\f[CR]signal\f[R] property).
Later on we check whether or not the signal has been aborted using an
event handler property,
.PP
You can detect the \f[CR]abort\f[R] event using an
\f[CR]addEventListener\f[R] method:
.IP
.EX
\f[B]const\f[R] controller = \f[B]new\f[R] AbortController();
\f[B]const\f[R] signal = controller.signal;

signal.addEventListener(\[dq]abort\[dq], () \f[B]=>\f[R] {
  console.log(\[dq]Request aborted\[dq]);
});
.EE
.PP
Or use the \f[CR]onabort\f[R] event handler property:
.IP
.EX
\f[B]const\f[R] controller = \f[B]new\f[R] AbortController();
\f[B]const\f[R] signal = controller.signal;

signal.onabort = () \f[B]=>\f[R] {
  console.log(\[dq]Request aborted\[dq]);
};
.EE
