.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "REFERENCEERROR" "3JS" "September 27, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
ReferenceError \- ReferenceError
.SH SYNOPSIS
The \f[B]\f[CB]ReferenceError\f[B]\f[R] object represents an error when
a variable that doesn\(cqt exist (or hasn\(cqt yet been initialized) in
the current scope is referenced.
.PP
\f[CR]ReferenceError\f[R] is a serializable object, so it can be cloned
with \f[CR]structuredClone()\f[R] or copied between Workers using
\f[CR]postMessage()\f[R].
.PP
\f[CR]ReferenceError\f[R] is a subclass of \f[CR]Error\f[R].
.SH CONSTRUCTOR
.TP
\f[B]ReferenceError()\f[R]
Creates a new \f[CR]ReferenceError\f[R] object.
.SH INSTANCE PROPERTIES
\f[I]Also inherits instance properties from its parent
\f[CI]Error\f[I]\f[R].
.PP
These properties are defined on \f[CR]ReferenceError.prototype\f[R] and
shared by all \f[CR]ReferenceError\f[R] instances.
.TP
\f[B]ReferenceError.prototype.constructor\f[R]
The constructor function that created the instance object.
For \f[CR]ReferenceError\f[R] instances, the initial value is the
\f[CR]ReferenceError\f[R] constructor.
.TP
\f[B]ReferenceError.prototype.name\f[R]
Represents the name for the type of error.
For \f[CR]ReferenceError.prototype.name\f[R], the initial value is
\f[CR]\(dqReferenceError\(dq\f[R].
.SH INSTANCE METHODS
\f[I]Inherits instance methods from its parent \f[CI]Error\f[I]\f[R].
.SH EXAMPLES
.SS Catching a ReferenceError
.IP
.EX
\f[B]try\f[R] {
  \f[B]let\f[R] a = undefinedVariable;
} \f[B]catch\f[R] (e) {
  console.log(e \f[B]instanceof\f[R] ReferenceError); \f[I]// true\f[R]
  console.log(e.message); \f[I]// \(dqundefinedVariable is not defined\(dq\f[R]
  console.log(e.name); \f[I]// \(dqReferenceError\(dq\f[R]
  console.log(e.stack); \f[I]// Stack of the error\f[R]
}
.EE
.SS Creating a ReferenceError
.IP
.EX
\f[B]try\f[R] {
  \f[B]throw\f[R] \f[B]new\f[R] ReferenceError(\(dqHello\(dq);
} \f[B]catch\f[R] (e) {
  console.log(e \f[B]instanceof\f[R] ReferenceError); \f[I]// true\f[R]
  console.log(e.message); \f[I]// \(dqHello\(dq\f[R]
  console.log(e.name); \f[I]// \(dqReferenceError\(dq\f[R]
  console.log(e.stack); \f[I]// Stack of the error\f[R]
}
.EE
.SH SEE ALSO
.IP \(bu 2
\f[CR]Error\f[R]
