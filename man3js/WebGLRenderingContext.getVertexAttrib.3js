.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "WebGLRenderingContext.getVertexAttrib" "JS" "September 28, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
WebGLRenderingContext.getVertexAttrib \- WebGLRenderingContext:
getVertexAttrib() method
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]WebGLRenderingContext.getVertexAttrib()\f[B]\f[R] method
of the WebGL API returns information about a vertex attribute at a given
position.
.SH SYNTAX
.IP
.EX
getVertexAttrib(index, pname)
.EE
.SS Parameters
.TP
\f[B]index\f[R]
A \f[CR]GLuint\f[R] specifying the index of the vertex attribute.
.TP
\f[B]pname\f[R]
A \f[CR]GLenum\f[R] specifying the information to query.
Possible values:
.RS
.TP
\f[B]gl.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING\f[R]
Returns the currently bound \f[CR]WebGLBuffer\f[R].
.TP
\f[B]gl.VERTEX_ATTRIB_ARRAY_ENABLED\f[R]
Returns a \f[CR]GLboolean\f[R] that is \f[CR]true\f[R] if the vertex
attribute is enabled at this \f[CR]index\f[R].
Otherwise \f[CR]false\f[R].
.TP
\f[B]gl.VERTEX_ATTRIB_ARRAY_SIZE\f[R]
Returns a \f[CR]GLint\f[R] indicating the size of an element of the
vertex array.
.TP
\f[B]gl.VERTEX_ATTRIB_ARRAY_STRIDE\f[R]
Returns a \f[CR]GLint\f[R] indicating the number of bytes between
successive elements in the array.
0 means that the elements are sequential.
.TP
\f[B]gl.VERTEX_ATTRIB_ARRAY_TYPE\f[R]
Returns a \f[CR]GLenum\f[R] representing the array type.
One of
.RS
.IP \[bu] 2
\f[CR]gl.BYTE\f[R]
.IP \[bu] 2
\f[CR]gl.UNSIGNED_BYTE\f[R]
.IP \[bu] 2
\f[CR]gl.SHORT\f[R],
.IP \[bu] 2
\f[CR]gl.UNSIGNED_SHORT\f[R]
.IP \[bu] 2
\f[CR]gl.FLOAT\f[R]
.RE
.TP
\f[B]gl.VERTEX_ATTRIB_ARRAY_NORMALIZED\f[R]
Returns a \f[CR]GLboolean\f[R] that is true if fixed\-point data types
are normalized for the vertex attribute array at the given
\f[CR]index\f[R].
.TP
\f[B]gl.CURRENT_VERTEX_ATTRIB\f[R]
Returns a \f[CR]Float32Array\f[R] (with 4 elements) representing the
current value of the vertex attribute at the given \f[CR]index\f[R].
.PP
When using a WebGL 2 context, the following values are available
additionally:
.TP
\f[B]gl.VERTEX_ATTRIB_ARRAY_INTEGER\f[R]
Returns a \f[CR]GLboolean\f[R] indicating whether an integer data type
is in the vertex attribute array at the given \f[CR]index\f[R].
.TP
\f[B]gl.VERTEX_ATTRIB_ARRAY_DIVISOR\f[R]
Returns a \f[CR]GLint\f[R] describing the frequency divisor used for
instanced rendering.
.PP
When using the \f[CR]ANGLE_instanced_arrays\f[R] extension:
.TP
\f[B]ext.VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE\f[R]
Returns a \f[CR]GLint\f[R] describing the frequency divisor used for
instanced rendering.
.RE
.SS Return value
Returns the requested vertex attribute information (as specified with
\f[CR]pname\f[R]).
.SH EXAMPLES
.IP
.EX
gl.getVertexAttrib(0, gl.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING);
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]WebGLRenderingContext.getVertexAttribOffset()\f[R]
.IP \[bu] 2
\f[CR]ANGLE_instanced_arrays\f[R]
