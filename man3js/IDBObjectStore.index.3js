.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "IDBObjectStore.index" "JS" "March 6, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
IDBObjectStore.index \- IDBObjectStore: index() method
.SH SYNOPSIS
This feature is available in Web Workers.
.PP
The \f[B]\f[CB]index()\f[B]\f[R] method of the \f[CR]IDBObjectStore\f[R]
interface opens a named index in the current object store, after which
it can be used to, for example, return a series of records sorted by
that index using a cursor.
.SH SYNTAX
.IP
.EX
index(name)
.EE
.SS Parameters
.TP
\f[B]name\f[R]
The name of the index to open.
.SS Return value
An \f[CR]IDBIndex\f[R] object for accessing the index.
.SS Exceptions
.TP
\f[B]InvalidStateError\f[R] \f[B]DOMException\f[R]
Thrown if the source object store has been deleted, or the transaction
for the object store has finished.
.TP
\f[B]NotFoundError\f[R] \f[B]DOMException\f[R]
Thrown if there is no index with the given name (case\-sensitive) in the
database.
.SH EXAMPLES
In the following example we open a transaction and an object store, then
get the index \f[CR]lName\f[R] from a simple contacts database.
We then open a basic cursor on the index using
\f[CR]IDBIndex.openCursor\f[R] \[em] this works the same as opening a
cursor directly on an \f[CR]ObjectStore\f[R] using
\f[CR]IDBObjectStore.openCursor\f[R] except that the returned records
are sorted based on the index, not the primary key.
.PP
Finally, we iterate through each record, and insert the data into an
HTML table.
For a complete working example, see our \c
.UR https://github.com/mdn/dom-examples/tree/main/indexeddb-examples/idbindex
IDBIndex example in IndexedDB\-examples demo repo
.UE \c
\ (\c
.UR https://mdn.github.io/dom-examples/indexeddb-examples/idbindex/
View the example live
.UE \c
\&.)
.IP
.EX
\f[B]function\f[R] displayDataByIndex() {
  tableEntry.innerHTML = \[dq]\[dq];
  \f[B]const\f[R] transaction = db.transaction([\[dq]contactsList\[dq]], \[dq]readonly\[dq]);
  \f[B]const\f[R] objectStore = transaction.objectStore(\[dq]contactsList\[dq]);

  \f[B]const\f[R] myIndex = objectStore.index(\[dq]lName\[dq]);
  myIndex.openCursor().onsuccess = (event) \f[B]=>\f[R] {
    \f[B]const\f[R] cursor = event.target.result;
    \f[B]if\f[R] (cursor) {
      \f[B]const\f[R] tableRow = document.createElement(\[dq]tr\[dq]);
      tableRow.innerHTML =
        \[ga]<td>${cursor.value.id}</td>\[ga] +
        \[ga]<td>${cursor.value.lName}</td>\[ga] +
        \[ga]<td>${cursor.value.fName}</td>\[ga] +
        \[ga]<td>${cursor.value.jTitle}</td>\[ga] +
        \[ga]<td>${cursor.value.company}</td>\[ga] +
        \[ga]<td>${cursor.value.eMail}</td>\[ga] +
        \[ga]<td>${cursor.value.phone}</td>\[ga] +
        \[ga]<td>${cursor.value.age}</td>\[ga];
      tableEntry.appendChild(tableRow);

      cursor.continue();
    } \f[B]else\f[R] {
      console.log(\[dq]Entries all displayed.\[dq]);
    }
  };
}
.EE
.SH SEE ALSO
.IP \[bu] 2
Using IndexedDB
.IP \[bu] 2
Starting transactions: \f[CR]IDBDatabase\f[R]
.IP \[bu] 2
Using transactions: \f[CR]IDBTransaction\f[R]
.IP \[bu] 2
Setting a range of keys: \f[CR]IDBKeyRange\f[R]
.IP \[bu] 2
Retrieving and making changes to your data: \f[CR]IDBObjectStore\f[R]
.IP \[bu] 2
Using cursors: \f[CR]IDBCursor\f[R]
.IP \[bu] 2
Reference example: \c
.UR https://github.com/mdn/dom-examples/tree/main/to-do-notifications
To\-do Notifications
.UE \c
\ (\c
.UR https://mdn.github.io/dom-examples/to-do-notifications/
View the example live
.UE \c
).
