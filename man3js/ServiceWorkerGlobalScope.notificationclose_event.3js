.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "ServiceWorkerGlobalScope.notificationclose_event" "JS" "April 12, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
ServiceWorkerGlobalScope.notificationclose_event \-
ServiceWorkerGlobalScope: notificationclose event
.SH SYNOPSIS
\f[B]Secure context:\f[R] This feature is available only in secure
contexts (HTTPS).
.PP
\f[B]Note:\f[R] This feature is only available in Service Workers.
.PP
The \f[B]\f[CB]notificationclose\f[B]\f[R] event of the
\f[CR]ServiceWorkerGlobalScope\f[R] interface fires when a user closes a
displayed notification spawned by
\f[CR]ServiceWorkerRegistration.showNotification()\f[R].
.PP
Notifications created on the main thread or in workers which aren\[cq]t
service workers using the \f[CR]Notification()\f[R] constructor will
instead receive a \f[CR]close\f[R] event on the \f[CR]Notification\f[R]
object itself.
.PP
This event is not cancelable and does not bubble.
.SH SYNTAX
Use the event name in methods like \f[CR]addEventListener()\f[R], or set
an event handler property.
.IP
.EX
addEventListener(\[dq]notificationclose\[dq], (event) \f[B]=>\f[R] {});

onnotificationclose = (event) \f[B]=>\f[R] {};
.EE
.SH EVENT TYPE
A \f[CR]NotificationEvent\f[R].
Inherits from \f[CR]ExtendableEvent\f[R] and \f[CR]Event\f[R].
.SH EVENT PROPERTIES
\f[I]Inherits properties from its ancestor, \f[CI]ExtendableEvent\f[I]
and \f[CI]Event\f[I]\f[R].
.TP
\f[B]NotificationEvent.notification\f[R] \f[I](read\-only)\f[R]
Returns a \f[CR]Notification\f[R] object representing the notification
that was clicked to fire the event.
.TP
\f[B]NotificationEvent.action\f[R] \f[I](read\-only)\f[R]
Returns the string ID of the notification button the user clicked.
This value returns an empty string if the user clicked the notification
somewhere other than an action button, or the notification does not have
a button.
.SH EXAMPLE
.IP
.EX
\f[I]// Inside a service worker.\f[R]
self.onnotificationclose = (event) \f[B]=>\f[R] {
  console.log(\[dq]On notification close: \[dq], event.notification.tag);
};
.EE
