'\" t
.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "TreeWalker.whatToShow" "JS" "July 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
TreeWalker.whatToShow \- TreeWalker: whatToShow property
.SH SYNOPSIS
The \f[B]\f[CB]TreeWalker.whatToShow\f[B]\f[R] read\-only property
returns a bitmask that indicates the types of nodes to show.
Non\-matching nodes are skipped, but their children may be included, if
relevant.
The possible values are:
.PP
.TS
tab(@);
l l l.
T{
Constant
T}@T{
Numerical value
T}@T{
Description
T}
_
T{
\f[CR]NodeFilter.SHOW_ALL\f[R]
T}@T{
\f[CR]4294967295\f[R] (that is the max value of
\f[CR]unsigned long\f[R])
T}@T{
Shows all nodes.
T}
T{
\f[CR]NodeFilter.SHOW_ATTRIBUTE\f[R] *(deprecated)*
T}@T{
\f[CR]2\f[R]
T}@T{
Shows attribute \[ga]Attr\[ga] nodes.
This is meaningful only when creating a \[ga]TreeWalker\[ga] with an
\[ga]Attr\[ga] node as its root; in this case, it means that the
attribute node will appear in the first position of the iteration or
traversal.
Since attributes are never children of other nodes, they do not appear
when traversing over the document tree.
T}
T{
\f[CR]NodeFilter.SHOW_CDATA_SECTION\f[R] *(deprecated)*
T}@T{
\f[CR]8\f[R]
T}@T{
Shows \[ga]CDATASection\[ga] nodes.
T}
T{
\f[CR]NodeFilter.SHOW_COMMENT\f[R]
T}@T{
\f[CR]128\f[R]
T}@T{
Shows \[ga]Comment\[ga] nodes.
T}
T{
\f[CR]NodeFilter.SHOW_DOCUMENT\f[R]
T}@T{
\f[CR]256\f[R]
T}@T{
Shows \[ga]Document\[ga] nodes.
T}
T{
\f[CR]NodeFilter.SHOW_DOCUMENT_FRAGMENT\f[R]
T}@T{
\f[CR]1024\f[R]
T}@T{
Shows \[ga]DocumentFragment\[ga] nodes.
T}
T{
\f[CR]NodeFilter.SHOW_DOCUMENT_TYPE\f[R]
T}@T{
\f[CR]512\f[R]
T}@T{
Shows \[ga]DocumentType\[ga] nodes.
T}
T{
\f[CR]NodeFilter.SHOW_ELEMENT\f[R]
T}@T{
\f[CR]1\f[R]
T}@T{
Shows \[ga]Element\[ga] nodes.
T}
T{
\f[CR]NodeFilter.SHOW_ENTITY\f[R] *(deprecated)*
T}@T{
\f[CR]32\f[R]
T}@T{
Legacy, no more used.
T}
T{
\f[CR]NodeFilter.SHOW_ENTITY_REFERENCE\f[R] *(deprecated)*
T}@T{
\f[CR]16\f[R]
T}@T{
Legacy, no more used.
T}
T{
\f[CR]NodeFilter.SHOW_NOTATION\f[R] *(deprecated)*
T}@T{
\f[CR]2048\f[R]
T}@T{
Legacy, no more used.
T}
T{
\f[CR]NodeFilter.SHOW_PROCESSING_INSTRUCTION\f[R]
T}@T{
\f[CR]64\f[R]
T}@T{
Shows \[ga]ProcessingInstruction\[ga] nodes.
T}
T{
\f[CR]NodeFilter.SHOW_TEXT\f[R]
T}@T{
\f[CR]4\f[R]
T}@T{
Shows \[ga]Text\[ga] nodes.
T}
.TE
.SH VALUE
A bitmask.
.SH EXAMPLES
.IP
.EX
\f[B]const\f[R] treeWalker = document.createTreeWalker(
  document.body,
  NodeFilter.SHOW_ELEMENT + NodeFilter.SHOW_COMMENT + NodeFilter.SHOW_TEXT,
  { acceptNode: (node) \f[B]=>\f[R] NodeFilter.FILTER_ACCEPT },
  \f[B]false\f[R],
);
\f[B]if\f[R] (
  treeWalker.whatToShow === NodeFilter.SHOW_ALL ||
  treeWalker.whatToShow % (NodeFilter.SHOW_COMMENT * 2) >=
    NodeFilter.SHOW_COMMENT
) {
  \f[I]// treeWalker will show comments\f[R]
}
.EE
.SH SEE ALSO
.IP \[bu] 2
The \f[CR]TreeWalker\f[R] interface.
