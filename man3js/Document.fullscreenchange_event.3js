.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "DOCUMENT.FULLSCREENCHANGE_EVENT" "3JS" "May 2, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Document.fullscreenchange_event \- Document: fullscreenchange event
.SH SYNOPSIS
The \f[B]\f[CB]fullscreenchange\f[B]\f[R] event is fired immediately
after the browser switches into or out of fullscreen mode.
.PP
The event is sent to the \f[CR]Element\f[R] that is transitioning into
or out of fullscreen mode, and this event then bubbles up to the
\f[CR]Document\f[R].
.PP
To find out whether the \f[CR]Element\f[R] is entering or exiting
fullscreen mode, check the value of
\f[CR]Document.fullscreenElement\f[R]: if this value is \f[CR]null\f[R]
then the element is exiting fullscreen mode, otherwise it is entering
fullscreen mode.
.PP
This event is not cancelable.
.SH SYNTAX
Use the event name in methods like \f[CR]addEventListener()\f[R], or set
an event handler property.
.IP
.EX
addEventListener(\(dqfullscreenchange\(dq, (event) => { })

onfullscreenchange = (event) => { }
.EE
.SH EVENT TYPE
A generic \f[CR]Event\f[R].
.SH EXAMPLES
.SS Logging \f[CR]fullscreenchange\f[R] events
In this example, a handler for the \f[CR]fullscreenchange\f[R] event is
added to the \f[CR]Document\f[R].
.PP
If the user clicks on the \(lqToggle Fullscreen Mode\(rq button, the
\f[CR]click\f[R] handler will toggle fullscreen mode for the
\f[CR]div\f[R].
If \f[CR]document.fullscreenElement\f[R] has a value it will exit
fullscreen mode.
If not, the div will be placed into fullscreen mode.
.PP
Remember that by the time the \f[CR]fullscreenchange\f[R] event is
handled, the status of the element has already changed.
So if the change is to fullscreen mode,
\f[CR]document.fullscreenElement\f[R] will point to the element that is
now in fullscreen mode.
On the other hand, if \f[CR]document.fullscreenElement\f[R] is
\f[CR]null\f[R], fullscreen mode has been canceled.
.PP
What that means to the example code is that, if an element is currently
in fullscreen mode, the \f[CR]fullscreenchange\f[R] handler logs the
\f[CR]id\f[R] of the fullscreen element to the console.
If \f[CR]document.fullscreenElement\f[R] is \f[CR]null\f[R], the code
logs a message that the change is to leave fullscreen mode.
.SS HTML
.IP
.EX
<\f[B]h1\f[R]>fullscreenchange event example</\f[B]h1\f[R]>
<\f[B]div\f[R] id=\(dqfullscreen\-div\(dq>
  <\f[B]button\f[R] id=\(dqtoggle\-fullscreen\(dq>Toggle Fullscreen Mode</\f[B]button\f[R]>
  <\f[B]pre\f[R] id=\(dqlogger\(dq></\f[B]pre\f[R]>
</\f[B]div\f[R]>
.EE
.SS CSS
.IP
.EX
* {
  \f[B]box\-sizing\f[R]: border\-box;
}

fullscreen\-div {
  \f[B]height\f[R]: 150px;
  \f[B]padding\f[R]: 1rem;
  \f[B]background\-color\f[R]: pink;
}

logger {
  \f[B]height\f[R]: 80px;
  \f[B]padding\f[R]: 0 0.5rem;
  \f[B]background\-color\f[R]: white;
  \f[B]overflow\f[R]: scroll;
}
.EE
.SS JavaScript
.IP
.EX
\f[B]const\f[R] logger = document.querySelector(\(dq#logger\(dq);
\f[B]const\f[R] fullScreenElement = document.querySelector(\(dq#fullscreen\-div\(dq);

\f[B]function\f[R] log(message) {
  logger.textContent = \(ga${logger.textContent}\(rsn${message}\(ga;
}

\f[B]function\f[R] fullscreenchangeHandler(event) {
  \f[I]// document.fullscreenElement will point to the element that\f[R]
  \f[I]// is in fullscreen mode if there is one. If there isn\(aqt one,\f[R]
  \f[I]// the value of the property is null.\f[R]
  \f[B]if\f[R] (document.fullscreenElement) {
    log(\(gaElement: ${document.fullscreenElement.id} entered fullscreen mode.\(ga);
  } \f[B]else\f[R] {
    log(\(dqLeaving fullscreen mode.\(dq);
  }
}

document.addEventListener(\(dqfullscreenchange\(dq, fullscreenchangeHandler);

\f[I]// When the toggle button is clicked, enter/exit fullscreen\f[R]
document.getElementById(\(dqtoggle\-fullscreen\(dq).addEventListener(\(dqclick\(dq, () \f[B]=>\f[R] {
  \f[B]if\f[R] (document.fullscreenElement) {
    \f[I]// exitFullscreen is only available on the Document object.\f[R]
    document.exitFullscreen();
  } \f[B]else\f[R] {
    fullScreenElement.requestFullscreen();
  }
});
.EE
.SH SEE ALSO
.IP \(bu 2
\f[CR]fullscreenerror\f[R]
.IP \(bu 2
\f[CR]Element\f[R]: \f[CR]fullscreenchange\f[R] event
.IP \(bu 2
Fullscreen API
.IP \(bu 2
Guide to the Fullscreen API
