.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "Clients.claim" "JS" "December 10, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Clients.claim \- Clients: claim() method
.SH SYNOPSIS
The \f[B]\f[CB]claim()\f[B]\f[R] method of the \f[CR]Clients\f[R]
interface allows an active service worker to set itself as the
\f[CR]controller\f[R] for all clients within its \f[CR]scope\f[R].
This triggers a \[lq]\f[CR]controllerchange\f[R]\[rq] event on
\f[CR]navigator.serviceWorker\f[R] in any clients that become controlled
by this service worker.
.PP
When a service worker is initially registered, pages won\[cq]t use it
until they next load.
The \f[CR]claim()\f[R] method causes those pages to be controlled
immediately.
Be aware that this results in your service worker controlling pages that
loaded regularly over the network, or possibly via a different service
worker.
.SH SYNTAX
.IP
.EX
claim()
.EE
.SS Parameters
None.
.SS Return value
A \f[CR]Promise\f[R] that resolves to \f[CR]undefined\f[R].
.SH EXAMPLES
The following example uses \f[CR]claim()\f[R] inside service
worker\[cq]s \[lq]\f[CR]activate\f[R]\[rq] event listener so that
clients loaded in the same scope do not need to be reloaded before their
fetches will go through this service worker.
.IP
.EX
self.addEventListener(\[dq]activate\[dq], (event) \f[B]=>\f[R] {
  event.waitUntil(clients.claim());
});
.EE
.SH SEE ALSO
.IP \[bu] 2
Using Service Workers
.IP \[bu] 2
\c
.UR https://web.dev/articles/service-worker-lifecycle
The service worker lifecycle
.UE \c
.IP \[bu] 2
\f[CR]self.skipWaiting()\f[R] \- skip the service worker\[cq]s waiting
phase
