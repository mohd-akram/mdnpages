.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "TextEncoder" "JS" "March 6, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
TextEncoder \- TextEncoder
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]TextEncoder\f[B]\f[R] interface takes a stream of code
points as input and emits a stream of UTF\-8 bytes.
.SH CONSTRUCTOR
.TP
\f[B]TextEncoder()\f[R]
Returns a newly constructed \f[CR]TextEncoder\f[R] that will generate a
byte stream with UTF\-8 encoding.
.SH INSTANCE PROPERTIES
\f[I]The \f[CI]TextEncoder\f[I] interface doesn\[cq]t inherit any
properties.\f[R]
.TP
\f[B]TextEncoder.encoding\f[R] \f[I](read\-only)\f[R]
Always returns \f[CR]utf\-8\f[R].
.SH INSTANCE METHODS
\f[I]The \f[CI]TextEncoder\f[I] interface doesn\[cq]t inherit any
methods\f[R].
.TP
\f[B]TextEncoder.encode()\f[R]
Takes a string as input, and returns a \f[CR]Uint8Array\f[R] containing
UTF\-8 encoded text.
.TP
\f[B]TextEncoder.encodeInto()\f[R]
Takes a string to encode and a destination \f[CR]Uint8Array\f[R] to put
resulting UTF\-8 encoded text into, and returns an object indicating the
progress of the encoding.
This is potentially more performant than the older \f[CR]encode()\f[R]
method.
.SH EXAMPLES
.IP
.EX
\f[B]const\f[R] encoder = \f[B]new\f[R] TextEncoder();
\f[B]const\f[R] view = encoder.encode(\[dq]â‚¬\[dq]);
console.log(view); \f[I]// Uint8Array(3) [226, 130, 172]\f[R]
.EE
.SH SEE ALSO
.IP \[bu] 2
The \f[CR]TextDecoder\f[R] interface describing the inverse operation.
.IP \[bu] 2
\c
.UR https://nodejs.org/api/util.html#util_class_util_textencoder
Node.js supports global export from v11.0.0
.UE \c
