.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "REFLECT.APPLY" "3JS" "June 20, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Reflect.apply \- Reflect.apply()
.SH SYNOPSIS
The \f[B]\f[CB]Reflect.apply()\f[B]\f[R] static method calls a target
function with arguments as specified.
.IP
.EX
console.log(Reflect.apply(Math.floor, \f[B]undefined\f[R], [1.75]));
\f[I]// Expected output: 1\f[R]

console.log(
  Reflect.apply(String.fromCharCode, \f[B]undefined\f[R], [104, 101, 108, 108, 111]),
);
\f[I]// Expected output: \(dqhello\(dq\f[R]

console.log(
  Reflect.apply(RegExp.prototype.exec, /ab/, [\(dqconfabulation\(dq]).index,
);
\f[I]// Expected output: 4\f[R]

console.log(Reflect.apply(\(dq\(dq.charAt, \(dqponies\(dq, [3]));
\f[I]// Expected output: \(dqi\(dq\f[R]
.EE
.SH SYNTAX
.IP
.EX
Reflect.apply(target, thisArgument, argumentsList)
.EE
.SS Parameters
.TP
\f[B]target\f[R]
The target function to call.
.TP
\f[B]thisArgument\f[R]
The value of \f[CR]this\f[R] provided for the call to \f[CR]target\f[R].
.TP
\f[B]argumentsList\f[R]
An array\-like object specifying the arguments with which
\f[CR]target\f[R] should be called.
.SS Return value
The result of calling the given \f[CR]target\f[R] function with the
specified \f[CR]this\f[R] value and arguments.
.SS Exceptions
.TP
\f[B]TypeError\f[R]
Thrown if \f[CR]target\f[R] is not a function or
\f[CR]argumentsList\f[R] is not an object.
.SH DESCRIPTION
\f[CR]Reflect.apply()\f[R] provides the reflective semantic of a
function call.
That is, \f[CR]Reflect.apply(target, thisArgument, argumentsList)\f[R]
is semantically equivalent to:
.IP
.EX
Math.floor.apply(\f[B]null\f[R], [1.75]);
Reflect.apply(Math.floor, \f[B]null\f[R], [1.75]);
.EE
.PP
The only differences are:
.IP \(bu 2
\f[CR]Reflect.apply()\f[R] takes the function to call as the
\f[CR]target\f[R] parameter instead of the \f[CR]this\f[R] context.
.IP \(bu 2
\f[CR]Reflect.apply()\f[R] throws if \f[CR]argumentsList\f[R] is omitted
instead of defaulting to calling with no parameters.
.PP
\f[CR]Reflect.apply()\f[R] invokes the \f[CR][[Call]]\f[R] object
internal method of \f[CR]target\f[R].
.SH EXAMPLES
.SS Using Reflect.apply()
.IP
.EX
Reflect.apply(Math.floor, \f[B]undefined\f[R], [1.75]);
\f[I]// 1;\f[R]

Reflect.apply(String.fromCharCode, \f[B]undefined\f[R], [104, 101, 108, 108, 111]);
\f[I]// \(dqhello\(dq\f[R]

Reflect.apply(RegExp.prototype.exec, /ab/, [\(dqconfabulation\(dq]).index;
\f[I]// 4\f[R]

Reflect.apply(\(dq\(dq.charAt, \(dqponies\(dq, [3]);
\f[I]// \(dqi\(dq\f[R]
.EE
.SH SEE ALSO
.IP \(bu 2
\c
.UR https://github.com/zloirock/core-js#ecmascript-reflect
Polyfill of \f[CR]Reflect.apply\f[R] in \f[CR]core\-js\f[R]
.UE \c
.IP \(bu 2
\c
.UR https://www.npmjs.com/package/reflect-apply
es\-shims polyfill of \f[CR]Reflect.apply\f[R]
.UE \c
.IP \(bu 2
\f[CR]Reflect\f[R]
.IP \(bu 2
\f[CR]Function.prototype.apply()\f[R]
.IP \(bu 2
\f[CR]handler.apply()\f[R]
