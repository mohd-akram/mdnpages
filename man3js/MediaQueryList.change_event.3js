.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "MediaQueryList.change_event" "JS" "July 5, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
MediaQueryList.change_event \- MediaQueryList: change event
.SH SYNOPSIS
The \f[B]\f[CB]change\f[B]\f[R] event of the \f[CR]MediaQueryList\f[R]
interface fires when the status of media query support changes.
.SH SYNTAX
Use the event name in methods like \f[CR]addEventListener()\f[R], or set
an event handler property.
.IP
.EX
addEventListener(\[dq]change\[dq], (event) \f[B]=>\f[R] {});

onchange = (event) \f[B]=>\f[R] {};
.EE
.SH EVENT TYPE
A \f[CR]MediaQueryListEvent\f[R].
Inherits from \f[CR]Event\f[R].
.SH EVENT PROPERTIES
\f[I]The \f[CI]MediaQueryListEvent\f[I] interface inherits properties
from its parent interface, \f[CI]Event\f[I].\f[R]
.TP
\f[B]MediaQueryListEvent.matches\f[R] \f[I](read\-only)\f[R]
A boolean value that is \f[CR]true\f[R] if the \f[CR]document\f[R]
currently matches the media query list, or \f[CR]false\f[R] if not.
.TP
\f[B]MediaQueryListEvent.media\f[R] \f[I](read\-only)\f[R]
A string representing a serialized media query.
.SH EXAMPLE
.IP
.EX
\f[B]const\f[R] mql = window.matchMedia(\[dq](max\-width: 600px)\[dq]);

mql.onchange = (e) \f[B]=>\f[R] {
  \f[B]if\f[R] (e.matches) {
    \f[I]/* the viewport is 600 pixels wide or less */\f[R]
    console.log(\[dq]This is a narrow screen \[em] less than 600px wide.\[dq]);
  } \f[B]else\f[R] {
    \f[I]/* the viewport is more than 600 pixels wide */\f[R]
    console.log(\[dq]This is a wide screen \[em] more than 600px wide.\[dq]);
  }
};
.EE
.SH SEE ALSO
.IP \[bu] 2
Media queries
.IP \[bu] 2
Using media queries from code
.IP \[bu] 2
\f[CR]window.matchMedia()\f[R]
.IP \[bu] 2
\f[CR]MediaQueryList\f[R]
.IP \[bu] 2
\f[CR]MediaQueryListEvent\f[R]
