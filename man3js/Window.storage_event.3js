.\" Automatically generated by Pandoc 3.4
.\"
.TH "Window.storage_event" "JS" "July 26, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Window.storage_event \- Window: storage event
.SH SYNOPSIS
The \f[B]\f[CB]storage\f[B]\f[R] event of the \f[CR]Window\f[R]
interface fires when a storage area (\f[CR]localStorage\f[R] or
\f[CR]sessionStorage\f[R]) has been modified in the context of another
document.
.PP
This event is not cancelable and does not bubble.
.RS
.PP
\f[B]Note:\f[R] This won\[cq]t work on the same browsing context that is
making the changes \[em] it is really a way for other browsing contexts
on the domain using the storage to sync any changes that are made.
Browsing contexts on other domains can\[cq]t access the same storage
objects.
.RE
.SH SYNTAX
Use the event name in methods like \f[CR]addEventListener()\f[R], or set
an event handler property.
.IP
.EX
addEventListener(\[dq]storage\[dq], (event) \f[B]=>\f[R] {});
onstorage = (event) \f[B]=>\f[R] {};
.EE
.SH EVENT TYPE
A \f[CR]StorageEvent\f[R].
Inherits from \f[CR]Event\f[R].
.SH EVENT PROPERTIES
.TP
\f[B]key\f[R] \f[I](read\-only)\f[R]
Returns a string with the key for the storage item that was changed.
The \f[CR]key\f[R] attribute is \f[CR]null\f[R] when the change is
caused by the storage \f[CR]clear()\f[R] method.
.TP
\f[B]newValue\f[R] \f[I](read\-only)\f[R]
Returns a string with the new value of the storage item that was
changed.
This value is \f[CR]null\f[R] when the change has been invoked by
storage \f[CR]clear()\f[R] method, or the storage item has been removed
from the storage.
.TP
\f[B]oldValue\f[R] \f[I](read\-only)\f[R]
Returns a string with the original value of the storage item that was
changed.
This value is \f[CR]null\f[R] when the storage item has been newly added
and therefore doesn\[cq]t have any previous value.
.TP
\f[B]storageArea\f[R] \f[I](read\-only)\f[R]
Returns a \f[CR]Storage\f[R] object that represents the storage object
that was affected.
.TP
\f[B]url\f[R] \f[I](read\-only)\f[R]
Returns string with the URL of the document whose storage changed.
.SH EVENT HANDLER ALIASES
In addition to the \f[CR]Window\f[R] interface, the event handler
property \f[CR]onstorage\f[R] is also available on the following
targets:
.IP \[bu] 2
\f[CR]HTMLBodyElement\f[R]
.IP \[bu] 2
\f[CR]HTMLFrameSetElement\f[R]
.IP \[bu] 2
\f[CR]SVGSVGElement\f[R]
.SH EXAMPLES
Log the \f[CR]sampleList\f[R] item to the console when the
\f[CR]storage\f[R] event fires:
.IP
.EX
window.addEventListener(\[dq]storage\[dq], () \f[B]=>\f[R] {
  \f[I]// When local storage changes, dump the list to\f[R]
  \f[I]// the console.\f[R]
  console.log(JSON.parse(window.localStorage.getItem(\[dq]sampleList\[dq])));
});
.EE
.PP
The same action can be achieved using the \f[CR]onstorage\f[R] event
handler property:
.IP
.EX
window.onstorage = () \f[B]=>\f[R] {
  \f[I]// When local storage changes, dump the list to\f[R]
  \f[I]// the console.\f[R]
  console.log(JSON.parse(window.localStorage.getItem(\[dq]sampleList\[dq])));
};
.EE
.SH SEE ALSO
.IP \[bu] 2
Web Storage API
.IP \[bu] 2
Using the Web Storage API
.IP \[bu] 2
Responding to storage changes with the StorageEvent
