.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "CanvasPattern.setTransform" "JS" "April 22, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
CanvasPattern.setTransform \- CanvasPattern: setTransform() method
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]CanvasPattern.setTransform()\f[B]\f[R] method uses a
\f[CR]DOMMatrix\f[R] object as the pattern\[cq]s transformation matrix
and invokes it on the pattern.
.SH SYNTAX
.IP
.EX
setTransform(matrix)
.EE
.SS Parameters
.TP
\f[B]matrix\f[R]
A \f[CR]DOMMatrix\f[R] to use as the pattern\[cq]s transformation
matrix.
.SS Return value
None (\f[CR]undefined\f[R]).
.SH EXAMPLES
.SS Using the \f[CR]setTransform\f[R] method
This is just a simple code snippet which uses the
\f[CR]setTransform\f[R] method to create a \f[CR]CanvasPattern\f[R] with
the specified pattern transformation from a \f[CR]DOMMatrix\f[R].
The pattern gets applied if you set it as the current
\f[CR]fillStyle\f[R] and gets drawn onto the canvas when using the
\f[CR]fillRect()\f[R] method, for example.
.SS HTML
.IP
.EX
<\f[B]canvas\f[R] id=\[dq]canvas\[dq]></\f[B]canvas\f[R]>
.EE
.SS JavaScript
.IP
.EX
\f[B]const\f[R] canvas = document.getElementById(\[dq]canvas\[dq]);
\f[B]const\f[R] ctx = canvas.getContext(\[dq]2d\[dq]);

\f[B]const\f[R] matrix = \f[B]new\f[R] DOMMatrix([1, 0.2, 0.8, 1, 0, 0]);

\f[B]const\f[R] img = \f[B]new\f[R] Image();
img.src = \[dq]canvas_createpattern.png\[dq];

img.onload = () \f[B]=>\f[R] {
  \f[B]const\f[R] pattern = ctx.createPattern(img, \[dq]repeat\[dq]);
  pattern.setTransform(matrix.rotate(\-45).scale(1.5));
  ctx.fillStyle = pattern;
  ctx.fillRect(0, 0, 400, 400);
};
.EE
.SS Editable demo
Here\[cq]s an editable demo of the code snippet above.
Try changing the argument to \f[CR]SetTransform()\f[R] to see the effect
it had.
.SH SEE ALSO
.IP \[bu] 2
The interface defining this method: \f[CR]CanvasPattern\f[R]
.IP \[bu] 2
\f[CR]DOMMatrix\f[R]
