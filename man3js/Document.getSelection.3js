.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "Document.getSelection" "JS" "April 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Document.getSelection \- Document: getSelection() method
.SH SYNOPSIS
The \f[B]\f[CB]getSelection()\f[B]\f[R] method of the
\f[CR]Document\f[R] interface returns a \f[CR]Selection\f[R] object
representing the range of text selected by the user, or the current
position of the caret.
.SH SYNTAX
.IP
.EX
getSelection()
.EE
.SS Parameters
None.
.SS Return value
A \f[CR]Selection\f[R] object.
.SH EXAMPLES
.SS Getting a Selection object
.IP
.EX
\f[B]let\f[R] selection = document.getSelection();
\f[B]let\f[R] selRange = selection.getRangeAt(0);
\f[I]// do stuff with the range\f[R]

console.log(selection); \f[I]// Selection object\f[R]
.EE
.SS String representation of the Selection object
Some functions (like \f[CR]Window.alert()\f[R]) call
\f[CR]toString()\f[R] automatically and the returned value is passed to
the function.
As a consequence, this will return the selected text and not the
\f[CR]Selection\f[R] object:
.IP
.EX
alert(selection);
.EE
.PP
However, not all functions call \f[CR]toString()\f[R] automatically.
To use a \f[CR]Selection\f[R] object as a string, call its
\f[CR]toString()\f[R] method directly:
.IP
.EX
\f[B]let\f[R] selectedText = selection.toString();
.EE
.SH RELATED OBJECTS
You can call \f[CR]Window.getSelection()\f[R], which works identically
to \f[CR]Document.getSelection()\f[R].
.PP
It is worth noting that currently \f[CR]getSelection()\f[R] doesn\[cq]t
work on the content of \f[CR]<input>\f[R] elements in Firefox.
\f[CR]HTMLInputElement.setSelectionRange()\f[R]) could be used to work
around this.
.PP
Notice also the difference between \f[I]selection\f[R] and
\f[I]focus\f[R].
\f[CR]Document.activeElement\f[R] returns the focused element.
