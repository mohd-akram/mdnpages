.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "HTMLAudioElement.Audio" "JS" "March 12, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
HTMLAudioElement.Audio \- HTMLAudioElement: Audio() constructor
.SH SYNOPSIS
The \f[B]\f[CB]Audio()\f[B]\f[R] constructor creates and returns a new
\f[CR]HTMLAudioElement\f[R] which can be either attached to a document
for the user to interact with and/or listen to, or can be used offscreen
to manage and play audio.
.SH SYNTAX
.IP
.EX
new Audio()
new Audio(url)
.EE
.SS Parameters
.TP
\f[B]url\f[R] \f[I](optional)\f[R]
An optional string containing the URL of an audio file to be associated
with the new audio element.
.SS Return value
A new \f[CR]HTMLAudioElement\f[R] object, configured to be used for
playing back the audio from the file specified by \f[CR]url\f[R].
The new object\[cq]s \f[CR]preload\f[R] property is set to
\f[CR]auto\f[R] and its \f[CR]src\f[R] property is set to the specified
URL or \f[CR]null\f[R] if no URL is given.
If a URL is specified, the browser begins to \f[I]asynchronously\f[R]
load the media resource before returning the new object.
.SH USAGE NOTES
You can also use other element\-creation methods, such as the
\f[CR]document\f[R] object\[cq]s \f[CR]createElement()\f[R] method, to
construct a new \f[CR]HTMLAudioElement\f[R].
.SS Determining when playback can begin
There are three ways you can tell when enough of the audio file has
loaded to allow playback to begin:
.IP \[bu] 2
Check the value of the \f[CR]readyState\f[R] property.
If it\[cq]s \f[CR]HTMLMediaElement.HAVE_FUTURE_DATA\f[R], there\[cq]s
enough data available to begin playback and play for at least a short
time.
If it\[cq]s \f[CR]HTMLMediaElement.HAVE_ENOUGH_DATA\f[R], then
there\[cq]s enough data available that, given the current download rate,
you should be able to play the audio through to the end without
interruption.
.IP \[bu] 2
Listen for the \f[CR]canplay\f[R] event.
It is sent to the \f[CR]<audio>\f[R] element when there\[cq]s enough
audio available to begin playback, although interruptions may occur.
.IP \[bu] 2
Listen for the \f[CR]canplaythrough\f[R] event.
It is sent when it\[cq]s estimated that the audio should be able to play
to the end without interruption.
.PP
The event\-based approach is best:
.IP
.EX
myAudioElement.addEventListener(\[dq]canplaythrough\[dq], (event) \f[B]=>\f[R] {
  \f[I]/* the audio is now playable; play it if permissions allow */\f[R]
  myAudioElement.play();
});
.EE
.SS Memory usage and management
If all references to an audio element created using the
\f[CR]Audio()\f[R] constructor are deleted, the element itself won\[cq]t
be removed from memory by the JavaScript runtime\[cq]s garbage
collection mechanism if playback is currently underway.
Instead, the audio will keep playing and the object will remain in
memory until playback ends.
At that time, the object becomes subject to garbage collection.
.SH SEE ALSO
.IP \[bu] 2
Web media technologies
.IP \[bu] 2
HTML element implementing this interface: \f[CR]<audio>\f[R].
