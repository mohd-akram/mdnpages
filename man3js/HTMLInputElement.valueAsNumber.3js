.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "HTMLInputElement.valueAsNumber" "JS" "August 23, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
HTMLInputElement.valueAsNumber \- HTMLInputElement: valueAsNumber
property
.SH SYNOPSIS
The \f[B]\f[CB]valueAsNumber\f[B]\f[R] property of the
\f[CR]HTMLInputElement\f[R] interface represents the current value of
the \f[CR]<input>\f[R] element as a number or \f[CR]NaN\f[R] if
converting to a numeric value is not possible.
.PP
This property can also be set directly, for example to set a default
numeric value based on some condition.
.SH VALUE
A number that represents the value of the element or \f[CR]NaN\f[R] if
numeric conversion is impossible.
.SH EXAMPLES
.SS Retrieving a number value
In this example, the log displays the current value of the
\f[CR]number\f[R] input when changed.
.SS HTML
We include an \f[CR]<input>\f[R] of type \f[CR]number\f[R] and an
associated \f[CR]<label>\f[R], with a \f[CR]<pre>\f[R] container for our
output.
.IP
.EX
<\f[B]label\f[R] for=\[dq]number\[dq]>Pick a number between 1 and 10:</\f[B]label\f[R]>

<\f[B]input\f[R] name=\[dq]number\[dq] id=\[dq]number\[dq] min=\[dq]1\[dq] max=\[dq]10\[dq] type=\[dq]number\[dq] />

<\f[B]pre\f[R] id=\[dq]log\[dq]></\f[B]pre\f[R]>
.EE
.SS JavaScript
The \f[CR]<pre>\f[R] element\[cq]s \f[CR]innerText\f[R] is updated to
the current value of the \f[CR]<input>\f[R] every time a
\f[CR]change\f[R] event is fired.
.IP
.EX
\f[B]const\f[R] logElement = document.getElementById(\[dq]log\[dq]);
\f[B]const\f[R] inputElement = document.getElementById(\[dq]number\[dq]);

inputElement.addEventListener(\[dq]change\[dq], () \f[B]=>\f[R] {
  logElement.innerText = \[ga]Number: ${inputElement.valueAsNumber}\[ga];
});
.EE
.SS Results
If you delete the number in the widget, the result is \f[CR]NaN\f[R].
.SS Retrieving a date value as a number
This example demonstrates the \f[CR]valueAsNumber\f[R] property of an
\f[CR]<input>\f[R] with type \f[CR]datetime\-local\f[R].
.SS HTML
We include an \f[CR]<input>\f[R] of type \f[CR]datetime\-local\f[R]:
.IP
.EX
<\f[B]label\f[R] for=\[dq]date\[dq]>Pick a date and time:</\f[B]label\f[R]>

<\f[B]input\f[R] name=\[dq]date\[dq] id=\[dq]date\[dq] type=\[dq]datetime\-local\[dq] />

<\f[B]pre\f[R] id=\[dq]log\[dq]></\f[B]pre\f[R]>
.EE
.SS JavaScript
When no date or time is selected, the empty string resolves to
\f[CR]NaN\f[R].
Each time a selection is made, a \f[CR]change\f[R] event is fired,
updating the \f[CR]<pre>\f[R] content showing the
\f[CR]HTMLInputElement.value\f[R] of the form control compared to that
value as a number.
.IP
.EX
\f[B]const\f[R] logElement = document.getElementById(\[dq]log\[dq]);
\f[B]const\f[R] inputElement = document.getElementById(\[dq]date\[dq]);

logElement.innerText = \[ga]Initial value: ${inputElement.valueAsNumber}\[ga];

inputElement.addEventListener(\[dq]change\[dq], () \f[B]=>\f[R] {
  \f[B]const\f[R] d = \f[B]new\f[R] Date(inputElement.valueAsNumber);
  logElement.innerText = \[ga]${inputElement.value} resolves to ${inputElement.valueAsNumber}, \[rs]nwhich is ${d.toDateString()} at ${d.toTimeString()}\[ga];
});
.EE
.SS Results
.SH SEE ALSO
.IP \[bu] 2
\f[CR]<input>\f[R]
.IP \[bu] 2
\f[CR]HTMLInputElement.value\f[R]
.IP \[bu] 2
\f[CR]HTMLInputElement.valueAsDate\f[R]
