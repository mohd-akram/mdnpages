.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "RTCTransportStats" "JS" "December 16, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
RTCTransportStats \- RTCTransportStats
.SH SYNOPSIS
The \f[B]\f[CB]RTCTransportStats\f[B]\f[R] dictionary of the WebRTC API
provides information about the transport (\f[CR]RTCDtlsTransport\f[R]
and its underlying \f[CR]RTCIceTransport\f[R]) used by a particular
candidate pair.
.PP
The \f[I]BUNDLE\f[R] feature is an SDP extension that allows negotiation
to use a single transport for sending and receiving media described by
multiple SDP media descriptions.
If the remote endpoint is aware of this feature, all
\f[CR]MediaStreamTrack\f[R] and data channels are bundled onto a single
transport at the completion of negotiation.
This is true for current browsers, but if connecting to an older
endpoint that is not BUNDLE\-aware, then separate transports might be
used for different media.
The policy to use in the negotiation is configured in the
\f[CR]RTCPeerConnection\f[R] constructor.
.PP
These statistics can be obtained by iterating the
\f[CR]RTCStatsReport\f[R] returned by
\f[CR]RTCPeerConnection.getStats()\f[R] until you find a report with the
\f[CR]type\f[R] of \f[CR]transport\f[R].
.SH INSTANCE PROPERTIES
.TP
\f[B]bytesReceived\f[R] \f[I](optional)\f[R]
The total number of payload bytes received on this transport (bytes
received, not including headers, padding or ICE connectivity checks).
.TP
\f[B]bytesSent\f[R] \f[I](optional)\f[R]
The total number of payload bytes sent on this transport (bytes sent,
not including headers, padding or ICE connectivity checks).
.TP
\f[B]dtlsCipher\f[R] \f[I](optional)\f[R]
A string indicating the name of the cipher suite used for the DTLS
transport, as defined in the \[lq]Description\[rq] column of the \c
.UR https://www.iana.org/assignments/tls-parameters/tls-parameters.xhtml#tls-parameters-4
TLS Cipher Suites
.UE \c
\ section in the \f[I]IANA cipher suite registry\f[R].
For example
\f[CR]\[dq]TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\[dq]\f[R].
.TP
\f[B]dtlsRole\f[R] \f[I](optional)\f[R] \f[I](experimental)\f[R]
The DTLS role of the associated \f[CR]RTCPeerConnection\f[R].
This is one of:
.RS
.IP \[bu] 2
\f[CR]client\f[R]
.IP \[bu] 2
\f[CR]server\f[R]
.IP \[bu] 2
\f[CR]unknown\f[R] (before the DTLS negotiation starts).
.RE
.TP
\f[B]dtlsState\f[R]
A string indicating the current \f[CR]state\f[R] of the underlying
\f[CR]RTCDtlsTransport\f[R].
This is one of:
.RS
.IP \[bu] 2
\f[CR]new\f[R]
.IP \[bu] 2
\f[CR]connecting\f[R]
.IP \[bu] 2
\f[CR]connected\f[R]
.IP \[bu] 2
\f[CR]closed\f[R]
.IP \[bu] 2
\f[CR]failed\f[R]
.RE
.TP
\f[B]iceLocalUsernameFragment\f[R] \f[I](optional)\f[R] \f[I](experimental)\f[R]
A string indicating the local username fragment used in message
validation procedures for this transport.
This is the same value as the local
\f[CR]RTCIceCandidate.usernameFragment\f[R], and will change if the
connection is renegotiated.
.TP
\f[B]iceRole\f[R] \f[I](optional)\f[R] \f[I](experimental)\f[R]
A string indicating the ICE \f[CR]role\f[R] of the underlying
\f[CR]RTCDtlsTransport.iceTransport\f[R].
This is one of:
.RS
.IP \[bu] 2
\f[CR]controlled\f[R]
.IP \[bu] 2
\f[CR]controlling\f[R]
.IP \[bu] 2
\f[CR]unknown\f[R]
.RE
.TP
\f[B]iceState\f[R] \f[I](optional)\f[R] \f[I](experimental)\f[R]
A string indicating the current \f[CR]state\f[R] of the underlying
\f[CR]RTCIceTransport\f[R].
This is one of:
.RS
.IP \[bu] 2
\f[CR]new\f[R]
.IP \[bu] 2
\f[CR]checking\f[R]
.IP \[bu] 2
\f[CR]connected\f[R]
.IP \[bu] 2
\f[CR]completed\f[R]
.IP \[bu] 2
\f[CR]disconnected\f[R]
.IP \[bu] 2
\f[CR]failed\f[R]
.IP \[bu] 2
\f[CR]closed\f[R]
.RE
.TP
\f[B]selectedCandidatePairId\f[R] \f[I](optional)\f[R]
A string containing the unique identifier for the object that was
inspected to produce the \f[CR]RTCIceCandidatePairStats\f[R] associated
with this transport.
.TP
\f[B]localCertificateId\f[R] \f[I](optional)\f[R]
A string containing the id of the local certificate used by this
transport.
Only present for DTLS transports, and after DTLS has been negotiated.
.TP
\f[B]packetsSent\f[R] \f[I](optional)\f[R] \f[I](experimental)\f[R]
The total number of packets sent over this transport.
.TP
\f[B]packetsReceived\f[R] \f[I](optional)\f[R] \f[I](experimental)\f[R]
The total number of packets received on this transport.
.TP
\f[B]remoteCertificateId\f[R] \f[I](optional)\f[R]
A string containing the id or the remote certificate used by this
transport.
Only present for DTLS transports, and after DTLS has been negotiated.
.TP
\f[B]selectedCandidatePairChanges\f[R] \f[I](optional)\f[R]
The number of times that the selected candidate pair of this transport
has changed.
The value is initially zero and increases whenever a candidate pair
selected or lost.
.TP
\f[B]srtpCipher\f[R] \f[I](optional)\f[R]
A string indicating the descriptive name of the protection profile used
for the Secure Real\-time Transport Protocol (SRTP) transport, as
defined in the \[lq]Profile\[rq] column of the \c
.UR https://www.iana.org/assignments/srtp-protection/srtp-protection.xhtml#srtp-protection-1
IANA DTLS\-SRTP protection profile registry
.UE \c
\ and \c
.UR https://www.rfc-editor.org/rfc/rfc5764.html#section-4.1.2
RFC5764
.UE \c
\&.
.RS
.PP
For example \f[CR]\[dq]AES_CM_128_HMAC_SHA1_80\[dq]\f[R] specifies the
following profile, where \f[CR]maximum_lifetime\f[R] is the maximum
number of packets that can be protected by a single set of keys.
.IP
.EX
SRTP_AES128_CM_HMAC_SHA1_80
 cipher: AES_128_CM
 cipher_key_length: 128
 cipher_salt_length: 112
 maximum_lifetime: 2\[ha]31
 auth_function: HMAC\-SHA1
 auth_key_length: 160
 auth_tag_length: 80
.EE
.RE
.TP
\f[B]tlsVersion\f[R] \f[I](optional)\f[R]
A string containing the negotiated TLS version.
This is present for DTLS transports, and only exists after DTLS has been
negotiated.
.RS
.PP
The value comes from the DTLS handshake \f[CR]ServerHello.version\f[R],
and is represented as four upper case hexadecimal digits, where the
digits represent the two bytes of the version.
Note however that the bytes might not map directly to version numbers.
For example, DTLS represents version 1.2 as \f[CR]\[aq]FEFD\[aq]\f[R]
which numerically is \f[CR]{254, 253}\f[R].
.RE
.SS Common instance properties
The following properties are common to all WebRTC statistics objects.
.TP
\f[B]id\f[R]
A string that uniquely identifies the object that is being monitored to
produce this set of statistics.
.TP
\f[B]timestamp\f[R]
A \f[CR]DOMHighResTimeStamp\f[R] object indicating the time at which the
sample was taken for this statistics object.
.TP
\f[B]type\f[R]
A string with the value \f[CR]\[dq]transport\[dq]\f[R], indicating the
type of statistics that the object contains.
.SH EXAMPLES
This example shows a function to return the transport statistics, or
\f[CR]null\f[R] if no statistics are provided.
.PP
The function waits for the result of a call to
\f[CR]RTCPeerConnection.getStats()\f[R] and then iterates the returned
\f[CR]RTCStatsReport\f[R] to get just the stats of type
\f[CR]\[dq]transport\[dq]\f[R].
It then returns the statistics, or \f[CR]null\f[R], using the data in
the report.
.IP
.EX
\f[B]async\f[R] \f[B]function\f[R] numberOpenConnections (peerConnection) {
  \f[B]const\f[R] stats = \f[B]await\f[R] peerConnection.getStats();
  \f[B]let\f[R] transportStats = \f[B]null\f[R];

  stats.forEach((report) \f[B]=>\f[R] {
    \f[B]if\f[R] (report.type === \[dq]transport\[dq]) {
      transportStats = report;
      \f[B]break\f[R];
    }
  });

\f[B]return\f[R] transportStats
}
.EE
