.\" Automatically generated by Pandoc 3.4
.\"
.TH "ShadowRoot.slotAssignment" "JS" "July 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
ShadowRoot.slotAssignment \- ShadowRoot: slotAssignment property
.SH SYNOPSIS
The read\-only \f[B]\f[CB]slotAssignment\f[B]\f[R] property of the
\f[CR]ShadowRoot\f[R] interface returns the \f[I]slot assignment
mode\f[R] for the shadow DOM tree.
Nodes are either automatically assigned (\f[CR]named\f[R]) or manually
assigned (\f[CR]manual\f[R]).
The value of this property defined using the \f[CR]slotAssignment\f[R]
option when calling \f[CR]Element.attachShadow()\f[R].
.SH VALUE
A string that can be one of:
.TP
\f[B]named\f[R]
Elements are automatically assigned to \f[CR]<slot>\f[R] elements within
this shadow root.
Any descendants of the host with a \f[CR]slot\f[R] attribute which
matches the \f[CR]name\f[R] attribute of a \f[CR]<slot>\f[R] within this
shadow root will be assigned to that slot.
Any top\-level children of the host with no \f[CR]slot\f[R] attribute
will be assigned to a \f[CR]<slot>\f[R] with no \f[CR]name\f[R]
attribute (the \[lq]default slot\[rq]) if one is present.
.TP
\f[B]manual\f[R]
Elements are not automatically assigned to \f[CR]<slot>\f[R] elements.
Instead, they must be manually assigned with
\f[CR]HTMLSlotElement.assign()\f[R].
.SH EXAMPLES
In the example below, the \f[CR]assign()\f[R] method is used to display
the correct tab in a tabbed application.
The function is called and passed the panel to show, which is then
assigned to the slot.
We test if the \f[CR]slotAssignment\f[R] is \f[CR]named\f[R] to prevent
an exception to be raised when \f[CR]HTMLSlotElement.assign()\f[R] is
called.
.IP
.EX
\f[B]function\f[R] UpdateDisplayTab(elem, tabIdx) {
  \f[B]const\f[R] shadow = elem.shadowRoot;

  \f[I]// This test is usually not needed, but can be useful when debugging\f[R]
  \f[B]if\f[R] (shadow.slotAssignment === \[dq]named\[dq]) {
    console.error(
      \[dq]Trying to manually assign a slot on an automatically\-assigned (named) slot\[dq],
    );
  }
  \f[B]const\f[R] slot = shadow.querySelector(\[dq]slot\[dq]);
  \f[B]const\f[R] panels = elem.querySelectorAll(\[dq]tab\-panel\[dq]);
  \f[B]if\f[R] (panels.length && tabIdx && tabIdx <= panels.length) {
    slot.assign(panels[tabIdx \- 1]);
  } \f[B]else\f[R] {
    slot.assign();
  }
}
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]Element.attachShadow()\f[R]
.IP \[bu] 2
\f[CR]HTMLSlotElement.assign()\f[R]
