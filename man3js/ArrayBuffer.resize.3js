.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "ARRAYBUFFER.RESIZE" "3JS" "March 14, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
ArrayBuffer.resize \- ArrayBuffer.prototype.resize()
.SH SYNOPSIS
The \f[B]\f[CB]resize()\f[B]\f[R] method of \f[CR]ArrayBuffer\f[R]
instances resizes the \f[CR]ArrayBuffer\f[R] to the specified size, in
bytes.
.IP
.EX
\f[B]const\f[R] buffer = \f[B]new\f[R] ArrayBuffer(8, { maxByteLength: 16 });

console.log(buffer.byteLength);
\f[I]// Expected output: 8\f[R]

buffer.resize(12);

console.log(buffer.byteLength);
\f[I]// Expected output: 12\f[R]
.EE
.SH SYNTAX
.IP
.EX
resize(newLength)
.EE
.SS Parameters
.TP
\f[B]newLength\f[R]
The new length, in bytes, to resize the \f[CR]ArrayBuffer\f[R] to.
.SS Return value
None (\f[CR]undefined\f[R]).
.SS Exceptions
.TP
\f[B]TypeError\f[R]
Thrown if the \f[CR]ArrayBuffer\f[R] is detached or is not resizable.
.TP
\f[B]RangeError\f[R]
Thrown if \f[CR]newLength\f[R] is larger than the
\f[CR]maxByteLength\f[R] of the \f[CR]ArrayBuffer\f[R].
.SH DESCRIPTION
The \f[CR]resize()\f[R] method resizes an \f[CR]ArrayBuffer\f[R] to the
size specified by the \f[CR]newLength\f[R] parameter, provided that the
\f[CR]ArrayBuffer\f[R] is resizable and the new size is less than or
equal to the \f[CR]maxByteLength\f[R] of the \f[CR]ArrayBuffer\f[R].
New bytes are initialized to 0.
.PP
Note that you can use \f[CR]resize()\f[R] to shrink as well as grow an
\f[CR]ArrayBuffer\f[R] \(em it is permissible for \f[CR]newLength\f[R]
to be smaller than the \f[CR]ArrayBuffer\f[R]\(cqs current
\f[CR]byteLength\f[R].
.SH EXAMPLES
.SS Using resize()
In this example, we create a 8\-byte buffer that is resizable to a max
length of 16 bytes, then check its \f[CR]resizable\f[R] property,
resizing it if \f[CR]resizable\f[R] returns \f[CR]true\f[R]:
.IP
.EX
\f[B]const\f[R] buffer = \f[B]new\f[R] ArrayBuffer(8, { maxByteLength: 16 });

\f[B]if\f[R] (buffer.resizable) {
  console.log(\(dqBuffer is resizable!\(dq);
  buffer.resize(12);
}
.EE
.SH SEE ALSO
.IP \(bu 2
\f[CR]ArrayBuffer\f[R]
.IP \(bu 2
\f[CR]ArrayBuffer.prototype.resizable\f[R]
.IP \(bu 2
\f[CR]ArrayBuffer.prototype.maxByteLength\f[R]
