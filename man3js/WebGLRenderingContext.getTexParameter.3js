'\" t
.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "WEBGLRENDERINGCONTEXT.GETTEXPARAMETER" "3JS" "September 28, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
WebGLRenderingContext.getTexParameter \- WebGLRenderingContext:
getTexParameter() method
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]WebGLRenderingContext.getTexParameter()\f[B]\f[R] method
of the WebGL API returns information about the given texture.
.SH SYNTAX
.IP
.EX
getTexParameter(target, pname)
.EE
.SS Parameters
.TP
\f[B]target\f[R]
A \f[CR]GLenum\f[R] specifying the binding point (target).
Possible values:
.RS
.IP \(bu 2
\f[CR]gl.TEXTURE_2D\f[R]: A two\-dimensional texture.
.IP \(bu 2
\f[CR]gl.TEXTURE_CUBE_MAP\f[R]: A cube\-mapped texture.
.PP
When using a WebGL 2 context, the following values are available
additionally:
.IP \(bu 2
\f[CR]gl.TEXTURE_3D\f[R]: A three\-dimensional texture.
.IP \(bu 2
\f[CR]gl.TEXTURE_2D_ARRAY\f[R]: A two\-dimensional array texture.
.RE
.TP
\f[B]pname\f[R]
A \f[CR]GLenum\f[R] specifying the information to query.
Possible values:
.RS
.PP
.TS
tab(@);
l l l l.
T{
pname
T}@T{
Return type
T}@T{
Description
T}@T{
Possible return values
T}
_
T{
Available in a WebGL 1 context
T}@T{
T}@T{
T}@T{
T}
T{
\f[CR]gl.TEXTURE_MAG_FILTER\f[R]
T}@T{
\(gaGLenum\(ga
T}@T{
Texture magnification filter
T}@T{
\f[CR]gl.LINEAR\f[R] (default value), \f[CR]gl.NEAREST\f[R].
T}
T{
\f[CR]gl.TEXTURE_MIN_FILTER\f[R]
T}@T{
\(gaGLenum\(ga
T}@T{
Texture minification filter
T}@T{
\f[CR]gl.LINEAR\f[R], \f[CR]gl.NEAREST\f[R],
\f[CR]gl.NEAREST_MIPMAP_NEAREST\f[R],
\f[CR]gl.LINEAR_MIPMAP_NEAREST\f[R], \f[CR]gl.NEAREST_MIPMAP_LINEAR\f[R]
(default value), \f[CR]gl.LINEAR_MIPMAP_LINEAR\f[R].
T}
T{
\f[CR]gl.TEXTURE_WRAP_S\f[R]
T}@T{
\(gaGLenum\(ga
T}@T{
Wrapping function for texture coordinate \f[CR]s\f[R]
T}@T{
\f[CR]gl.REPEAT\f[R] (default value), \f[CR]gl.CLAMP_TO_EDGE\f[R],
\f[CR]gl.MIRRORED_REPEAT\f[R].
T}
T{
\f[CR]gl.TEXTURE_WRAP_T\f[R]
T}@T{
\(gaGLenum\(ga
T}@T{
Wrapping function for texture coordinate \f[CR]t\f[R]
T}@T{
\f[CR]gl.REPEAT\f[R] (default value), \f[CR]gl.CLAMP_TO_EDGE\f[R],
\f[CR]gl.MIRRORED_REPEAT\f[R].
T}
T{
Additionally available when using the
\(gaEXT_texture_filter_anisotropic\(ga extension
T}@T{
T}@T{
T}@T{
T}
T{
\f[CR]ext.TEXTURE_MAX_ANISOTROPY_EXT\f[R]
T}@T{
\(gaGLfloat\(ga
T}@T{
Maximum anisotropy for a texture
T}@T{
Any float values.
T}
T{
Additionally available when using a WebGL 2 context
T}@T{
T}@T{
T}@T{
T}
T{
\f[CR]gl.TEXTURE_BASE_LEVEL\f[R]
T}@T{
\(gaGLint\(ga
T}@T{
Texture mipmap level
T}@T{
Any int values.
T}
T{
\f[CR]gl.TEXTURE_COMPARE_FUNC\f[R]
T}@T{
\(gaGLenum\(ga
T}@T{
Comparison function
T}@T{
\f[CR]gl.LEQUAL\f[R] (default value), \f[CR]gl.GEQUAL\f[R],
\f[CR]gl.LESS\f[R], \f[CR]gl.GREATER\f[R], \f[CR]gl.EQUAL\f[R],
\f[CR]gl.NOTEQUAL\f[R], \f[CR]gl.ALWAYS\f[R], \f[CR]gl.NEVER\f[R].
T}
T{
\f[CR]gl.TEXTURE_COMPARE_MODE\f[R]
T}@T{
\(gaGLenum\(ga
T}@T{
Texture comparison mode
T}@T{
\f[CR]gl.NONE\f[R] (default value),
\f[CR]gl.COMPARE_REF_TO_TEXTURE\f[R].
T}
T{
\f[CR]gl.TEXTURE_IMMUTABLE_FORMAT\f[R]
T}@T{
\(gaGLboolean\(ga
T}@T{
Immutability of the texture format and size
T}@T{
true or false.
T}
T{
\f[CR]gl.TEXTURE_IMMUTABLE_LEVELS\f[R]
T}@T{
\(gaGLuint\(ga
T}@T{
?
T}@T{
Any uint values.
T}
T{
\f[CR]gl.TEXTURE_MAX_LEVEL\f[R]
T}@T{
\(gaGLint\(ga
T}@T{
Maximum texture mipmap array level
T}@T{
Any int values.
T}
T{
\f[CR]gl.TEXTURE_MAX_LOD\f[R]
T}@T{
\(gaGLfloat\(ga
T}@T{
Texture maximum level\-of\-detail value
T}@T{
Any float values.
T}
T{
\f[CR]gl.TEXTURE_MIN_LOD\f[R]
T}@T{
\(gaGLfloat\(ga
T}@T{
Texture minimum level\-of\-detail value
T}@T{
Any float values.
T}
T{
\f[CR]gl.TEXTURE_WRAP_R\f[R]
T}@T{
\(gaGLenum\(ga
T}@T{
Wrapping function for texture coordinate \f[CR]r\f[R]
T}@T{
\f[CR]gl.REPEAT\f[R] (default value), \f[CR]gl.CLAMP_TO_EDGE\f[R],
\f[CR]gl.MIRRORED_REPEAT\f[R].
T}
.TE
.RE
.SS Return value
Returns the requested texture information (as specified with
\f[CR]pname\f[R]).
If an error occurs, \f[CR]null\f[R] is returned.
.SH EXAMPLES
.IP
.EX
gl.getTexParameter(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER);
.EE
.SH SEE ALSO
.IP \(bu 2
\f[CR]WebGLRenderingContext.texParameterf()\f[R]
.IP \(bu 2
\f[CR]WebGLRenderingContext.texParameteri()\f[R]
.IP \(bu 2
\f[CR]EXT_texture_filter_anisotropic\f[R]
