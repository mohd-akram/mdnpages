.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "RTCPeerConnection.iceGatheringState" "JS" "March 25, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
RTCPeerConnection.iceGatheringState \- RTCPeerConnection:
iceGatheringState property
.SH SYNOPSIS
The \f[B]\f[CB]iceGatheringState\f[B]\f[R] read\-only property of the
\f[CR]RTCPeerConnection\f[R] interface returns a string that describes
the overall ICE gathering state for this connection.
This lets you detect, for example, when collection of ICE candidates has
finished.
.PP
You can detect when the value of this property changes by watching for
an event of type \f[CR]icegatheringstatechange\f[R].
.PP
Note that \f[B]\f[CB]iceGatheringState\f[B]\f[R] represents the overall
gathering state of the connection, including every
\f[CR]RTCIceTransport\f[R] used by every \f[CR]RTCRtpSender\f[R] and
every \f[CR]RTCRtpReceiver\f[R] on the entire connection.
This contrasts with \f[CR]RTCIceTransport.gatheringState\f[R], which
represents the gathering state for a single transport.
.SH VALUE
The possible values are:
.TP
\f[B]new\f[R]
The peer connection was just created and hasn\[cq]t done any networking
yet.
.TP
\f[B]gathering\f[R]
The ICE agent is in the process of gathering candidates for the
connection.
.TP
\f[B]complete\f[R]
The ICE agent has finished gathering candidates.
If something happens that requires collecting new candidates, such as a
new interface being added or the addition of a new ICE server, the state
will revert to \f[CR]gathering\f[R] to gather those candidates.
.SH EXAMPLE
.IP
.EX
\f[B]const\f[R] pc = \f[B]new\f[R] RTCPeerConnection();
\f[B]const\f[R] state = pc.iceGatheringState;
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]icegatheringstatechange\f[R]
.IP \[bu] 2
WebRTC
