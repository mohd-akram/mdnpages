.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "DOCUMENT.GETELEMENTSBYTAGNAME" "3JS" "June 3, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Document.getElementsByTagName \- Document: getElementsByTagName() method
.SH SYNOPSIS
The \f[B]\f[CB]getElementsByTagName\f[B]\f[R] method of
\f[CR]Document\f[R] interface returns an \f[CR]HTMLCollection\f[R] of
elements with the given tag name.
.PP
The complete document is searched, including the root node.
The returned \f[CR]HTMLCollection\f[R] is live, meaning that it updates
itself automatically to stay in sync with the DOM tree without having to
call \f[CR]document.getElementsByTagName()\f[R] again.
.SH SYNTAX
.IP
.EX
getElementsByTagName(name)
.EE
.SS Parameters
.TP
\f[B]name\f[R]
A string representing the name of the elements.
The special string \f[CR]*\f[R] represents all elements.
.SS Return value
A live \f[CR]HTMLCollection\f[R] of found elements in the order they
appear in the tree.
.SH EXAMPLES
In the following example, \f[CR]getElementsByTagName()\f[R] starts from
a particular parent element and searches top\-down recursively through
the DOM from that parent element, building a collection of all
descendant elements which match the tag \f[CR]name\f[R] parameter.
This demonstrates both \f[CR]document.getElementsByTagName()\f[R] and
the functionally identical \f[CR]Element.getElementsByTagName()\f[R],
which starts the search at a specific element within the DOM tree.
.PP
Clicking the buttons uses \f[CR]getElementsByTagName()\f[R] to count the
descendant paragraph elements of a particular parent (either the
document itself or one of two nested \f[CR]<div>\f[R] elements).
.IP
.EX
<\f[B]p\f[R]>Some outer text</\f[B]p\f[R]>
<\f[B]p\f[R]>Some outer text</\f[B]p\f[R]>

<\f[B]div\f[R] id=\(dqdiv1\(dq>
  <\f[B]p\f[R]>Some div1 text</\f[B]p\f[R]>
  <\f[B]p\f[R]>Some div1 text</\f[B]p\f[R]>
  <\f[B]p\f[R]>Some div1 text</\f[B]p\f[R]>

  <\f[B]div\f[R] id=\(dqdiv2\(dq>
    <\f[B]p\f[R]>Some div2 text</\f[B]p\f[R]>
    <\f[B]p\f[R]>Some div2 text</\f[B]p\f[R]>
  </\f[B]div\f[R]>
</\f[B]div\f[R]>

<\f[B]p\f[R]>Some outer text</\f[B]p\f[R]>
<\f[B]p\f[R]>Some outer text</\f[B]p\f[R]>

<\f[B]button\f[R] id=\(dqbtn1\(dq>Show all p elements in document</\f[B]button\f[R]>
<\f[B]br\f[R] />
<\f[B]button\f[R] id=\(dqbtn2\(dq>Show all p elements in div1 element</\f[B]button\f[R]>
<\f[B]br\f[R] />
<\f[B]button\f[R] id=\(dqbtn3\(dq>Show all p elements in div2 element</\f[B]button\f[R]>
.EE
.IP
.EX
body {
  \f[B]border\f[R]: solid green 3px;
}

div1 {
  \f[B]border\f[R]: solid blue 3px;
}

div2 {
  \f[B]border\f[R]: solid red 3px;
}
.EE
.IP
.EX
\f[B]function\f[R] getAllParaElems() {
  \f[B]const\f[R] allParas = document.getElementsByTagName(\(dqp\(dq);
  \f[B]const\f[R] num = allParas.length;
  alert(\(gaThere are ${num} paragraph in this document\(ga);
}

\f[B]function\f[R] div1ParaElems() {
  \f[B]const\f[R] div1 = document.getElementById(\(dqdiv1\(dq);
  \f[B]const\f[R] div1Paras = div1.getElementsByTagName(\(dqp\(dq);
  \f[B]const\f[R] num = div1Paras.length;
  alert(\(gaThere are ${num} paragraph in #div1\(ga);
}

\f[B]function\f[R] div2ParaElems() {
  \f[B]const\f[R] div2 = document.getElementById(\(dqdiv2\(dq);
  \f[B]const\f[R] div2Paras = div2.getElementsByTagName(\(dqp\(dq);
  \f[B]const\f[R] num = div2Paras.length;
  alert(\(gaThere are ${num} paragraph in #div2\(ga);
}

document.getElementById(\(dqbtn1\(dq).addEventListener(\(dqclick\(dq, getAllParaElems);
document.getElementById(\(dqbtn2\(dq).addEventListener(\(dqclick\(dq, div1ParaElems);
document.getElementById(\(dqbtn3\(dq).addEventListener(\(dqclick\(dq, div2ParaElems);
.EE
.SH NOTES
When called on an HTML document, \f[CR]getElementsByTagName()\f[R]
lower\-cases its argument before proceeding.
This is undesirable when trying to match camel case SVG elements in a
subtree in an HTML document.
\f[CR]document.getElementsByTagNameNS()\f[R] is useful in that case.
See also \c
.UR https://bugzil.la/499656
Firefox bug 499656
.UE \c
\&.
.PP
\f[CR]document.getElementsByTagName()\f[R] is similar to
\f[CR]Element.getElementsByTagName()\f[R], except that its search
encompasses the whole document.
.SH SEE ALSO
.IP \(bu 2
\f[CR]Element.getElementsByTagName()\f[R]
.IP \(bu 2
\f[CR]document.getElementById()\f[R] to return a reference to an element
by its \f[CR]id\f[R]
.IP \(bu 2
\f[CR]document.getElementsByName()\f[R] to return a reference to an
element by its \f[CR]name\f[R]
.IP \(bu 2
\f[CR]document.querySelector()\f[R] for powerful selectors via queries
like \f[CR]\(aqdiv.myclass\(aq\f[R]
