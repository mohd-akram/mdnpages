.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "SHAREDARRAYBUFFER.SHAREDARRAYBUFFER" "3JS" "March 14, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
SharedArrayBuffer.SharedArrayBuffer \- SharedArrayBuffer() constructor
.SH SYNOPSIS
.RS
.PP
\f[B]Note:\f[R] The \f[CR]SharedArrayBuffer\f[R] constructor may not
always be globally available unless certain security requirements are
met.
.RE
.PP
The \f[B]\f[CB]SharedArrayBuffer()\f[B]\f[R] constructor creates
\f[CR]SharedArrayBuffer\f[R] objects.
.IP
.EX
\f[I]// Create a SharedArrayBuffer with a size in bytes\f[R]
\f[B]const\f[R] buffer = \f[B]new\f[R] SharedArrayBuffer(8);

console.log(buffer.byteLength);
\f[I]// Expected output: 8\f[R]
.EE
.SH SYNTAX
.IP
.EX
new SharedArrayBuffer(length)
new SharedArrayBuffer(length, options)
.EE
.RS
.PP
\f[B]Note:\f[R] \f[CR]SharedArrayBuffer()\f[R] can only be constructed
with \f[CR]new\f[R].
Attempting to call it without \f[CR]new\f[R] throws a
\f[CR]TypeError\f[R].
.RE
.SS Parameters
.TP
\f[B]length\f[R]
The size, in bytes, of the array buffer to create.
.TP
\f[B]options\f[R] \f[I](optional)\f[R]
An object, which can contain the following properties:
.RS
.TP
\f[B]maxByteLength\f[R] \f[I](optional)\f[R]
The maximum size, in bytes, that the shared array buffer can be resized
to.
.RE
.SS Return value
A new \f[CR]SharedArrayBuffer\f[R] object of the specified size, with
its \f[CR]maxByteLength\f[R] property set to the specified
\f[CR]maxByteLength\f[R] if one was specified.
Its contents are initialized to 0.
.SH EXAMPLES
.SS Always use the new operator to create a SharedArrayBuffer
\f[CR]SharedArrayBuffer\f[R] constructors are required to be constructed
with a \f[CR]new\f[R] operator.
Calling a \f[CR]SharedArrayBuffer\f[R] constructor as a function without
\f[CR]new\f[R] will throw a \f[CR]TypeError\f[R].
.PP
\f[B]Bad\f[R]
.IP
.EX
\f[B]const\f[R] sab = SharedArrayBuffer(1024);
\f[I]// TypeError: calling a builtin SharedArrayBuffer constructor\f[R]
\f[I]// without new is forbidden\f[R]
.EE
.PP
\f[B]Good\f[R]
.IP
.EX
\f[B]const\f[R] sab = \f[B]new\f[R] SharedArrayBuffer(1024);
.EE
.SS Growing a growable SharedArrayBuffer
In this example, we create an 8\-byte buffer that is growable to a max
length of 16 bytes, then \f[CR]grow()\f[R] it to 12 bytes:
.IP
.EX
\f[B]const\f[R] buffer = \f[B]new\f[R] SharedArrayBuffer(8, { maxByteLength: 16 });

buffer.grow(12);
.EE
.RS
.PP
\f[B]Note:\f[R] It is recommended that \f[CR]maxByteLength\f[R] is set
to the smallest value possible for your use case.
It should never exceed \f[CR]1073741824\f[R] (1GB), to reduce the risk
of out\-of\-memory errors.
.RE
.SH SEE ALSO
.IP \(bu 2
\f[CR]Atomics\f[R]
.IP \(bu 2
\f[CR]ArrayBuffer\f[R]
.IP \(bu 2
JavaScript typed arrays guide
