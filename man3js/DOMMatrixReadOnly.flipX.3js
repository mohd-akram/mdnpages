.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "DOMMATRIXREADONLY.FLIPX" "3JS" "February 2, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
DOMMatrixReadOnly.flipX \- DOMMatrixReadOnly: flipX() method
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]flipX()\f[B]\f[R] method of the
\f[CR]DOMMatrixReadOnly\f[R] interface creates a new matrix being the
result of the original matrix flipped about the x\-axis.
This is equivalent to multiplying the matrix by
\f[CR]DOMMatrix(\-1, 0, 0, 1, 0, 0)\f[R].
The original matrix is not modified.
.SH SYNTAX
.IP
.EX
flipX()
.EE
.SS Return value
Returns a \f[CR]DOMMatrix\f[R].
.SH EXAMPLES
.SS Inverting a triangle
In this example, the SVG contains two paths in the shape of a triangle,
both drawn to the same position.
Note that the x co\-ordinate of the viewBox attribute is negative,
showing us content from both sides of the x\-axis.
.SS HTML
.IP
.EX
<\f[B]svg\f[R] width=\(dq100\(dq height=\(dq100\(dq viewBox=\(dq\-50 0 100 100\(dq>
  <\f[B]path\f[R] fill=\(dqred\(dq d=\(dqM 0 50 L 50 0 L 50 100 Z\(dq />
  <\f[B]path\f[R] id=\(dqflipped\(dq fill=\(dqblue\(dq d=\(dqM 0 50 L 50 0 L 50 100 Z\(dq />
</\f[B]svg\f[R]>
.EE
.SS JavaScript
The JavaScript first creates an identity matrix, then uses the
\f[CR]flipX()\f[R] method to create a new matrix, which is then applied
to the blue triangle, inverting it across the x\-axis.
The red triangle is left in place.
.IP
.EX
\f[B]const\f[R] flipped = document.getElementById(\(dqflipped\(dq);
\f[B]const\f[R] matrix = \f[B]new\f[R] DOMMatrixReadOnly();
\f[B]const\f[R] flippedMatrix = matrix.flipX();
flipped.setAttribute(\(dqtransform\(dq, flippedMatrix.toString());
.EE
.SS Result
.SH SEE ALSO
.IP \(bu 2
\f[CR]DOMMatrixReadOnly.flipY()\f[R]
