.\" Automatically generated by Pandoc 3.4
.\"
.TH "Element.contentvisibilityautostatechange_event" "JS" "July 26, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Element.contentvisibilityautostatechange_event \- Element:
contentvisibilityautostatechange event
.SH SYNOPSIS
The \f[B]\f[CB]contentvisibilityautostatechange\f[B]\f[R] event fires on
any element with \f[CR]content\-visibility: auto\f[R] set on it when it
starts or stops being relevant to the user and skipping its contents.
.PP
While the element is not relevant (between the start and end events),
the user agent skips an element\[cq]s rendering, including layout and
painting, which can significantly improve page rendering speed.
The \f[CR]contentvisibilityautostatechange\f[R] event provides a way for
an app\[cq]s code to also start or stop rendering processes
(e.g.\ drawing on a \f[CR]<canvas>\f[R]) when they are not needed,
thereby conserving processing power.
.PP
Note that even when hidden from view, element contents will remain
semantically relevant (e.g.\ to assistive technology users), so this
signal should not be used to skip significant semantic DOM updates.
.SH SYNTAX
Use the event name in methods like \f[CR]addEventListener()\f[R], or set
an event handler property.
.IP
.EX
addEventListener(\[dq]contentvisibilityautostatechange\[dq], (event) \f[B]=>\f[R] {});
oncontentvisibilityautostatechange = (event) \f[B]=>\f[R] {};
.EE
.RS
.PP
\f[B]Note:\f[R] The event object is of type
\f[CR]ContentVisibilityAutoStateChangeEvent\f[R].
.RE
.SH EXAMPLES
.IP
.EX
\f[B]const\f[R] canvasElem = document.querySelector(\[dq]canvas\[dq]);

canvasElem.addEventListener(\[dq]contentvisibilityautostatechange\[dq], stateChanged);
canvasElem.style.contentVisibility = \[dq]auto\[dq];

\f[B]function\f[R] stateChanged(event) {
  \f[B]if\f[R] (event.skipped) {
    stopCanvasUpdates(canvasElem);
  } \f[B]else\f[R] {
    startCanvasUpdates(canvasElem);
  }
}

\f[I]// Call this when the canvas updates need to start.\f[R]
\f[B]function\f[R] startCanvasUpdates(canvas) {
  \f[I]// \&...\f[R]
}

\f[I]// Call this when the canvas updates need to stop.\f[R]
\f[B]function\f[R] stopCanvasUpdates(canvas) {
  \f[I]// \&...\f[R]
}
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]ContentVisibilityAutoStateChangeEvent\f[R]
.IP \[bu] 2
CSS Containment
.IP \[bu] 2
The \f[CR]content\-visibility\f[R] property
.IP \[bu] 2
The \f[CR]contain\f[R] property
