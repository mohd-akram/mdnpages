.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "MessageChannel.MessageChannel" "JS" "March 6, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
MessageChannel.MessageChannel \- MessageChannel: MessageChannel()
constructor
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]MessageChannel()\f[B]\f[R] constructor of the
\f[CR]MessageChannel\f[R] interface returns a new
\f[CR]MessageChannel\f[R] object with two new \f[CR]MessagePort\f[R]
objects.
.SH SYNTAX
.IP
.EX
new MessageChannel()
.EE
.SS Parameters
None (\f[CR]undefined\f[R]).
.SS Return value
A new \f[CR]MessageChannel\f[R] object.
.SH EXAMPLES
In the following code block, you can see a new channel being created
using the \f[CR]MessageChannel()\f[R] constructor.
When the \f[CR]<iframe>\f[R] has loaded, we pass \f[CR]port2\f[R] to the
\f[CR]<iframe>\f[R] using \f[CR]MessagePort.postMessage\f[R] along with
a message.
The \f[CR]handleMessage\f[R] handler then responds to a message being
sent back from the \f[CR]<iframe>\f[R] (using \f[CR]onmessage\f[R]),
putting it into a paragraph.
The \f[CR]port1\f[R] is listened to, to check when the message arrives.
.IP
.EX
\f[B]const\f[R] channel = \f[B]new\f[R] MessageChannel();
\f[B]const\f[R] para = document.querySelector(\[dq]p\[dq]);

\f[B]const\f[R] ifr = document.querySelector(\[dq]iframe\[dq]);
\f[B]const\f[R] otherWindow = ifr.contentWindow;

ifr.addEventListener(\[dq]load\[dq], iframeLoaded, \f[B]false\f[R]);

\f[B]function\f[R] iframeLoaded() {
  otherWindow.postMessage(\[dq]Hello from the main page!\[dq], \[dq]*\[dq], [channel.port2]);
}

channel.port1.onmessage = handleMessage;
\f[B]function\f[R] handleMessage(e) {
  para.innerHTML = e.data;
}
.EE
.PP
For a full working example, see our \c
.UR https://github.com/mdn/dom-examples/tree/main/channel-messaging-basic
channel messaging basic demo
.UE \c
\ on GitHub (\c
.UR https://mdn.github.io/dom-examples/channel-messaging-basic/
run it live too
.UE \c
).
.SH SEE ALSO
.IP \[bu] 2
Using channel messaging
