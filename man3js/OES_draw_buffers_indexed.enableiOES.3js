.\" Automatically generated by Pandoc 3.4
.\"
.TH "OES_draw_buffers_indexed.enableiOES" "JS" "April 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
OES_draw_buffers_indexed.enableiOES \- OES_draw_buffers_indexed:
enableiOES() method
.SH SYNOPSIS
The \f[CR]enableiOES()\f[R] method of the
\f[CR]OES_draw_buffers_indexed\f[R] WebGL extension enables blending for
a particular draw buffer.
.SH SYNTAX
.IP
.EX
enableiOES(target, index)
.EE
.SS Parameters
.TP
\f[B]target\f[R]
Must be \f[CR]gl.BLEND\f[R].
.TP
\f[B]index\f[R]
An integer \f[CR]i\f[R] specifying the draw buffer associated with the
constant \f[CR]gl.DRAW_BUFFERi\f[R], see WebGL draw buffer constants.
.SS Return value
None (\f[CR]undefined\f[R]).
.SS Exceptions
.IP \[bu] 2
If \f[CR]target\f[R] is not \f[CR]gl.BLEND\f[R], a
\f[CR]gl.INVALID_ENUM\f[R] error is thrown.
.IP \[bu] 2
If \f[CR]index\f[R] is not a valid value, a \f[CR]gl.INVALID_VALUE\f[R]
error is thrown.
.SH EXAMPLES
.SS Enabling blending for draw buffers
The following two calls enable blending for the draw buffers
\f[CR]gl.DRAW_BUFFER0\f[R] and \f[CR]gl.DRAW_BUFFER1\f[R].
.IP
.EX
\f[B]const\f[R] ext = gl.getExtension(\[dq]OES_draw_buffers_indexed\[dq]);

ext.enableiOES(gl.BLEND, 0);
ext.enableiOES(gl.BLEND, 1);
.EE
.PP
You can use \f[CR]WebGLRenderingContext.getParameter()\f[R] to see how
many draw buffers are available.
.IP
.EX
\f[B]const\f[R] maxDrawBuffers = gl.getParameter(gl.MAX_DRAW_BUFFERS);
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]OES_draw_buffers_indexed.disableiOES()\f[R]
.IP \[bu] 2
WebGL draw buffer constants
