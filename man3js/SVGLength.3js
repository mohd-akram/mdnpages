'\" t
.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "SVGLength" "JS" "March 25, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
SVGLength \- SVGLength
.SH SYNOPSIS
.SH SVG LENGTH INTERFACE
The \f[CR]SVGLength\f[R] interface correspond to the <length> basic data
type.
.PP
An \f[CR]SVGLength\f[R] object can be designated as read only, which
means that attempts to modify the object will result in an exception
being thrown.
.SS Interface overview
.PP
.TS
tab(@);
lw(35.0n) lw(35.0n).
T{
Also implement
T}@T{
None
T}
T{
Methods
T}@T{
.IP \[bu] 2
\f[CR]void \f[R]\f[B]\f[CB]newValueSpecifiedUnits\f[B]\f[R]\f[CR](in unsigned short \f[R]\f[CR]unitType\f[R]\f[CR], in float \f[R]\f[CR]valueInSpecifiedUnits\f[R]\f[CR])\f[R]
.IP \[bu] 2
\f[CR]void \f[R]\f[B]\f[CB]convertToSpecifiedUnits\f[B]\f[R]\f[CR](in unsigned short \f[R]\f[CR]unitType\f[R]\f[CR])\f[R]
T}
T{
Properties
T}@T{
.IP \[bu] 2
readonly unsigned short \f[CR]unitType\f[R]
.IP \[bu] 2
float \f[CR]value\f[R]
.IP \[bu] 2
float \f[CR]valueInSpecifiedUnits\f[R]
.IP \[bu] 2
string \f[CR]valueAsString\f[R]
T}
T{
Constants
T}@T{
.IP \[bu] 2
\f[CR]SVG_LENGTHTYPE_UNKNOWN\f[R] = \f[CR]0\f[R]
.IP \[bu] 2
\f[CR]SVG_LENGTHTYPE_NUMBER\f[R] = \f[CR]1\f[R]
.IP \[bu] 2
\f[CR]SVG_LENGTHTYPE_PERCENTAGE\f[R] = \f[CR]2\f[R]
.IP \[bu] 2
\f[CR]SVG_LENGTHTYPE_EMS\f[R] = \f[CR]3\f[R]
.IP \[bu] 2
\f[CR]SVG_LENGTHTYPE_EXS\f[R] = \f[CR]4\f[R]
.IP \[bu] 2
\f[CR]SVG_LENGTHTYPE_PX\f[R] = \f[CR]5\f[R]
.IP \[bu] 2
\f[CR]SVG_LENGTHTYPE_CM\f[R] = \f[CR]6\f[R]
.IP \[bu] 2
\f[CR]SVG_LENGTHTYPE_MM\f[R] = \f[CR]7\f[R]
.IP \[bu] 2
\f[CR]SVG_LENGTHTYPE_IN\f[R] = \f[CR]8\f[R]
.IP \[bu] 2
\f[CR]SVG_LENGTHTYPE_PT\f[R] = \f[CR]9\f[R]
.IP \[bu] 2
\f[CR]SVG_LENGTHTYPE_PC\f[R] = \f[CR]10\f[R]
T}
T{
Normative document
T}@T{
\c
.UR https://www.w3.org/TR/SVG11/types.html#InterfaceSVGLength
SVG 1.1 (2nd Edition)
.UE \c
T}
.TE
.SH EXAMPLE
.IP
.EX
<\f[B]svg\f[R] height=\[dq]200\[dq] onload=\[dq]start();\[dq] version=\[dq]1.1\[dq] width=\[dq]200\[dq] xmlns=\[dq]http://www.w3.org/2000/svg\[dq]>
  <\f[B]script\f[R]><![CDATA[
function start() {
  const rect = document.getElementById(\[dq]myRect\[dq]);
  const val  = rect.x.baseVal;

  // read x in pixel and cm units
  console.log(\[dq]value: \[dq] + val.value +
            \[dq], valueInSpecifiedUnits: \[dq] + val.unitType + \[dq]: \[dq] + val.valueInSpecifiedUnits +
            \[dq], valueAsString: \[dq] + val.valueAsString);

  // set x = 20pt and read it out in pixel and pt units
  val.newValueSpecifiedUnits(SVGLength.SVG_LENGTHTYPE_PT, 20);
  console.log(\[dq]value: \[dq] + val.value +
            \[dq], valueInSpecifiedUnits \[dq] + val.unitType + \[dq]: \[dq] + val.valueInSpecifiedUnits +
            \[dq], valueAsString: \[dq] + val.valueAsString);

  // convert x = 20pt to inches and read out in pixel and inch units
  val.convertToSpecifiedUnits(SVGLength.SVG_LENGTHTYPE_IN);
  console.log(\[dq]value: \[dq] + val.value +
            \[dq], valueInSpecifiedUnits \[dq] + val.unitType + \[dq]: \[dq] + val.valueInSpecifiedUnits +
            \[dq], valueAsString: \[dq] + val.valueAsString);
}
]]></\f[B]script\f[R]>
  <\f[B]rect\f[R] id=\[dq]myRect\[dq]
        x=\[dq]1cm\[dq] y=\[dq]1cm\[dq]
        fill=\[dq]green\[dq] stroke=\[dq]black\[dq] stroke\-width=\[dq]1\[dq]
        width=\[dq]1cm\[dq] height=\[dq]1cm\[dq]
  />
</\f[B]svg\f[R]>
.EE
.PP
Results on a desktop monitor (pixel units will be dpi\-dependent):
.IP
.EX
value: 37.7952766418457, valueInSpecifiedUnits: 6: 1, valueAsString: 1cm
value: 26.66666603088379, valueInSpecifiedUnits 9: 20, valueAsString: 20pt
value: 26.66666603088379, valueInSpecifiedUnits 8: 0.277777761220932, valueAsString: 0.277778in
.EE
.SH CONSTANTS
.PP
.TS
tab(@);
l l l.
T{
Name
T}@T{
Value
T}@T{
Description
T}
_
T{
\f[CR]SVG_LENGTHTYPE_UNKNOWN\f[R]
T}@T{
\f[CR]0\f[R]
T}@T{
The unit type is not one of predefined unit types.
It is invalid to attempt to define a new value of this type or to
attempt to switch an existing value to this type.
T}
T{
\f[CR]SVG_LENGTHTYPE_NUMBER\f[R]
T}@T{
\f[CR]1\f[R]
T}@T{
No unit type was provided (i.e., a unitless value was specified), which
indicates a value in user units.
T}
T{
\f[CR]SVG_LENGTHTYPE_PERCENTAGE\f[R]
T}@T{
\f[CR]2\f[R]
T}@T{
A percentage value was specified.
T}
T{
\f[CR]SVG_LENGTHTYPE_EMS\f[R]
T}@T{
\f[CR]3\f[R]
T}@T{
A value was specified using the em units defined in CSS2.
T}
T{
\f[CR]SVG_LENGTHTYPE_EXS\f[R]
T}@T{
\f[CR]4\f[R]
T}@T{
A value was specified using the ex units defined in CSS2.
T}
T{
\f[CR]SVG_LENGTHTYPE_PX\f[R]
T}@T{
\f[CR]5\f[R]
T}@T{
A value was specified using the px units defined in CSS2.
T}
T{
\f[CR]SVG_LENGTHTYPE_CM\f[R]
T}@T{
\f[CR]6\f[R]
T}@T{
A value was specified using the cm units defined in CSS2.
T}
T{
\f[CR]SVG_LENGTHTYPE_MM\f[R]
T}@T{
\f[CR]7\f[R]
T}@T{
A value was specified using the mm units defined in CSS2.
T}
T{
\f[CR]SVG_LENGTHTYPE_IN\f[R]
T}@T{
\f[CR]8\f[R]
T}@T{
A value was specified using the in units defined in CSS2.
T}
T{
\f[CR]SVG_LENGTHTYPE_PT\f[R]
T}@T{
\f[CR]9\f[R]
T}@T{
A value was specified using the pt units defined in CSS2.
T}
T{
\f[CR]SVG_LENGTHTYPE_PC\f[R]
T}@T{
\f[CR]10\f[R]
T}@T{
A value was specified using the pc units defined in CSS2.
T}
.TE
.SH INSTANCE PROPERTIES
.PP
.TS
tab(@);
lw(23.3n) lw(23.3n) lw(23.3n).
T{
Name
T}@T{
Type
T}@T{
Description
T}
_
T{
\f[CR]unitType\f[R]
T}@T{
unsigned short
T}@T{
The type of the value as specified by one of the
\f[CR]SVG_LENGTHTYPE_*\f[R] constants defined on this interface.
T}
T{
\f[CR]value\f[R]
T}@T{
float
T}@T{
.PP
The value as a floating point value, in user units.
Setting this attribute will cause \f[CR]valueInSpecifiedUnits\f[R] and
\f[CR]valueAsString\f[R] to be updated automatically to reflect this
setting.
.PP
\f[B]Exceptions on setting:\f[R] a \[ga]DOMException\[ga] with code
\f[CR]NO_MODIFICATION_ALLOWED_ERR\f[R] is raised when the length
corresponds to a read only attribute or when the object itself is read
only.
T}
T{
\f[CR]valueInSpecifiedUnits\f[R]
T}@T{
float
T}@T{
.PP
The value as a floating point value, in the units expressed by
\f[CR]unitType\f[R].
Setting this attribute will cause \f[CR]value\f[R] and
\f[CR]valueAsString\f[R] to be updated automatically to reflect this
setting.
.PP
\f[B]Exceptions on setting:\f[R] a \[ga]DOMException\[ga] with code
\f[CR]NO_MODIFICATION_ALLOWED_ERR\f[R] is raised when the length
corresponds to a read only attribute or when the object itself is read
only.
T}
T{
\f[CR]valueAsString\f[R]
T}@T{
string
T}@T{
.PP
The value as a string value, in the units expressed by
\f[CR]unitType\f[R].
Setting this attribute will cause \f[CR]value\f[R],
\f[CR]valueInSpecifiedUnits\f[R], and \f[CR]unitType\f[R] to be updated
automatically to reflect this setting.
.PP
\f[B]Exceptions on setting:\f[R]
.IP \[bu] 2
a \[ga]DOMException\[ga] with code \f[CR]SYNTAX_ERR\f[R] is raised if
the assigned string cannot be parsed as a valid <length>.
.IP \[bu] 2
a \[ga]DOMException\[ga] with code
\f[CR]NO_MODIFICATION_ALLOWED_ERR\f[R] is raised when the length
corresponds to a read only attribute or when the object itself is read
only.
T}
.TE
.SH INSTANCE METHODS
.PP
.TS
tab(@);
lw(23.3n) lw(23.3n) lw(23.3n).
T{
Name & Arguments
T}@T{
Return
T}@T{
Description
T}
_
T{
\f[B]\f[CB]newValueSpecifiedUnits\f[B]\f[R]\f[CR](in unsigned short \f[R]\f[CR]unitType\f[R]\f[CR], in float \f[R]\f[CR]valueInSpecifiedUnits\f[R]\f[CR])\f[R]
T}@T{
\f[CR]void\f[R]
T}@T{
.PP
Reset the value as a number with an associated unitType, thereby
replacing the values for all of the attributes on the object.
.PP
\f[B]Exceptions:\f[R]
.IP \[bu] 2
a \[ga]DOMException\[ga] with code \f[CR]NOT_SUPPORTED_ERR\f[R] is
raised if \f[CR]unitType\f[R] is \f[CR]SVG_LENGTHTYPE_UNKNOWN\f[R] or
not a valid unit type constant (one of the other
\f[CR]SVG_LENGTHTYPE_*\f[R] constants defined on this interface).
.IP \[bu] 2
a \[ga]DOMException\[ga] with code
\f[CR]NO_MODIFICATION_ALLOWED_ERR\f[R] is raised when the length
corresponds to a read only attribute or when the object itself is read
only.
T}
T{
\f[B]\f[CB]convertToSpecifiedUnits\f[B]\f[R]\f[CR](in unsigned short \f[R]\f[CR]unitType\f[R]\f[CR])\f[R]
T}@T{
\f[CR]void\f[R]
T}@T{
Preserve the same underlying stored value, but reset the stored unit
identifier to the given \f[CR]unitType\f[R].
Object attributes \f[CR]unitType\f[R], \f[CR]valueInSpecifiedUnits\f[R],
and \f[CR]valueAsString\f[R] might be modified as a result of this
method.
For example, if the original value were \f[CR]\[dq]0.5cm\[dq]\f[R] and
the method was invoked to convert to millimeters, then the
\f[CR]unitType\f[R] would be changed to \f[CR]SVG_LENGTHTYPE_MM\f[R],
\f[CR]valueInSpecifiedUnits\f[R] would be changed to the numeric value
\f[CR]5\f[R] and \f[CR]valueAsString\f[R] would be changed to
\f[CR]\[dq]5mm\[dq]\f[R].
T}
.TE
