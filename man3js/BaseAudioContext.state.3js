.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "BASEAUDIOCONTEXT.STATE" "3JS" "April 3, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
BaseAudioContext.state \- BaseAudioContext: state property
.SH SYNOPSIS
The \f[CR]state\f[R] read\-only property of the
\f[CR]BaseAudioContext\f[R] interface returns the current state of the
\f[CR]AudioContext\f[R].
.SH VALUE
A string.
Possible values are:
.TP
\f[B]suspended\f[R]
The audio context has been suspended (with the
\f[CR]AudioContext.suspend()\f[R] method.)
.TP
\f[B]running\f[R]
The audio context is running normally.
.TP
\f[B]closed\f[R]
The audio context has been closed (with the
\f[CR]AudioContext.close()\f[R] method.)
.SH EXAMPLES
.SS Handling state changes
The following snippet is taken from our \c
.UR https://github.com/mdn/webaudio-examples
AudioContext states demo
.UE \c
\ (\c
.UR https://mdn.github.io/webaudio-examples/audiocontext-states/
see it running live
.UE \c
\&.)
The \f[CR]onstatechange\f[R] handler is used to log the current state to
the console every time it changes.
.IP
.EX
audioCtx.onstatechange = () \f[B]=>\f[R] {
  console.log(audioCtx.state);
};
.EE
.SS Resuming interrupted play states in iOS Safari
In iOS Safari, when a user leaves the page (e.g., switches tabs,
minimizes the browser, or turns off the screen) the audio context\(cqs
state changes to \(lqinterrupted\(rq and needs to be resumed.
For example:
.IP
.EX
\f[B]function\f[R] play() {
  \f[B]if\f[R] (audioCtx.state === \(dqinterrupted\(dq) {
    audioCtx.resume().then(() \f[B]=>\f[R] play());
    \f[B]return\f[R];
  }
  \f[I]// rest of the play() function\f[R]
}
.EE
.SH SEE ALSO
.IP \(bu 2
Using the Web Audio API
