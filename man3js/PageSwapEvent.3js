.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "PAGESWAPEVENT" "3JS" "December 20, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
PageSwapEvent \- PageSwapEvent
.SH SYNOPSIS
The \f[B]\f[CB]PageSwapEvent\f[B]\f[R] event object is made available
inside handler functions for the \f[CR]pageswap\f[R] event.
.PP
The \f[CR]pageswap\f[R] event is fired when you navigate across
documents, when the previous document is about to unload.
During a cross\-document navigation, the \f[CR]PageSwapEvent\f[R] event
object allows you to manipulate the related view transition (providing
access to the relevant \f[CR]ViewTransition\f[R] object) from the
document being navigated \f[I]from\f[R], if a view transition was
triggered by the navigation.
It also provides access to information on the navigation type and
current and destination documents.
.SH CONSTRUCTOR
.TP
\f[B]PageSwapEvent()\f[R]
Creates a new \f[CR]PageSwapEvent\f[R] object instance.
.SH INSTANCE PROPERTIES
.TP
\f[B]activation\f[R] \f[I](read\-only)\f[R]
Contains a \f[CR]NavigationActivation\f[R] object containing the
navigation type and current and destination document history entries for
a same\-origin navigation.
If the navigation has a cross\-origin URL anywhere in the redirect
chain, it returns \f[CR]null\f[R].
.TP
\f[B]viewTransition\f[R] \f[I](read\-only)\f[R]
Contains a \f[CR]ViewTransition\f[R] object representing the active view
transition for the cross\-document navigation.
.SH EXAMPLES
.IP
.EX
window.addEventListener(\(dqpageswap\(dq, \f[B]async\f[R] (e) \f[B]=>\f[R] {
  \f[I]// Only run this if an active view transition exists\f[R]
  \f[B]if\f[R] (e.viewTransition) {
    \f[B]const\f[R] currentUrl = e.activation.from?.url
      ? \f[B]new\f[R] URL(e.activation.from.url)
      : \f[B]null\f[R];
    \f[B]const\f[R] targetUrl = \f[B]new\f[R] URL(e.activation.entry.url);

    \f[I]// Going from profile page to homepage\f[R]
    \f[I]// \(ti> The big img and title are the ones!\f[R]
    \f[B]if\f[R] (isProfilePage(currentUrl) && isHomePage(targetUrl)) {
      \f[I]// Set view\-transition\-name values on the elements to animate\f[R]
      document.querySelector(\(ga#detail main h1\(ga).style.viewTransitionName =
        \(dqname\(dq;
      document.querySelector(\(ga#detail main img\(ga).style.viewTransitionName =
        \(dqavatar\(dq;

      \f[I]// Remove view\-transition\-names after snapshots have been taken\f[R]
      \f[I]// Stops naming conflicts resulting from the page state persisting in BFCache\f[R]
      \f[B]await\f[R] e.viewTransition.finished;
      document.querySelector(\(ga#detail main h1\(ga).style.viewTransitionName =
        \(dqnone\(dq;
      document.querySelector(\(ga#detail main img\(ga).style.viewTransitionName =
        \(dqnone\(dq;
    }

    \f[I]// Going to profile page\f[R]
    \f[I]// \(ti> The clicked items are the ones!\f[R]
    \f[B]if\f[R] (isProfilePage(targetUrl)) {
      \f[B]const\f[R] profile = extractProfileNameFromUrl(targetUrl);

      \f[I]// Set view\-transition\-name values on the elements to animate\f[R]
      document.querySelector(\(ga#${profile} span\(ga).style.viewTransitionName =
        \(dqname\(dq;
      document.querySelector(\(ga#${profile} img\(ga).style.viewTransitionName =
        \(dqavatar\(dq;

      \f[I]// Remove view\-transition\-names after snapshots have been taken\f[R]
      \f[I]// Stops naming conflicts resulting from the page state persisting in BFCache\f[R]
      \f[B]await\f[R] e.viewTransition.finished;
      document.querySelector(\(ga#${profile} span\(ga).style.viewTransitionName =
        \(dqnone\(dq;
      document.querySelector(\(ga#${profile} img\(ga).style.viewTransitionName =
        \(dqnone\(dq;
    }
  }
});
.EE
.RS
.PP
\f[B]Note:\f[R] See \c
.UR https://view-transitions.chrome.dev/profiles/mpa/
List of Chrome DevRel team members
.UE \c
\ for the live demo this code is taken from.
.RE
.SH SEE ALSO
.IP \(bu 2
View Transition API
