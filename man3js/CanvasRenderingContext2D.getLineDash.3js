.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "CanvasRenderingContext2D.getLineDash" "JS" "April 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
CanvasRenderingContext2D.getLineDash \- CanvasRenderingContext2D:
getLineDash() method
.SH SYNOPSIS
The \f[B]\f[CB]getLineDash()\f[B]\f[R] method of the Canvas 2D API\[cq]s
\f[CR]CanvasRenderingContext2D\f[R] interface gets the current line dash
pattern.
.SH SYNTAX
.IP
.EX
getLineDash()
.EE
.SS Parameters
None.
.SS Return value
An \f[CR]Array\f[R] of numbers that specify distances to alternately
draw a line and a gap (in coordinate space units).
If the number, when setting the elements, is odd, the elements of the
array get copied and concatenated.
For example, setting the line dash to \f[CR][5, 15, 25]\f[R] will result
in getting back \f[CR][5, 15, 25, 5, 15, 25]\f[R].
.SH EXAMPLES
.SS Getting the current line dash setting
This example demonstrates the \f[CR]getLineDash()\f[R] method.
.SS HTML
.IP
.EX
<\f[B]canvas\f[R] id=\[dq]canvas\[dq]></\f[B]canvas\f[R]>
.EE
.SS JavaScript
As set by \f[CR]setLineDash()\f[R], strokes consist of lines that are 10
units wide, with spaces of 20 units in between each line.
.IP
.EX
\f[B]const\f[R] canvas = document.getElementById(\[dq]canvas\[dq]);
\f[B]const\f[R] ctx = canvas.getContext(\[dq]2d\[dq]);

ctx.setLineDash([10, 20]);
console.log(ctx.getLineDash()); \f[I]// [10, 20]\f[R]

\f[I]// Draw a dashed line\f[R]
ctx.beginPath();
ctx.moveTo(0, 50);
ctx.lineTo(300, 50);
ctx.stroke();
.EE
.SS Result
.SH SEE ALSO
.IP \[bu] 2
The interface defining this method: \f[CR]CanvasRenderingContext2D\f[R]
.IP \[bu] 2
\f[CR]CanvasRenderingContext2D.setLineDash()\f[R]
.IP \[bu] 2
\f[CR]CanvasRenderingContext2D.lineDashOffset\f[R]
