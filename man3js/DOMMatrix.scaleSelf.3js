.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "DOMMATRIX.SCALESELF" "3JS" "March 20, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
DOMMatrix.scaleSelf \- DOMMatrix: scaleSelf() method
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]scaleSelf()\f[B]\f[R] method of the \f[CR]DOMMatrix\f[R]
interface is a mutable transformation method that modifies a matrix by
applying a specified scaling factor, centered on the given origin, with
a default origin of \f[CR](0, 0)\f[R], returning the scaled matrix.
.PP
To scale a matrix without mutating it, see
\f[CR]DOMMatrixReadOnly.scale()\f[R], which creates a new scaled matrix
while leaving the original unchanged.
.SH SYNTAX
.IP
.EX
scaleSelf()
scaleSelf(scaleX)
scaleSelf(scaleX, scaleY)
scaleSelf(scaleX, scaleY, scaleZ)
scaleSelf(scaleX, scaleY, scaleZ, originX)
scaleSelf(scaleX, scaleY, scaleZ, originX, originY)
scaleSelf(scaleX, scaleY, scaleZ, originX, originY, originZ)
.EE
.SS Parameters
.TP
\f[B]scaleX\f[R] \f[I](optional)\f[R]
A multiplier for the scale value on the x\-axis.
If not supplied, this defaults to \f[CR]1\f[R].
.TP
\f[B]scaleY\f[R] \f[I](optional)\f[R]
A multiplier for the scale value on the y\-axis.
If not supplied, this defaults to the value of \f[CR]scaleX\f[R].
.TP
\f[B]scaleZ\f[R] \f[I](optional)\f[R]
A multiplier for the scale value on the z\-axis.
If this value is anything other than 1, the resulting matrix will be 3D.
.TP
\f[B]originX\f[R] \f[I](optional)\f[R]
An x\-coordinate for the origin of the transformation.
If no origin is supplied, this defaults to 0.
.TP
\f[B]originY\f[R] \f[I](optional)\f[R]
A y\-coordinate for the origin of the transformation.
If no origin is supplied, this defaults to 0.
.TP
\f[B]originZ\f[R] \f[I](optional)\f[R]
A z\-coordinate for the origin of the transformation.
If no origin is supplied, this defaults to 0.
If this value is anything other than 0, the resulting matrix will be 3D.
.SS Return value
Returns itself; a \f[CR]DOMMatrix\f[R].
.PP
If a scale is applied about the z\-axis, the matrix will be a 4âœ•4 3D
matrix.
.SH EXAMPLES
This SVG contains two semi\-opaque squares, one red and one blue, each
positioned at the document origin:
.IP
.EX
<\f[B]svg\f[R] viewBox=\(dq0 0 50 50\(dq height=\(dq200\(dq>
  <\f[B]rect\f[R] width=\(dq25\(dq height=\(dq25\(dq fill=\(dq#f009\(dq />
  <\f[B]rect\f[R] id=\(dqtransformed\(dq width=\(dq25\(dq height=\(dq25\(dq fill=\(dq#00f9\(dq />
</\f[B]svg\f[R]>
.EE
.PP
This JavaScript first creates a matrix, then scales the matrix to one
that halves the width and doubles the height, using the
\f[CR]scaleSelf()\f[R] method.
.PP
The matrix is then applied to the blue square as a \f[CR]transform\f[R],
changing its dimensions and position.
The red square is left unchanged.
.IP
.EX
\f[B]const\f[R] matrix = \f[B]new\f[R] DOMMatrix();
matrix.scaleSelf(0.5, 2);

document
  .querySelector(\(dq#transformed\(dq)
  .setAttribute(\(dqtransform\(dq, matrix.toString());
.EE
.SH SEE ALSO
.IP \(bu 2
\f[CR]DOMMatrixReadOnly.scale()\f[R]
.IP \(bu 2
\f[CR]DOMMatrix.scale3dSelf()\f[R]
.IP \(bu 2
CSS \f[CR]transform\f[R] property and the \f[CR]scaleSelf()\f[R] and
\f[CR]matrix()\f[R] functions
.IP \(bu 2
CSS transforms module
.IP \(bu 2
SVG \f[CR]transform\f[R] attribute
.IP \(bu 2
\f[CR]CanvasRenderingContext2D\f[R] interface \f[CR]transform()\f[R]
method
