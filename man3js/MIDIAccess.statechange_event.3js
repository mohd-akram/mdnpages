.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "MIDIAccess.statechange_event" "JS" "April 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
MIDIAccess.statechange_event \- MIDIAccess: statechange event
.SH SYNOPSIS
\f[B]Secure context\f[R]: This feature is available only in secure
contexts (HTTPS).
.PP
The \f[B]\f[CB]statechange\f[B]\f[R] event of the \f[CR]MIDIAccess\f[R]
interface is fired when a new MIDI port is added or when an existing
port changes state.
.SH SYNTAX
Use the event name in methods like \f[CR]addEventListener()\f[R], or set
an event handler property.
.IP
.EX
addEventListener(\[dq]statechange\[dq], (event) \f[B]=>\f[R] {});

onstatechange = (event) \f[B]=>\f[R] {};
.EE
.SH EVENT TYPE
A \f[CR]MIDIConnectionEvent\f[R].
Inherits from \f[CR]Event\f[R].
.SH EVENT PROPERTIES
.TP
\f[B]MIDIConnectionEvent.port\f[R] \f[I](read\-only)\f[R]
Returns a reference to a \f[CR]MIDIPort\f[R] instance for a port that
has been connected or disconnected.
.SH EXAMPLE
The \f[CR]Navigator.requestMIDIAccess()\f[R] method returns a promise
that resolves with a \f[CR]MIDIAccess\f[R] object.
When a port changes state, information about that port is printed to the
console.
.IP
.EX
navigator.requestMIDIAccess().then((access) \f[B]=>\f[R] {
  access.onstatechange = (event) \f[B]=>\f[R] {
    console.log(event.port.name, event.port.manufacturer, event.port.state);
  };
});
.EE
