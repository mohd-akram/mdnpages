.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "HTMLVideoElement" "JS" "January 25, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
HTMLVideoElement \- HTMLVideoElement
.SH SYNOPSIS
Implemented by the \f[CR]<video>\f[R] element, the
\f[B]\f[CB]HTMLVideoElement\f[B]\f[R] interface provides special
properties and methods for manipulating video objects.
It also inherits properties and methods of \f[CR]HTMLMediaElement\f[R]
and \f[CR]HTMLElement\f[R].
.PP
The list of supported media formats varies from one browser to the
other.
You should either provide your video in a single format that all the
relevant browsers supports, or provide multiple video sources in enough
different formats that all the browsers you need to support are covered.
.SH INSTANCE PROPERTIES
\f[I]Inherits properties from its parent interface,
\f[CI]HTMLMediaElement\f[I], and \f[CI]HTMLElement\f[I].\f[R]
.TP
\f[B]HTMLVideoElement.disablePictureInPicture\f[R]
Indicates if the user agent should suggest the picture\-in\-picture to
users, or not.
.TP
\f[B]HTMLVideoElement.height\f[R]
A string that reflects the \f[CR]height\f[R] HTML attribute, which
specifies the height of the display area, in CSS pixels.
.TP
\f[B]HTMLVideoElement.poster\f[R]
A string that reflects the \f[CR]poster\f[R] HTML attribute, which
specifies an image to show while no video data is available.
.TP
\f[B]HTMLVideoElement.videoHeight\f[R] \f[I](read\-only)\f[R]
Returns an unsigned integer value indicating the intrinsic height of the
resource in CSS pixels, or 0 if no media is available yet.
.TP
\f[B]HTMLVideoElement.videoWidth\f[R] \f[I](read\-only)\f[R]
Returns an unsigned integer value indicating the intrinsic width of the
resource in CSS pixels, or 0 if no media is available yet.
.TP
\f[B]HTMLVideoElement.width\f[R]
A string that reflects the \f[CR]width\f[R] HTML attribute, which
specifies the width of the display area, in CSS pixels.
.SS Gecko\-specific properties
.TP
\f[B]HTMLVideoElement.mozParsedFrames\f[R] \f[I](non\-standard)\f[R] \f[I](read\-only)\f[R] \f[I](deprecated)\f[R]
Returns an \f[CR]unsigned long\f[R] with the count of video frames that
have been parsed from the media resource.
.TP
\f[B]HTMLVideoElement.mozDecodedFrames\f[R] \f[I](non\-standard)\f[R] \f[I](read\-only)\f[R] \f[I](deprecated)\f[R]
Returns an \f[CR]unsigned long\f[R] with the count of parsed video
frames that have been decoded into images.
.TP
\f[B]HTMLVideoElement.mozPresentedFrames\f[R] \f[I](non\-standard)\f[R] \f[I](read\-only)\f[R] \f[I](deprecated)\f[R]
Returns an \f[CR]unsigned long\f[R] with the count of decoded frames
that have been presented to the rendering pipeline for painting.
.TP
\f[B]HTMLVideoElement.mozPaintedFrames\f[R] \f[I](non\-standard)\f[R] \f[I](read\-only)\f[R] \f[I](deprecated)\f[R]
Returns an \f[CR]unsigned long\f[R] with the count of presented frames
which were painted on the screen.
.TP
\f[B]HTMLVideoElement.mozFrameDelay\f[R] \f[I](non\-standard)\f[R] \f[I](read\-only)\f[R] \f[I](deprecated)\f[R]
Returns an \f[CR]double\f[R] with the time which the last painted video
frame was late by, in seconds.
.TP
\f[B]HTMLVideoElement.mozHasAudio\f[R] \f[I](non\-standard)\f[R] \f[I](read\-only)\f[R] \f[I](deprecated)\f[R]
Returns a boolean indicating if there is some audio associated with the
video.
.SH INSTANCE METHODS
\f[I]Inherits methods from its parent interface,
\f[CI]HTMLMediaElement\f[I], and \f[CI]HTMLElement\f[I].\f[R]
.TP
\f[B]HTMLVideoElement.cancelVideoFrameCallback()\f[R]
Cancels a previously\-registered video frame callback (see
\f[CR]requestVideoFrameCallback()\f[R]).
.TP
\f[B]HTMLVideoElement.getVideoPlaybackQuality()\f[R]
Returns a \f[CR]VideoPlaybackQuality\f[R] object that contains the
current playback metrics.
This information includes things like the number of dropped or corrupted
frames, as well as the total number of frames.
.TP
\f[B]HTMLVideoElement.requestPictureInPicture()\f[R]
Requests that the user agent enters the video into picture\-in\-picture
mode.
.TP
\f[B]HTMLVideoElement.requestVideoFrameCallback()\f[R]
Registers a callback function that runs when a new video frame is sent
to the compositor.
This enables developers to perform efficient operations on each video
frame.
.SH EVENTS
\f[I]Inherits events from its parent interface,
\f[CI]HTMLMediaElement\f[I], and \f[CI]HTMLElement\f[I].\f[R]
.PP
Listen to these events using \f[CR]addEventListener()\f[R] or by
assigning an event listener to the \f[CR]oneventname\f[R] property of
this interface.
.TP
\f[B]enterpictureinpicture\f[R]
Fired when the \f[CR]HTMLVideoElement\f[R] enters picture\-in\-picture
mode successfully.
.TP
\f[B]leavepictureinpicture\f[R]
Fired when the \f[CR]HTMLVideoElement\f[R] leaves picture\-in\-picture
mode successfully.
.SH SEE ALSO
.IP \[bu] 2
HTML element implementing this interface: \f[CR]<video>\f[R].
.IP \[bu] 2
Supported media formats
