.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "FLOAT64ARRAY.FLOAT64ARRAY" "3JS" "June 20, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Float64Array.Float64Array \- Float64Array() constructor
.SH SYNOPSIS
The \f[B]\f[CB]Float64Array()\f[B]\f[R] constructor creates
\f[CR]Float64Array\f[R] objects.
The contents are initialized to \f[CR]0\f[R] unless initialization data
is explicitly provided.
.SH SYNTAX
.IP
.EX
new Float64Array()
new Float64Array(length)
new Float64Array(typedArray)
new Float64Array(object)

new Float64Array(buffer)
new Float64Array(buffer, byteOffset)
new Float64Array(buffer, byteOffset, length)
.EE
.RS
.PP
\f[B]Note:\f[R] \f[CR]Float64Array()\f[R] can only be constructed with
\f[CR]new\f[R].
Attempting to call it without \f[CR]new\f[R] throws a
\f[CR]TypeError\f[R].
.RE
.SS Parameters
See \f[CR]TypedArray\f[R].
.SS Exceptions
See \f[CR]TypedArray\f[R].
.SH EXAMPLES
.SS Different ways to create a Float64Array
.IP
.EX
\f[I]// From a length\f[R]
\f[B]const\f[R] float64 = \f[B]new\f[R] Float64Array(2);
float64[0] = 42;
console.log(float64[0]); \f[I]// 42\f[R]
console.log(float64.length); \f[I]// 2\f[R]
console.log(float64.BYTES_PER_ELEMENT); \f[I]// 8\f[R]

\f[I]// From an array\f[R]
\f[B]const\f[R] x = \f[B]new\f[R] Float64Array([21, 31]);
console.log(x[1]); \f[I]// 31\f[R]

\f[I]// From another TypedArray\f[R]
\f[B]const\f[R] y = \f[B]new\f[R] Float64Array(x);
console.log(y[0]); \f[I]// 21\f[R]

\f[I]// From an ArrayBuffer\f[R]
\f[B]const\f[R] buffer = \f[B]new\f[R] ArrayBuffer(64);
\f[B]const\f[R] z = \f[B]new\f[R] Float64Array(buffer, 8, 4);
console.log(z.byteOffset); \f[I]// 8\f[R]

\f[I]// From an iterable\f[R]
\f[B]const\f[R] iterable = (\f[B]function\f[R]* () {
  \f[B]yield\f[R]* [1, 2, 3];
})();
\f[B]const\f[R] float64FromIterable = \f[B]new\f[R] Float64Array(iterable);
console.log(float64FromIterable);
\f[I]// Float64Array [1, 2, 3]\f[R]
.EE
.SH SEE ALSO
.IP \(bu 2
\c
.UR https://github.com/zloirock/core-js#ecmascript-typed-arrays
Polyfill of \f[CR]Float64Array\f[R] in \f[CR]core\-js\f[R]
.UE \c
.IP \(bu 2
JavaScript typed arrays guide
.IP \(bu 2
\f[CR]TypedArray\f[R]
.IP \(bu 2
\f[CR]ArrayBuffer\f[R]
.IP \(bu 2
\f[CR]DataView\f[R]
