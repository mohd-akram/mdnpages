.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "PerformanceEntry.startTime" "JS" "July 26, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
PerformanceEntry.startTime \- PerformanceEntry: startTime property
.SH SYNOPSIS
The read\-only \f[B]\f[CB]startTime\f[B]\f[R] property returns the first
timestamp recorded for this \f[CR]PerformanceEntry\f[R].
The meaning of this property depends on the value of this entry\[cq]s
\f[CR]entryType\f[R].
.SH VALUE
A \f[CR]DOMHighResTimeStamp\f[R] representing the first timestamp when
the \f[CR]PerformanceEntry\f[R] was created.
.PP
The meaning of this property depends on the value of this performance
entry\[cq]s \f[CR]entryType\f[R]:
.TP
\f[B]element\f[R]
Either the value of this entry\[cq]s \f[CR]renderTime\f[R] if it is not
\f[CR]0\f[R], otherwise the value of this entry\[cq]s
\f[CR]loadTime\f[R].
.TP
\f[B]event\f[R]
The time the event was created, i.e.\ the event\[cq]s
\f[CR]timeStamp\f[R] property.
.TP
\f[B]first\-input\f[R]
The time the first input event was created, i.e.\ that event\[cq]s
\f[CR]timeStamp\f[R].
.TP
\f[B]largest\-contentful\-paint\f[R]
The value of this entry\[cq]s \f[CR]renderTime\f[R] if it is not
\f[CR]0\f[R], otherwise the value of this entry\[cq]s
\f[CR]loadTime\f[R].
.TP
\f[B]layout\-shift\f[R]
The time when the layout shift started.
.TP
\f[B]longtask\f[R]
The time when the task started.
.TP
\f[B]mark\f[R]
The time at which the mark was created by a call to
\f[CR]performance.mark()\f[R].
.TP
\f[B]measure\f[R]
The time at which the measure was created by a call to
\f[CR]performance.measure()\f[R].
.TP
\f[B]navigation\f[R]
Always \f[CR]0\f[R].
.TP
\f[B]paint\f[R]
The time when the paint occurred.
.TP
\f[B]resource\f[R]
The value of this entry\[cq]s \f[CR]fetchStart\f[R] property.
.TP
\f[B]taskattribution\f[R]
Always \f[CR]0\f[R].
.TP
\f[B]visibility\-state\f[R]
The time when the visibility state change occurred.
.SH EXAMPLES
.SS Using the startTime property
The following example shows the use of the \f[CR]startTime\f[R] property
which you can log during performance observation.
.PP
Note: The \f[CR]performance.mark()\f[R] method allows you to set your
own \f[CR]startTime\f[R], and the \f[CR]performance.measure()\f[R]
method allows to set the start of the measure.
.IP
.EX
performance.mark(\[dq]my\-mark\[dq]);
performance.mark(\[dq]my\-other\-mark\[dq], { startTime: 12.5 });

loginButton.addEventListener(\[dq]click\[dq], (clickEvent) \f[B]=>\f[R] {
  performance.measure(\[dq]login\-click\[dq], { start: clickEvent.timeStamp });
});

\f[B]function\f[R] perfObserver(list, observer) {
  list.getEntries().forEach((entry) \f[B]=>\f[R] {
    \f[B]if\f[R] (entry.entryType === \[dq]mark\[dq]) {
      console.log(\[ga]${entry.name}\[aq]s startTime: ${entry.startTime}\[ga]);
    }
    \f[B]if\f[R] (entry.entryType === \[dq]measure\[dq]) {
      console.log(\[ga]${entry.name}\[aq]s duration: ${entry.duration}\[ga]);
    }
  });
}
\f[B]const\f[R] observer = \f[B]new\f[R] PerformanceObserver(perfObserver);
observer.observe({ entryTypes: [\[dq]measure\[dq], \[dq]mark\[dq]] });
.EE
