.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "IMAGECAPTURE.GETPHOTOCAPABILITIES" "3JS" "February 26, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
ImageCapture.getPhotoCapabilities \- ImageCapture:
getPhotoCapabilities() method
.SH SYNOPSIS
The \f[B]\f[CB]getPhotoCapabilities()\f[B]\f[R] method of the
\f[CR]ImageCapture\f[R] interface returns a \f[CR]Promise\f[R] that
resolves with an object containing the ranges of available configuration
options.
.SH SYNTAX
.IP
.EX
getPhotoCapabilities()
.EE
.SS Parameters
None.
.SS Return value
A \f[CR]Promise\f[R] that resolves with an object containing the
following properties:
.TP
\f[B]redEyeReduction\f[R]
Returns one of \f[CR]\(dqnever\(dq\f[R], \f[CR]\(dqalways\(dq\f[R], or
\f[CR]\(dqcontrollable\(dq\f[R].
The \f[CR]\(dqcontrollable\(dq\f[R] value means the device\(cqs red\-eye
reduction is controllable by the user.
.TP
\f[B]imageHeight\f[R]
Returns an object indicating the image height range supported by the
user agent.
.TP
\f[B]imageWidth\f[R]
Returns an object indicating the image width range supported by the user
agent.
.TP
\f[B]fillLightMode\f[R]
Returns an array of available fill light options.
Options include \f[CR]auto\f[R], \f[CR]off\f[R], or \f[CR]flash\f[R].
.SS Exceptions
.TP
\f[B]InvalidStateError\f[R] \f[B]DOMException\f[R]
Thrown if \f[CR]readyState\f[R] property of the
\f[CR]MediaStreamTrack\f[R] passing in the constructor is not
\f[CR]live\f[R].
.TP
\f[B]OperationError\f[R] \f[B]DOMException\f[R]
Thrown if the operation can\(cqt complete for any reason.
.SH EXAMPLES
The following example, extracted from \c
.UR https://googlechrome.github.io/samples/image-capture/photo-resolution.html
Chrome\(cqs Image Capture / Photo Resolution Sample
.UE \c
, uses the results from \f[CR]getPhotoCapabilities()\f[R] to modify the
size of an input range.
This example also shows how the \f[CR]ImageCapture\f[R] object is
created using a \f[CR]MediaStreamTrack\f[R] retrieved from a device\(cqs
\f[CR]MediaStream\f[R].
.IP
.EX
\f[B]const\f[R] input = document.querySelector(\(aqinput[type=\(dqrange\(dq]\(aq);

\f[B]let\f[R] imageCapture;

navigator.mediaDevices
  .getUserMedia({ video: \f[B]true\f[R] })
  .then((mediaStream) \f[B]=>\f[R] {
    document.querySelector(\(dqvideo\(dq).srcObject = mediaStream;

    \f[B]const\f[R] track = mediaStream.getVideoTracks()[0];
    imageCapture = \f[B]new\f[R] ImageCapture(track);

    \f[B]return\f[R] imageCapture.getPhotoCapabilities();
  })
  .then((photoCapabilities) \f[B]=>\f[R] {
    \f[B]const\f[R] settings = imageCapture.track.getSettings();

    input.min = photoCapabilities.imageWidth.min;
    input.max = photoCapabilities.imageWidth.max;
    input.step = photoCapabilities.imageWidth.step;

    \f[B]return\f[R] imageCapture.getPhotoSettings();
  })
  .then((photoSettings) \f[B]=>\f[R] {
    input.value = photoSettings.imageWidth;
  })
  .catch((error) \f[B]=>\f[R] console.error(\(dqArgh!\(dq, error.name || error));
.EE
