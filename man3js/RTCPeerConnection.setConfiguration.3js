.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "RTCPeerConnection.setConfiguration" "JS" "October 16, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
RTCPeerConnection.setConfiguration \- RTCPeerConnection:
setConfiguration() method
.SH SYNOPSIS
The \f[B]\f[CB]setConfiguration()\f[B]\f[R] method of the
\f[CR]RTCPeerConnection\f[R] interface sets the current configuration of
the connection based on the values included in the specified object.
This lets you change the ICE servers used by the connection and which
transport policies to use.
.PP
The most common use case for this method (and even then, probably not a
very common use case) is to replace the set of ICE servers to be used.
Two potential scenarios in which this might be done:
.IP \[bu] 2
The \f[CR]RTCPeerConnection\f[R] was instantiated without specifying any
ICE servers.
If, for example, the \f[CR]RTCPeerConnection()\f[R] constructor was
called with no parameters, you would have to then call
\f[CR]setConfiguration()\f[R] to add ICE servers before ICE negotiation
could begin.
.IP \[bu] 2
Renegotiation of the connection is needed, and a different set of ICE
servers needs to be used for some reason.
Perhaps the user has moved into a new region, so using new regional ICE
servers is necessary, for example.
In this situation, one might call \f[CR]setConfiguration()\f[R] to
switch to new regional ICE servers, then initiate an ICE restart.
.RS
.PP
\f[B]Note:\f[R] You cannot change the identity information for a
connection once it\[cq]s already been set.
.RE
.SH SYNTAX
.IP
.EX
setConfiguration(configuration)
.EE
.SS Parameters
.TP
\f[B]configuration\f[R]
An object which provides the options to be set.
The changes are not additive; instead, the new values completely replace
the existing ones.
See \f[CR]RTCPeerConnection()\f[R] for more information on what options
are allowed.
.SS Exceptions
.TP
\f[B]InvalidAccessError\f[R] \f[B]DOMException\f[R]
Thrown if one or more of the URLs specified in
\f[CR]configuration.iceServers\f[R] is a TURN server, but complete login
information is not provided (that is, either the \f[CR]username\f[R] or
\f[CR]credential\f[R] is missing, or if \f[CR]credentialType\f[R] is
\f[CR]\[dq]password\[dq]\f[R] and \f[CR]credential\f[R] is not a
string).
This prevents successful login to the server.
.TP
\f[B]InvalidModificationError\f[R] \f[B]DOMException\f[R]
Thrown if the \f[CR]configuration\f[R] includes changed identity
information, but the connection already has identity information
specified.
This happens if \f[CR]configuration.peerIdentity\f[R] or
\f[CR]configuration.certificates\f[R] are set and their values differ
from the current configuration.
This may also be thrown if there are changes to
\f[CR]configuration.bundlePolicy\f[R] or
\f[CR]configuration.rtcpMuxPolicy\f[R], or to
\f[CR]configuration.iceCandidatePoolSize\f[R] when
\f[CR]RTCPeerConnection.setLocalDescription()\f[R] has already been
called.
.TP
\f[B]InvalidStateError\f[R] \f[B]DOMException\f[R]
Thrown if the \f[CR]RTCPeerConnection\f[R] is closed.
.TP
\f[B]SyntaxError\f[R] \f[B]DOMException\f[R]
Thrown if the \f[CR]configuration.iceServers\f[R] contains no URLs or if
one of the values in the list is invalid.
.TP
\f[B]NotSupportedError\f[R] \f[B]DOMException\f[R]
Thrown if \f[CR]configuration.iceServers\f[R] contains a URL with a
scheme that is not supported.
.SH EXAMPLE
In this example, it has already been determined that ICE restart is
needed, and that negotiation needs to be done using a different ICE
server.
.IP
.EX
\f[B]const\f[R] restartConfig = {
  iceServers: [
    {
      urls: \[dq]turn:asia.turn\-server.net\[dq],
      username: \[dq]allie\[at]oopcode.com\[dq],
      credential: \[dq]topsecretpassword\[dq],
    },
  ],
};

myPeerConnection.setConfiguration(restartConfig);

myPeerConnection
  .createOffer({ iceRestart: \f[B]true\f[R] })
  .then((offer) \f[B]=>\f[R] myPeerConnection.setLocalDescription(offer))
  .then(() \f[B]=>\f[R] {
    \f[I]// send the offer to the other peer using the signaling server\f[R]
  })
  .catch(window.reportError);
.EE
.PP
First, a new object is created, \f[CR]restartConfig\f[R], specifying the
new ICE server and its credentials.
This is then passed into \f[CR]setConfiguration()\f[R].
ICE negotiation is restarted by calling \f[CR]createOffer()\f[R],
specifying \f[CR]true\f[R] as the value of the \f[CR]iceRestart\f[R]
option.
From there, we handle the process as usual, by setting the local
description to the returned offer and then sending that offer to the
other peer.
.SH SEE ALSO
.IP \[bu] 2
\f[CR]RTCPeerConnection.getConfiguration()\f[R]
.IP \[bu] 2
\f[CR]RTCPeerConnection()\f[R]
.IP \[bu] 2
\f[CR]RTCPeerConnection\f[R]
