.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "ELEMENT.COPY_EVENT" "3JS" "May 16, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Element.copy_event \- Element: copy event
.SH SYNOPSIS
The \f[B]\f[CB]copy\f[B]\f[R] event of the Clipboard API fires when the
user initiates a copy action through the browser\(cqs user interface.
.PP
The event\(cqs default action is to copy the selection (if any) to the
clipboard.
.PP
A handler for this event can \f[I]modify\f[R] the clipboard contents by
calling \f[CR]setData(format, data)\f[R] on the event\(cqs
\f[CR]ClipboardEvent.clipboardData\f[R] property, and cancelling the
event\(cqs default action using \f[CR]event.preventDefault()\f[R].
.PP
However, the handler cannot \f[I]read\f[R] the clipboard data.
.PP
It\(cqs possible to construct and dispatch a synthetic \f[CR]copy\f[R]
event, but this will not affect the system clipboard.
.PP
This event bubbles up the DOM tree, eventually to \f[CR]Document\f[R]
and \f[CR]Window\f[R], is cancelable and is composed.
.SH SYNTAX
Use the event name in methods like \f[CR]addEventListener()\f[R], or set
an event handler property.
.IP
.EX
addEventListener(\(dqcopy\(dq, (event) => { })

oncopy = (event) => { }
.EE
.SH EVENT TYPE
A \f[CR]ClipboardEvent\f[R].
Inherits from \f[CR]Event\f[R].
.SH EXAMPLES
.SS Live example
.SS HTML
.IP
.EX
<\f[B]div\f[R] class=\(dqsource\(dq contenteditable=\(dqtrue\(dq>Copy text from this box.</\f[B]div\f[R]>
<\f[B]div\f[R] class=\(dqtarget\(dq contenteditable=\(dqtrue\(dq>And paste it into this one.</\f[B]div\f[R]>
.EE
.SS JavaScript
.IP
.EX
\f[B]const\f[R] source = document.querySelector(\(dqdiv.source\(dq);

source.addEventListener(\(dqcopy\(dq, (event) \f[B]=>\f[R] {
  \f[B]const\f[R] selection = document.getSelection();
  event.clipboardData.setData(\(dqtext/plain\(dq, selection.toString().toUpperCase());
  event.preventDefault();
});
.EE
.SS Result
.SH SEE ALSO
.IP \(bu 2
\f[CR]cut\f[R] event
.IP \(bu 2
\f[CR]paste\f[R] event
