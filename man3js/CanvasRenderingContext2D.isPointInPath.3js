.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "CanvasRenderingContext2D.isPointInPath" "JS" "April 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
CanvasRenderingContext2D.isPointInPath \- CanvasRenderingContext2D:
isPointInPath() method
.SH SYNOPSIS
The \f[B]\f[CB]CanvasRenderingContext2D.isPointInPath()\f[B]\f[R] method
of the Canvas 2D API reports whether or not the specified point is
contained in the current path.
.SH SYNTAX
.IP
.EX
isPointInPath(x, y)
isPointInPath(x, y, fillRule)
isPointInPath(path, x, y)
isPointInPath(path, x, y, fillRule)
.EE
.SS Parameters
.TP
\f[B]x\f[R]
The x\-axis coordinate of the point to check, unaffected by the current
transformation of the context.
.TP
\f[B]y\f[R]
The y\-axis coordinate of the point to check, unaffected by the current
transformation of the context.
.TP
\f[B]fillRule\f[R]
The algorithm by which to determine if a point is inside or outside the
path.
Possible values:
.RS
.TP
\f[B]nonzero\f[R]
The \c
.UR https://en.wikipedia.org/wiki/Nonzero-rule
non\-zero winding rule
.UE \c
\&.
Default rule.
.TP
\f[B]evenodd\f[R]
The \c
.UR https://en.wikipedia.org/wiki/Even%E2%80%93odd_rule
even\-odd winding rule
.UE \c
\&.
.RE
.TP
\f[B]path\f[R]
A \f[CR]Path2D\f[R] path to check against.
If unspecified, the current path is used.
.SS Return value
.TP
A boolean value
A Boolean, which is \f[CR]true\f[R] if the specified point is contained
in the current or specified path, otherwise \f[CR]false\f[R].
.SH EXAMPLES
.SS Checking a point in the current path
This example uses the \f[CR]isPointInPath()\f[R] method to check if a
point is within the current path.
.SS HTML
.IP
.EX
<\f[B]canvas\f[R] id=\[dq]canvas\[dq]></\f[B]canvas\f[R]>
<\f[B]p\f[R]>In path: <\f[B]code\f[R] id=\[dq]result\[dq]>false</\f[B]code\f[R]></\f[B]p\f[R]>
.EE
.SS JavaScript
.IP
.EX
\f[B]const\f[R] canvas = document.getElementById(\[dq]canvas\[dq]);
\f[B]const\f[R] ctx = canvas.getContext(\[dq]2d\[dq]);
\f[B]const\f[R] result = document.getElementById(\[dq]result\[dq]);

ctx.rect(10, 10, 100, 100);
ctx.fill();
result.innerText = ctx.isPointInPath(30, 70);
.EE
.SS Result
.SS Checking a point in the specified path
Whenever you move the mouse, this example checks whether the cursor is
in a circular \f[CR]Path2D\f[R] path.
If yes, the circle becomes green, otherwise it is red.
.SS HTML
.IP
.EX
<\f[B]canvas\f[R] id=\[dq]canvas\[dq]></\f[B]canvas\f[R]>
.EE
.SS JavaScript
.IP
.EX
\f[B]const\f[R] canvas = document.getElementById(\[dq]canvas\[dq]);
\f[B]const\f[R] ctx = canvas.getContext(\[dq]2d\[dq]);

\f[I]// Create circle\f[R]
\f[B]const\f[R] circle = \f[B]new\f[R] Path2D();
circle.arc(150, 75, 50, 0, 2 * Math.PI);
ctx.fillStyle = \[dq]red\[dq];
ctx.fill(circle);

\f[I]// Listen for mouse moves\f[R]
canvas.addEventListener(\[dq]mousemove\[dq], (event) \f[B]=>\f[R] {
  \f[I]// Check whether point is inside circle\f[R]
  \f[B]const\f[R] isPointInPath = ctx.isPointInPath(circle, event.offsetX, event.offsetY);
  ctx.fillStyle = isPointInPath ? \[dq]green\[dq] : \[dq]red\[dq];

  \f[I]// Draw circle\f[R]
  ctx.clearRect(0, 0, canvas.width, canvas.height);
  ctx.fill(circle);
});
.EE
.SS Result
.SS Gecko\-specific note
.IP \[bu] 2
Prior to Gecko 7.0 (Firefox 7.0 / Thunderbird 7.0 / SeaMonkey 2.4), this
method incorrectly failed to multiply the specified point\[cq]s
coordinates by the current transformation matrix before comparing it to
the path.
Now this method works correctly even if the context is rotated, scaled,
or otherwise transformed.
.SH SEE ALSO
.IP \[bu] 2
The interface defining this method: \f[CR]CanvasRenderingContext2D\f[R]
