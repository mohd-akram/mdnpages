.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "RTCREMOTEINBOUNDRTPSTREAMSTATS" "3JS" "April 2, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
RTCRemoteInboundRtpStreamStats \- RTCRemoteInboundRtpStreamStats
.SH SYNOPSIS
The \f[B]\f[CB]RTCRemoteInboundRtpStreamStats\f[B]\f[R] dictionary of
the WebRTC API is used to report statistics from the remote endpoint
about a particular incoming RTP stream.
These will correspond to an outgoing RTP stream at the local end of the
\f[CR]RTCPeerConnection\f[R].
.PP
The statistics can be obtained by iterating the
\f[CR]RTCStatsReport\f[R] returned by
\f[CR]RTCPeerConnection.getStats()\f[R] or
\f[CR]RTCRtpReceiver.getStats()\f[R] until you find a report with the
\f[CR]type\f[R] of \f[CR]remote\-inbound\-rtp\f[R].
.SH INSTANCE PROPERTIES
.SS Remote inbound specific statistics
.TP
\f[B]fractionLost\f[R] \f[I](optional)\f[R]
A number indicating the fraction of packets lost for this SSRC since the
last sender or receiver report.
.TP
\f[B]localId\f[R] \f[I](optional)\f[R]
A string that is used to find the local
\f[CR]RTCOutboundRtpStreamStats\f[R] object that shares the same
synchronization source (SSRC).
.TP
\f[B]roundTripTime\f[R] \f[I](optional)\f[R]
A number that indicates the estimated round trip time (RTT) for this
SSRC, in seconds.
This property will not exist until valid RTT data has been received.
.TP
\f[B]roundTripTimeMeasurements\f[R] \f[I](optional)\f[R]
A positive integer indicating the total number of valid round trip time
measurements received for this synchronization source (SSRC).
.TP
\f[B]totalRoundTripTime\f[R] \f[I](optional)\f[R]
A number indicating the cumulative sum of all round trip time
measurements since the beginning of the session, in seconds.
The average round trip time can be computed by dividing
\f[CR]totalRoundTripTime\f[R] by \f[CR]roundTripTimeMeasurements\f[R].
.SS Received RTP stream statistics
.TP
\f[B]jitter\f[R] \f[I](optional)\f[R]
A number indicating the packet jitter for this synchronization source,
measured in seconds.
.TP
\f[B]packetsLost\f[R] \f[I](optional)\f[R]
An integer indicating the total number of RTP packets lost for this
SSRC, as measured at the remote endpoint.
This value can be negative if duplicate packets were received.
.TP
\f[B]packetsReceived\f[R] \f[I](optional)\f[R] \f[I](experimental)\f[R]
A positive integer indicating the total number of RTP packets received
for this SSRC, including retransmissions.
.SS Common RTP stream statistics
.TP
\f[B]codecId\f[R] \f[I](optional)\f[R]
A string that uniquely identifies the object that was inspected to
produce the \f[CR]RTCCodecStats\f[R] object associated with this RTP
stream.
.TP
\f[B]kind\f[R]
A string indicating whether the \f[CR]MediaStreamTrack\f[R] associated
with the stream is an audio or a video track.
.TP
\f[B]ssrc\f[R]
A positive integer that identifies the SSRC of the RTP packets in this
stream.
.TP
\f[B]transportId\f[R] \f[I](optional)\f[R]
A string that uniquely identifies the object which was inspected to
produce the \f[CR]RTCTransportStats\f[R] object associated with this RTP
stream.
.SS Common instance properties
The following properties are common to all WebRTC statistics objects.
.TP
\f[B]id\f[R]
A string that uniquely identifies the object that is being monitored to
produce this set of statistics.
.TP
\f[B]timestamp\f[R]
A \f[CR]DOMHighResTimeStamp\f[R] object indicating the time at which the
sample was taken for this statistics object.
.TP
\f[B]type\f[R]
A string with the value \f[CR]\(dqinbound\-rtp\(dq\f[R], indicating the
type of statistics that the object contains.
.SH EXAMPLES
Given a variable \f[CR]peerConnection\f[R] that is an instance of an
\f[CR]RTCPeerConnection\f[R], the code below uses \f[CR]await\f[R] to
wait for the statistics report, and then iterates it using
\f[CR]RTCStatsReport.forEach()\f[R].
It then filters the dictionaries for just those reports that have the
type of \f[CR]remote\-inbound\-rtp\f[R] and logs the result.
.IP
.EX
\f[B]const\f[R] stats = \f[B]await\f[R] myPeerConnection.getStats();

stats.forEach((report) \f[B]=>\f[R] {
  \f[B]if\f[R] (report.type === \(dqremote\-inbound\-rtp\(dq) {
    console.log(\(dqRemote Inbound RTP Stream Stats:\(dq);
    console.log(\(gaid: ${report.id}\(ga);
    console.log(\(gatimestamp: ${report.timestamp}\(ga);
    console.log(\(gatransportId: ${report.transportId}\(ga);
    console.log(\(gassrc: ${report.ssrc}\(ga);
    console.log(\(gakind: ${report.kind}\(ga);
    console.log(\(gacodecId: ${report.codecId}\(ga);
    console.log(\(gapacketsReceived: ${report.packetsReceived}\(ga);
    console.log(\(gapacketsLost: ${report.packetsLost}\(ga);
    console.log(\(gajitter: ${report.jitter}\(ga);
    console.log(\(gatotalRoundTripTime: ${report.totalRoundTripTime}\(ga);
    console.log(
      \(garoundTripTimeMeasurements: ${report.roundTripTimeMeasurements}\(ga,
    );
    console.log(\(garoundTripTime: ${report.roundTripTime}\(ga);
    console.log(\(galocalId: ${report.localId}\(ga);
    console.log(\(gafractionLost: ${report.fractionLost}\(ga);
  }
});
.EE
.SH SEE ALSO
.IP \(bu 2
\f[CR]RTCStatsReport\f[R]
