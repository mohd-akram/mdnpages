.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "TypedArray.toSorted" "JS" "March 15, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
TypedArray.toSorted \- TypedArray.prototype.toSorted()
.SH SYNOPSIS
The \f[B]\f[CB]toSorted()\f[B]\f[R] method of \f[CR]TypedArray\f[R]
instances is the copying version of the \f[CR]sort()\f[R] method.
It returns a new typed array with the elements sorted in ascending
order.
This method has the same algorithm as
\f[CR]Array.prototype.toSorted()\f[R], except that it sorts the values
numerically instead of as strings by default.
.SH SYNTAX
.IP
.EX
toSorted()
toSorted(compareFn)
.EE
.SS Parameters
.TP
\f[B]compareFn\f[R] \f[I](optional)\f[R]
A function that determines the order of the elements.
If omitted, the typed array elements are sorted according to numeric
value.
See \f[CR]sort()\f[R] for more information.
.SS Return value
A new typed array with the elements sorted in ascending order.
.SH DESCRIPTION
See \f[CR]Array.prototype.toSorted()\f[R] for more details.
This method is not generic and can only be called on typed array
instances.
.SH EXAMPLES
.SS Sorting an array
For more examples, see also the \f[CR]Array.prototype.sort()\f[R]
method.
.IP
.EX
\f[B]const\f[R] numbers = \f[B]new\f[R] Uint8Array([40, 1, 5, 200]);
\f[B]const\f[R] numberSorted = numbers.toSorted();
console.log(numberSorted); \f[I]// Uint8Array [ 1, 5, 40, 200 ]\f[R]
\f[I]// Unlike plain Arrays, a compare function is not required\f[R]
\f[I]// to sort the numbers numerically.\f[R]
console.log(numbers); \f[I]// Uint8Array [ 40, 1, 5, 200 ]\f[R]
.EE
.SH SEE ALSO
.IP \[bu] 2
\c
.UR https://github.com/zloirock/core-js#change-array-by-copy
Polyfill of \f[CR]TypedArray.prototype.toSorted\f[R] in
\f[CR]core\-js\f[R]
.UE \c
.IP \[bu] 2
JavaScript typed arrays guide
.IP \[bu] 2
\f[CR]TypedArray.prototype.sort()\f[R]
.IP \[bu] 2
\f[CR]TypedArray.prototype.toReversed()\f[R]
.IP \[bu] 2
\f[CR]TypedArray.prototype.with()\f[R]
.IP \[bu] 2
\f[CR]Array.prototype.toSorted()\f[R]
