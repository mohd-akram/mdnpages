.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "CanvasRenderingContext2D.textRendering" "JS" "September 9, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
CanvasRenderingContext2D.textRendering \- CanvasRenderingContext2D:
textRendering property
.SH SYNOPSIS
The \f[B]\f[CB]CanvasRenderingContext2D.textRendering\f[B]\f[R] property
of the Canvas API provides information to the rendering engine about
what to optimize for when rendering text.
.PP
The values correspond to the SVG \f[CR]text\-rendering\f[R] attribute
(and CSS \f[CR]text\-rendering\f[R] property).
.SH VALUE
A text\-rendering hint to the browser engine.
This one of:
.TP
\f[B]auto\f[R]
The browser makes educated guesses about when to optimize for speed,
legibility, and geometric precision while drawing text.
.TP
\f[B]optimizeSpeed\f[R]
The browser emphasizes rendering speed over legibility and geometric
precision when drawing text.
It disables kerning and ligatures.
.TP
\f[B]optimizeLegibility\f[R]
The browser emphasizes legibility over rendering speed and geometric
precision.
This enables kerning and optional ligatures.
.TP
\f[B]geometricPrecision\f[R]
The browser emphasizes geometric precision over rendering speed and
legibility.
Certain aspects of fonts \[em] such as kerning \[em] don\[cq]t scale
linearly.
For large scale factors, you might see less\-than\-beautiful text
rendering, but the size is what you would expect (neither rounded up nor
down to the nearest font size supported by the underlying operating
system).
.PP
The property can be used to get or set the value.
.SH EXAMPLES
In this example we display the text \[lq]Hello World\[rq] using each of
the supported values of the \f[CR]textRendering\f[R] property.
The value is also displayed for each case by reading the property.
.SS HTML
.IP
.EX
<\f[B]canvas\f[R] id=\[dq]canvas\[dq] width=\[dq]700\[dq] height=\[dq]220\[dq]></\f[B]canvas\f[R]>
.EE
.SS JavaScript
.IP
.EX
\f[B]const\f[R] canvas = document.getElementById(\[dq]canvas\[dq]);
\f[B]const\f[R] ctx = canvas.getContext(\[dq]2d\[dq]);
ctx.font = \[dq]20px serif\[dq];

\f[I]// Default (auto)\f[R]
ctx.fillText(\[ga]Hello world (default: ${ctx.textRendering})\[ga], 5, 20);

\f[I]// Text rendering: optimizeSpeed\f[R]
ctx.textRendering = \[dq]optimizeSpeed\[dq];
ctx.fillText(\[ga]Hello world (${ctx.textRendering})\[ga], 5, 50);

\f[I]// Text rendering: optimizeLegibility\f[R]
ctx.textRendering = \[dq]optimizeLegibility\[dq];
ctx.fillText(\[ga]Hello world (${ctx.textRendering})\[ga], 5, 80);

\f[I]// Text rendering: geometricPrecision\f[R]
ctx.textRendering = \[dq]geometricPrecision\[dq];
ctx.fillText(\[ga]Hello world (${ctx.textRendering})\[ga], 5, 110);
.EE
.SS Result
