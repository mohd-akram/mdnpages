.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "CanvasRenderingContext2D.lineCap" "JS" "July 26, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
CanvasRenderingContext2D.lineCap \- CanvasRenderingContext2D: lineCap
property
.SH SYNOPSIS
The \f[B]\f[CB]CanvasRenderingContext2D.lineCap\f[B]\f[R] property of
the Canvas 2D API determines the shape used to draw the end points of
lines.
.RS
.PP
\f[B]Note:\f[R] Lines can be drawn with the \f[CR]stroke()\f[R],
\f[CR]strokeRect()\f[R], and \f[CR]strokeText()\f[R] methods.
.RE
.SH VALUE
One of the following:
.TP
\f[B]\[dq]butt\[dq]\f[R]
The ends of lines are squared off at the endpoints.
Default value.
.TP
\f[B]\[dq]round\[dq]\f[R]
The ends of lines are rounded.
.TP
\f[B]\[dq]square\[dq]\f[R]
The ends of lines are squared off by adding a box with an equal width
and half the height of the line\[cq]s thickness.
.SH EXAMPLES
.SS Changing the shape of line caps
This example rounds the end caps of a straight line.
.SS HTML
.IP
.EX
<\f[B]canvas\f[R] id=\[dq]canvas\[dq]></\f[B]canvas\f[R]>
.EE
.SS JavaScript
.IP
.EX
\f[B]const\f[R] canvas = document.getElementById(\[dq]canvas\[dq]);
\f[B]const\f[R] ctx = canvas.getContext(\[dq]2d\[dq]);

ctx.beginPath();
ctx.moveTo(20, 20);
ctx.lineWidth = 15;
ctx.lineCap = \[dq]round\[dq];
ctx.lineTo(100, 100);
ctx.stroke();
.EE
.SS Result
.SS Comparison of line caps
In this example three lines are drawn, each with a different value for
the \f[CR]lineCap\f[R] property.
Two guides to see the exact differences between the three are added.
Each of these lines starts and ends exactly on these guides.
.PP
The line on the left uses the default \f[CR]\[dq]butt\[dq]\f[R] option.
It\[cq]s drawn completely flush with the guides.
The second is set to use the \f[CR]\[dq]round\[dq]\f[R] option.
This adds a semicircle to the end that has a radius half the width of
the line.
The line on the right uses the \f[CR]\[dq]square\[dq]\f[R] option.
This adds a box with an equal width and half the height of the line
thickness.
.IP
.EX
\f[B]const\f[R] canvas = document.getElementById(\[dq]canvas\[dq]);
\f[B]const\f[R] ctx = canvas.getContext(\[dq]2d\[dq]);

\f[I]// Draw guides\f[R]
ctx.strokeStyle = \[dq]#09f\[dq];
ctx.beginPath();
ctx.moveTo(10, 10);
ctx.lineTo(140, 10);
ctx.moveTo(10, 140);
ctx.lineTo(140, 140);
ctx.stroke();

\f[I]// Draw lines\f[R]
ctx.strokeStyle = \[dq]black\[dq];
[\[dq]butt\[dq], \[dq]round\[dq], \[dq]square\[dq]].forEach((lineCap, i) \f[B]=>\f[R] {
  ctx.lineWidth = 15;
  ctx.lineCap = lineCap;
  ctx.beginPath();
  ctx.moveTo(25 + i * 50, 10);
  ctx.lineTo(25 + i * 50, 140);
  ctx.stroke();
});
.EE
.SS WebKit/Blink\-specific notes
.IP \[bu] 2
In WebKit\- and Blink\-based Browsers, a non\-standard and deprecated
method \f[CR]ctx.setLineCap()\f[R] is implemented in addition to this
property.
.SH SEE ALSO
.IP \[bu] 2
The interface defining this property:
\f[CR]CanvasRenderingContext2D\f[R]
.IP \[bu] 2
\f[CR]CanvasRenderingContext2D.lineWidth\f[R]
.IP \[bu] 2
\f[CR]CanvasRenderingContext2D.lineJoin\f[R]
.IP \[bu] 2
Applying styles and color
