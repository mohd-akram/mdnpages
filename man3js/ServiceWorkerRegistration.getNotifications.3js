.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "ServiceWorkerRegistration.getNotifications" "JS" "March 6, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
ServiceWorkerRegistration.getNotifications \- ServiceWorkerRegistration:
getNotifications() method
.SH SYNOPSIS
\f[B]Secure context:\f[R] This feature is available only in secure
contexts (HTTPS).
.PP
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]getNotifications()\f[B]\f[R] method of the
\f[CR]ServiceWorkerRegistration\f[R] interface returns a list of the
notifications in the order that they were created from the current
origin via the current service worker registration.
Origins can have many active but differently\-scoped service worker
registrations.
Notifications created by one service worker on the same origin will not
be available to other active service workers on that same origin.
.SH SYNTAX
.IP
.EX
getNotifications()
getNotifications(options)
.EE
.SS Parameters
.TP
\f[B]options\f[R] \f[I](optional)\f[R]
An object containing options to filter the notifications returned.
The available options are:
.RS
.TP
\f[B]tag\f[R] \f[I](optional)\f[R]
A string representing a notification tag.
If specified, only notifications that have this tag will be returned.
.RE
.SS Return value
A \f[CR]Promise\f[R] that resolves to a list of \f[CR]Notification\f[R]
objects.
.SH EXAMPLES
.IP
.EX
navigator.serviceWorker.register(\[dq]sw.js\[dq]);

\f[B]const\f[R] options = { tag: \[dq]user_alerts\[dq] };

navigator.serviceWorker.ready.then((registration) \f[B]=>\f[R] {
  registration.getNotifications(options).then((notifications) \f[B]=>\f[R] {
    \f[I]// do something with your notifications\f[R]
  });
});
.EE
