.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "PushSubscription" "JS" "April 22, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
PushSubscription \- PushSubscription
.SH SYNOPSIS
\f[B]Secure context:\f[R] This feature is available only in secure
contexts (HTTPS).
.PP
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[CR]PushSubscription\f[R] interface of the Push API provides a
subscription\[cq]s URL endpoint and allows unsubscribing from a push
service.
.PP
An instance of this interface can be serialized.
.SH INSTANCE PROPERTIES
.TP
\f[B]PushSubscription.endpoint\f[R] \f[I](read\-only)\f[R]
A string containing the endpoint associated with the push subscription.
.TP
\f[B]PushSubscription.expirationTime\f[R] \f[I](read\-only)\f[R]
A \f[CR]DOMHighResTimeStamp\f[R] of the subscription expiration time
associated with the push subscription, if there is one, or null
otherwise.
.TP
\f[B]PushSubscription.options\f[R] \f[I](read\-only)\f[R]
An object containing the options used to create the subscription.
.TP
\f[B]PushSubscription.subscriptionId\f[R] \f[I](deprecated)\f[R] \f[I](read\-only)\f[R] \f[I](non\-standard)\f[R]
A string containing the subscription ID associated with the push
subscription.
.SH INSTANCE METHODS
.TP
\f[B]PushSubscription.getKey()\f[R]
Returns an \f[CR]ArrayBuffer\f[R] which contains the client\[cq]s public
key, which can then be sent to a server and used in encrypting push
message data.
.TP
\f[B]PushSubscription.toJSON()\f[R]
Standard serializer \[em] returns a JSON representation of the
subscription properties.
.TP
\f[B]PushSubscription.unsubscribe()\f[R]
Starts the asynchronous process of unsubscribing from the push service,
returning a \f[CR]Promise\f[R] that resolves to a boolean value when the
current subscription is successfully unregistered.
.SH EXAMPLE
.IP
.EX
navigator.serviceWorker.ready.then((reg) \f[B]=>\f[R] {
  reg.pushManager.getSubscription().then((subscription) \f[B]=>\f[R] {
    subscription
      .unsubscribe()
      .then((successful) \f[B]=>\f[R] {
        \f[I]// You\[aq]ve successfully unsubscribed\f[R]
      })
      .catch((e) \f[B]=>\f[R] {
        \f[I]// Unsubscribing failed\f[R]
      });
  });
});
.EE
.SH SEE ALSO
.IP \[bu] 2
Push API
.IP \[bu] 2
Service Worker API
