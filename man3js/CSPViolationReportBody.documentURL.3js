.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "CSPViolationReportBody.documentURL" "JS" "September 21, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
CSPViolationReportBody.documentURL \- CSPViolationReportBody:
documentURL property
.SH SYNOPSIS
The \f[B]\f[CB]documentURL\f[B]\f[R] read\-only property of the
\f[CR]CSPViolationReportBody\f[R] interface is a string that represents
the URL of the document or worker that violated the Content Security
Policy (CSP).
.SH VALUE
A string containing the URL of the document or worker that violated the
CSP.
.SH EXAMPLES
.SS CSP inline script violation showing referrer
This example triggers a CSP violation using an inline script, and
reports the violation using a \f[CR]ReportingObserver\f[R].
We navigate to the page from another page and log the
\f[CR]referrer\f[R], \f[CR]documentURL\f[R], and \f[CR]blockedURL\f[R].
.SS HTML
First we define our referrer page \f[CR]/bounce/index.html\f[R].
This page just contains a link to another page
\f[CR]../report_sample/index.html\f[R].
.IP
.EX
<!doctype html>
<\f[B]html\f[R] lang=\[dq]en\[dq]>
  <\f[B]head\f[R]>
    <\f[B]meta\f[R] charset=\[dq]UTF\-8\[dq] />
    <\f[B]meta\f[R] name=\[dq]viewport\[dq] content=\[dq]width=device\-width, initial\-scale=1.0\[dq] />
  </\f[B]head\f[R]>
  <\f[B]body\f[R]>
    <\f[B]ul\f[R]>
      <\f[B]li\f[R]><\f[B]a\f[R] href=\[dq]../report_sample/\[dq]>report sample</\f[B]a\f[R]></\f[B]li\f[R]>
    </\f[B]ul\f[R]>
  </\f[B]body\f[R]>
</\f[B]html\f[R]>
.EE
.PP
The \f[CR]../report_sample/index.html\f[R] HTML file is defined below.
This uses the \f[CR]<meta>\f[R] element to set the
\f[CR]Content\-Security\-Policy\f[R] \f[CR]script\-src\-elem\f[R] to
\f[CR]self\f[R], which allows scripts to be loaded from the same domain,
but does not allow inline scripts to be executed.
The document also includes an inline script, which will trigger a CSP
violation.
.IP
.EX
<!doctype html>
\f[I]<!\-\- /report_sample/index.html \-\->\f[R]
<\f[B]html\f[R] lang=\[dq]en\[dq]>
  <\f[B]head\f[R]>
    <\f[B]meta\f[R]
      http\-equiv=\[dq]Content\-Security\-Policy\[dq]
      content=\[dq]script\-src\-elem \[aq]self\[aq] \[aq]report\-sample\[aq]\[dq] />
    <\f[B]script\f[R] src=\[dq]main.js\[dq]></\f[B]script\f[R]>
  </\f[B]head\f[R]>
  <\f[B]body\f[R]>
    <\f[B]script\f[R]>
      \f[B]const\f[R] int = 4;
    </\f[B]script\f[R]>
  </\f[B]body\f[R]>
</\f[B]html\f[R]>
.EE
.SS JavaScript (main.js)
The report sample above also loads the external script
\f[CR]main.js\f[R], which is shown below.
Because this is loaded from the same domain as the HTML, it is not
blocked by the CSP.
.PP
The script creates a new \f[CR]ReportingObserver\f[R] to observe content
violation reports of type \f[CR]\[dq]csp\-violation\[dq]\f[R].
Each time the callback function is invoked, we get the body of the first
entry of the reports array, and use it to log the violation
\f[CR]documentURL\f[R], \f[CR]referrer\f[R], and \f[CR]blockedURL\f[R]
to the console.
.IP
.EX
\f[I]// main.js\f[R]
\f[B]const\f[R] observer = \f[B]new\f[R] ReportingObserver(
  (reports, observer) \f[B]=>\f[R] {
    console.log(\[ga]documentURL: ${reports[0].body.referrer}\[ga]);
    console.log(\[ga]referrer: ${reports[0].body.referrer}\[ga]);
    console.log(\[ga]blockedURL: ${reports[0].body.blockedURL}\[ga]);
  },
  {
    types: [\[dq]csp\-violation\[dq]],
    buffered: \f[B]true\f[R],
  },
);

observer.observe();
.EE
.PP
Note that while there might be multiple reports in the returned array,
for brevity we only log the values of the first element.
.SS Results
The console output for the above code would look a bit like that below
(the site will depend on how the pages are served):
.IP
.EX
documentURL: http://127.0.0.1:9999/report_sample/
referrer: http://127.0.0.1:9999/bounce/
blockedURL: inline
.EE
.PP
Note that \f[CR]referrer\f[R] is the page we navigated from,
\f[CR]documentURL\f[R] is the page with the CSP violation, and
\f[CR]blockedURL\f[R] is not an URL at all in this case, but an
indication that the violation was caused by an inline script.
.SH SEE ALSO
.IP \[bu] 2
\f[CR]SecurityPolicyViolationEvent.documentURI\f[R]
