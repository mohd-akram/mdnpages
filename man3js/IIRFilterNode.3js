'\" t
.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "IIRFilterNode" "JS" "November 22, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
IIRFilterNode \- IIRFilterNode
.SH SYNOPSIS
The \f[B]\f[CB]IIRFilterNode\f[B]\f[R] interface of the Web Audio API is
a \f[CR]AudioNode\f[R] processor which implements a general \f[B]\c
.UR https://en.wikipedia.org/wiki/Infinite_impulse_response
infinite impulse response
.UE \c
\f[R] (IIR) filter; this type of filter can be used to implement tone
control devices and graphic equalizers as well.
It lets the parameters of the filter response be specified, so that it
can be tuned as needed.
.PP
.TS
tab(@);
l l.
T{
Number of inputs
T}@T{
\f[CR]1\f[R]
T}
T{
Number of outputs
T}@T{
\f[CR]1\f[R]
T}
T{
Channel count mode
T}@T{
\f[CR]\[dq]max\[dq]\f[R]
T}
T{
Channel count
T}@T{
Same as on the input
T}
T{
Channel interpretation
T}@T{
\f[CR]\[dq]speakers\[dq]\f[R]
T}
.TE
.PP
Typically, it\[cq]s best to use the \f[CR]BiquadFilterNode\f[R]
interface to implement higher\-order filters.
There are several reasons why:
.IP \[bu] 2
Biquad filters are typically less sensitive to numeric quirks.
.IP \[bu] 2
The filter parameters of biquad filters can be automated.
.IP \[bu] 2
All even\-ordered IIR filters can be created using
\f[CR]BiquadFilterNode\f[R].
.PP
However, if you need to create an odd\-ordered IIR filter, you\[cq]ll
need to use \f[CR]IIRFilterNode\f[R].
You may also find this interface useful if you don\[cq]t need
automation, or for other reasons.
.RS
.PP
\f[B]Note:\f[R] Once the node has been created, you can\[cq]t change its
coefficients.
.RE
.PP
\f[CR]IIRFilterNode\f[R]s have a tail\-time reference; they continue to
output non\-silent audio with zero input.
As an IIR filter, the non\-zero input continues forever, but this can be
limited after some finite time in practice, when the output has
approached zero closely enough.
The actual time that takes depends on the filter coefficients provided.
.SH CONSTRUCTOR
.TP
\f[B]IIRFilterNode()\f[R]
Creates a new instance of an IIRFilterNode object.
.SH INSTANCE PROPERTIES
\f[I]This interface has no properties of its own; however, it inherits
properties from its parent, \f[CI]AudioNode\f[I]\f[R].
.SH INSTANCE METHODS
\f[I]Inherits methods from its parent, \f[CI]AudioNode\f[I].
It also has the following additional methods:\f[R]
.TP
\f[B]getFrequencyResponse()\f[R]
Uses the filter\[cq]s current parameter settings to calculate the
response for frequencies specified in the provided array of frequencies.
.SH EXAMPLES
You can find a simple IIR filter demo live \c
.UR https://codepen.io/Rumyra/pen/oPxvYB/
on CodePen
.UE \c
\&.
Also see the \c
.UR https://github.com/mdn/webaudio-examples/tree/main/iirfilter-node
source code on GitHub
.UE \c
\&.
It includes some different coefficient values for different lowpass
frequencies \[em] you can change the value of the
\f[CR]filterNumber\f[R] constant to a value between 0 and 3 to check out
the different available effects.
.PP
Also see our Using IIR filters guide for a full explanation.
.SH SEE ALSO
.IP \[bu] 2
Using the Web Audio API
.IP \[bu] 2
\f[CR]AudioNode\f[R]
.IP \[bu] 2
\f[CR]BiquadFilterNode\f[R]
