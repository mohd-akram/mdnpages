.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "Clipboard" "JS" "January 9, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Clipboard \- Clipboard
.SH SYNOPSIS
\f[B]Secure context:\f[R] This feature is available only in secure
contexts (HTTPS).
.PP
The \f[B]\f[CB]Clipboard\f[B]\f[R] interface of the Clipboard API
provides read and write access to the contents of the system clipboard.
This allows a web application to implement cut, copy, and paste
features.
.PP
The system clipboard is exposed through the global
\f[CR]Navigator.clipboard\f[R] property.
.PP
All of the Clipboard API methods operate asynchronously; they return a
\f[CR]Promise\f[R] which is resolved once the clipboard access has been
completed.
The promise is rejected if clipboard access is denied.
.PP
All the methods require a secure context.
Additional requirements for using the API are discussed in the Security
consideration section of the API overview topic.
.SH INSTANCE METHODS
\f[I]\f[CI]Clipboard\f[I] is based on the \f[CI]EventTarget\f[I]
interface, and includes its methods.\f[R]
.TP
\f[B]read()\f[R]
Requests arbitrary data (such as images) from the clipboard, returning a
\f[CR]Promise\f[R] that resolves with an array of
\f[CR]ClipboardItem\f[R] objects containing the clipboard\[cq]s
contents.
.TP
\f[B]readText()\f[R]
Requests text from the system clipboard, returning a \f[CR]Promise\f[R]
that is fulfilled with a string containing the clipboard\[cq]s text once
it\[cq]s available.
.TP
\f[B]write()\f[R]
Writes arbitrary data to the system clipboard, returning a
\f[CR]Promise\f[R] that resolves when the operation completes.
.TP
\f[B]writeText()\f[R]
Writes text to the system clipboard, returning a \f[CR]Promise\f[R] that
is resolved once the text is fully copied into the clipboard.
.SH SEE ALSO
.IP \[bu] 2
\f[CR]Document.execCommand()\f[R]
