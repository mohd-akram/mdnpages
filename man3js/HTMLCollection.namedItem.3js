.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "HTMLCollection.namedItem" "JS" "December 30, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
HTMLCollection.namedItem \- HTMLCollection: namedItem() method
.SH SYNOPSIS
The \f[B]\f[CB]namedItem()\f[B]\f[R] method of the
\f[CR]HTMLCollection\f[R] interface returns the first \f[CR]Element\f[R]
in the collection whose \f[CR]id\f[R] or \f[CR]name\f[R] attribute match
the specified name, or \f[CR]null\f[R] if no element matches.
.PP
In JavaScript, using the array bracket syntax with a \f[CR]String\f[R],
like \f[CR]collection[\[dq]value\[dq]]\f[R] is equivalent to
\f[CR]collection.namedItem(\[dq]value\[dq])\f[R].
.SH SYNTAX
.IP
.EX
namedItem(key)
.EE
.SS Parameters
.IP \[bu] 2
\f[CR]key\f[R] is a string representing the value of the \f[CR]id\f[R]
or \f[CR]name\f[R] attribute of the element we are looking for.
.SS Return value
.IP \[bu] 2
\f[CR]item\f[R] is the first \f[CR]Element\f[R] in the
\f[CR]HTMLCollection\f[R] matching the \f[I]key\f[R], or
\f[CR]null\f[R], if there are none.
.SH EXAMPLE
.SS HTML
.IP
.EX
<\f[B]div\f[R] id=\[dq]personal\[dq]>
  <\f[B]span\f[R] name=\[dq]title\[dq]>Dr.</\f[B]span\f[R]>
  <\f[B]span\f[R] name=\[dq]firstname\[dq]>Carina</\f[B]span\f[R]>
  <\f[B]span\f[R] name=\[dq]lastname\[dq]>Anand</\f[B]span\f[R]>
  <\f[B]span\f[R] id=\[dq]degree\[dq]>(MD)</\f[B]span\f[R]>
</\f[B]div\f[R]>
.EE
.SS JavaScript
.IP
.EX
\f[B]const\f[R] container = document.getElementById(\[dq]personal\[dq]);

\f[I]// Returns the HTMLSpanElement with the name \[dq]title\[dq] if no such element exists null is returned\f[R]
\f[B]const\f[R] titleSpan = container.children.namedItem(\[dq]title\[dq]);

\f[I]// The following variants return undefined instead of null if there\[aq]s no element with a matching name or id\f[R]
\f[B]const\f[R] firstnameSpan = container.children[\[dq]firstname\[dq]];
\f[B]const\f[R] lastnameSpan = container.children.lastname;

\f[I]// Returns the span element with the id \[dq]degree\[dq]\f[R]
\f[B]const\f[R] degreeSpan = container.children.namedItem(\[dq]degree\[dq]);

\f[B]const\f[R] output = document.createElement(\[dq]div\[dq]);
output.textContent = \[ga]Result: ${titleSpan.textContent} ${firstnameSpan.textContent} ${lastnameSpan.textContent} ${degreeSpan.textContent}\[ga];

container.insertAdjacentElement(\[dq]afterend\[dq], output);
.EE
