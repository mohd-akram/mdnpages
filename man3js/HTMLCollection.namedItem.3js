.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "HTMLCOLLECTION.NAMEDITEM" "3JS" "October 16, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
HTMLCollection.namedItem \- HTMLCollection: namedItem() method
.SH SYNOPSIS
The \f[B]\f[CB]namedItem()\f[B]\f[R] method of the
\f[CR]HTMLCollection\f[R] interface returns the first \f[CR]Element\f[R]
in the collection whose \f[CR]id\f[R] or \f[CR]name\f[R] attribute match
the specified name, or \f[CR]null\f[R] if no element matches.
.PP
In JavaScript, instead of calling
\f[CR]collection.namedItem(\(dqvalue\(dq)\f[R], you can also directly
access the name on the collection, like
\f[CR]collection[\(dqvalue\(dq]\f[R], unless the name collides with one
of the existing \f[CR]HTMLCollection\f[R] properties.
.SH SYNTAX
.IP
.EX
namedItem(key)
.EE
.SS Parameters
.TP
\f[B]key\f[R]
A string representing the value of the \f[CR]id\f[R] or \f[CR]name\f[R]
attribute of the element we are looking for.
.SS Return value
The first \f[CR]Element\f[R] in the \f[CR]HTMLCollection\f[R] matching
the \f[CR]key\f[R], or \f[CR]null\f[R] if there is none.
Always returns \f[CR]null\f[R] if \f[CR]key\f[R] is the empty string.
.SH EXAMPLE
.SS HTML
.IP
.EX
<\f[B]div\f[R] id=\(dqpersonal\(dq>
  <\f[B]span\f[R] name=\(dqtitle\(dq>Dr.</\f[B]span\f[R]>
  <\f[B]span\f[R] name=\(dqfirst\-name\(dq>Carina</\f[B]span\f[R]>
  <\f[B]span\f[R] name=\(dqlast\-name\(dq>Anand</\f[B]span\f[R]>
  <\f[B]span\f[R] id=\(dqdegree\(dq>(MD)</\f[B]span\f[R]>
</\f[B]div\f[R]>
.EE
.SS JavaScript
.IP
.EX
\f[B]const\f[R] container = document.getElementById(\(dqpersonal\(dq);

\f[I]// Returns the HTMLSpanElement with the name \(dqtitle\(dq if no such element exists null is returned\f[R]
\f[B]const\f[R] titleSpan = container.children.namedItem(\(dqtitle\(dq);

\f[I]// The following variants return undefined instead of null if there\(aqs no element with a matching name or id\f[R]
\f[B]const\f[R] firstNameSpan = container.children[\(dqfirst\-name\(dq];
\f[B]const\f[R] lastNameSpan = container.children[\(dqlast\-name\(dq];

\f[I]// Returns the span element with the id \(dqdegree\(dq\f[R]
\f[B]const\f[R] degreeSpan = container.children.namedItem(\(dqdegree\(dq);

\f[B]const\f[R] output = document.createElement(\(dqdiv\(dq);
output.textContent = \(gaResult: ${titleSpan.textContent} ${firstNameSpan.textContent} ${lastNameSpan.textContent} ${degreeSpan.textContent}\(ga;

container.insertAdjacentElement(\(dqafterend\(dq, output);
.EE
