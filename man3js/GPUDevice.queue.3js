.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "GPUDEVICE.QUEUE" "3JS" "June 18, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
GPUDevice.queue \- GPUDevice: queue property
.SH SYNOPSIS
\f[B]Secure context:\f[R] This feature is available only in secure
contexts (HTTPS).
.PP
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]queue\f[B]\f[R] read\-only property of the
\f[CR]GPUDevice\f[R] interface returns the primary \f[CR]GPUQueue\f[R]
for the device.
.SH VALUE
A \f[CR]GPUQueue\f[R] object instance.
.SH EXAMPLES
Basic \f[CR]GPUQueue\f[R] access:
.IP
.EX
\f[B]async\f[R] \f[B]function\f[R] init() {
  \f[B]if\f[R] (!navigator.gpu) {
    \f[B]throw\f[R] Error(\(dqWebGPU not supported.\(dq);
  }

  \f[B]const\f[R] adapter = \f[B]await\f[R] navigator.gpu.requestAdapter();
  \f[B]if\f[R] (!adapter) {
    \f[B]throw\f[R] Error(\(dqCouldn\(aqt request WebGPU adapter.\(dq);
  }

  \f[I]// Create a GPUDevice\f[R]
  \f[B]const\f[R] device = \f[B]await\f[R] adapter.requestDevice();

  \f[I]// \&...\f[R]

  \f[I]// Common queue use \(em end current frame by passing array of\f[R]
  \f[I]// command buffers to queue for execution\f[R]
  device.queue.submit([commandEncoder.finish()]);

  \f[I]// \&...\f[R]
}
.EE
.RS
.PP
\f[B]Note:\f[R] For more queue examples, see the \f[CR]GPUQueue\f[R]
reference pages.
.RE
.SH SEE ALSO
.IP \(bu 2
The WebGPU API
