.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "Performance.mark" "JS" "April 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Performance.mark \- Performance: mark() method
.SH SYNOPSIS
The \f[B]\f[CB]mark()\f[B]\f[R] method creates a named
\f[CR]PerformanceMark\f[R] object representing a high resolution
timestamp marker in the browser\[cq]s performance timeline.
.SH SYNTAX
.IP
.EX
mark(name)
mark(name, markOptions)
.EE
.SS Parameters
.TP
\f[B]name\f[R]
A string representing the name of the mark.
Must not be the same name as one of the properties of the deprecated
\f[CR]PerformanceTiming\f[R] interface.
.TP
\f[B]markOptions\f[R] \f[I](optional)\f[R]
An object for specifying a timestamp and additional metadata for the
mark.
.RS
.TP
\f[B]detail\f[R] \f[I](optional)\f[R]
Arbitrary metadata to include in the mark.
Defaults to \f[CR]null\f[R].
Must be structured\-cloneable.
.TP
\f[B]startTime\f[R] \f[I](optional)\f[R]
\f[CR]DOMHighResTimeStamp\f[R] to use as the mark time.
Defaults to \f[CR]performance.now()\f[R].
.RE
.SS Return value
The \f[CR]PerformanceMark\f[R] entry that was created.
.SS Exceptions
.IP \[bu] 2
\f[CR]SyntaxError\f[R]: Thrown if the \f[CR]name\f[R] is one of the
properties of the deprecated \f[CR]PerformanceTiming\f[R] interface.
See the example below.
.IP \[bu] 2
\f[CR]TypeError\f[R]: Thrown if \f[CR]startTime\f[R] is negative.
.SH EXAMPLES
.SS Creating named markers
The following example uses \f[CR]mark()\f[R] to create named
\f[CR]PerformanceMark\f[R] entries.
You can create several marks with the same name.
You can also assign them, to have a reference to the
\f[CR]PerformanceMark\f[R] object that has been created.
.IP
.EX
performance.mark(\[dq]login\-started\[dq]);
performance.mark(\[dq]login\-started\[dq]);
performance.mark(\[dq]login\-finished\[dq]);
performance.mark(\[dq]form\-sent\[dq]);

\f[B]const\f[R] videoMarker = performance.mark(\[dq]video\-loaded\[dq]);
.EE
.SS Creating markers with details
The performance mark is configurable using the \f[CR]markOptions\f[R]
object where you can put additional information in the \f[CR]detail\f[R]
property, which can be of any type.
.IP
.EX
performance.mark(\[dq]login\-started\[dq], {
  detail: \[dq]Login started using the login button in the top menu.\[dq],
});

performance.mark(\[dq]login\-started\[dq], {
  detail: { htmlElement: myElement.id },
});
.EE
.SS Creating markers with a different start time
The default timestamp of the \f[CR]mark()\f[R] method is
\f[CR]performance.now()\f[R].
You can set it to a different time using the \f[CR]startTime\f[R] option
in \f[CR]markOptions\f[R].
.IP
.EX
performance.mark(\[dq]start\-checkout\[dq], {
  startTime: 20.0,
});

performance.mark(\[dq]login\-button\-pressed\[dq], {
  startTime: myEvent.timeStamp,
});
.EE
.SS Reserved names
Note in order to maintain backwards compatibility, names that are part
of the deprecated \f[CR]PerformanceTiming\f[R] interface can\[cq]t be
used.
The following example throws:
.PP
\f[B]Bad\f[R]
.IP
.EX
performance.mark(\[dq]navigationStart\[dq]);
\f[I]// SyntaxError: \[dq]navigationStart\[dq] is part of\f[R]
\f[I]// the PerformanceTiming interface,\f[R]
\f[I]// and cannot be used as a mark name\f[R]
.EE
