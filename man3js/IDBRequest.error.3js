.\" Automatically generated by Pandoc 3.4
.\"
.TH "IDBRequest.error" "JS" "December 16, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
IDBRequest.error \- IDBRequest: error property
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]error\f[B]\f[R] read\-only property of the
\f[CR]IDBRequest\f[R] interface returns the error in the event of an
unsuccessful request.
.SH VALUE
A \f[CR]DOMException\f[R] or \f[CR]null\f[R] if there is no error.
The exception object will have one of the following names, depending on
what caused the error.
.PP
These errors are asynchronous, meaning that they can\[cq]t be handled
via \f[CR]try...catch\f[R].
However, if an \f[CR]IDBRequest\f[R] has an \f[CR]error\f[R] event
handler assigned, you can still inspect such errors by querying the
request\[cq]s \f[CR]error\f[R] property via the event object, for
example \f[CR]event.target.error.name\f[R] or
\f[CR]event.target.error.message\f[R].
.TP
\f[B]AbortError\f[R]
If you abort the transaction, then all requests still in progress
receive this error.
.TP
\f[B]ConstraintError\f[R]
Received if you insert data that doesn\[cq]t conform to a constraint
when populating stores.
For example, you will get this error if you try to add a new key that
already exists in the store.
.TP
\f[B]NotReadableError\f[R]
Received for unrecoverable read failure errors.
Specifically, this error signals that the record is present in the
database, but the value could not be retrieved.
See Transient and unrecoverable read errors below for more details.
.TP
\f[B]QuotaExceededError\f[R]
Received if the application runs out of disk quota.
In some cases, browsers prompt the user for more space, and the error is
received if they decline the request.
In other cases, the browser uses heuristics to determine whether more
space can be assigned.
.TP
\f[B]UnknownError\f[R]
Received for transient read failure errors, including general disk IO
errors.
See Transient and unrecoverable read errors below for more details.
.TP
\f[B]VersionError\f[R]
Received if you try to open a database with a version lower than the one
it already has.
.SS Transient and unrecoverable read errors
Read errors occur when an IndexedDB stores values and then subsequently
fails to read those values even though the associated records are still
in the database.
.PP
Read errors can be one of two types \[em] \f[B]transient\f[R] or
\f[B]unrecoverable\f[R]:
.PP
Transient read errors are signalled by an \f[CR]UnknownError\f[R] type,
and are usually caused by low memory.
This shouldn\[cq]t be a problem for small databases.
To avoid low memory situations in large databases, try to split up
database access to only load the records you need at any one time, for
example using specific key ranges relating to a user\[cq]s search query
or a pagination mechanism.
If a low memory error is hit, the user may be asked to close other
applications to free up space at the OS\-level.
.PP
Unrecoverable read errors are signalled by a \f[CR]NotReadableError\f[R]
type, and are caused by source files being deleted.
.PP
For example, some browsers store large values (for example, audio file
blobs for an offline podcast app) as separate files that are accessed
via a reference stored in the database.
It has been observed that these separate files can end up being deleted
because they show up as opaque files to users when they are using disk
space recovery programs, resulting in unrecoverable read errors when the
IndexedDB is next accessed.
.PP
Possible corrective actions for unrecoverable read errors might include
notifying the user, deleting the entry from the database, then
attempting to re\-fetch the data from the server.
.SS Exceptions
.TP
\f[B]InvalidStateError\f[R] \f[B]DOMException\f[R]
Thrown when attempting to access the property if the request is not
completed, and therefore the error is not available.
.SH EXAMPLES
The following example requests a given record title,
\f[CR]onsuccess\f[R] gets the associated record from the
\f[CR]IDBObjectStore\f[R] (made available as
\f[CR]objectStoreTitleRequest.result\f[R]), updates one property of the
record, and then puts the updated record back into the object store.
Also included at the bottom is an \f[CR]onerror\f[R] function that
reports what the error was if the request fails.
For a full working example, see our \c
.UR https://github.com/mdn/dom-examples/tree/main/to-do-notifications
To\-do Notifications
.UE \c
\ app (\c
.UR https://mdn.github.io/dom-examples/to-do-notifications/
View the example live
.UE \c
).
.IP
.EX
\f[B]const\f[R] title = \[dq]Walk dog\[dq];

\f[I]// Open up a transaction as usual\f[R]
\f[B]const\f[R] objectStore = db
  .transaction([\[dq]toDoList\[dq]], \[dq]readwrite\[dq])
  .objectStore(\[dq]toDoList\[dq]);

\f[I]// Get the to\-do list with the specified title\f[R]
\f[B]const\f[R] objectStoreTitleRequest = objectStore.get(title);

objectStoreTitleRequest.onsuccess = () \f[B]=>\f[R] {
  \f[I]// Grab the data object returned as the result\f[R]
  \f[B]const\f[R] data = objectStoreTitleRequest.result;

  \f[I]// Update the notified value in the object to \[dq]yes\[dq]\f[R]
  data.notified = \[dq]yes\[dq];

  \f[I]// Create another request that inserts the item\f[R]
  \f[I]// back into the database\f[R]
  \f[B]const\f[R] updateTitleRequest = objectStore.put(data);

  \f[I]// When this new request succeeds, run the displayData()\f[R]
  \f[I]// function again to update the display\f[R]
  updateTitleRequest.onsuccess = () \f[B]=>\f[R] {
    displayData();
  };
};

objectStoreTitleRequest.onerror = () \f[B]=>\f[R] {
  \f[I]// If an error occurs with the request, log what it is\f[R]
  console.log(
    \[ga]There has been an error with retrieving your data:
    ${objectStoreTitleRequest.error.name}: ${objectStoreTitleRequest.error.message}\[ga],
  );
};
.EE
.SH SEE ALSO
.IP \[bu] 2
Using IndexedDB
.IP \[bu] 2
Starting transactions: \f[CR]IDBDatabase\f[R]
.IP \[bu] 2
Using transactions: \f[CR]IDBTransaction\f[R]
.IP \[bu] 2
Setting a range of keys: \f[CR]IDBKeyRange\f[R]
.IP \[bu] 2
Retrieving and making changes to your data: \f[CR]IDBObjectStore\f[R]
.IP \[bu] 2
Using cursors: \f[CR]IDBCursor\f[R]
.IP \[bu] 2
Reference example: \c
.UR https://github.com/mdn/dom-examples/tree/main/to-do-notifications
To\-do Notifications
.UE \c
\ (\c
.UR https://mdn.github.io/dom-examples/to-do-notifications/
View the example live
.UE \c
).
