.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "Proxy.Proxy.deleteProperty" "JS" "August 21, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Proxy.Proxy.deleteProperty \- handler.deleteProperty()
.SH SYNOPSIS
The \f[B]\f[CB]handler.deleteProperty()\f[B]\f[R] method is a trap for
the \f[CR][[Delete]]\f[R] object internal method, which is used by
operations such as the \f[CR]delete\f[R] operator.
.SH SYNTAX
.IP
.EX
new Proxy(target, {
  deleteProperty(target, property) {
  }
});
.EE
.SS Parameters
The following parameters are passed to the \f[CR]deleteProperty()\f[R]
method.
\f[CR]this\f[R] is bound to the handler.
.TP
\f[B]target\f[R]
The target object.
.TP
\f[B]property\f[R]
The name or \f[CR]Symbol\f[R] of the property to delete.
.SS Return value
The \f[CR]deleteProperty()\f[R] method must return a boolean value
indicating whether or not the property has been successfully deleted.
.SH DESCRIPTION
.SS Interceptions
This trap can intercept these operations:
.IP \[bu] 2
The \f[CR]delete\f[R] operator: \f[CR]delete proxy[foo]\f[R] and
\f[CR]delete proxy.foo\f[R]
.IP \[bu] 2
\f[CR]Reflect.deleteProperty()\f[R]
.PP
Or any other operation that invokes the \f[CR][[Delete]]\f[R] internal
method.
.SS Invariants
If the following invariants are violated, the trap throws a
\f[CR]TypeError\f[R] when invoked.
.IP \[bu] 2
A property cannot be deleted, if it exists as a non\-configurable own
property of the target object.
.SH EXAMPLES
.SS Trapping the delete operator
The following code traps the \f[CR]delete\f[R] operator.
.IP
.EX
\f[B]const\f[R] p = \f[B]new\f[R] Proxy(
  {},
  {
    deleteProperty(target, prop) {
      \f[B]if\f[R] (!(prop \f[B]in\f[R] target)) {
        console.log(\[ga]property not found: ${prop}\[ga]);
        \f[B]return\f[R] \f[B]false\f[R];
      }
      \f[B]delete\f[R] target[prop];
      console.log(\[ga]property removed: ${prop}\[ga]);
      \f[B]return\f[R] \f[B]true\f[R];
    },
  },
);

p.a = 10;
console.log(\[dq]a\[dq] \f[B]in\f[R] p); \f[I]// true\f[R]

\f[B]const\f[R] result1 = \f[B]delete\f[R] p.a; \f[I]// \[dq]property removed: a\[dq]\f[R]
console.log(result1); \f[I]// true\f[R]
console.log(\[dq]a\[dq] \f[B]in\f[R] p); \f[I]// false\f[R]

\f[B]const\f[R] result2 = \f[B]delete\f[R] p.a; \f[I]// \[dq]property not found: a\[dq]\f[R]
console.log(result2); \f[I]// false\f[R]
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]Proxy\f[R]
.IP \[bu] 2
\f[CR]Proxy()\f[R] constructor
.IP \[bu] 2
\f[CR]delete\f[R]
.IP \[bu] 2
\f[CR]Reflect.deleteProperty()\f[R]
