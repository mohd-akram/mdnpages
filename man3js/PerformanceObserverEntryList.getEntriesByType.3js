.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "PERFORMANCEOBSERVERENTRYLIST.GETENTRIESBYTYPE" "3JS" "October 12, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
PerformanceObserverEntryList.getEntriesByType \-
PerformanceObserverEntryList: getEntriesByType() method
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]getEntriesByType()\f[B]\f[R] method of the
\f[CR]PerformanceObserverEntryList\f[R] returns a list of explicitly
\f[I]observed\f[R] performance entry objects for a given performance
entry type.
The list\(cqs members are determined by the set of entry types specified
in the call to the \f[CR]observe()\f[R] method.
The list is available in the observer\(cqs callback function (as the
first parameter in the callback).
.SH SYNTAX
.IP
.EX
getEntriesByType(type)
.EE
.SS Parameters
.TP
\f[B]type\f[R]
The type of entry to retrieve such as \f[CR]\(dqmark\(dq\f[R].
The valid entry types are listed in
\f[CR]PerformanceEntry.entryType\f[R].
.SS Return value
A list of explicitly \f[I]observed\f[R] \f[CR]PerformanceEntry\f[R]
objects that have the specified \f[CR]type\f[R].
The items will be in chronological order based on the entries\(cq
\f[CR]startTime\f[R].
If no objects have the specified \f[CR]type\f[R], or no argument is
provided, an empty list is returned.
.SH EXAMPLES
.SS Working with getEntries, getEntriesByName and getEntriesByType
The following example shows the difference between the
\f[CR]getEntries()\f[R], \f[CR]getEntriesByName()\f[R], and
\f[CR]getEntriesByType()\f[R] methods.
.IP
.EX
\f[B]const\f[R] observer = \f[B]new\f[R] PerformanceObserver((list, obs) \f[B]=>\f[R] {
  \f[I]// Log all entries\f[R]
  \f[B]let\f[R] perfEntries = list.getEntries();
  perfEntries.forEach((entry) \f[B]=>\f[R] {
    console.log(\(ga${entry.name}\(aqs duration: ${entry.duration}\(ga);
  });

  \f[I]// Log entries named \(dqdebugging\(dq with type \(dqmeasure\(dq\f[R]
  perfEntries = list.getEntriesByName(\(dqdebugging\(dq, \(dqmeasure\(dq);
  perfEntries.forEach((entry) \f[B]=>\f[R] {
    console.log(\(ga${entry.name}\(aqs duration: ${entry.duration}\(ga);
  });

  \f[I]// Log entries with type \(dqmark\(dq\f[R]
  perfEntries = list.getEntriesByType(\(dqmark\(dq);
  perfEntries.forEach((entry) \f[B]=>\f[R] {
    console.log(\(ga${entry.name}\(aqs startTime: ${entry.startTime}\(ga);
  });
});

\f[I]// Subscribe to various performance event types\f[R]
observer.observe({
  entryTypes: [\(dqmark\(dq, \(dqmeasure\(dq, \(dqnavigation\(dq, \(dqresource\(dq],
});
.EE
