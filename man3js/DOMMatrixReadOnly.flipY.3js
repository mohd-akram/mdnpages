.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "DOMMatrixReadOnly.flipY" "JS" "February 2, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
DOMMatrixReadOnly.flipY \- DOMMatrixReadOnly: flipY() method
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]flipY()\f[B]\f[R] method of the
\f[CR]DOMMatrixReadOnly\f[R] interface creates a new matrix being the
result of the original matrix flipped about the y\-axis.
This is equivalent to multiplying the matrix by
\f[CR]DOMMatrix(1, 0, 0, \-1, 0, 0)\f[R].
The original matrix is not modified.
.SH SYNTAX
.IP
.EX
flipY()
.EE
.SS Return value
A \f[CR]DOMMatrix\f[R].
.SH EXAMPLES
.SS Inverting a triangle
In this example, the SVG contains two identical paths in the shape of a
triangle; they are both drawn to have the same size and position.
The viewbox has a negative y value showing us content from both sides of
the y\-axis.
This enables the flipped triangle to be withing the viewport after it is
transformed.
.SS HTML
.IP
.EX
<\f[B]svg\f[R] height=\[dq]200\[dq] width=\[dq]100\[dq] viewBox=\[dq]0 \-100 100 200\[dq]>
  <\f[B]path\f[R] fill=\[dq]red\[dq] d=\[dq]M 0 0 L 100 0 L 50 100 Z\[dq] />
  <\f[B]path\f[R] fill=\[dq]blue\[dq] d=\[dq]M 0 0 L 100 0 L 50 100 Z\[dq] id=\[dq]flipped\[dq] />
</\f[B]svg\f[R]>
.EE
.SS JavaScript
The JavaScript creates an identity matrix, then uses the
\f[CR]flipY()\f[R] method to create a new matrix, which is then applied
to the blue triangle, inverting it across the y\-axis.
The red triangle is left in place.
.IP
.EX
\f[B]const\f[R] flipped = document.getElementById(\[dq]flipped\[dq]);
\f[B]const\f[R] matrix = \f[B]new\f[R] DOMMatrix();
\f[B]const\f[R] flippedMatrix = matrix.flipY();
flipped.setAttribute(\[dq]transform\[dq], flippedMatrix.toString());
.EE
.SS Result
.SH SEE ALSO
.IP \[bu] 2
\f[CR]DOMMatrixReadOnly.flipX()\f[R]
