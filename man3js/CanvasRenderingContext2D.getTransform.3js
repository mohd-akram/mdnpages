.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "CanvasRenderingContext2D.getTransform" "JS" "July 26, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
CanvasRenderingContext2D.getTransform \- CanvasRenderingContext2D:
getTransform() method
.SH SYNOPSIS
The \f[B]\f[CB]CanvasRenderingContext2D.getTransform()\f[B]\f[R] method
of the Canvas 2D API retrieves the current transformation matrix being
applied to the context.
.SH SYNTAX
.IP
.EX
getTransform()
.EE
.SS Parameters
None.
.SS Return value
A \f[CR]DOMMatrix\f[R] object.
.PP
The transformation matrix is described by:
.PP
\ [acebdf001] 
.RS
.PP
\f[B]Note:\f[R] The returned object is not live, so updating it will not
affect the current transformation matrix, and updating the current
transformation matrix will not affect an already returned
\f[CR]DOMMatrix\f[R].
.RE
.SH EXAMPLES
In the following example, we have two \f[CR]<canvas>\f[R] elements.
We apply a transform to the first one\[cq]s context using
\f[CR]CanvasRenderingContext2D.setTransform()\f[R] and draw a square on
it, then retrieve the matrix from it using \f[CR]getTransform()\f[R].
.PP
We then apply the retrieved matrix directly to the second canvas context
by passing the \f[CR]DOMMatrix\f[R] object directly to
\f[CR]setTransform()\f[R], and draw a circle on it.
.SS HTML
.IP
.EX
<\f[B]canvas\f[R] width=\[dq]240\[dq]></\f[B]canvas\f[R]> <\f[B]canvas\f[R] width=\[dq]240\[dq]></\f[B]canvas\f[R]>
.EE
.SS CSS
.IP
.EX
canvas {
  \f[B]border\f[R]: 1px solid black;
}
.EE
.SS JavaScript
.IP
.EX
\f[B]const\f[R] canvases = document.querySelectorAll(\[dq]canvas\[dq]);
\f[B]const\f[R] ctx1 = canvases[0].getContext(\[dq]2d\[dq]);
\f[B]const\f[R] ctx2 = canvases[1].getContext(\[dq]2d\[dq]);

ctx1.setTransform(1, 0.2, 0.8, 1, 0, 0);
ctx1.fillRect(25, 25, 50, 50);

\f[B]let\f[R] storedTransform = ctx1.getTransform();
console.log(storedTransform);

ctx2.setTransform(storedTransform);
ctx2.beginPath();
ctx2.arc(50, 50, 50, 0, 2 * Math.PI);
ctx2.fill();
.EE
.SS Result
.SH SEE ALSO
.IP \[bu] 2
The interface defining this method: \f[CR]CanvasRenderingContext2D\f[R]
.IP \[bu] 2
\f[CR]CanvasRenderingContext2D.transform()\f[R]
