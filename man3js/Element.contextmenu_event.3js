.\" Automatically generated by Pandoc 3.4
.\"
.TH "Element.contextmenu_event" "JS" "December 19, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Element.contextmenu_event \- Element: contextmenu event
.SH SYNOPSIS
The \f[B]\f[CB]contextmenu\f[B]\f[R] event fires when the user attempts
to open a context menu.
This event is typically triggered by clicking the right mouse button, or
by pressing the context menu key.
.PP
In the latter case, the context menu is displayed at the bottom left of
the focused element, unless the element is a tree, in which case the
context menu is displayed at the bottom left of the current row.
.PP
Any right\-click event that is not disabled (by calling the click
event\[cq]s \f[CR]preventDefault()\f[R] method) will result in a
\f[CR]contextmenu\f[R] event being fired at the targeted element.
.RS
.PP
\f[B]Note:\f[R] An exception to this in Firefox: if the user holds down
the Shift key while right\-clicking, then the context menu will be shown
without a \f[CR]contextmenu\f[R] event being fired.
.RE
.SH SYNTAX
Use the event name in methods like \f[CR]addEventListener()\f[R], or set
an event handler property.
.IP
.EX
addEventListener(\[dq]contextmenu\[dq], (event) \f[B]=>\f[R] {});

oncontextmenu = (event) \f[B]=>\f[R] {};
.EE
.SH EVENT TYPE
A \f[CR]PointerEvent\f[R].
Inherits from \f[CR]MouseEvent\f[R].
.RS
.PP
\f[B]Note:\f[R] In earlier versions of the specification the event type
for this event was a \f[CR]MouseEvent\f[R], and this is still the type
passed in Firefox and Safari.
.RE
.SH EVENT PROPERTIES
\f[I]This interface inherits properties from \f[CI]MouseEvent\f[I] and
\f[CI]Event\f[I].\f[R]
.TP
\f[B]PointerEvent.altitudeAngle\f[R] \f[I](read\-only)\f[R] \f[I](experimental)\f[R]
Represents the angle between a transducer (a pointer or stylus) axis and
the X\-Y plane of a device screen.
.TP
\f[B]PointerEvent.azimuthAngle\f[R] \f[I](read\-only)\f[R] \f[I](experimental)\f[R]
Represents the angle between the Y\-Z plane and the plane containing
both the transducer (a pointer or stylus) axis and the Y axis.
.TP
\f[B]PointerEvent.pointerId\f[R] \f[I](read\-only)\f[R]
A unique identifier for the pointer causing the event.
.TP
\f[B]PointerEvent.width\f[R] \f[I](read\-only)\f[R]
The width (magnitude on the X axis), in CSS pixels, of the contact
geometry of the pointer.
.TP
\f[B]PointerEvent.height\f[R] \f[I](read\-only)\f[R]
The height (magnitude on the Y axis), in CSS pixels, of the contact
geometry of the pointer.
.TP
\f[B]PointerEvent.pressure\f[R] \f[I](read\-only)\f[R]
The normalized pressure of the pointer input in the range \f[CR]0\f[R]
to \f[CR]1\f[R], where \f[CR]0\f[R] and \f[CR]1\f[R] represent the
minimum and maximum pressure the hardware is capable of detecting,
respectively.
.TP
\f[B]PointerEvent.tangentialPressure\f[R] \f[I](read\-only)\f[R]
The normalized tangential pressure of the pointer input (also known as
barrel pressure or \c
.UR https://en.wikipedia.org/wiki/Cylinder_stress
cylinder stress
.UE \c
) in the range \f[CR]\-1\f[R] to \f[CR]1\f[R], where \f[CR]0\f[R] is the
neutral position of the control.
.TP
\f[B]PointerEvent.tiltX\f[R] \f[I](read\-only)\f[R]
The plane angle (in degrees, in the range of \f[CR]\-90\f[R] to
\f[CR]90\f[R]) between the Y\[en]Z plane and the plane containing both
the pointer (e.g.\ pen stylus) axis and the Y axis.
.TP
\f[B]PointerEvent.tiltY\f[R] \f[I](read\-only)\f[R]
The plane angle (in degrees, in the range of \f[CR]\-90\f[R] to
\f[CR]90\f[R]) between the X\[en]Z plane and the plane containing both
the pointer (e.g.\ pen stylus) axis and the X axis.
.TP
\f[B]PointerEvent.twist\f[R] \f[I](read\-only)\f[R]
The clockwise rotation of the pointer (e.g.\ pen stylus) around its
major axis in degrees, with a value in the range \f[CR]0\f[R] to
\f[CR]359\f[R].
.TP
\f[B]PointerEvent.pointerType\f[R] \f[I](read\-only)\f[R]
Indicates the device type that caused the event (mouse, pen, touch,
etc.).
.TP
\f[B]PointerEvent.isPrimary\f[R] \f[I](read\-only)\f[R]
Indicates if the pointer represents the primary pointer of this pointer
type.
.SH EXAMPLES
.SS Canceling the \f[CR]contextmenu\f[R] event
In this example, the default action of the \f[CR]contextmenu\f[R] event
is canceled using \f[CR]preventDefault()\f[R] when the
\f[CR]contextmenu\f[R] event is fired at the first paragraph.
As a result, the first paragraph will do nothing when right\-clicked,
while the second paragraph will show the standard context menu offered
by your browser.
.RS
.PP
\f[B]Note:\f[R] In Firefox, if you hold down the Shift key while
right\-clicking, then the context menu is shown without the
\f[CR]contextmenu\f[R] event being fired.
Therefore, canceling the event does not stop the context menu from being
shown.
.RE
.SS HTML
.IP
.EX
<\f[B]p\f[R] id=\[dq]noContextMenu\[dq]>The context menu has been disabled on this paragraph.</\f[B]p\f[R]>
<\f[B]p\f[R]>But it has not been disabled on this one.</\f[B]p\f[R]>
.EE
.SS JavaScript
.IP
.EX
\f[B]const\f[R] noContext = document.getElementById(\[dq]noContextMenu\[dq]);

noContext.addEventListener(\[dq]contextmenu\[dq], (e) \f[B]=>\f[R] {
  e.preventDefault();
});
.EE
.SS Result
.SH SEE ALSO
.IP \[bu] 2
Learn: Introduction to events
.IP \[bu] 2
\f[CR]auxclick\f[R]
.IP \[bu] 2
\f[CR]click\f[R]
.IP \[bu] 2
\f[CR]dblclick\f[R]
.IP \[bu] 2
\f[CR]mousedown\f[R]
.IP \[bu] 2
\f[CR]mouseup\f[R]
.IP \[bu] 2
\f[CR]pointerdown\f[R]
.IP \[bu] 2
\f[CR]pointerup\f[R]
