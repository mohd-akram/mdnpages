.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "HTMLImageElement" "JS" "June 3, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
HTMLImageElement \- HTMLImageElement
.SH SYNOPSIS
The \f[B]\f[CB]HTMLImageElement\f[B]\f[R] interface represents an HTML
\f[CR]<img>\f[R] element, providing the properties and methods used to
manipulate image elements.
.SH CONSTRUCTOR
.TP
\f[B]Image()\f[R]
The \f[CR]Image()\f[R] constructor creates and returns a new
\f[CR]HTMLImageElement\f[R] object representing an HTML \f[CR]<img>\f[R]
element which is not attached to any DOM tree.
It accepts optional width and height parameters.
When called without parameters, \f[CR]new Image()\f[R] is equivalent to
calling \f[CR]document.createElement(\[aq]img\[aq])\f[R].
.SH INSTANCE PROPERTIES
\f[I]Inherits properties from its parent, \f[CI]HTMLElement\f[I].\f[R]
.TP
\f[B]HTMLImageElement.alt\f[R]
A string that reflects the \f[CR]alt\f[R] HTML attribute, thus
indicating the alternate fallback content to be displayed if the image
has not been loaded.
.TP
\f[B]HTMLImageElement.attributionSrc\f[R] \f[I](secure context)\f[R] \f[I](experimental)\f[R]
Gets and sets the \f[CR]attributionsrc\f[R] attribute on an
\f[CR]<img>\f[R] element programmatically, reflecting the value of that
attribute.
\f[CR]attributionsrc\f[R] specifies that you want the browser to send an
\f[CR]Attribution\-Reporting\-Eligible\f[R] header along with the image
request.
On the server\-side this is used to trigger sending an
\f[CR]Attribution\-Reporting\-Register\-Source\f[R] or
\f[CR]Attribution\-Reporting\-Register\-Trigger\f[R] header in the
response, to register an image\-based attribution source or attribution
trigger, respectively.
.TP
\f[B]HTMLImageElement.complete\f[R] \f[I](read\-only)\f[R]
Returns a boolean value that is \f[CR]true\f[R] if the browser has
finished fetching the image, whether successful or not.
That means this value is also \f[CR]true\f[R] if the image has no
\f[CR]src\f[R] value indicating an image to load.
.TP
\f[B]HTMLImageElement.crossOrigin\f[R]
A string specifying the CORS setting for this image element.
See CORS settings attributes for further details.
This may be \f[CR]null\f[R] if CORS is not used.
.TP
\f[B]HTMLImageElement.currentSrc\f[R] \f[I](read\-only)\f[R]
Returns a string representing the URL from which the currently displayed
image was loaded.
This may change as the image is adjusted due to changing conditions, as
directed by any media queries which are in place.
.TP
\f[B]HTMLImageElement.decoding\f[R]
An optional string representing a hint given to the browser on how it
should decode the image.
If this value is provided, it must be one of the possible permitted
values: \f[CR]sync\f[R] to decode the image synchronously,
\f[CR]async\f[R] to decode it asynchronously, or \f[CR]auto\f[R] to
indicate no preference (which is the default).
Read the \f[CR]decoding\f[R] page for details on the implications of
this property\[cq]s values.
.TP
\f[B]HTMLImageElement.fetchPriority\f[R]
An optional string representing a hint given to the browser on how it
should prioritize fetching of the image relative to other images.
If this value is provided, it must be one of the possible permitted
values: \f[CR]high\f[R] to fetch at a high priority, \f[CR]low\f[R] to
fetch at a low priority, or \f[CR]auto\f[R] to indicate no preference
(which is the default).
.TP
\f[B]HTMLImageElement.height\f[R]
An integer value that reflects the \f[CR]height\f[R] HTML attribute,
indicating the rendered height of the image in CSS pixels.
.TP
\f[B]HTMLImageElement.isMap\f[R]
A boolean value that reflects the \f[CR]ismap\f[R] HTML attribute,
indicating that the image is part of a server\-side image map.
This is different from a client\-side image map, specified using an
\f[CR]<img>\f[R] element and a corresponding \f[CR]<map>\f[R] which
contains \f[CR]<area>\f[R] elements indicating the clickable areas in
the image.
The image \f[I]must\f[R] be contained within an \f[CR]<a>\f[R] element;
see the \f[CR]ismap\f[R] page for details.
.TP
\f[B]HTMLImageElement.loading\f[R]
A string providing a hint to the browser used to optimize loading the
document by determining whether to load the image immediately
(\f[CR]eager\f[R]) or on an as\-needed basis (\f[CR]lazy\f[R]).
.TP
\f[B]HTMLImageElement.naturalHeight\f[R] \f[I](read\-only)\f[R]
Returns an integer value representing the intrinsic height of the image
in CSS pixels, if it is available; else, it shows \f[CR]0\f[R].
This is the height the image would be if it were rendered at its natural
full size.
.TP
\f[B]HTMLImageElement.naturalWidth\f[R] \f[I](read\-only)\f[R]
An integer value representing the intrinsic width of the image in CSS
pixels, if it is available; otherwise, it will show \f[CR]0\f[R].
This is the width the image would be if it were rendered at its natural
full size.
.TP
\f[B]HTMLImageElement.referrerPolicy\f[R]
A string that reflects the \f[CR]referrerpolicy\f[R] HTML attribute,
which tells the user agent how to decide which referrer to use in order
to fetch the image.
Read this article for details on the possible values of this string.
.TP
\f[B]HTMLImageElement.sizes\f[R]
A string reflecting the \f[CR]sizes\f[R] HTML attribute.
This string specifies a list of comma\-separated conditional sizes for
the image; that is, for a given viewport size, a particular image size
is to be used.
Read the documentation on the \f[CR]sizes\f[R] page for details on the
format of this string.
.TP
\f[B]HTMLImageElement.src\f[R]
A string that reflects the \f[CR]src\f[R] HTML attribute, which contains
the full URL of the image including base URI.
You can load a different image into the element by changing the URL in
the \f[CR]src\f[R] attribute.
.TP
\f[B]HTMLImageElement.srcset\f[R]
A string reflecting the \f[CR]srcset\f[R] HTML attribute.
This specifies a list of candidate images, separated by commas
(\f[CR]\[aq],\[aq], U+002C COMMA\f[R]).
Each candidate image is a URL followed by a space, followed by a
specially\-formatted string indicating the size of the image.
The size may be specified either the width or a size multiple.
Read the \f[CR]srcset\f[R] page for specifics on the format of the size
substring.
.TP
\f[B]HTMLImageElement.useMap\f[R]
A string reflecting the \f[CR]usemap\f[R] HTML attribute, containing the
page\-local URL of the \f[CR]<map>\f[R] element describing the image map
to use.
The page\-local URL is a pound (hash) symbol (\f[CR]#\f[R]) followed by
the ID of the \f[CR]<map>\f[R] element, such as
\f[CR]#my\-map\-element\f[R].
The \f[CR]<map>\f[R] in turn contains \f[CR]<area>\f[R] elements
indicating the clickable areas in the image.
.TP
\f[B]HTMLImageElement.width\f[R]
An integer value that reflects the \f[CR]width\f[R] HTML attribute,
indicating the rendered width of the image in CSS pixels.
.TP
\f[B]HTMLImageElement.x\f[R] \f[I](read\-only)\f[R]
An integer indicating the horizontal offset of the left border edge of
the image\[cq]s CSS layout box relative to the origin of the
\f[CR]<html>\f[R] element\[cq]s containing block.
.TP
\f[B]HTMLImageElement.y\f[R] \f[I](read\-only)\f[R]
The integer vertical offset of the top border edge of the image\[cq]s
CSS layout box relative to the origin of the \f[CR]<html>\f[R]
element\[cq]s containing block.
.SH OBSOLETE PROPERTIES
.TP
\f[B]HTMLImageElement.align\f[R] \f[I](deprecated)\f[R]
A string indicating the alignment of the image with respect to the
surrounding context.
The possible values are \f[CR]\[dq]left\[dq]\f[R],
\f[CR]\[dq]right\[dq]\f[R], \f[CR]\[dq]justify\[dq]\f[R], and
\f[CR]\[dq]center\[dq]\f[R].
This is obsolete; you should instead use CSS (such as
\f[CR]text\-align\f[R], which works with images despite its name) to
specify the alignment.
.TP
\f[B]HTMLImageElement.border\f[R] \f[I](deprecated)\f[R]
A string which defines the width of the border surrounding the image.
This is deprecated; use the CSS \f[CR]border\f[R] property instead.
.TP
\f[B]HTMLImageElement.hspace\f[R] \f[I](deprecated)\f[R]
An integer value which specifies the amount of space (in pixels) to
leave empty on the left and right sides of the image.
.TP
\f[B]HTMLImageElement.longDesc\f[R] \f[I](deprecated)\f[R]
A string specifying the URL at which a long description of the
image\[cq]s contents may be found.
This is used to turn the image into a hyperlink automatically.
Modern HTML should instead place an \f[CR]<img>\f[R] inside an
\f[CR]<a>\f[R] element defining the hyperlink.
.TP
\f[B]HTMLImageElement.name\f[R] \f[I](deprecated)\f[R]
A string representing the name of the element.
.TP
\f[B]HTMLImageElement.vspace\f[R] \f[I](deprecated)\f[R]
An integer value specifying the amount of empty space, in pixels, to
leave above and below the image.
.SH INSTANCE METHODS
\f[I]Inherits methods from its parent, \f[CI]HTMLElement\f[I].\f[R]
.TP
\f[B]HTMLImageElement.decode()\f[R]
Returns a \f[CR]Promise\f[R] that resolves when the image is decoded and
it\[cq]s safe to append the image to the DOM.
This prevents rendering of the next frame from having to pause to decode
the image, as would happen if an undecoded image were added to the DOM.
.SH ERRORS
If an error occurs while trying to load or render the image, and an
\f[CR]onerror\f[R] event handler has been configured to handle the
\f[CR]error\f[R] event, that event handler will get called.
This can happen in a number of situations, including:
.IP \[bu] 2
The \f[CR]src\f[R] attribute is empty or \f[CR]null\f[R].
.IP \[bu] 2
The specified \f[CR]src\f[R] URL is the same as the URL of the page the
user is currently on.
.IP \[bu] 2
The specified image is corrupted in some way that prevents it from being
loaded.
.IP \[bu] 2
The specified image\[cq]s metadata is corrupted in such a way that
it\[cq]s impossible to retrieve its dimensions, and no dimensions were
specified in the \f[CR]<img>\f[R] element\[cq]s attributes.
.IP \[bu] 2
The specified image is in a format not supported by the user agent.
.SH EXAMPLE
.IP
.EX
\f[B]const\f[R] img1 = \f[B]new\f[R] Image(); \f[I]// Image constructor\f[R]
img1.src = \[dq]image1.png\[dq];
img1.alt = \[dq]alt\[dq];
document.body.appendChild(img1);

\f[B]const\f[R] img2 = document.createElement(\[dq]img\[dq]); \f[I]// Use DOM HTMLImageElement\f[R]
img2.src = \[dq]image2.jpg\[dq];
img2.alt = \[dq]alt text\[dq];
document.body.appendChild(img2);

\f[I]// using first image in the document\f[R]
alert(document.images[0].src);
.EE
.SH SEE ALSO
.IP \[bu] 2
The HTML element implementing this interface: \f[CR]<img>\f[R]
