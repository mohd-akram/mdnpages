.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "ValidityState" "JS" "July 15, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
ValidityState \- ValidityState
.SH SYNOPSIS
The \f[B]\f[CB]ValidityState\f[B]\f[R] interface represents the
\f[I]validity states\f[R] that an element can be in, with respect to
constraint validation.
Together, they help explain why an element\[cq]s value fails to
validate, if it\[cq]s not valid.
.SH INSTANCE PROPERTIES
For each of these Boolean properties, a value of \f[CR]true\f[R]
indicates that the specified reason validation may have failed is true,
with the exception of the \f[CR]valid\f[R] property, which is
\f[CR]true\f[R] if the element\[cq]s value obeys all constraints.
.TP
\f[B]badInput\f[R] \f[I](read\-only)\f[R]
A boolean value that is \f[CR]true\f[R] if the user has provided input
that the browser is unable to convert.
.TP
\f[B]customError\f[R] \f[I](read\-only)\f[R]
A boolean value indicating whether the element\[cq]s custom validity
message has been set to a non\-empty string by calling the element\[cq]s
\f[CR]setCustomValidity()\f[R] method.
.TP
\f[B]patternMismatch\f[R] \f[I](read\-only)\f[R]
A boolean value that is \f[CR]true\f[R] if the value does not match the
specified \f[CR]pattern\f[R], and \f[CR]false\f[R] if it does match.
If \f[CR]true\f[R], the element matches the \f[CR]:invalid\f[R] CSS
pseudo\-class.
.TP
\f[B]rangeOverflow\f[R] \f[I](read\-only)\f[R]
A boolean value that is \f[CR]true\f[R] if the value is greater than the
maximum specified by the \f[CR]max\f[R] attribute, or \f[CR]false\f[R]
if it is less than or equal to the maximum.
If \f[CR]true\f[R], the element matches the \f[CR]:invalid\f[R] and
\f[CR]:out\-of\-range\f[R] and CSS pseudo\-classes.
.TP
\f[B]rangeUnderflow\f[R] \f[I](read\-only)\f[R]
A boolean value that is \f[CR]true\f[R] if the value is less than the
minimum specified by the \f[CR]min\f[R] attribute, or \f[CR]false\f[R]
if it is greater than or equal to the minimum.
If \f[CR]true\f[R], the element matches the \f[CR]:invalid\f[R] and
\f[CR]:out\-of\-range\f[R] CSS pseudo\-classes.
.TP
\f[B]stepMismatch\f[R] \f[I](read\-only)\f[R]
A boolean value that is \f[CR]true\f[R] if the value does not fit the
rules determined by the \f[CR]step\f[R] attribute (that is, it\[cq]s not
evenly divisible by the step value), or \f[CR]false\f[R] if it does fit
the step rule.
If \f[CR]true\f[R], the element matches the \f[CR]:invalid\f[R] CSS
pseudo\-class.
.TP
\f[B]tooLong\f[R] \f[I](read\-only)\f[R]
A boolean value that is \f[CR]true\f[R] if the value exceeds the
specified \f[CR]maxlength\f[R] for \f[CR]HTMLInputElement\f[R] or
\f[CR]HTMLTextAreaElement\f[R] objects, or \f[CR]false\f[R] if its
length is less than or equal to the maximum length.
\f[I]Note: This property is never \f[CI]true\f[I] in Gecko, because
elements\[cq] values are prevented from being longer than
\f[CI]maxlength\f[I].\f[R] If \f[CR]true\f[R], the element matches the
\f[CR]:invalid\f[R] and \f[CR]:out\-of\-range\f[R] CSS pseudo\-classes.
.TP
\f[B]tooShort\f[R] \f[I](read\-only)\f[R]
A boolean value that is \f[CR]true\f[R] if the value fails to meet the
specified \f[CR]minlength\f[R] for \f[CR]HTMLInputElement\f[R] or
\f[CR]HTMLTextAreaElement\f[R] objects, or \f[CR]false\f[R] if its
length is greater than or equal to the minimum length.
If \f[CR]true\f[R], the element matches the \f[CR]:invalid\f[R] and
\f[CR]:out\-of\-range\f[R] CSS pseudo\-classes.
.TP
\f[B]typeMismatch\f[R] \f[I](read\-only)\f[R]
A boolean value that is \f[CR]true\f[R] if the value is not in the
required syntax (when \f[CR]type\f[R] is \f[CR]email\f[R] or
\f[CR]url\f[R]), or \f[CR]false\f[R] if the syntax is correct.
If \f[CR]true\f[R], the element matches the \f[CR]:invalid\f[R] CSS
pseudo\-class.
.TP
\f[B]valid\f[R] \f[I](read\-only)\f[R]
A boolean value that is \f[CR]true\f[R] if the element meets all its
validation constraints, and is therefore considered to be valid, or
\f[CR]false\f[R] if it fails any constraint.
If \f[CR]true\f[R], the element matches the \f[CR]:valid\f[R] CSS
pseudo\-class; the \f[CR]:invalid\f[R] CSS pseudo\-class otherwise.
.TP
\f[B]valueMissing\f[R] \f[I](read\-only)\f[R]
A boolean value that is \f[CR]true\f[R] if the element has a
\f[CR]required\f[R] attribute, but no value, or \f[CR]false\f[R]
otherwise.
If \f[CR]true\f[R], the element matches the \f[CR]:invalid\f[R] CSS
pseudo\-class.
.SH SEE ALSO
.IP \[bu] 2
Guide: Constraint validation
.IP \[bu] 2
Tutorial: Form data validation
