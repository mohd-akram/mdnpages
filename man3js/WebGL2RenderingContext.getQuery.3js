.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "WebGL2RenderingContext.getQuery" "JS" "April 8, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
WebGL2RenderingContext.getQuery \- WebGL2RenderingContext: getQuery()
method
.SH SYNOPSIS
The \f[B]\f[CB]WebGL2RenderingContext.getQuery()\f[B]\f[R] method of the
WebGL 2 API returns the currently active \f[CR]WebGLQuery\f[R] for the
\f[CR]target\f[R], or \f[CR]null\f[R].
.SH SYNTAX
.IP
.EX
getQuery(target, pname)
.EE
.SS Parameters
.TP
\f[B]target\f[R]
A \f[CR]GLenum\f[R] specifying the target of the query.
Possible values:
.RS
.TP
\f[B]gl.ANY_SAMPLES_PASSED\f[R]
Specifies an occlusion query: these queries detect whether an object is
visible (whether the scoped drawing commands pass the depth test and if
so, how many samples pass).
.TP
\f[B]gl.ANY_SAMPLES_PASSED_CONSERVATIVE\f[R]
Same as above, but less accurate and faster version.
.TP
\f[B]gl.TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN\f[R]
Number of primitives that are written to transform feedback buffers.
.RE
.TP
\f[B]pname\f[R]
A \f[CR]GLenum\f[R] specifying the query object target.
Must be \f[CR]gl.CURRENT_QUERY\f[R].
.SS Return value
A \f[CR]WebGLQuery\f[R] object.
.SH EXAMPLES
.IP
.EX
\f[B]const\f[R] currentQuery = gl.getQuery(gl.ANY_SAMPLES_PASSED, gl.CURRENT_QUERY);
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]WebGLQuery\f[R]
