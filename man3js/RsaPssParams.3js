.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "RsaPssParams" "JS" "March 1, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
RsaPssParams \- RsaPssParams
.SH SYNOPSIS
The \f[B]\f[CB]RsaPssParams\f[B]\f[R] dictionary of the Web Crypto API
represents the object that should be passed as the \f[CR]algorithm\f[R]
parameter into \f[CR]SubtleCrypto.sign()\f[R] or
\f[CR]SubtleCrypto.verify()\f[R], when using the RSA\-PSS algorithm.
.SH INSTANCE PROPERTIES
.TP
\f[B]name\f[R]
A string.
This should be set to \f[CR]RSA\-PSS\f[R].
.TP
\f[B]saltLength\f[R]
A \f[CR]long\f[R] integer representing the length of the random salt to
use, in bytes.
.RS
.PP
\c
.UR https://datatracker.ietf.org/doc/html/rfc3447
RFC 3447
.UE \c
\ says that \[lq]Typical salt lengths\[rq] are either 0 or the length of
the output of the digest algorithm that was selected when this key was
generated.
For example, if you use SHA\-256 as the digest algorithm, this could be
32.
.PP
The maximum size of \f[CR]saltLength\f[R] is given by:
.IP
.EX
Math.ceil((keySizeInBits \- 1) / 8) \- digestSizeInBytes \- 2;
.EE
.PP
So for a key length of 2048 bits and a digest output size of 32 bytes,
the maximum size would be 222.
.RE
.SH EXAMPLES
See the examples for \f[CR]SubtleCrypto.sign()\f[R] and
\f[CR]SubtleCrypto.verify()\f[R].
