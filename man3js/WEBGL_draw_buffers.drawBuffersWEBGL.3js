.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "WEBGL_draw_buffers.drawBuffersWEBGL" "JS" "July 26, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
WEBGL_draw_buffers.drawBuffersWEBGL \- WEBGL_draw_buffers:
drawBuffersWEBGL() method
.SH SYNOPSIS
The \f[B]\f[CB]WEBGL_draw_buffers.drawBuffersWEBGL()\f[B]\f[R] method is
part of the WebGL API and allows you to define the draw buffers to which
all fragment colors are written.
.PP
This method is part of the \f[CR]WEBGL_draw_buffers\f[R] extension.
.RS
.PP
\f[B]Note:\f[R] When using \f[CR]WebGL2\f[R], this method is available
as \f[CR]gl.drawBuffers()\f[R] by default and the constants are named
\f[CR]gl.COLOR_ATTACHMENT1\f[R] etc.
without the \[lq]WEBGL\[rq] suffix.
.RE
.SH SYNTAX
.IP
.EX
drawBuffersWEBGL(buffers)
.EE
.SS Parameters
.TP
\f[B]buffers\f[R]
An \f[CR]Array\f[R] of \f[CR]GLenum\f[R] constants defining drawing
buffers.
Possible values:
.RS
.IP \[bu] 2
\f[CR]gl.NONE\f[R]: The fragment shader is not written to any color
buffer.
.IP \[bu] 2
\f[CR]gl.BACK\f[R]: The fragment shader is written to the back color
buffer.
.IP \[bu] 2
\f[CR]ext.COLOR_ATTACHMENT0_WEBGL\f[R] The fragment shader is written
the n\-th color attachment of the framebuffer.
.IP \[bu] 2
\f[CR]ext.COLOR_ATTACHMENT1_WEBGL\f[R]
.IP \[bu] 2
\f[CR]ext.COLOR_ATTACHMENT2_WEBGL\f[R]
.IP \[bu] 2
\f[CR]ext.COLOR_ATTACHMENT3_WEBGL\f[R]
.IP \[bu] 2
\f[CR]ext.COLOR_ATTACHMENT4_WEBGL\f[R]
.IP \[bu] 2
\f[CR]ext.COLOR_ATTACHMENT5_WEBGL\f[R]
.IP \[bu] 2
\f[CR]ext.COLOR_ATTACHMENT6_WEBGL\f[R]
.IP \[bu] 2
\f[CR]ext.COLOR_ATTACHMENT7_WEBGL\f[R]
.IP \[bu] 2
\f[CR]ext.COLOR_ATTACHMENT8_WEBGL\f[R]
.IP \[bu] 2
\f[CR]ext.COLOR_ATTACHMENT9_WEBGL\f[R]
.IP \[bu] 2
\f[CR]ext.COLOR_ATTACHMENT10_WEBGL\f[R]
.IP \[bu] 2
\f[CR]ext.COLOR_ATTACHMENT11_WEBGL\f[R]
.IP \[bu] 2
\f[CR]ext.COLOR_ATTACHMENT12_WEBGL\f[R]
.IP \[bu] 2
\f[CR]ext.COLOR_ATTACHMENT13_WEBGL\f[R]
.IP \[bu] 2
\f[CR]ext.COLOR_ATTACHMENT14_WEBGL\f[R]
.IP \[bu] 2
\f[CR]ext.COLOR_ATTACHMENT15_WEBGL\f[R]
.RE
.SS Return value
None (\f[CR]undefined\f[R]).
.SH EXAMPLES
See \f[CR]WEBGL_draw_buffers\f[R] for more context with this example
code.
.IP
.EX
ext.drawBuffersWEBGL([
  ext.COLOR_ATTACHMENT0_WEBGL, \f[I]// gl_FragData[0]\f[R]
  ext.COLOR_ATTACHMENT1_WEBGL, \f[I]// gl_FragData[1]\f[R]
  ext.COLOR_ATTACHMENT2_WEBGL, \f[I]// gl_FragData[2]\f[R]
  ext.COLOR_ATTACHMENT3_WEBGL, \f[I]// gl_FragData[3]\f[R]
]);
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]WEBGL_draw_buffers\f[R]
.IP \[bu] 2
\f[CR]WebGLRenderingContext.getExtension()\f[R]
.IP \[bu] 2
\f[CR]WebGLRenderingContext.framebufferRenderbuffer()\f[R]
.IP \[bu] 2
\f[CR]WebGLRenderingContext.framebufferTexture2D()\f[R]
.IP \[bu] 2
\f[CR]WebGLRenderingContext.getFramebufferAttachmentParameter()\f[R]
.IP \[bu] 2
\f[CR]WebGLRenderingContext.getParameter()\f[R]
.IP \[bu] 2
\c
.UR https://hacks.mozilla.org/2014/01/webgl-deferred-shading/
WebGL deferred shading \- Mozilla Hacks blog
.UE \c
