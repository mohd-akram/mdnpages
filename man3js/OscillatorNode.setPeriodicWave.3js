.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "OscillatorNode.setPeriodicWave" "JS" "March 7, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
OscillatorNode.setPeriodicWave \- OscillatorNode: setPeriodicWave()
method
.SH SYNOPSIS
The \f[B]\f[CB]setPeriodicWave()\f[B]\f[R] method of the
\f[CR]OscillatorNode\f[R] interface is used to point to a
\f[CR]PeriodicWave\f[R] defining a periodic waveform that can be used to
shape the oscillator\[cq]s output, when \f[CR]type\f[R] is
\f[CR]custom\f[R].
.SH SYNTAX
.IP
.EX
setPeriodicWave(wave)
.EE
.SS Parameters
.TP
\f[B]wave\f[R]
A \f[CR]PeriodicWave\f[R] object representing the waveform to use as the
shape of the oscillator\[cq]s output.
.SS Return value
None (\f[CR]undefined\f[R]).
.SH EXAMPLES
The following example illustrates simple usage of
\f[CR]createPeriodicWave()\f[R], recreating a sine wave from a periodic
wave.
.IP
.EX
\f[B]const\f[R] real = \f[B]new\f[R] Float32Array(2);
\f[B]const\f[R] imag = \f[B]new\f[R] Float32Array(2);
\f[B]const\f[R] ac = \f[B]new\f[R] AudioContext();
\f[B]const\f[R] osc = ac.createOscillator();

real[0] = 0;
imag[0] = 0;
real[1] = 1;
imag[1] = 0;

\f[B]const\f[R] wave = ac.createPeriodicWave(real, imag);

osc.setPeriodicWave(wave);

osc.connect(ac.destination);

osc.start();
osc.stop(2);
.EE
.PP
This works because a sound that contains only a fundamental tone is by
definition a sine wave.
.PP
Here, we create a \f[CR]PeriodicWave\f[R] with two values.
The first value is the DC offset, which is the value at which the
oscillator starts.
0 is good here, because we want to start the curve at the middle of the
[\-1.0; 1.0] range.
.PP
The second and subsequent values are sine and cosine components.
You can think of it as the result of a Fourier transform, where you get
frequency domain values from time domain value.
Here, with \f[CR]createPeriodicWave()\f[R], you specify the frequencies,
and the browser performs an inverse Fourier transform to get a time
domain buffer for the frequency of the oscillator.
Here, we only set one component at full volume (1.0) on the fundamental
tone, so we get a sine wave.
.SH SEE ALSO
.IP \[bu] 2
Using the Web Audio API
.IP \[bu] 2
AudioContext.createPeriodicWave
