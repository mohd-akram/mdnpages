.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "SVGANGLE.NEWVALUESPECIFIEDUNITS" "3JS" "February 2, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
SVGAngle.newValueSpecifiedUnits \- SVGAngle: newValueSpecifiedUnits()
method
.SH SYNOPSIS
The \f[CR]newValueSpecifiedUnits()\f[R] method of the
\f[CR]SVGAngle\f[R] interface sets the value to a number with an
associated \f[CR]unitType\f[R], thereby replacing the values for all of
the attributes on the object.
.SH SYNTAX
.IP
.EX
newValueSpecifiedUnits(unitType, valueInSpecifiedUnits)
.EE
.SS Parameters
.TP
\f[B]unitType\f[R]
A constant representing the unit type to which the angle\(cqs value
should be converted.
This must be one of the constant values defined for the
\f[CR]unitType\f[R] property, with the exception of
\f[CR]SVG_ANGLETYPE_UNKNOWN\f[R].
.RS
.IP \(bu 2
\f[CR]SVGAngle.SVG_ANGLETYPE_DEG\f[R]: convert to degrees
.IP \(bu 2
\f[CR]SVGAngle.SVG_ANGLETYPE_RAD\f[R]: convert to radians
.IP \(bu 2
\f[CR]SVGAngle.SVG_ANGLETYPE_GRAD\f[R]: convert to gradians
.IP \(bu 2
\f[CR]SVGAngle.SVG_ANGLETYPE_UNSPECIFIED\f[R]: convert to a unitless
number, interpreted as degrees
.RE
.TP
\f[B]valueInSpecifiedUnits\f[R]
The numeric factor for the angle value, expressed in the specified unit
type.
.SS Return value
None (\f[CR]undefined\f[R]).
.SS Exceptions
This method may raise a \f[CR]DOMException\f[R] of one of the following
types:
.TP
\f[B]NotSupportedError\f[R] \f[B]DOMException\f[R]
Thrown if \f[CR]unitType\f[R] is \f[CR]SVG_ANGLETYPE_UNKNOWN\f[R] or not
a valid unit type constant.
.TP
\f[B]NoModificationAllowedError\f[R] \f[B]DOMException\f[R]
Thrown if \f[CR]SVGAngle\f[R] corresponds to a read\-only attribute or
when the object itself is read\-only.
.SH EXAMPLES
.SS Setting an angle in degrees
.IP
.EX
\f[I]// Get an SVGAngle object\f[R]
\f[B]const\f[R] svg = document.querySelector(\(dqsvg\(dq);
\f[B]const\f[R] angle = svg.createSVGAngle();

\f[I]// Set the angle\(aqs value in degrees using newValueSpecifiedUnits()\f[R]
angle.newValueSpecifiedUnits(SVGAngle.SVG_ANGLETYPE_DEG, 45);

\f[I]// Retrieve the angle\(aqs value in degrees\f[R]
console.log(angle.value); \f[I]// Output: 45\f[R]
console.log(angle.unitType); \f[I]// Output: 2 (SVG_ANGLETYPE_DEG)\f[R]
.EE
.SS Setting an angle in radians
.IP
.EX
\f[I]// Get an SVGAngle object\f[R]
\f[B]const\f[R] svg = document.querySelector(\(dqsvg\(dq);
\f[B]const\f[R] angle = svg.createSVGAngle();

\f[I]// Set the angle\(aqs value in radians using newValueSpecifiedUnits()\f[R]
angle.newValueSpecifiedUnits(SVGAngle.SVG_ANGLETYPE_RAD, Math.PI / 2);

\f[I]// Retrieve the angle\(aqs value\f[R]
console.log(angle.value); \f[I]// Output: 90\f[R]
console.log(angle.unitType); \f[I]// Output: 3 (SVG_ANGLETYPE_RAD)\f[R]
.EE
.SS Setting an angle in gradians
.IP
.EX
\f[I]// Get an SVGAngle object\f[R]
\f[B]const\f[R] svg = document.querySelector(\(dqsvg\(dq);
\f[B]const\f[R] angle = svg.createSVGAngle();

\f[I]// Set the angle\(aqs value in gradians using newValueSpecifiedUnits()\f[R]
angle.newValueSpecifiedUnits(SVGAngle.SVG_ANGLETYPE_GRAD, 100);

\f[I]// Retrieve the angle\(aqs value in gradians\f[R]
console.log(angle.value); \f[I]// Output: 90\f[R]
console.log(angle.unitType); \f[I]// Output: 4 (SVG_ANGLETYPE_GRAD)\f[R]
.EE
.SH SEE ALSO
.IP \(bu 2
\f[CR]SVGAnimatedAngle\f[R]
