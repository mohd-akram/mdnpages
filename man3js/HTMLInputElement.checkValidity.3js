.\" Automatically generated by Pandoc 3.4
.\"
.TH "HTMLInputElement.checkValidity" "JS" "December 19, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
HTMLInputElement.checkValidity \- HTMLInputElement: checkValidity()
method
.SH SYNOPSIS
The \f[B]\f[CB]checkValidity()\f[B]\f[R] method of the
\f[CR]HTMLInputElement\f[R] interface returns a boolean value which
indicates if the element meets any constraint validation rules applied
to it.
If false, the method also fires an \f[CR]invalid\f[R] event on the
element.
Because there\[cq]s no default browser behavior for
\f[CR]checkValidity()\f[R], canceling this \f[CR]invalid\f[R] event has
no effect.
.RS
.PP
\f[B]Note:\f[R] An HTML \f[CR]<input>\f[R] element with a non\-null
\f[CR]validationMessage\f[R] is considered invalid, will match the CSS
\f[CR]:invalid\f[R] pseudo\-class, and will cause
\f[CR]checkValidity()\f[R] to return false.
Use the \f[CR]HTMLInputElement.setCustomValidity()\f[R] method to set
the \f[CR]HTMLInputElement.validationMessage\f[R] to the empty string to
set the \f[CR]validity\f[R] state to be valid.
.RE
.SH SYNTAX
.IP
.EX
checkValidity()
.EE
.SS Parameters
None.
.SS Return value
Returns \f[CR]true\f[R] if the element\[cq]s value has no validity
problems; otherwise, returns \f[CR]false\f[R].
.SH EXAMPLES
.SS HTML
We include a form containing a required number field and two buttons:
one to check the form and the other to submit it.
.IP
.EX
<\f[B]form\f[R] action=\[dq]#\[dq] method=\[dq]post\[dq]>
  <\f[B]p\f[R]>
    <\f[B]label\f[R] for=\[dq]age\[dq]>Your (21 to 65) </\f[B]label\f[R]>
    <\f[B]input\f[R] type=\[dq]number\[dq] name=\[dq]age\[dq] required id=\[dq]age\[dq] min=\[dq]21\[dq] max=\[dq]65\[dq] />
  </\f[B]p\f[R]>
  <\f[B]p\f[R]>
    <\f[B]button\f[R] type=\[dq]submit\[dq]>Submit</\f[B]button\f[R]>
    <\f[B]button\f[R] type=\[dq]button\[dq] id=\[dq]check\[dq]>checkValidity()</\f[B]button\f[R]>
  </\f[B]p\f[R]>
  <\f[B]p\f[R] id=\[dq]log\[dq]></\f[B]p\f[R]>
</\f[B]form\f[R]>
.EE
.SS JavaScript
.IP
.EX
\f[B]const\f[R] output = document.querySelector(\[dq]#log\[dq]);
\f[B]const\f[R] checkButton = document.querySelector(\[dq]#check\[dq]);
\f[B]const\f[R] ageInput = document.querySelector(\[dq]#age\[dq]);

ageInput.addEventListener(\[dq]invalid\[dq], () \f[B]=>\f[R] {
  console.log(\[dq]Invalid event fired.\[dq]);
});

checkButton.addEventListener(\[dq]click\[dq], () \f[B]=>\f[R] {
  \f[B]const\f[R] checkVal = ageInput.checkValidity();
  output.innerHTML = \[ga]checkValidity returned: ${checkVal}\[ga];
});
.EE
.SS Results
When \f[CR]false\f[R], if the value is missing, below 21, above 65, or
otherwise invalid, the invalid event will be logged to the console.
To report the error to the user, use
\f[CR]HTMLInputElement.reportValidity()\f[R] instead.
.SH SEE ALSO
.IP \[bu] 2
\f[CR]HTMLInputElement.reportValidity()\f[R]
.IP \[bu] 2
\f[CR]<input>\f[R]
.IP \[bu] 2
\f[CR]<form>\f[R]
.IP \[bu] 2
Learn: Client\-side form validation
.IP \[bu] 2
Guide: Constraint validation
.IP \[bu] 2
CSS \f[CR]:valid\f[R] and \f[CR]:invalid\f[R] pseudo\-classes
