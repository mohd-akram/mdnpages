.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "BIQUADFILTERNODE.FREQUENCY" "3JS" "April 27, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
BiquadFilterNode.frequency \- BiquadFilterNode: frequency property
.SH SYNOPSIS
The \f[CR]frequency\f[R] property of the \f[CR]BiquadFilterNode\f[R]
interface is an a\-rate \f[CR]AudioParam\f[R] \(em a double representing
a frequency in the current filtering algorithm measured in hertz (Hz).
.PP
Its default value is \f[CR]350\f[R], with a nominal range of
\f[CR]10\f[R] to the \c
.UR https://en.wikipedia.org/wiki/Nyquist_frequency
Nyquist frequency
.UE \c
\ \(em that is, half of the sample rate.
.SH VALUE
An \f[CR]AudioParam\f[R].
.RS
.PP
\f[B]Note:\f[R] Though the \f[CR]AudioParam\f[R] returned is read\-only,
the value it represents is not.
.RE
.SH EXAMPLES
The following example shows basic usage of an AudioContext to create a
Biquad filter node.
For a complete working example, check out our \c
.UR https://mdn.github.io/webaudio-examples/voice-change-o-matic/
voice\-change\-o\-matic
.UE \c
\ demo (look at the \c
.UR https://github.com/mdn/webaudio-examples/tree/main/voice-change-o-matic
source code
.UE \c
\ too).
.IP
.EX
\f[B]const\f[R] audioCtx = \f[B]new\f[R] AudioContext();

\f[I]// Set up the different audio nodes we will use for the app\f[R]
\f[B]const\f[R] analyser = audioCtx.createAnalyser();
\f[B]const\f[R] distortion = audioCtx.createWaveShaper();
\f[B]const\f[R] gainNode = audioCtx.createGain();
\f[B]const\f[R] biquadFilter = audioCtx.createBiquadFilter();
\f[B]const\f[R] convolver = audioCtx.createConvolver();

\f[I]// Connect the nodes together\f[R]

source = audioCtx.createMediaStreamSource(stream);
source.connect(analyser);
analyser.connect(distortion);
distortion.connect(biquadFilter);
biquadFilter.connect(convolver);
convolver.connect(gainNode);
gainNode.connect(audioCtx.destination);

\f[I]// Manipulate the Biquad filter\f[R]

biquadFilter.type = \(dqlowshelf\(dq;
biquadFilter.frequency.value = 1000;
biquadFilter.gain.value = 25;
.EE
.SH SEE ALSO
.IP \(bu 2
Using the Web Audio API
