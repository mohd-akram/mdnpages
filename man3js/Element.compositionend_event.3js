.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "ELEMENT.COMPOSITIONEND_EVENT" "3JS" "May 2, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Element.compositionend_event \- Element: compositionend event
.SH SYNOPSIS
The \f[B]\f[CB]compositionend\f[B]\f[R] event is fired when a text
composition system such as an input method editor completes or cancels
the current composition session.
.PP
For example, this event could be fired after a user finishes entering a
Chinese character using a \c
.UR https://en.wikipedia.org/wiki/Pinyin
Pinyin
.UE \c
\ Input method editor.
.SH SYNTAX
Use the event name in methods like \f[CR]addEventListener()\f[R], or set
an event handler property.
.IP
.EX
addEventListener(\(dqcompositionend\(dq, (event) => { })

oncompositionend = (event) => { }
.EE
.SH EVENT TYPE
A \f[CR]CompositionEvent\f[R].
Inherits from \f[CR]UIEvent\f[R] and \f[CR]Event\f[R].
.SH EVENT PROPERTIES
\f[I]This interface also inherits properties of its parent,
\f[CI]UIEvent\f[I], and its ancestor \(em \f[CI]Event\f[I].\f[R]
.TP
\f[B]CompositionEvent.data\f[R] \f[I](read\-only)\f[R]
Returns the characters generated by the input method that raised the
event; its varies depending on the type of event that generated the
\f[CR]CompositionEvent\f[R] object.
.TP
\f[B]CompositionEvent.locale\f[R] \f[I](read\-only)\f[R] \f[I](deprecated)\f[R]
Returns the locale of the current input method (for example, the
keyboard layout locale if the composition is associated with an Input
method editor).
.SH EXAMPLES
.IP
.EX
\f[B]const\f[R] inputElement = document.querySelector(\(aqinput[type=\(dqtext\(dq]\(aq);

inputElement.addEventListener(\(dqcompositionend\(dq, (event) \f[B]=>\f[R] {
  console.log(\(gagenerated characters were: ${event.data}\(ga);
});
.EE
.SS Live example
.SS HTML
.IP
.EX
<\f[B]div\f[R] class=\(dqcontrol\(dq>
  <\f[B]label\f[R] for=\(dqexample\(dq>
    First select textbox, then to open IME:
    <\f[B]ul\f[R]>
      <\f[B]li\f[R]>on macOS type <\f[B]kbd\f[R]>option</\f[B]kbd\f[R]> + <\f[B]kbd\f[R]>\(ga</\f[B]kbd\f[R]></\f[B]li\f[R]>
      <\f[B]li\f[R]>on Windows type <\f[B]kbd\f[R]>windows</\f[B]kbd\f[R]> + <\f[B]kbd\f[R]>.</\f[B]kbd\f[R]></\f[B]li\f[R]>
    </\f[B]ul\f[R]>
  </\f[B]label\f[R]>
  <\f[B]input\f[R] type=\(dqtext\(dq id=\(dqexample\(dq name=\(dqexample\(dq />
</\f[B]div\f[R]>

<\f[B]div\f[R] class=\(dqevent\-log\(dq>
  <\f[B]label\f[R] for=\(dqeventLog\(dq>Event log:</\f[B]label\f[R]>
  <\f[B]textarea\f[R]
    readonly
    class=\(dqevent\-log\-contents\(dq
    rows=\(dq8\(dq
    cols=\(dq25\(dq
    id=\(dqeventLog\(dq></\f[B]textarea\f[R]>
  <\f[B]button\f[R] class=\(dqclear\-log\(dq>Clear</\f[B]button\f[R]>
</\f[B]div\f[R]>
.EE
.SS JavaScript
.IP
.EX
\f[B]const\f[R] inputElement = document.querySelector(\(aqinput[type=\(dqtext\(dq]\(aq);
\f[B]const\f[R] log = document.querySelector(\(dq.event\-log\-contents\(dq);
\f[B]const\f[R] clearLog = document.querySelector(\(dq.clear\-log\(dq);

clearLog.addEventListener(\(dqclick\(dq, () \f[B]=>\f[R] {
  log.textContent = \(dq\(dq;
});

\f[B]function\f[R] handleEvent(event) {
  log.textContent += \(ga${event.type}: ${event.data}\(rsn\(ga;
}

inputElement.addEventListener(\(dqcompositionstart\(dq, handleEvent);
inputElement.addEventListener(\(dqcompositionupdate\(dq, handleEvent);
inputElement.addEventListener(\(dqcompositionend\(dq, handleEvent);
.EE
.SS Result
.SH SEE ALSO
.IP \(bu 2
Related events: \f[CR]compositionstart\f[R],
\f[CR]compositionupdate\f[R].
