.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "LargestContentfulPaint.size" "JS" "January 13, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
LargestContentfulPaint.size \- LargestContentfulPaint: size property
.SH SYNOPSIS
The \f[B]\f[CB]size\f[B]\f[R] read\-only property of the
\f[CR]LargestContentfulPaint\f[R] interface returns the intrinsic size
of the element that is the largest contentful paint.
.PP
The \f[CR]size\f[R] of the element is the \f[CR]width\f[R] times
\f[CR]height\f[R] of the \f[CR]rectangle\f[R] that this element creates
on the screen.
.SH VALUE
An integer representing the width times height of the element.
.SH EXAMPLES
.SS Logging the size of the largest contentful paint element
This example uses a \f[CR]PerformanceObserver\f[R] notifying of new
\f[CR]largest\-contentful\-paint\f[R] performance entries as they are
recorded in the browser\[cq]s performance timeline.
The \f[CR]buffered\f[R] option is used to access entries from before the
observer creation.
.IP
.EX
\f[B]const\f[R] observer = \f[B]new\f[R] PerformanceObserver((list) \f[B]=>\f[R] {
  \f[B]const\f[R] entries = list.getEntries();
  \f[B]const\f[R] lastEntry = entries[entries.length \- 1]; \f[I]// Use the latest LCP candidate\f[R]
  console.log(lastEntry.size);
});
observer.observe({ type: \[dq]largest\-contentful\-paint\[dq], buffered: \f[B]true\f[R] });
.EE
