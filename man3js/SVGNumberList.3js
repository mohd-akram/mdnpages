'\" t
.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "SVGNumberList" "JS" "February 19, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
SVGNumberList \- SVGNumberList
.SH SYNOPSIS
.SH SVG NUMBER LIST INTERFACE
The \f[CR]SVGNumberList\f[R] defines a list of \f[CR]SVGNumber\f[R]
objects.
.PP
An \f[CR]SVGNumberList\f[R] object can be designated as read only, which
means that attempts to modify the object will result in an exception
being thrown.
.PP
An \f[CR]SVGNumberList\f[R] is indexable and can be accessed like an
array.
.SS Interface overview
.PP
.TS
tab(@);
lw(35.0n) lw(35.0n).
T{
Also implement
T}@T{
None
T}
T{
Methods
T}@T{
.IP \[bu] 2
\f[CR]void clear()\f[R]
.IP \[bu] 2
\[ga]SVGNumber\[ga]
\f[CR]initialize(in \[ga]SVGNumber\[ga] \f[R]\f[CR]newItem\f[R]\f[CR])\f[R]
.IP \[bu] 2
\[ga]SVGNumber\[ga]
\f[CR]getItem(in unsigned long \f[R]\f[CR]index\f[R]\f[CR])\f[R]
.IP \[bu] 2
\[ga]SVGNumber\[ga]
\f[CR]insertItemBefore(in \[ga]SVGNumber\[ga] \f[R]\f[CR]newItem\f[R]\f[CR], in unsigned long \f[R]\f[CR]index\f[R]\f[CR])\f[R]
.IP \[bu] 2
\[ga]SVGNumber\[ga]
\f[CR]replaceItem(in \[ga]SVGNumber\[ga] \f[R]\f[CR]newItem\f[R]\f[CR], in unsigned long \f[R]\f[CR]index\f[R]\f[CR])\f[R]
.IP \[bu] 2
\[ga]SVGNumber\[ga]
\f[CR]removeItem(in unsigned long \f[R]\f[CR]index\f[R]\f[CR])\f[R]
.IP \[bu] 2
\[ga]SVGNumber\[ga]
\f[CR]appendItem(in \[ga]SVGNumber\[ga] \f[R]\f[CR]newItem\f[R]\f[CR])\f[R]
T}
T{
Properties
T}@T{
.IP \[bu] 2
readonly unsigned long \f[CR]numberOfItems\f[R]
.IP \[bu] 2
readonly unsigned long \f[CR]length\f[R] *(non\-standard)*
T}
T{
Normative document
T}@T{
\c
.UR https://www.w3.org/TR/SVG/types.html#InterfaceSVGNumberList
SVG 1.1 (2nd Edition)
.UE \c
T}
.TE
.SH INSTANCE PROPERTIES
.PP
.TS
tab(@);
lw(31.1n) lw(11.2n) lw(27.7n).
T{
Name
T}@T{
Type
T}@T{
Description
T}
_
T{
\f[CR]numberOfItems\f[R]
T}@T{
unsigned long
T}@T{
The number of items in the list.
T}
T{
\f[CR]length\f[R] \f[I](non\-standard)\f[R]
T}@T{
unsigned long
T}@T{
The number of items in the list.
T}
.TE
.SH INSTANCE METHODS
.PP
.TS
tab(@);
lw(23.3n) lw(23.3n) lw(23.3n).
T{
Name & Arguments
T}@T{
Return
T}@T{
Description
T}
_
T{
\f[B]\f[CB]clear\f[B]\f[R]\f[CR]()\f[R]
T}@T{
\f[CR]void\f[R]
T}@T{
.PP
Clears all existing current items from the list, with the result being
an empty list.
.PP
\f[B]Exceptions:\f[R]
.IP \[bu] 2
a \[ga]DOMException\[ga] with code
\f[CR]NO_MODIFICATION_ALLOWED_ERR\f[R] is raised when the list
corresponds to a read only attribute or when the object itself is read
only.
T}
T{
\f[B]\f[CB]initialize\f[B]\f[R]\f[CR](in \[ga]SVGNumber\[ga] \f[R]\f[CR]newItem\f[R]\f[CR])\f[R]
T}@T{
\[ga]SVGNumber\[ga]
T}@T{
.PP
Clears all existing current items from the list and re\-initializes the
list to hold the single item specified by \f[CR]newItem\f[R].
If the inserted item is already in a list, it is removed from its
previous list before it is inserted into this list.
The inserted item is the item itself and not a copy.
The return value is the item inserted into the list.
.PP
\f[B]Exceptions:\f[R]
.IP \[bu] 2
a \[ga]DOMException\[ga] with code
\f[CR]NO_MODIFICATION_ALLOWED_ERR\f[R] is raised when the list
corresponds to a read only attribute or when the object itself is read
only.
T}
T{
\f[B]\f[CB]getItem\f[B]\f[R]\f[CR](in unsigned long \f[R]\f[CR]index\f[R]\f[CR])\f[R]
T}@T{
\[ga]SVGNumber\[ga]
T}@T{
.PP
Returns the specified item from the list.
The returned item is the item itself and not a copy.
Any changes made to the item are immediately reflected in the list.
The first item is number \f[CR]0\f[R].
.PP
\f[B]Exceptions:\f[R]
.IP \[bu] 2
a \[ga]DOMException\[ga] with code
\f[CR]NO_MODIFICATION_ALLOWED_ERR\f[R] is raised when the list
corresponds to a read only attribute or when the object itself is read
only.
T}
T{
\f[B]\f[CB]insertItemBefore\f[B]\f[R]\f[CR](in \[ga]SVGNumber\[ga] \f[R]\f[CR]newItem\f[R]\f[CR], in unsigned long \f[R]\f[CR]index\f[R]\f[CR])\f[R]
T}@T{
\[ga]SVGNumber\[ga]
T}@T{
.PP
Inserts a new item into the list at the specified position.
The first item is number \f[CR]0\f[R].
.PP
If \f[CR]newItem\f[R] is already in a list, it is removed from its
previous list before it is inserted into this list.
The inserted item is the item itself and not a copy.
If the item is already in this list, note that the index of the item to
insert before is before the removal of the item.
.PP
If the \f[CR]index\f[R] is equal to \f[CR]0\f[R], then the new item is
inserted at the front of the list.
If the index is greater than or equal to \f[CR]numberOfItems\f[R], then
the new item is appended to the end of the list.
.PP
\f[B]Exceptions:\f[R]
.IP \[bu] 2
a \[ga]DOMException\[ga] with code
\f[CR]NO_MODIFICATION_ALLOWED_ERR\f[R] is raised when the list
corresponds to a read only attribute or when the object itself is read
only.
T}
T{
\f[B]\f[CB]replaceItem\f[B]\f[R]\f[CR](in \[ga]SVGNumber\[ga] \f[R]\f[CR]newItem\f[R]\f[CR], in unsigned long \f[R]\f[CR]index\f[R]\f[CR])\f[R]
T}@T{
\[ga]SVGNumber\[ga]
T}@T{
.PP
Replaces an existing item in the list with a new item.
If \f[CR]newItem\f[R] is already in a list, it is removed from its
previous list before it is inserted into this list.
The inserted item is the item itself and not a copy.
If the item is already in this list, note that the index of the item to
replace is before the removal of the item.
.PP
\f[B]Exceptions:\f[R]
.IP \[bu] 2
a \[ga]DOMException\[ga] with code
\f[CR]NO_MODIFICATION_ALLOWED_ERR\f[R] is raised when the list
corresponds to a read only attribute or when the object itself is read
only.
.IP \[bu] 2
a \[ga]DOMException\[ga] with code \f[CR]INDEX_SIZE_ERR\f[R] is raised
if \f[CR]index\f[R] is greater than or equal to
\f[CR]numberOfItems\f[R].
T}
T{
\f[B]\f[CB]removeItem\f[B]\f[R]\f[CR](in unsigned long \f[R]\f[CR]index\f[R]\f[CR])\f[R]
T}@T{
\[ga]SVGNumber\[ga]
T}@T{
.PP
Removes an existing item from the list.
.PP
\f[B]Exceptions:\f[R]
.IP \[bu] 2
a \[ga]DOMException\[ga] with code
\f[CR]NO_MODIFICATION_ALLOWED_ERR\f[R] is raised when the list
corresponds to a read only attribute or when the object itself is read
only.
.IP \[bu] 2
a \[ga]DOMException\[ga] with code \f[CR]INDEX_SIZE_ERR\f[R] is raised
if \f[CR]index\f[R] is greater than or equal to
\f[CR]numberOfItems\f[R].
T}
T{
\f[B]\f[CB]appendItem\f[B]\f[R]\f[CR](in \[ga]SVGNumber\[ga] \f[R]\f[CR]newItem\f[R]\f[CR])\f[R]
T}@T{
\[ga]SVGNumber\[ga]
T}@T{
.PP
Inserts a new item at the end of the list.
If \f[CR]newItem\f[R] is already in a list, it is removed from its
previous list before it is inserted into this list.
The inserted item is the item itself and not a copy.
.PP
\f[B]Exceptions:\f[R]
.IP \[bu] 2
a \[ga]DOMException\[ga] with code
\f[CR]NO_MODIFICATION_ALLOWED_ERR\f[R] is raised when the list
corresponds to a read only attribute or when the object itself is read
only.
T}
.TE
