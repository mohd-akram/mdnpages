.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "Element.ariaChecked" "JS" "April 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Element.ariaChecked \- Element: ariaChecked property
.SH SYNOPSIS
The \f[B]\f[CB]ariaChecked\f[B]\f[R] property of the \f[CR]Element\f[R]
interface reflects the value of the \f[CR]aria\-checked\f[R] attribute,
which indicates the current \[lq]checked\[rq] state of checkboxes, radio
buttons, and other widgets that have a checked state.
.RS
.PP
\f[B]Note:\f[R] Where possible use an HTML \f[CR]<input>\f[R] element
with \f[CR]type=\[dq]checkbox\[dq]\f[R] as this element has built in
semantics and does not require ARIA attributes.
.RE
.SH VALUE
A string with one of the following values:
.TP
\f[B]\[dq]true\[dq]\f[R]
The element is checked.
.TP
\f[B]\[dq]mixed\[dq]\f[R]
Indicates a mixed mode value for a tri\-state checkbox or
menuitemcheckbox.
.TP
\f[B]\[dq]false\[dq]\f[R]
The element supports being checked but is not currently checked.
.TP
\f[B]\[dq]undefined\[dq]\f[R]
The element does not support being checked.
.SH EXAMPLES
In this example the \f[CR]aria\-checked\f[R] attribute on the element
with an ID of \f[CR]checkBoxInput\f[R] is set to \[lq]false\[rq]
indicating that this input is currently unchecked.
Using \f[CR]ariaChecked\f[R] we update the value to \[lq]true\[rq].
.IP
.EX
<\f[B]span\f[R]
  role=\[dq]checkbox\[dq]
  id=\[dq]checkBoxInput\[dq]
  aria\-checked=\[dq]false\[dq]
  tabindex=\[dq]0\[dq]
  aria\-labelledby=\[dq]chk1\-label\[dq]>
</\f[B]span\f[R]>
<\f[B]label\f[R] id=\[dq]chk1\-label\[dq]>Remember my preferences</\f[B]label\f[R]>
.EE
.IP
.EX
\f[B]let\f[R] el = document.getElementById(\[dq]checkBoxInput\[dq]);
console.log(el.ariaChecked); \f[I]// \[dq]false\[dq]\f[R]
el.ariaChecked = \[dq]true\[dq];
console.log(el.ariaChecked); \f[I]// \[dq]true\[dq]\f[R]
.EE
.SH SEE ALSO
.IP \[bu] 2
ARIA: checkbox role
