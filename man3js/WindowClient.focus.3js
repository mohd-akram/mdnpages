.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "WINDOWCLIENT.FOCUS" "3JS" "May 13, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
WindowClient.focus \- WindowClient: focus() method
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is only available in Service Workers.
.PP
The \f[B]\f[CB]focus()\f[B]\f[R] method of the \f[CR]WindowClient\f[R]
interface gives user input focus to the current client and returns a
\f[CR]Promise\f[R] that resolves to the existing
\f[CR]WindowClient\f[R].
.SH SYNTAX
.IP
.EX
focus()
.EE
.SS Parameters
None.
.SS Return value
A \f[CR]Promise\f[R] that resolves to the existing
\f[CR]WindowClient\f[R].
.SS Exceptions
.TP
\f[B]InvalidAccessError\f[R] \f[B]DOMException\f[R]
The promise is rejected with this exception if none of the windows in
the app\(cqs origin have transient activation.
.SH SECURITY REQUIREMENTS
.IP \(bu 2
At least one window in the app\(cqs origin must have transient
activation.
.SH EXAMPLES
.IP
.EX
self.addEventListener(\(dqnotificationclick\(dq, (event) \f[B]=>\f[R] {
  console.log(\(dqOn notification click: \(dq, event.notification.tag);
  event.notification.close();

  \f[I]// This looks to see if the current is already open and\f[R]
  \f[I]// focuses if it is\f[R]
  event.waitUntil(
    clients
      .matchAll({
        type: \(dqwindow\(dq,
      })
      .then((clientList) \f[B]=>\f[R] {
        \f[B]for\f[R] (\f[B]const\f[R] client \f[B]of\f[R] clientList) {
          \f[B]if\f[R] (client.url === \(dq/\(dq && \(dqfocus\(dq \f[B]in\f[R] client) \f[B]return\f[R] client.focus();
        }
        \f[B]if\f[R] (clients.openWindow) \f[B]return\f[R] clients.openWindow(\(dq/\(dq);
      }),
  );
});
.EE
