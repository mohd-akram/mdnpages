.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "Set.\[at]\[at]iterator" "JS" "October 24, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Set.\[at]\[at]iterator \- Set.prototype\[at]\[at]iterator
.SH SYNOPSIS
The \f[B]\f[CB][\[at]\[at]iterator]()\f[B]\f[R] method of \f[CR]Set\f[R]
instances implements the iterable protocol and allows \f[CR]Set\f[R]
objects to be consumed by most syntaxes expecting iterables, such as the
spread syntax and \f[CR]for...of\f[R] loops.
It returns a set iterator object that yields the values of the set in
insertion order.
.PP
The initial value of this property is the same function object as the
initial value of the \f[CR]Set.prototype.values\f[R] property.
.SH SYNTAX
.IP
.EX
set[Symbol.iterator]()
.EE
.SS Parameters
None.
.SS Return value
The same return value as \f[CR]Set.prototype.values()\f[R]: a new
iterable iterator object that yields the values of the set.
.SH EXAMPLES
.SS Iteration using for\&...of loop
Note that you seldom need to call this method directly.
The existence of the \f[CR]\[at]\[at]iterator\f[R] method makes
\f[CR]Set\f[R] objects iterable, and iterating syntaxes like the
\f[CR]for...of\f[R] loop automatically call this method to obtain the
iterator to loop over.
.IP
.EX
\f[B]const\f[R] mySet = \f[B]new\f[R] Set();
mySet.add(\[dq]0\[dq]);
mySet.add(1);
mySet.add({});

\f[B]for\f[R] (\f[B]const\f[R] v \f[B]of\f[R] mySet) {
  console.log(v);
}
.EE
.SS Manually hand\-rolling the iterator
You may still manually call the \f[CR]next()\f[R] method of the returned
iterator object to achieve maximum control over the iteration process.
.IP
.EX
\f[B]const\f[R] mySet = \f[B]new\f[R] Set();
mySet.add(\[dq]0\[dq]);
mySet.add(1);
mySet.add({});

\f[B]const\f[R] setIter = mySet[Symbol.iterator]();

console.log(setIter.next().value); \f[I]// \[dq]0\[dq]\f[R]
console.log(setIter.next().value); \f[I]// 1\f[R]
console.log(setIter.next().value); \f[I]// {}\f[R]
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]Set\f[R]
.IP \[bu] 2
\f[CR]Set.prototype.entries()\f[R]
.IP \[bu] 2
\f[CR]Set.prototype.keys()\f[R]
.IP \[bu] 2
\f[CR]Set.prototype.values()\f[R]
.IP \[bu] 2
\f[CR]Symbol.iterator\f[R]
.IP \[bu] 2
Iteration protocols
