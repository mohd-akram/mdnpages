.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "RTCPeerConnection.signalingstatechange_event" "JS" "July 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
RTCPeerConnection.signalingstatechange_event \- RTCPeerConnection:
signalingstatechange event
.SH SYNOPSIS
A \f[B]\f[CB]signalingstatechange\f[B]\f[R] event is sent to an
\f[CR]RTCPeerConnection\f[R] to notify it that its signaling state, as
indicated by the \f[CR]signalingState\f[R] property, has changed.
.PP
This event is not cancelable and does not bubble.
.SH SYNTAX
Use the event name in methods like \f[CR]addEventListener()\f[R], or set
an event handler property.
.IP
.EX
addEventListener(\[dq]signalingstatechange\[dq], (event) \f[B]=>\f[R] {});

onsignalingstatechange = (event) \f[B]=>\f[R] {};
.EE
.SH EVENT TYPE
A generic \f[CR]Event\f[R].
.SH EXAMPLES
Given an \f[CR]RTCPeerConnection\f[R], \f[CR]pc\f[R], and an
\f[CR]updateStatus()\f[R] function that presents status information to
the user, this code sets up an event handler to let the user know when
the ICE negotiation process finishes up.
.IP
.EX
pc.addEventListener(
  \[dq]signalingstatechange\[dq],
  (ev) \f[B]=>\f[R] {
    \f[B]switch\f[R] (pc.signalingState) {
      \f[B]case\f[R] \[dq]stable\[dq]:
        updateStatus(\[dq]ICE negotiation complete\[dq]);
        \f[B]break\f[R];
    }
  },
  \f[B]false\f[R],
);
.EE
.PP
Using \f[CR]onsignalingstatechange\f[R], it looks like this:
.IP
.EX
pc.onsignalingstatechange = (ev) \f[B]=>\f[R] {
  \f[B]switch\f[R] (pc.signalingState) {
    \f[B]case\f[R] \[dq]stable\[dq]:
      updateStatus(\[dq]ICE negotiation complete\[dq]);
      \f[B]break\f[R];
  }
};
.EE
.SH SEE ALSO
.IP \[bu] 2
WebRTC API
.IP \[bu] 2
\f[CR]RTCPeerConnection.signalingState\f[R]
