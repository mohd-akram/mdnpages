.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "IDBKeyRange.upper" "JS" "July 26, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
IDBKeyRange.upper \- IDBKeyRange: upper property
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]upper\f[B]\f[R] read\-only property of the
\f[CR]IDBKeyRange\f[R] interface returns the upper bound of the key
range.
.SH VALUE
The upper bound of the key range (can be any type.)
.SH EXAMPLES
The following example illustrates how you\[cq]d use a key range.
Here we declare
\f[CR]keyRangeValue = IDBKeyRange.upperBound(\[dq]F\[dq], \[dq]W\[dq], true, true);\f[R]
\[em] a range that includes everything between \[lq]F\[rq] and
\[lq]W\[rq] but not including them \[em] since both the upper and lower
bounds have been declared as open (\f[CR]true\f[R]).
We open a transaction (using \f[CR]IDBTransaction\f[R]) and an object
store, and open a Cursor with \f[CR]IDBObjectStore.openCursor\f[R],
declaring \f[CR]keyRangeValue\f[R] as its optional key range value.
.PP
After declaring the key range, we log its \f[CR]upper\f[R] property
value to the console, which should appear as \[lq]W\[rq].
.RS
.PP
\f[B]Note:\f[R] For a more complete example allowing you to experiment
with key range, have a look at our \c
.UR https://github.com/mdn/dom-examples/tree/main/indexeddb-examples/idbkeyrange
IDBKeyRange\-example
.UE \c
\ repo (\c
.UR https://mdn.github.io/dom-examples/indexeddb-examples/idbkeyrange/
view the example live too
.UE \c
\&.)
.RE
.IP
.EX
\f[B]function\f[R] displayData() {
  \f[B]const\f[R] keyRangeValue = IDBKeyRange.bound(\[dq]F\[dq], \[dq]W\[dq], \f[B]true\f[R], \f[B]true\f[R]);
  console.log(keyRangeValue.upper);

  \f[B]const\f[R] transaction = db.transaction([\[dq]fThings\[dq]], \[dq]readonly\[dq]);
  \f[B]const\f[R] objectStore = transaction.objectStore(\[dq]fThings\[dq]);

  objectStore.openCursor(keyRangeValue).onsuccess = (event) \f[B]=>\f[R] {
    \f[B]const\f[R] cursor = event.target.result;
    \f[B]if\f[R] (cursor) {
      \f[B]const\f[R] listItem = document.createElement(\[dq]li\[dq]);
      listItem.textContent = \[ga]${cursor.value.fThing}, ${cursor.value.fRating}\[ga];
      list.appendChild(listItem);

      cursor.continue();
    } \f[B]else\f[R] {
      console.log(\[dq]Entries all displayed.\[dq]);
    }
  };
}
.EE
.SH SEE ALSO
.IP \[bu] 2
Using IndexedDB
.IP \[bu] 2
Starting transactions: \f[CR]IDBDatabase\f[R]
.IP \[bu] 2
Using transactions: \f[CR]IDBTransaction\f[R]
.IP \[bu] 2
Setting a range of keys: \f[CR]IDBKeyRange\f[R]
.IP \[bu] 2
Retrieving and making changes to your data: \f[CR]IDBObjectStore\f[R]
.IP \[bu] 2
Using cursors: \f[CR]IDBCursor\f[R]
.IP \[bu] 2
Reference example: \c
.UR https://github.com/mdn/dom-examples/tree/main/to-do-notifications
To\-do Notifications
.UE \c
\ (\c
.UR https://mdn.github.io/dom-examples/to-do-notifications/
View the example live
.UE \c
).
