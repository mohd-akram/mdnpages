.\" Automatically generated by Pandoc 3.4
.\"
.TH "IntersectionObserverEntry.isIntersecting" "JS" "April 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
IntersectionObserverEntry.isIntersecting \- IntersectionObserverEntry:
isIntersecting property
.SH SYNOPSIS
The \f[CR]IntersectionObserverEntry\f[R] interface\[cq]s read\-only
\f[B]\f[CB]isIntersecting\f[B]\f[R] property is a Boolean value which is
\f[CR]true\f[R] if the target element intersects with the intersection
observer\[cq]s root.
If this is \f[CR]true\f[R], then, the
\f[CR]IntersectionObserverEntry\f[R] describes a transition into a state
of intersection; if it\[cq]s \f[CR]false\f[R], then you know the
transition is from intersecting to not\-intersecting.
.SH VALUE
A Boolean value which indicates whether the \f[CR]target\f[R] element
has transitioned into a state of intersection (\f[CR]true\f[R]) or out
of a state of intersection (\f[CR]false\f[R]).
.SH EXAMPLES
In this simple example, an intersection callback is used to update a
counter of how many targeted elements are currently intersecting with
the intersection root.
.IP
.EX
\f[B]function\f[R] intersectionCallback(entries) {
  entries.forEach((entry) \f[B]=>\f[R] {
    \f[B]if\f[R] (entry.isIntersecting) {
      intersectingCount += 1;
    } \f[B]else\f[R] {
      intersectingCount \-= 1;
    }
  });
}
.EE
.PP
To see a more concrete example, take a look at Handling intersection
changes.
