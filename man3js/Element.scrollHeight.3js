.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "ELEMENT.SCROLLHEIGHT" "3JS" "April 20, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Element.scrollHeight \- Element: scrollHeight property
.SH SYNOPSIS
The \f[B]\f[CB]scrollHeight\f[B]\f[R] read\-only property of the
\f[CR]Element\f[R] interface is a measurement of the height of an
element\(cqs content, including content not visible on the screen due to
overflow.
[IMAGE: The user\(cqs viewport is an element with four regions labeled
padding\-top, border\-top, border\-bottom, padding\-bottom.
The scroll height goes from the container\(cqs padding top to the end of
the padding bottom, well beyond the top and bottom of the viewport.]
The user\(cqs viewport is an element with four regions labeled
padding\-top, border\-top, border\-bottom, padding\-bottom.
The scroll height goes from the container\(cqs padding top to the end of
the padding bottom, well beyond the top and bottom of the viewport.
.PP
The \f[CR]scrollHeight\f[R] value is equal to the minimum height the
element would require in order to fit all the content in the viewport
without using a vertical scrollbar.
The height is measured in the same way as \f[CR]clientHeight\f[R]: it
includes the element\(cqs padding, but not its border, margin or
horizontal scrollbar (if present).
It can also include the height of pseudo\-elements such as
\f[CR]::before\f[R] or \f[CR]::after\f[R].
If the element\(cqs content can fit without a need for vertical
scrollbar, its \f[CR]scrollHeight\f[R] is equal to
\f[CR]clientHeight\f[R].
.SH VALUE
An integer.
.SH PROBLEMS AND SOLUTIONS
.SS Determine if an element has been totally scrolled
\f[CR]scrollTop\f[R] is a non\-rounded number, while
\f[CR]scrollHeight\f[R] and \f[CR]clientHeight\f[R] are rounded \(em so
the only way to determine if the scroll area is scrolled to the bottom
is by seeing if the scroll amount is close enough to some threshold (in
this example \f[CR]1\f[R]):
.IP
.EX
Math.abs(element.scrollHeight \- element.clientHeight \- element.scrollTop) <= 1;
.EE
.PP
The following will \f[I]not\f[R] work all the time because
\f[CR]scrollTop\f[R] can contain decimals:
.IP
.EX
element.scrollHeight \- Math.abs(element.scrollTop) === element.clientHeight;
.EE
.SS Determine if the content of an element is overflowing
This function returns a boolean value indicating if the content of an
element is overflowing its bounds:
.IP
.EX
\f[B]function\f[R] isOverflowing(element) {
  \f[B]return\f[R] element.scrollHeight > element.clientHeight;
}
.EE
.PP
Then, you may want to check if it\(cqs scrollable in this case:
.IP
.EX
\f[B]function\f[R] isScrollable(element) {
  \f[B]return\f[R] (
    isOverflowing(element) &&
    [\(dqscroll\(dq, \(dqauto\(dq].includes(window.getComputedStyle(element).overflowY)
  );
}
.EE
.SH EXAMPLES
.SS Checking that the user has read a text
Associated with the \f[CR]scroll\f[R] event, this equivalence can be
useful to determine whether a user has read a text or not (see also the
\f[CR]element.scrollTop\f[R] and \f[CR]element.clientHeight\f[R]
properties).
.PP
The checkbox in the demo below is disabled, and so cannot be checked to
show agreement until the content of the paragraph has been scrolled
through.
Once checked, the \(lqNext\(rq button can be clicked to continue.
.SS HTML
.IP
.EX
<\f[B]form\f[R] id=\(dqform\(dq name=\(dqregistration\(dq>
  <\f[B]p\f[R] id=\(dqinfo\(dq>Read all text to agree</\f[B]p\f[R]>
  <\f[B]div\f[R] id=\(dqvery\-important\-read\(dq>
    <\f[B]p\f[R]>
      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod
      tempor incididunt ut labore et dolore magna aliqua. Feugiat sed lectus
      vestibulum mattis. Id consectetur purus ut faucibus pulvinar elementum
      integer enim neque. Metus vulputate eu scelerisque felis imperdiet. Massa
      massa ultricies mi quis hendrerit dolor magna eget est. Rhoncus aenean vel
      elit scelerisque mauris pellentesque. Volutpat est velit egestas dui id
      ornare arcu. Id cursus metus aliquam eleifend mi in. Condimentum lacinia
      quis vel eros donec ac. Feugiat pretium nibh ipsum consequat nisl vel
      pretium lectus.
    </\f[B]p\f[R]>
    <\f[B]p\f[R]>
      Sit amet volutpat consequat mauris nunc congue nisi vitae. Viverra
      accumsan in nisl nisi scelerisque. Enim ut tellus elementum sagittis
      vitae. Dolor sed viverra ipsum nunc aliquet bibendum enim facilisis. Nisi
      scelerisque eu ultrices vitae. Sem fringilla ut morbi tincidunt augue
      interdum velit. Senectus et netus et malesuada fames ac turpis egestas.
      Nunc non blandit massa enim nec. At augue eget arcu dictum varius duis at.
      Dictumst quisque sagittis purus sit amet. Ut eu sem integer vitae justo.
      Mollis aliquam ut porttitor leo a diam sollicitudin. Mollis nunc sed id
      semper risus in. Eu volutpat odio facilisis mauris sit. Augue interdum
      velit euismod in pellentesque massa placerat duis. Aliquam faucibus purus
      in massa tempor nec feugiat. Nisl rhoncus mattis rhoncus urna neque
      viverra justo. Leo duis ut diam quam nulla. Ultrices dui sapien eget mi
      proin sed libero enim.
    </\f[B]p\f[R]>
    <\f[B]p\f[R]>
      Cras adipiscing enim eu turpis egestas. Est ultricies integer quis auctor
      elit. Tempor id eu nisl nunc mi ipsum. Non nisi est sit amet facilisis.
      Nisl suscipit adipiscing bibendum est ultricies integer quis. Habitant
      morbi tristique senectus et netus et malesuada. Etiam erat velit
      scelerisque in dictum non consectetur a erat. Diam sollicitudin tempor id
      eu nisl. Aenean vel elit scelerisque mauris pellentesque pulvinar
      pellentesque habitant. A pellentesque sit amet porttitor. Viverra aliquet
      eget sit amet tellus cras. Eu ultrices vitae auctor eu.
    </\f[B]p\f[R]>
    <\f[B]p\f[R]>
      Fames ac turpis egestas sed tempus. Id donec ultrices tincidunt arcu non
      sodales. Congue mauris rhoncus aenean vel elit scelerisque mauris
      pellentesque. Velit scelerisque in dictum non consectetur a erat nam.
      Auctor elit sed vulputate mi sit amet mauris commodo. Mauris ultrices eros
      in cursus turpis massa tincidunt. Dui sapien eget mi proin sed libero enim
      sed faucibus. Ipsum dolor sit amet consectetur adipiscing elit
      pellentesque habitant. Amet massa vitae tortor condimentum. Feugiat nisl
      pretium fusce id velit. Malesuada proin libero nunc consequat interdum
      varius sit. Quam nulla porttitor massa id neque aliquam vestibulum morbi
      blandit. Gravida arcu ac tortor dignissim convallis aenean et tortor at.
      Dapibus ultrices in iaculis nunc sed. Fermentum et sollicitudin ac orci
      phasellus egestas tellus. Proin libero nunc consequat interdum varius sit
      amet mattis. Sed viverra ipsum nunc aliquet bibendum.
    </\f[B]p\f[R]>
  </\f[B]div\f[R]>
  <\f[B]p\f[R]>
    <\f[B]input\f[R] type=\(dqcheckbox\(dq id=\(dqagree\(dq name=\(dqaccept\(dq disabled />
    <\f[B]label\f[R] for=\(dqagree\(dq>I agree</\f[B]label\f[R]>
    <\f[B]input\f[R] type=\(dqsubmit\(dq id=\(dqnext\-step\(dq value=\(dqNext\(dq disabled />
  </\f[B]p\f[R]>
</\f[B]form\f[R]>
.EE
.SS CSS
.IP
.EX
info {
  \f[B]margin\f[R]: 5px;
  \f[B]display\f[R]: inline\-block;
  \f[B]font\-style\f[R]: italic;
}

very\-important\-read {
  \f[B]height\f[R]: 130px;
  \f[B]padding\f[R]: 5px;
  \f[B]border\f[R]: 2px solid #00b4c5;
  \f[B]border\-radius\f[R]: 5px;
  \f[B]overflow\f[R]: scroll;
}
.EE
.SS JavaScript
.IP
.EX
\f[B]const\f[R] info = document.getElementById(\(dqinfo\(dq);
\f[B]const\f[R] toAgree = document.getElementById(\(dqagree\(dq);
\f[B]const\f[R] toNextStep = document.getElementById(\(dqnext\-step\(dq);
\f[B]const\f[R] veryImportantRead = document.getElementById(\(dqvery\-important\-read\(dq);

\f[I]// Check if user has scrolled the element to the bottom\f[R]
\f[B]function\f[R] isRead(element) {
  \f[B]return\f[R] (
    Math.abs(element.scrollHeight \- element.clientHeight \- element.scrollTop) <=
    1
  );
}

\f[B]function\f[R] checkScrollToBottom(element) {
  \f[B]if\f[R] (isRead(element)) {
    info.innerText = \(dqYou have read all text. Agree to continue.\(dq;
    toAgree.disabled = \f[B]false\f[R];
  }
}

toAgree.addEventListener(\(dqchange\(dq, (e) \f[B]=>\f[R] {
  toNextStep.disabled = !e.target.checked;
});

veryImportantRead.addEventListener(\(dqscroll\(dq, () \f[B]=>\f[R] {
  checkScrollToBottom(veryImportantRead);
});

toNextStep.addEventListener(\(dqclick\(dq, () \f[B]=>\f[R] {
  \f[B]if\f[R] (toAgree.checked) {
    toNextStep.value = \(dqDone!\(dq;
  }
});
.EE
.SS Result
.SH SEE ALSO
.IP \(bu 2
Determining the dimensions of elements
.IP \(bu 2
\f[CR]HTMLElement.offsetHeight\f[R]
.IP \(bu 2
\f[CR]Element.clientHeight\f[R]
.IP \(bu 2
\f[CR]Element.scrollWidth\f[R]
.IP \(bu 2
\f[CR]Element.scrollLeft\f[R]
.IP \(bu 2
\f[CR]Element.scrollTop\f[R]
.IP \(bu 2
\f[CR]Element.getBoundingClientRect()\f[R]
.IP \(bu 2
\f[CR]Element.scrollTo()\f[R]
