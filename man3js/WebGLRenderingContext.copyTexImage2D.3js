.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "WebGLRenderingContext.copyTexImage2D" "JS" "April 8, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
WebGLRenderingContext.copyTexImage2D \- WebGLRenderingContext:
copyTexImage2D() method
.SH SYNOPSIS
The \f[B]\f[CB]WebGLRenderingContext.copyTexImage2D()\f[B]\f[R] method
of the WebGL API copies pixels from the current
\f[CR]WebGLFramebuffer\f[R] into a 2D texture image.
.SH SYNTAX
.IP
.EX
copyTexImage2D(target, level, internalformat, x, y, width, height, border)
.EE
.SS Parameters
.TP
\f[B]target\f[R]
A \f[CR]GLenum\f[R] specifying the binding point (target) of the active
texture.
Possible values:
.RS
.IP \[bu] 2
\f[CR]gl.TEXTURE_2D\f[R]: A two\-dimensional texture.
.IP \[bu] 2
\f[CR]gl.TEXTURE_CUBE_MAP_POSITIVE_X\f[R]: Positive X face for a
cube\-mapped texture.
.IP \[bu] 2
\f[CR]gl.TEXTURE_CUBE_MAP_NEGATIVE_X\f[R]: Negative X face for a
cube\-mapped texture.
.IP \[bu] 2
\f[CR]gl.TEXTURE_CUBE_MAP_POSITIVE_Y\f[R]: Positive Y face for a
cube\-mapped texture.
.IP \[bu] 2
\f[CR]gl.TEXTURE_CUBE_MAP_NEGATIVE_Y\f[R]: Negative Y face for a
cube\-mapped texture.
.IP \[bu] 2
\f[CR]gl.TEXTURE_CUBE_MAP_POSITIVE_Z\f[R]: Positive Z face for a
cube\-mapped texture.
.IP \[bu] 2
\f[CR]gl.TEXTURE_CUBE_MAP_NEGATIVE_Z\f[R]: Negative Z face for a
cube\-mapped texture.
.RE
.TP
\f[B]level\f[R]
A \f[CR]GLint\f[R] specifying the level of detail.
Level 0 is the base image level and level \f[I]n\f[R] is the n\-th
mipmap reduction level.
.TP
\f[B]internalformat\f[R]
A \f[CR]GLenum\f[R] specifying the color components in the texture.
Possible values:
.RS
.IP \[bu] 2
\f[CR]gl.ALPHA\f[R]: Discards the red, green and blue components and
reads the alpha component.
.IP \[bu] 2
\f[CR]gl.RGB\f[R]: Discards the alpha components and reads the red,
green and blue components.
.IP \[bu] 2
\f[CR]gl.RGBA\f[R]: Red, green, blue and alpha components are read from
the color buffer.
.IP \[bu] 2
\f[CR]gl.LUMINANCE\f[R]: Each color component is a luminance component,
alpha is 1.0.
.IP \[bu] 2
\f[CR]gl.LUMINANCE_ALPHA\f[R]: Each component is a luminance/alpha
component.
.RE
.TP
\f[B]x\f[R]
A \f[CR]GLint\f[R] specifying the x coordinate of the lower left corner
where to start copying.
.TP
\f[B]y\f[R]
A \f[CR]GLint\f[R] specifying the y coordinate of the lower left corner
where to start copying.
.TP
\f[B]width\f[R]
A \f[CR]GLsizei\f[R] specifying the width of the texture.
.TP
\f[B]height\f[R]
A \f[CR]GLsizei\f[R] specifying the height of the texture.
.TP
\f[B]border\f[R]
A \f[CR]GLint\f[R] specifying the width of the border.
Must be 0.
.SS Return value
None (\f[CR]undefined\f[R]).
.SH EXAMPLES
.IP
.EX
gl.copyTexImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 0, 0, 512, 512, 0);
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]WebGLRenderingContext.createTexture()\f[R]
.IP \[bu] 2
\f[CR]WebGLRenderingContext.bindTexture()\f[R]
.IP \[bu] 2
\f[CR]WebGLRenderingContext.texImage2D()\f[R]
.IP \[bu] 2
\f[CR]WebGLRenderingContext.texSubImage2D()\f[R]
.IP \[bu] 2
\f[CR]WebGLRenderingContext.compressedTexImage2D()\f[R]
