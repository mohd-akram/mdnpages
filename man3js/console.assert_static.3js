.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "console.assert_static" "JS" "July 13, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
console.assert_static \- console: assert() static method
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]console.assert()\f[B]\f[R] static method writes an error
message to the console if the assertion is false.
If the assertion is true, nothing happens.
.SH SYNTAX
.IP
.EX
assert(assertion)

assert(assertion, val1)
assert(assertion, val1, val2)
assert(assertion, val1, val2, /* \&..., */ valN)

assert(assertion, msg)
assert(assertion, msg, subst1)
assert(assertion, msg, subst1, /* \&..., */ substN)
.EE
.SS Parameters
.TP
\f[B]assertion\f[R]
Any boolean expression.
If the assertion is false, a generic message indicating assertion
failure is written to the console.
.TP
\f[B]val1\f[R] \&... \f[B]valN\f[R]
A list of JavaScript values to output.
A representation of each of these values is output to the console after
a generic assertion failure message (which may be different from the
message output when these values are not present) in the order given
with some type of separation between the message and between each of
them.
There is a special case if \f[CR]obj1\f[R] is a string, which is
described subsequently.
.TP
\f[B]msg\f[R]
A JavaScript string containing zero or more substitution strings, which
are replaced with \f[CR]subst1\f[R] through \f[CR]substN\f[R] in
consecutive order up to the number of substitution strings.
A colon, a space, and then the substituted string are appended to the
generic assertion message to form a detailed assertion message, and the
result is output to the console.
See Using string substitutions for a description of how substitutions
work.
.TP
\f[B]subst1\f[R] \&... \f[B]substN\f[R]
JavaScript values with which to replace substitution strings within
\f[CR]msg\f[R].
If there are more substitution values than there are substitution
strings, the extra values are themselves written to the console after
the detailed assertion message in the same manner as when there\[cq]s no
format string.
.PP
See Outputting text to the console in the documentation of
\f[CR]console\f[R] for further details.
.SS Return value
None (\f[CR]undefined\f[R]).
.SH EXAMPLES
The following code example demonstrates the use of a JavaScript object
following the assertion:
.IP
.EX
\f[B]const\f[R] errorMsg = \[dq]the # is not even\[dq];
\f[B]for\f[R] (\f[B]let\f[R] number = 2; number <= 5; number++) {
  console.log(\[ga]the # is ${number}\[ga]);
  console.assert(number % 2 === 0, \[dq]%o\[dq], { number, errorMsg });
}
\f[I]// output:\f[R]
\f[I]// the # is 2\f[R]
\f[I]// the # is 3\f[R]
\f[I]// Assertion failed: {number: 3, errorMsg: \[dq]the # is not even\[dq]}\f[R]
\f[I]// the # is 4\f[R]
\f[I]// the # is 5\f[R]
\f[I]// Assertion failed: {number: 5, errorMsg: \[dq]the # is not even\[dq]}\f[R]
.EE
.SH SEE ALSO
.IP \[bu] 2
\c
.UR https://learn.microsoft.com/en-us/microsoft-edge/devtools-guide-chromium/console/api#assert
Microsoft Edge\[cq]s documentation for \f[CR]console.assert()\f[R]
.UE \c
.IP \[bu] 2
\c
.UR https://nodejs.org/docs/latest/api/console.html#consoleassertvalue-message
Node.JS documentation for \f[CR]console.assert()\f[R]
.UE \c
.IP \[bu] 2
\c
.UR https://developer.chrome.com/docs/devtools/console/api/#dir
Google Chrome\[cq]s documentation for \f[CR]console.dir()\f[R]
.UE \c
