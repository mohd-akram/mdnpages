.\" Automatically generated by Pandoc 3.4
.\"
.TH "FileReader.readyState" "JS" "June 27, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
FileReader.readyState \- FileReader: readyState property
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]readyState\f[B]\f[R] read\-only property of the
\f[CR]FileReader\f[R] interface provides the current state of the
reading operation.
This will be one of the states: \f[CR]EMPTY\f[R], \f[CR]LOADING\f[R], or
\f[CR]DONE\f[R].
.SH VALUE
A number which is one of the three possible state constants defined on
the \f[CR]FileReader\f[R] interface:
.TP
\f[B]FileReader.EMPTY\f[R] (0)
Reader has been created, but none of the read methods have been called
yet.
.TP
\f[B]FileReader.LOADING\f[R] (1)
A read method has been called.
A \f[CR]File\f[R] or \f[CR]Blob\f[R] is being read, and no error has
occurred yet.
.TP
\f[B]FileReader.DONE\f[R] (2)
The read operation is complete.
This could mean that: the entire \f[CR]File\f[R] or \f[CR]Blob\f[R] has
been read into memory, a file read error occurred, or \f[CR]abort()\f[R]
was called and the read was cancelled.
.SH EXAMPLES
.IP
.EX
\f[B]const\f[R] reader = \f[B]new\f[R] FileReader();
console.log(\[dq]EMPTY\[dq], reader.readyState); \f[I]// readyState will be 0\f[R]

reader.readAsText(blob);
console.log(\[dq]LOADING\[dq], reader.readyState); \f[I]// readyState will be 1\f[R]

reader.onloadend = () \f[B]=>\f[R] {
  console.log(\[dq]DONE\[dq], reader.readyState); \f[I]// readyState will be 2\f[R]
};
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]Blob\f[R]
