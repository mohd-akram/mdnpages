.\" Automatically generated by Pandoc 3.4
.\"
.TH "Event" "JS" "December 19, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Event \- Event
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]Event\f[B]\f[R] interface represents an event which takes
place on an \f[CR]EventTarget\f[R].
.PP
An event can be triggered by the user action e.g.\ clicking the mouse
button or tapping keyboard, or generated by APIs to represent the
progress of an asynchronous task.
It can also be triggered programmatically, such as by calling the
\f[CR]HTMLElement.click()\f[R] method of an element, or by defining the
event, then sending it to a specified target using
\f[CR]EventTarget.dispatchEvent()\f[R].
.PP
There are many types of events, some of which use other interfaces based
on the main \f[CR]Event\f[R] interface.
\f[CR]Event\f[R] itself contains the properties and methods which are
common to all events.
.PP
Many DOM elements can be set up to accept (or \[lq]listen\[rq] for)
these events, and execute code in response to process (or
\[lq]handle\[rq]) them.
Event\-handlers are usually connected (or \[lq]attached\[rq]) to various
HTML elements (such as \f[CR]<button>\f[R], \f[CR]<div>\f[R],
\f[CR]<span>\f[R], etc.)
using \f[CR]EventTarget.addEventListener()\f[R], and this generally
replaces using the old HTML event handler attributes.
Further, when properly added, such handlers can also be disconnected if
needed using \f[CR]removeEventListener()\f[R].
.RS
.PP
\f[B]Note:\f[R] One element can have several such handlers, even for the
exact same event\[em]particularly if separate, independent code modules
attach them, each for its own independent purposes.
(For example, a webpage with an advertising\-module and
statistics\-module both monitoring video\-watching.)
.RE
.PP
When there are many nested elements, each with its own handler(s), event
processing can become very complicated\[em]especially where a parent
element receives the very same event as its child elements because
\[lq]spatially\[rq] they overlap so the event technically occurs in
both, and the processing order of such events depends on the Event
bubbling settings of each handler triggered.
.SH INTERFACES BASED ON EVENT
Below is a list of interfaces which are based on the main
\f[CR]Event\f[R] interface, with links to their respective documentation
in the MDN API reference.
.PP
Note that all event interfaces have names which end in \[lq]Event\[rq].
.IP \[bu] 2
\f[CR]AnimationEvent\f[R]
.IP \[bu] 2
\f[CR]AudioProcessingEvent\f[R] \f[I](deprecated)\f[R]
.IP \[bu] 2
\f[CR]BeforeUnloadEvent\f[R]
.IP \[bu] 2
\f[CR]BlobEvent\f[R]
.IP \[bu] 2
\f[CR]ClipboardEvent\f[R]
.IP \[bu] 2
\f[CR]CloseEvent\f[R]
.IP \[bu] 2
\f[CR]CompositionEvent\f[R]
.IP \[bu] 2
\f[CR]CustomEvent\f[R]
.IP \[bu] 2
\f[CR]DeviceMotionEvent\f[R]
.IP \[bu] 2
\f[CR]DeviceOrientationEvent\f[R]
.IP \[bu] 2
\f[CR]DragEvent\f[R]
.IP \[bu] 2
\f[CR]ErrorEvent\f[R]
.IP \[bu] 2
\f[CR]FetchEvent\f[R]
.IP \[bu] 2
\f[CR]FocusEvent\f[R]
.IP \[bu] 2
\f[CR]FontFaceSetLoadEvent\f[R]
.IP \[bu] 2
\f[CR]FormDataEvent\f[R]
.IP \[bu] 2
\f[CR]GamepadEvent\f[R]
.IP \[bu] 2
\f[CR]HashChangeEvent\f[R]
.IP \[bu] 2
\f[CR]HIDInputReportEvent\f[R]
.IP \[bu] 2
\f[CR]IDBVersionChangeEvent\f[R]
.IP \[bu] 2
\f[CR]InputEvent\f[R]
.IP \[bu] 2
\f[CR]KeyboardEvent\f[R]
.IP \[bu] 2
\f[CR]MediaStreamEvent\f[R] \f[I](deprecated)\f[R]
.IP \[bu] 2
\f[CR]MessageEvent\f[R]
.IP \[bu] 2
\f[CR]MouseEvent\f[R]
.IP \[bu] 2
\f[CR]MutationEvent\f[R] \f[I](deprecated)\f[R]
.IP \[bu] 2
\f[CR]OfflineAudioCompletionEvent\f[R]
.IP \[bu] 2
\f[CR]PageTransitionEvent\f[R]
.IP \[bu] 2
\f[CR]PaymentRequestUpdateEvent\f[R]
.IP \[bu] 2
\f[CR]PointerEvent\f[R]
.IP \[bu] 2
\f[CR]PopStateEvent\f[R]
.IP \[bu] 2
\f[CR]ProgressEvent\f[R]
.IP \[bu] 2
\f[CR]RTCDataChannelEvent\f[R]
.IP \[bu] 2
\f[CR]RTCPeerConnectionIceEvent\f[R]
.IP \[bu] 2
\f[CR]StorageEvent\f[R]
.IP \[bu] 2
\f[CR]SubmitEvent\f[R]
.IP \[bu] 2
\f[CR]SVGEvent\f[R] \f[I](deprecated)\f[R]
.IP \[bu] 2
\f[CR]TimeEvent\f[R]
.IP \[bu] 2
\f[CR]TouchEvent\f[R]
.IP \[bu] 2
\f[CR]TrackEvent\f[R]
.IP \[bu] 2
\f[CR]TransitionEvent\f[R]
.IP \[bu] 2
\f[CR]UIEvent\f[R]
.IP \[bu] 2
\f[CR]WebGLContextEvent\f[R]
.IP \[bu] 2
\f[CR]WheelEvent\f[R]
.SH CONSTRUCTOR
.TP
\f[B]Event()\f[R]
Creates an \f[CR]Event\f[R] object, returning it to the caller.
.SH INSTANCE PROPERTIES
.TP
\f[B]Event.bubbles\f[R] \f[I](read\-only)\f[R]
A boolean value indicating whether or not the event bubbles up through
the DOM.
.TP
\f[B]Event.cancelable\f[R] \f[I](read\-only)\f[R]
A boolean value indicating whether the event is cancelable.
.TP
\f[B]Event.composed\f[R] \f[I](read\-only)\f[R]
A boolean indicating whether or not the event can bubble across the
boundary between the shadow DOM and the regular DOM.
.TP
\f[B]Event.currentTarget\f[R] \f[I](read\-only)\f[R]
A reference to the currently registered target for the event.
This is the object to which the event is currently slated to be sent.
It\[cq]s possible this has been changed along the way through
\f[I]retargeting\f[R].
.TP
\f[B]Event.defaultPrevented\f[R] \f[I](read\-only)\f[R]
Indicates whether or not the call to \f[CR]event.preventDefault()\f[R]
canceled the event.
.TP
\f[B]Event.eventPhase\f[R] \f[I](read\-only)\f[R]
Indicates which phase of the event flow is being processed.
It is one of the following numbers: \f[CR]NONE\f[R],
\f[CR]CAPTURING_PHASE\f[R], \f[CR]AT_TARGET\f[R],
\f[CR]BUBBLING_PHASE\f[R].
.TP
\f[B]Event.isTrusted\f[R] \f[I](read\-only)\f[R]
Indicates whether or not the event was initiated by the browser (after a
user click, for instance) or by a script (using an event creation
method, for example).
.TP
\f[B]Event.srcElement\f[R] \f[I](read\-only)\f[R] \f[I](deprecated)\f[R]
An alias for the \f[CR]Event.target\f[R] property.
Use \f[CR]Event.target\f[R] instead.
.TP
\f[B]Event.target\f[R] \f[I](read\-only)\f[R]
A reference to the object to which the event was originally dispatched.
.TP
\f[B]Event.timeStamp\f[R] \f[I](read\-only)\f[R]
The time at which the event was created (in milliseconds).
By specification, this value is time since epoch\[em]but in reality,
browsers\[cq] definitions vary.
In addition, work is underway to change this to be a
\f[CR]DOMHighResTimeStamp\f[R] instead.
.TP
\f[B]Event.type\f[R] \f[I](read\-only)\f[R]
The name identifying the type of the event.
.SS Legacy and non\-standard properties
.TP
\f[B]Event.cancelBubble\f[R] \f[I](deprecated)\f[R]
A historical alias to \f[CR]Event.stopPropagation()\f[R] that should be
used instead.
Setting its value to \f[CR]true\f[R] before returning from an event
handler prevents propagation of the event.
.TP
\f[B]Event.explicitOriginalTarget\f[R] \f[I](non\-standard)\f[R] \f[I](read\-only)\f[R]
The explicit original target of the event.
.TP
\f[B]Event.originalTarget\f[R] \f[I](non\-standard)\f[R] \f[I](read\-only)\f[R]
The original target of the event, before any retargetings.
.TP
\f[B]Event.returnValue\f[R] \f[I](deprecated)\f[R]
A historical property still supported in order to ensure existing sites
continue to work.
Use \f[CR]Event.preventDefault()\f[R] and
\f[CR]Event.defaultPrevented\f[R] instead.
.TP
\f[B]Event.scoped\f[R] \f[I](read\-only)\f[R] \f[I](deprecated)\f[R]
A boolean value indicating whether the given event will bubble across
through the shadow root into the standard DOM.
Use \f[CR]composed\f[R] instead.
.SH INSTANCE METHODS
.TP
\f[B]Event.composedPath()\f[R]
Returns the event\[cq]s path (an array of objects on which listeners
will be invoked).
This does not include nodes in shadow trees if the shadow root was
created with its \f[CR]ShadowRoot.mode\f[R] closed.
.TP
\f[B]Event.preventDefault()\f[R]
Cancels the event (if it is cancelable).
.TP
\f[B]Event.stopImmediatePropagation()\f[R]
For this particular event, prevent all other listeners from being
called.
This includes listeners attached to the same element as well as those
attached to elements that will be traversed later (during the capture
phase, for instance).
.TP
\f[B]Event.stopPropagation()\f[R]
Stops the propagation of events further along in the DOM.
.SS Deprecated methods
.TP
\f[B]Event.initEvent()\f[R] \f[I](deprecated)\f[R]
Initializes the value of an Event created.
If the event has already been dispatched, this method does nothing.
Use the constructor (\f[CR]Event()\f[R] instead).
.SH SEE ALSO
.IP \[bu] 2
Types of events available: Event reference
.IP \[bu] 2
Learn: Introduction to events
.IP \[bu] 2
Learn: Event bubbling
.IP \[bu] 2
Creating and triggering custom events
