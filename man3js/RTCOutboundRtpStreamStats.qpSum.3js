.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "RTCOutboundRtpStreamStats.qpSum" "JS" "July 26, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
RTCOutboundRtpStreamStats.qpSum \- RTCOutboundRtpStreamStats: qpSum
property
.SH SYNOPSIS
The \f[B]\f[CB]qpSum\f[B]\f[R] property of the
\f[CR]RTCOutboundRtpStreamStats\f[R] dictionary is a value generated by
adding the \f[B]Quantization Parameter\f[R] (\f[B]QP\f[R]) values for
every frame this sender has produced to date on the video track
corresponding to this \f[CR]RTCOutboundRtpStreamStats\f[R] object.
.PP
In general, the higher this number is, the more heavily compressed the
video data is.
.SH VALUE
An unsigned 64\-bit integer value which indicates the sum of the
quantization parameter (QP) value for every frame sent so far on the
track described by the \f[CR]RTCOutboundRtpStreamStats\f[R] object.
Since the value of QP is typically larger to indicate higher compression
factors, the larger this sum is, the more heavily compressed the stream
generally has been.
.RS
.PP
\f[B]Note:\f[R] This value is only available for video media.
.RE
.SH USAGE NOTES
\c
.UR https://en.wikipedia.org/wiki/Quantization
Quantization
.UE \c
\ is the process of applying lossy compression to a range of values,
resulting in a single \f[B]quantum value\f[R].
This value takes the place of the range of values, thereby reducing the
number of different values that appear in the overall data set, making
the data more compressible.
The quantization process and the amount of compression can be controlled
using one or more parameters.
.PP
It\[cq]s important to keep in mind that the value of QP can change
periodically\[em]even every frame\[em]so it\[cq]s difficult to know for
certain how substantial the compression is.
The best you can do is make an estimate.
You can use the value of \f[CR]RTCSentRtpStreamStats.framesEncoded\f[R]
to get the number of frames that have been encoded so far, and compute
an average from there.
See Calculating average quantization below for a function that does
this.
.PP
Also, the exact meaning of the QP value depends on the codec being used.
For example, for the VP8 codec, the QP value can be anywhere from 1 to
127 and is found in the frame header element
\f[CR]\[dq]y_ac_qi\[dq]\f[R], whose value is defined in RFC 6386,
section 19.2).
H.264 uses a QP which ranges from 0 to 51; in this case, it\[cq]s an
index used to derive a scaling matrix used during the quantization
process.
Additionally, QP is not likely to be the only parameter the codec uses
to adjust the compression.
See the individual codec specifications for details.
.SH EXAMPLES
.SS Calculating average quantization
The \f[CR]calculateAverageQP()\f[R] function shown below computes the
average QP for the object that contains RTP stream statistics, returning
0 if the object doesn\[cq]t describe an RTP stream.
.IP
.EX
\f[B]function\f[R] calculateAverageQP(stats) {
  \f[B]let\f[R] frameCount = 0;

  \f[B]switch\f[R] (stats.type) {
    \f[B]case\f[R] \[dq]inbound\-rtp\[dq]:
    \f[B]case\f[R] \[dq]remote\-inbound\-rtp\[dq]:
      frameCount = stats.framesDecoded;
      \f[B]break\f[R];
    \f[B]case\f[R] \[dq]outbound\-rtp\[dq]:
    \f[B]case\f[R] \[dq]remote\-outbound\-rtp\[dq]:
      frameCount = stats.framesEncoded;
      \f[B]break\f[R];
    \f[B]default\f[R]:
      \f[B]return\f[R] 0;
  }

  \f[B]return\f[R] status.qpSum / frameCount;
}
.EE
