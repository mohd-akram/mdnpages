.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "HkdfParams" "JS" "February 15, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
HkdfParams \- HkdfParams
.SH SYNOPSIS
The \f[B]\f[CB]HkdfParams\f[B]\f[R] dictionary of the Web Crypto API
represents the object that should be passed as the \f[CR]algorithm\f[R]
parameter into \f[CR]SubtleCrypto.deriveKey()\f[R], when using the HKDF
algorithm.
.SH INSTANCE PROPERTIES
.TP
\f[B]name\f[R]
A string.
This should be set to \f[CR]HKDF\f[R].
.TP
\f[B]hash\f[R]
A string or an object containing a single property called
\f[CR]name\f[R] with a string value.
It is an identifier for the digest algorithm to use.
This should be one of the following:
.RS
.IP \[bu] 2
\f[CR]SHA\-256\f[R]: selects the SHA\-256 algorithm.
.IP \[bu] 2
\f[CR]SHA\-384\f[R]: selects the SHA\-384 algorithm.
.IP \[bu] 2
\f[CR]SHA\-512\f[R]: selects the SHA\-512 algorithm.
.RS
.PP
\f[B]Warning:\f[R] \f[CR]SHA\-1\f[R] is also supported here but the
SHA\-1 algorithm is considered vulnerable and should no longer be used.
.RE
.RE
.TP
\f[B]salt\f[R]
An \f[CR]ArrayBuffer\f[R], a \f[CR]TypedArray\f[R], or a
\f[CR]DataView\f[R].
The \c
.UR https://datatracker.ietf.org/doc/html/rfc5869
HKDF specification
.UE \c
\ states that adding salt \[lq]adds significantly to the strength of
HKDF\[rq].
Ideally, the salt is a random or pseudo\-random value with the same
length as the output of the digest function.
Unlike the input key material passed into \f[CR]deriveKey()\f[R], salt
does not need to be kept secret.
.TP
\f[B]info\f[R]
An \f[CR]ArrayBuffer\f[R], a \f[CR]TypedArray\f[R], or a
\f[CR]DataView\f[R] representing application\-specific contextual
information.
This is used to bind the derived key to an application or context, and
enables you to derive different keys for different contexts while using
the same input key material.
It\[cq]s important that this should be independent of the input key
material itself.
This property is required but may be an empty buffer.
.SH EXAMPLES
See the examples for \f[CR]SubtleCrypto.deriveKey()\f[R].
