.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "HTMLElement.dragstart_event" "JS" "December 5, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
HTMLElement.dragstart_event \- HTMLElement: dragstart event
.SH SYNOPSIS
The \f[CR]dragstart\f[R] event is fired when the user starts dragging an
element or text selection.
.PP
This event is cancelable and may bubble up to the \f[CR]Document\f[R]
and \f[CR]Window\f[R] objects.
.SH SYNTAX
Use the event name in methods like \f[CR]addEventListener()\f[R], or set
an event handler property.
.IP
.EX
addEventListener(\[dq]dragstart\[dq], (event) \f[B]=>\f[R] {});

ondragstart = (event) \f[B]=>\f[R] {};
.EE
.SH EVENT TYPE
A \f[CR]DragEvent\f[R].
Inherits from \f[CR]Event\f[R].
.SH EVENT PROPERTIES
\f[I]In addition to the properties listed below, properties from the
parent interface, \f[CI]Event\f[I], are available.\f[R]
.TP
\f[B]DragEvent.dataTransfer\f[R] \f[I](read\-only)\f[R]
The data that is transferred during a drag\-and\-drop interaction.
.SH EXAMPLES
.SS Setting opacity on drag start
In this example, we have a draggable element inside a container.
Try grabbing the element, dragging it, and then releasing it.
.PP
We listen for the \f[CR]dragstart\f[R] event to make the element half
transparent while dragged.
.PP
For a complete example of drag and drop, see the page for the
\f[CR]drag\f[R] event.
.SS HTML
.IP
.EX
<\f[B]div\f[R] id=\[dq]container\[dq]>
  <\f[B]div\f[R] id=\[dq]draggable\[dq] draggable=\[dq]true\[dq]>This div is draggable</\f[B]div\f[R]>
</\f[B]div\f[R]>
<\f[B]div\f[R] class=\[dq]dropzone\[dq]></\f[B]div\f[R]>
.EE
.SS CSS
.IP
.EX
body {
  \f[I]/* Prevent the user from selecting text in the example */\f[R]
  \f[B]user\-select\f[R]: none;
}

draggable {
  \f[B]text\-align\f[R]: center;
  \f[B]background\f[R]: white;
}

container {
  \f[B]width\f[R]: 200px;
  \f[B]height\f[R]: 20px;
  \f[B]background\f[R]: blueviolet;
  \f[B]padding\f[R]: 10px;
}

\&.dragging {
  \f[B]opacity\f[R]: 0.5;
}
.EE
.SS JavaScript
.IP
.EX
\f[B]const\f[R] source = document.getElementById(\[dq]draggable\[dq]);
source.addEventListener(\[dq]dragstart\[dq], (event) \f[B]=>\f[R] {
  \f[I]// make it half transparent\f[R]
  event.target.classList.add(\[dq]dragging\[dq]);
});

source.addEventListener(\[dq]dragend\[dq], (event) \f[B]=>\f[R] {
  \f[I]// reset the transparency\f[R]
  event.target.classList.remove(\[dq]dragging\[dq]);
});
.EE
.SS Result
.SH SEE ALSO
.IP \[bu] 2
Other drag and drop events:
.RS 2
.IP \[bu] 2
\f[CR]drag\f[R]
.IP \[bu] 2
\f[CR]dragend\f[R]
.IP \[bu] 2
\f[CR]dragover\f[R]
.IP \[bu] 2
\f[CR]dragenter\f[R]
.IP \[bu] 2
\f[CR]dragleave\f[R]
.IP \[bu] 2
\f[CR]drop\f[R]
.RE
