.\" Automatically generated by Pandoc 3.4
.\"
.TH "Reflect.get" "JS" "September 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Reflect.get \- Reflect.get()
.SH SYNOPSIS
The \f[B]\f[CB]Reflect.get()\f[B]\f[R] static method is like the
property accessor syntax, but as a function.
.SH SYNTAX
.IP
.EX
Reflect.get(target, propertyKey)
Reflect.get(target, propertyKey, receiver)
.EE
.SS Parameters
.TP
\f[B]target\f[R]
The target object on which to get the property.
.TP
\f[B]propertyKey\f[R]
The name of the property to get.
.TP
\f[B]receiver\f[R] \f[I](optional)\f[R]
The value of \f[CR]this\f[R] provided for the call to \f[CR]target\f[R]
if a getter is encountered.
.SS Return value
The value of the property.
.SS Exceptions
.TP
\f[B]TypeError\f[R]
Thrown if \f[CR]target\f[R] is not an object.
.SH DESCRIPTION
\f[CR]Reflect.get()\f[R] provides the reflective semantic of a property
access.
That is, \f[CR]Reflect.get(target, propertyKey, receiver)\f[R] is
semantically equivalent to:
.IP
.EX
target[propertyKey];
.EE
.PP
Note that in a normal property access, \f[CR]target\f[R] and
\f[CR]receiver\f[R] would observably be the same object.
.PP
\f[CR]Reflect.get()\f[R] invokes the \f[CR][[Get]]\f[R] object internal
method of \f[CR]target\f[R].
.SH EXAMPLES
.SS Using Reflect.get()
.IP
.EX
\f[I]// Object\f[R]
\f[B]const\f[R] obj1 = { x: 1, y: 2 };
Reflect.get(obj1, \[dq]x\[dq]); \f[I]// 1\f[R]

\f[I]// Array\f[R]
Reflect.get([\[dq]zero\[dq], \[dq]one\[dq]], 1); \f[I]// \[dq]one\[dq]\f[R]

\f[I]// Proxy with a get handler\f[R]
\f[B]const\f[R] obj2 = \f[B]new\f[R] Proxy(
  { p: 1 },
  {
    \f[B]get\f[R](t, k, r) {
      \f[B]return\f[R] k + \[dq]bar\[dq];
    },
  },
);
Reflect.get(obj2, \[dq]foo\[dq]); \f[I]// \[dq]foobar\[dq]\f[R]

\f[I]// Proxy with get handler and receiver\f[R]
\f[B]const\f[R] obj3 = \f[B]new\f[R] Proxy(
  { p: 1, foo: 2 },
  {
    \f[B]get\f[R](t, prop, receiver) {
      \f[B]return\f[R] receiver[prop] + \[dq]bar\[dq];
    },
  },
);
Reflect.get(obj3, \[dq]foo\[dq], { foo: 3 }); \f[I]// \[dq]3bar\[dq]\f[R]
.EE
.SH SEE ALSO
.IP \[bu] 2
\c
.UR https://github.com/zloirock/core-js#ecmascript-reflect
Polyfill of \f[CR]Reflect.get\f[R] in \f[CR]core\-js\f[R]
.UE \c
.IP \[bu] 2
\f[CR]Reflect\f[R]
.IP \[bu] 2
Property accessors
.IP \[bu] 2
\f[CR]handler.get()\f[R]
