.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "AbortSignal.throwIfAborted" "JS" "June 20, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
AbortSignal.throwIfAborted \- AbortSignal: throwIfAborted() method
.SH SYNOPSIS
The \f[B]\f[CB]throwIfAborted()\f[B]\f[R] method throws the signal\[cq]s
abort \f[CR]reason\f[R] if the signal has been aborted; otherwise it
does nothing.
.PP
An API that needs to support aborting can accept an
\f[CR]AbortSignal\f[R] object and use \f[CR]throwIfAborted()\f[R] to
test and throw when the \f[CR]abort\f[R] event is signalled.
.PP
This method can also be used to abort operations at particular points in
code, rather than passing to functions that take a signal.
.SH SYNTAX
.IP
.EX
throwIfAborted()
.EE
.SS Parameters
None.
.SS Return value
None (\f[CR]undefined\f[R]).
.SH EXAMPLES
The examples below come from the specification.
.SS Aborting a polling operation
This example demonstrates how you can use \f[CR]throwIfAborted()\f[R] to
abort a polling operation.
.PP
Consider an asynchronous \f[CR]waitForCondition()\f[R] function that is
called with another asynchronous function \f[CR]func\f[R], a target
value \f[CR]targetValue\f[R], and an \f[CR]AbortSignal\f[R].
The method compares the result of \f[CR]func\f[R] with
\f[CR]targetValue\f[R] in a loop, returning when they match.
.IP
.EX
\f[B]async\f[R] \f[B]function\f[R] waitForCondition(func, targetValue, { signal } = {}) {
  \f[B]while\f[R] (\f[B]true\f[R]) {
    signal?.throwIfAborted();

    \f[B]const\f[R] result = \f[B]await\f[R] func();
    \f[B]if\f[R] (result === targetValue) {
      \f[B]return\f[R];
    }
  }
}
.EE
.PP
On each iteration of the loop, we use \f[CR]throwIfAborted()\f[R] to
throw the signal\[cq]s \f[CR]reason\f[R] if the operation has been
aborted (and otherwise do nothing).
If the signal is aborted, this will cause the
\f[CR]waitForCondition()\f[R] promise to be rejected .
.SH SEE ALSO
.IP \[bu] 2
Fetch API
