.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "TEXT.SPLITTEXT" "3JS" "February 2, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Text.splitText \- Text: splitText() method
.SH SYNOPSIS
The \f[B]\f[CB]splitText()\f[B]\f[R] method of the \f[CR]Text\f[R]
interface breaks the \f[CR]Text\f[R] node into two nodes at the
specified offset, keeping both nodes in the tree as siblings.
.PP
After the split, the current node contains all the content up to the
specified offset point, and a newly created node of the same type
contains the remaining text.
The newly created node is returned to the caller.
If the original node had a parent, the new node is inserted as the next
sibling of the original node.
If the offset is equal to the length of the original node, the newly
created node has no data.
.PP
Separated text nodes can be concatenated using the
\f[CR]Node.normalize()\f[R] method.
.SH SYNTAX
.IP
.EX
splitText(offset)
.EE
.SS Parameters
.TP
\f[B]offset\f[R]
The index immediately before which to break the text node.
.SS Return value
Returns the newly created \f[CR]Text\f[R] node that contains the text
after the specified offset point.
.SS Exceptions
.TP
\f[B]IndexSizeError\f[R] \f[B]DOMException\f[R]
Thrown if the specified offset is negative or is greater than the number
of 16\-bit units in the node\(cqs text.
.TP
\f[B]NoModificationAllowedError\f[R] \f[B]DOMException\f[R]
Thrown if the node is read\-only.
.SH EXAMPLE
In this example, the text of a \f[CR]<p>\f[R] is split into two text
nodes, and a \f[CR]<u>\f[R] is inserted between them.
.IP
.EX
<\f[B]p\f[R]>foobar</\f[B]p\f[R]>
.EE
.IP
.EX
\f[B]const\f[R] p = document.querySelector(\(dqp\(dq);

\f[I]// Get contents of <p> as a text node\f[R]
\f[B]const\f[R] foobar = p.firstChild;

\f[I]// Split \(aqfoobar\(aq into two text nodes, \(aqfoo\(aq and \(aqbar\(aq,\f[R]
\f[I]// and save \(aqbar\(aq as a const\f[R]
\f[B]const\f[R] bar = foobar.splitText(3);

\f[I]// Create a <u> element containing \(aq new content \(aq\f[R]
\f[B]const\f[R] u = document.createElement(\(dqu\(dq);
u.appendChild(document.createTextNode(\(dq new content \(dq));

\f[I]// Add <u> before \(aqbar\(aq\f[R]
p.insertBefore(u, bar);

\f[I]// The result is: <p>foo<u> new content </u>bar</p>\f[R]
.EE
.SH SEE ALSO
.IP \(bu 2
The \f[CR]Text\f[R] interface it belongs to.
.IP \(bu 2
The opposite method: \f[CR]Node.normalize\f[R].
