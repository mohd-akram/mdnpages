.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "DOCUMENTFRAGMENT.GETELEMENTBYID" "3JS" "April 15, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
DocumentFragment.getElementById \- DocumentFragment: getElementById()
method
.SH SYNOPSIS
The \f[B]\f[CB]getElementById()\f[B]\f[R] method of the
\f[CR]DocumentFragment\f[R] returns an \f[CR]Element\f[R] object
representing the element whose \f[CR]id\f[R] property matches the
specified string.
Since element IDs are required to be unique if specified, they\(cqre a
useful way to get access to a specific element quickly.
.PP
If you need to get access to an element which doesn\(cqt have an ID, you
can use \f[CR]querySelector()\f[R] to find the element using any
selector.
.RS
.PP
\f[B]Note:\f[R] IDs should be unique inside a document fragment.
If two or more elements in a document fragment have the same ID, this
method returns the first element found.
.RE
.SH SYNTAX
.IP
.EX
getElementById(id)
.EE
.RS
.PP
\f[B]Note:\f[R] The capitalization of \f[CR]\(dqId\(dq\f[R] in the name
of this method \f[I]must\f[R] be correct for the code to function;
\f[CR]getElementByID()\f[R] is \f[I]not\f[R] valid and will not work,
however natural it may seem.
.RE
.SS Parameters
.TP
\f[B]id\f[R]
The ID of the element to locate.
The ID is a case\-sensitive string which is unique within the document
fragment: only one element should have any given ID.
.SS Return value
An \f[CR]Element\f[R] object describing the DOM element object matching
the specified ID, or \f[CR]null\f[R] if no matching element was found in
the document fragment.
.SH EXAMPLES
.SS Extend a list of elements
In this example, the document contains a list with a single item
\f[CR]Cherry\f[R].
We also create a document fragment containing four more items,
\f[CR]Apple\f[R], \f[CR]Orange\f[R], \f[CR]Banana\f[R], and
\f[CR]Melon\f[R].
.PP
We then log the result of using \f[CR]getElementById()\f[R] to look for
\f[CR]Apple\f[R] and \f[CR]Cherry\f[R] in the document and in the
fragment.
At this point, \f[CR]Cherry\f[R] appears only in the document while
\f[CR]Apple\f[R] appears only in the fragment.
.PP
If you click \(lqAdd fragment to document\(rq, we append the fragment to
the list inside the document, and again log the result of looking for
both \f[CR]Apple\f[R] and \f[CR]Cherry\f[R] in the document and in the
fragment.
This time, both \f[CR]Apple\f[R] and \f[CR]Cherry\f[R] appear in the
document, and neither appear in the fragment.
.PP
This is because appending a fragment to a document moves the
fragment\(cqs nodes into the DOM, leaving behind an empty
\f[CR]DocumentFragment\f[R].
.SS HTML
.IP
.EX
<\f[B]button\f[R] id=\(dqadd\(dq>Add fragment to document</\f[B]button\f[R]>
<\f[B]button\f[R] id=\(dqreset\(dq>Reset example</\f[B]button\f[R]> <\f[B]br\f[R] />
List content:
<\f[B]ul\f[R]>
  <\f[B]li\f[R] id=\(dqCherry\(dq>Cherry</\f[B]li\f[R]>
</\f[B]ul\f[R]>
Fragment content:
<\f[B]ul\f[R] id=\(dqfragment\(dq></\f[B]ul\f[R]>
Current status:
<\f[B]pre\f[R] id=\(dqlog\(dq></\f[B]pre\f[R]>
.EE
.SS JavaScript
.IP
.EX
\f[I]// Create the document fragment with its initial content\f[R]
\f[B]const\f[R] fragment = \f[B]new\f[R] DocumentFragment();
[\(dqApple\(dq, \(dqOrange\(dq, \(dqBanana\(dq, \(dqMelon\(dq].forEach((fruit) \f[B]=>\f[R] {
  \f[B]const\f[R] li = document.createElement(\(dqli\(dq);
  li.textContent = fruit;
  li.id = fruit;
  fragment.append(li);
});

\f[I]// When the button is clicked, add the fragment to the list\f[R]
document.getElementById(\(dqadd\(dq).addEventListener(\(dqclick\(dq, () \f[B]=>\f[R] {
  document.querySelector(\(dqul\(dq).append(fragment);
  displayStatus();
});

\f[I]// Log the results of both getElementById()\f[R]
\f[B]function\f[R] displayStatus() {
  \f[B]const\f[R] log = document.getElementById(\(dqlog\(dq);
  log.textContent = \(dq\(dq;
  [\(dqApple\(dq, \(dqCherry\(dq].forEach((id) \f[B]=>\f[R] {
    log.textContent += \(gadocument.getElementById(\(dq${id}\(dq) ${
      document.getElementById(id) ? \(dqYes\(dq : \(dqNo\(dq
    }\(rsn\(ga;
    log.textContent += \(gafragment.getElementById(\(dq${id}\(dq) ${
      fragment.getElementById(id) ? \(dqYes\(dq : \(dqNo\(dq
    }\(rsn\(ga;
  });

  \f[I]// Empty the fragment viewer and fill it with the current content\f[R]
  \f[B]const\f[R] fragmentViewer = document.getElementById(\(dqfragment\(dq);
  \f[B]while\f[R] (fragmentViewer.hasChildNodes()) {
    fragmentViewer.removeChild(fragmentViewer.lastChild);
  }
  \f[B]for\f[R] (entry \f[B]of\f[R] fragment.children) {
    fragmentViewer.appendChild(entry.cloneNode(\f[B]true\f[R]));
  }
}

\f[I]// Log the initial state\f[R]
displayStatus();

\f[I]// Hook the reset button\f[R]
document.getElementById(\(dqreset\(dq).addEventListener(\(dqclick\(dq, () \f[B]=>\f[R] {
  document.location.reload();
});
.EE
.SS Result
.SH SEE ALSO
.IP \(bu 2
\f[CR]Document.getElementById()\f[R]
