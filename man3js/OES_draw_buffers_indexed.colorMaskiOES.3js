.\" Automatically generated by Pandoc 3.4
.\"
.TH "OES_draw_buffers_indexed.colorMaskiOES" "JS" "April 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
OES_draw_buffers_indexed.colorMaskiOES \- OES_draw_buffers_indexed:
colorMaskiOES() method
.SH SYNOPSIS
The \f[CR]colorMaskiOES()\f[R] method of the
\f[CR]OES_draw_buffers_indexed\f[R] WebGL extension sets which color
components to enable or to disable when drawing or rendering for a
particular draw buffer.
It\[cq]s the indexed version of WebGL 1\[cq]s
\f[CR]WebGLRenderingContext.colorMask()\f[R] method.
.SH SYNTAX
.IP
.EX
colorMaskiOES(buf, r, g, b, a)
.EE
.SS Parameters
.TP
\f[B]buf\f[R]
An integer \f[CR]i\f[R] specifying the draw buffer associated with the
constant \f[CR]gl.DRAW_BUFFERi\f[R], see WebGL draw buffer constants.
.TP
\f[B]r\f[R]
A \f[CR]GLboolean\f[R] specifying whether or not the red color component
should be written into the draw buffer.
.TP
\f[B]g\f[R]
A \f[CR]GLboolean\f[R] specifying whether or not the green color
component should be written into the draw buffer.
.TP
\f[B]b\f[R]
A \f[CR]GLboolean\f[R] specifying whether or not the blue color
component should be written into the draw buffer.
.TP
\f[B]a\f[R]
A \f[CR]GLboolean\f[R] specifying whether or not the red alpha
(transparency) component should be written into the draw buffer.
.SS Return value
None (\f[CR]undefined\f[R]).
.SS Exceptions
.IP \[bu] 2
If \f[CR]buf\f[R], \f[CR]r\f[R], \f[CR]b\f[R], \f[CR]g\f[R], or
\f[CR]a\f[R] are not a valid values, a \f[CR]gl.INVALID_VALUE\f[R] error
is thrown.
.SH EXAMPLES
.SS Setting and getting color masks
You can set the color masks for the \f[CR]gl.DRAW_BUFFER0\f[R] and
\f[CR]gl.DRAW_BUFFER1\f[R] draw buffers like this:
.IP
.EX
\f[B]const\f[R] ext = gl.getExtension(\[dq]OES_draw_buffers_indexed\[dq]);

ext.colorMaskiOES(0, 1, 0, 0, 0);
ext.colorMaskiOES(1, 0, 1, 0, 0);
.EE
.PP
To get the color masks for the \f[CR]gl.DRAW_BUFFER0\f[R] and
\f[CR]gl.DRAW_BUFFER1\f[R] draw buffers, query the
\f[CR]COLOR_WRITEMASK\f[R] constant using
\f[CR]WebGL2RenderingContext.getIndexedParameter()\f[R]:
.IP
.EX
gl.getIndexedParameter(gl.COLOR_WRITEMASK, 0);
gl.getIndexedParameter(gl.COLOR_WRITEMASK, 1);
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]WebGL2RenderingContext.getIndexedParameter()\f[R]
.IP \[bu] 2
\f[CR]WebGLRenderingContext.colorMask()\f[R]
