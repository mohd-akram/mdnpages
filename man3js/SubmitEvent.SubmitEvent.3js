.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "SubmitEvent.SubmitEvent" "JS" "April 8, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
SubmitEvent.SubmitEvent \- SubmitEvent: SubmitEvent() constructor
.SH SYNOPSIS
The \f[B]\f[CB]SubmitEvent()\f[B]\f[R] constructor creates and returns a
new \f[CR]SubmitEvent\f[R] object, which is used to represent a
\f[CR]submit\f[R] event fired at an HTML form.
.SH SYNTAX
.IP
.EX
new SubmitEvent(type)
new SubmitEvent(type, options)
.EE
.SS Parameters
.TP
\f[B]type\f[R]
A string with the name of the event.
It is case\-sensitive and browsers always set it to \f[CR]submit\f[R].
.TP
\f[B]options\f[R] \f[I](optional)\f[R]
An object that, \f[I]in addition of the properties defined in
\f[CI]Event()\f[I]\f[R], can have the following properties:
.RS
.TP
\f[B]submitter\f[R] \f[I](optional)\f[R]
An \f[CR]HTMLElement\f[R] object that is the submit button that
triggered the form submission.
.RE
.SS Return value
A \f[CR]SubmitEvent\f[R] object configured using the given inputs.
.SH EXAMPLES
This code snippet locates a form in the current document, and then an
HTML \f[CR]<button>\f[R] within the form with the class
\f[CR]submit\f[R] on it.
Next, a new \f[CR]SubmitEvent\f[R] is created, configured with its
\f[CR]submitter\f[R] set to the identified button (or \f[CR]null\f[R] if
the button wasn\[cq]t found).
Then the event is sent to the form, telling the form that it\[cq]s been
submitted by the button.
.IP
.EX
\f[B]const\f[R] form = document.querySelector(\[dq]form\[dq]);
\f[B]const\f[R] formTrigger = form.querySelector(\[dq]button.submit\[dq]);
\f[B]const\f[R] submitEvent = \f[B]new\f[R] SubmitEvent(\[dq]submit\[dq], { submitter: formTrigger });

form.dispatchEvent(submitEvent);
.EE
.PP
This is a somewhat contrived example, as you can do nearly all of this
much more easily, but this gives you deep control over the process that
can be useful.
