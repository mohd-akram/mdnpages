.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "Animation.playbackRate" "JS" "October 8, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Animation.playbackRate \- Animation: playbackRate property
.SH SYNOPSIS
The \f[B]\f[CB]Animation.playbackRate\f[B]\f[R] property of the Web
Animations API returns or sets the playback rate of the animation.
.PP
Animations have a \f[B]playback rate\f[R] that provides a scaling factor
from the rate of change of the animation\[cq]s \f[CR]timeline\f[R] time
values to the animation\[cq]s current time.
The playback rate is initially \f[CR]1\f[R].
.SH VALUE
Takes a number that can be 0, negative, or positive.
Negative values reverse the animation.
The value is a scaling factor, so for example a value of 2 would double
the playback rate.
.RS
.PP
\f[B]Note:\f[R] Setting an animation\[cq]s \f[CR]playbackRate\f[R] to
\f[CR]0\f[R] effectively pauses the animation (however, its
\f[CR]playState\f[R] does not necessarily become \f[CR]paused\f[R]).
.RE
.SH EXAMPLES
In the \c
.UR https://codepen.io/rachelnabors/pen/PNYGZQ?editors=0010
Growing/Shrinking Alice Game
.UE \c
\ example, clicking or tapping the bottle causes Alice\[cq]s growing
animation (\f[CR]aliceChange\f[R]) to reverse, causing her to shrink:
.IP
.EX
\f[B]const\f[R] shrinkAlice = () \f[B]=>\f[R] {
  aliceChange.playbackRate = \-1;
  aliceChange.play();
};

\f[I]// On tap or click, Alice will shrink.\f[R]
bottle.addEventListener(\[dq]mousedown\[dq], shrinkAlice, \f[B]false\f[R]);
bottle.addEventListener(\[dq]touchstart\[dq], shrinkAlice, \f[B]false\f[R]);
.EE
.PP
Contrariwise, clicking on the cake causes her to \[lq]grow,\[rq] playing
\f[CR]aliceChange\f[R] forwards again:
.IP
.EX
\f[B]const\f[R] growAlice = () \f[B]=>\f[R] {
  aliceChange.playbackRate = 1;
  aliceChange.play();
};

\f[I]// On tap or click, Alice will grow.\f[R]
cake.addEventListener(\[dq]mousedown\[dq], growAlice, \f[B]false\f[R]);
cake.addEventListener(\[dq]touchstart\[dq], growAlice, \f[B]false\f[R]);
.EE
.PP
In another example, the \c
.UR https://codepen.io/rachelnabors/pen/PNGGaV?editors=0010
Red Queen\[cq]s Race Game
.UE \c
, Alice and the Red Queen are constantly slowing down:
.IP
.EX
setInterval(() \f[B]=>\f[R] {
  \f[I]// Make sure the playback rate never falls below .4\f[R]

  \f[B]if\f[R] (redQueen_alice.playbackRate > 0.4) {
    redQueen_alice.playbackRate *= 0.9;
  }
}, 3000);
.EE
.PP
But clicking or tapping on them causes them to speed up by multiplying
their \f[CR]playbackRate\f[R]:
.IP
.EX
\f[B]const\f[R] goFaster = () \f[B]=>\f[R] {
  redQueen_alice.playbackRate *= 1.1;
};

document.addEventListener(\[dq]click\[dq], goFaster);
document.addEventListener(\[dq]touchstart\[dq], goFaster);
.EE
.SH SEE ALSO
.IP \[bu] 2
Web Animations API
.IP \[bu] 2
\f[CR]Animation\f[R]
