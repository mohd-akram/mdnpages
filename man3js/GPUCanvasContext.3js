.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "GPUCANVASCONTEXT" "3JS" "June 18, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
GPUCanvasContext \- GPUCanvasContext
.SH SYNOPSIS
\f[B]Secure context:\f[R] This feature is available only in secure
contexts (HTTPS).
.PP
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]GPUCanvasContext\f[B]\f[R] interface of the WebGPU API
represents the WebGPU rendering context of a \f[CR]<canvas>\f[R]
element, returned via an \f[CR]HTMLCanvasElement.getContext()\f[R] call
with a \f[CR]contextType\f[R] of \f[CR]\(dqwebgpu\(dq\f[R].
.SH INSTANCE PROPERTIES
.TP
\f[B]canvas\f[R] \f[I](read\-only)\f[R]
Returns a reference to the canvas that the context was created from.
.SH INSTANCE METHODS
.TP
\f[B]configure()\f[R]
Configures the context to use for rendering with a given
\f[CR]GPUDevice\f[R] and clears the canvas to transparent black.
.TP
\f[B]getConfiguration()\f[R]
Returns the current configuration set for the context.
.TP
\f[B]getCurrentTexture()\f[R]
Returns the next \f[CR]GPUTexture\f[R] to be composited to the document
by the canvas context.
.TP
\f[B]unconfigure()\f[R]
Removes any previously\-set context configuration, and destroys any
textures produced while the canvas context was configured.
.SH EXAMPLES
.IP
.EX
\f[B]const\f[R] canvas = document.querySelector(\(dq#gpuCanvas\(dq);
\f[B]const\f[R] context = canvas.getContext(\(dqwebgpu\(dq);

context.configure({
  device,
  format: navigator.gpu.getPreferredCanvasFormat(),
  alphaMode: \(dqpremultiplied\(dq,
});
.EE
.SH SEE ALSO
.IP \(bu 2
The WebGPU API
