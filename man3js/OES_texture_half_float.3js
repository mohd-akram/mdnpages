.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "OES_texture_half_float" "JS" "July 26, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
OES_texture_half_float \- OES_texture_half_float extension
.SH SYNOPSIS
The \f[B]\f[CB]OES_texture_half_float\f[B]\f[R] extension is part of the
WebGL API and adds texture formats with 16\- (aka half float) and
32\-bit floating\-point components.
.PP
WebGL extensions are available using the
\f[CR]WebGLRenderingContext.getExtension()\f[R] method.
For more information, see also Using Extensions in the WebGL tutorial.
.RS
.PP
\f[B]Note:\f[R] This extension is only available to WebGL1 contexts.
In WebGL2, the functionality of this extension is available on the
WebGL2 context by default.
The constant in WebGL2 is \f[CR]gl.HALF_FLOAT\f[R].
.RE
.SH CONSTANTS
.TP
\f[B]ext.HALF_FLOAT_OES\f[R]
Half floating\-point type (16\-bit).
.SH EXTENDED METHODS
This extension extends \f[CR]WebGLRenderingContext.texImage2D()\f[R] and
\f[CR]WebGLRenderingContext.texSubImage2D()\f[R]:
.IP \[bu] 2
The \f[CR]type\f[R] parameter now accepts \f[CR]ext.HALF_FLOAT_OES\f[R].
.SH LIMITATION: LINEAR FILTERING
Linear filtering on half floating\-point textures is not allowed with
this extension.
If you set the magnification or minification filter in the
\f[CR]WebGLRenderingContext.texParameter()\f[R] method to one of
\f[CR]gl.LINEAR\f[R], \f[CR]gl.LINEAR_MIPMAP_NEAREST\f[R],
\f[CR]gl.NEAREST_MIPMAP_LINEAR\f[R], or
\f[CR]gl.LINEAR_MIPMAP_LINEAR\f[R], and use half floating\-point
textures, the texture will be marked as incomplete.
.PP
To use linear filtering on half floating\-point textures, enable the
\f[CR]OES_texture_half_float_linear\f[R] extension in addition to this
extension.
.SH HALF FLOATING\-POINT COLOR BUFFERS
This extension implicitly enables the
\f[CR]EXT_color_buffer_half_float\f[R] extension (if supported), which
allows rendering to 16\-bit floating point formats.
.SH EXAMPLES
.IP
.EX
\f[B]const\f[R] ext = gl.getExtension(\[dq]OES_texture_half_float\[dq]);

\f[B]const\f[R] texture = gl.createTexture();
gl.bindTexture(gl.TEXTURE_2D, texture);

gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, ext.HALF_FLOAT_OES, image);
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]WebGLRenderingContext.getExtension()\f[R]
.IP \[bu] 2
\f[CR]WebGLRenderingContext.texImage2D()\f[R]
.IP \[bu] 2
\f[CR]WebGLRenderingContext.texSubImage2D()\f[R]
.IP \[bu] 2
\f[CR]OES_texture_float\f[R]
.IP \[bu] 2
\f[CR]OES_texture_float_linear\f[R]
.IP \[bu] 2
\f[CR]OES_texture_half_float_linear\f[R]
