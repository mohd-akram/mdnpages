.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "HTMLElement.change_event" "JS" "January 8, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
HTMLElement.change_event \- HTMLElement: change event
.SH SYNOPSIS
The \f[CR]change\f[R] event is fired for \f[CR]<input>\f[R],
\f[CR]<select>\f[R], and \f[CR]<textarea>\f[R] elements when the user
modifies the element\[cq]s value.
Unlike the \f[CR]input\f[R] event, the \f[CR]change\f[R] event is not
necessarily fired for each alteration to an element\[cq]s
\f[CR]value\f[R].
.PP
Depending on the kind of element being changed and the way the user
interacts with the element, the \f[CR]change\f[R] event fires at a
different moment:
.IP \[bu] 2
When a \f[CR]&lt;input type=\[dq]checkbox\[dq]&gt;\f[R] element is
checked or unchecked (by clicking or using the keyboard);
.IP \[bu] 2
When a \f[CR]&lt;input type=\[dq]radio\[dq]&gt;\f[R] element is checked
(but not when unchecked);
.IP \[bu] 2
When the user commits the change explicitly (e.g., by selecting a value
from a \f[CR]<select>\f[R]\[cq]s dropdown with a mouse click, by
selecting a date from a date picker for
\f[CR]&lt;input type=\[dq]date\[dq]&gt;\f[R], by selecting a file in the
file picker for \f[CR]&lt;input type=\[dq]file\[dq]&gt;\f[R], etc.);
.IP \[bu] 2
When the element loses focus after its value was changed: for elements
where the user\[cq]s interaction is typing rather than selection, such
as a \f[CR]<textarea>\f[R] or the \f[CR]text\f[R], \f[CR]search\f[R],
\f[CR]url\f[R], \f[CR]tel\f[R], \f[CR]email\f[R], or \f[CR]password\f[R]
types of the \f[CR]<input>\f[R] element.
.PP
The HTML specification lists \c
.UR https://html.spec.whatwg.org/multipage/forms.html#concept-input-apply
the \f[CR]<input>\f[R] types that should fire the \f[CR]change\f[R]
event
.UE \c
\&.
.SH SYNTAX
Use the event name in methods like \f[CR]addEventListener()\f[R], or set
an event handler property.
.IP
.EX
addEventListener(\[dq]change\[dq], (event) \f[B]=>\f[R] {});

onchange = (event) \f[B]=>\f[R] {};
.EE
.SH EVENT TYPE
A generic \f[CR]Event\f[R].
.SH EXAMPLES
.SS <select> element
.SS HTML
.IP
.EX
<\f[B]label\f[R]>
  Choose an ice cream flavor:
  <\f[B]select\f[R] class=\[dq]ice\-cream\[dq] name=\[dq]ice\-cream\[dq]>
    <\f[B]option\f[R] value=\[dq]\[dq]>Select One \&...</\f[B]option\f[R]>
    <\f[B]option\f[R] value=\[dq]chocolate\[dq]>Chocolate</\f[B]option\f[R]>
    <\f[B]option\f[R] value=\[dq]sardine\[dq]>Sardine</\f[B]option\f[R]>
    <\f[B]option\f[R] value=\[dq]vanilla\[dq]>Vanilla</\f[B]option\f[R]>
  </\f[B]select\f[R]>
</\f[B]label\f[R]>

<\f[B]div\f[R] class=\[dq]result\[dq]></\f[B]div\f[R]>
.EE
.SS JavaScript
.IP
.EX
\f[B]const\f[R] selectElement = document.querySelector(\[dq].ice\-cream\[dq]);
\f[B]const\f[R] result = document.querySelector(\[dq].result\[dq]);

selectElement.addEventListener(\[dq]change\[dq], (event) \f[B]=>\f[R] {
  result.textContent = \[ga]You like ${event.target.value}\[ga];
});
.EE
.SS Result
.SS Text input element
For some elements, including \f[CR]<input type=\[dq]text\[dq]>\f[R], the
\f[CR]change\f[R] event doesn\[cq]t fire until the control loses focus.
Try entering something into the field below, and then click somewhere
else to trigger the event.
.SS HTML
.IP
.EX
<\f[B]input\f[R] placeholder=\[dq]Enter some text\[dq] name=\[dq]name\[dq] />
<\f[B]p\f[R] id=\[dq]log\[dq]></\f[B]p\f[R]>
.EE
.SS JavaScript
.IP
.EX
\f[B]const\f[R] input = document.querySelector(\[dq]input\[dq]);
\f[B]const\f[R] log = document.getElementById(\[dq]log\[dq]);

input.addEventListener(\[dq]change\[dq], updateValue);

\f[B]function\f[R] updateValue(e) {
  log.textContent = e.target.value;
}
.EE
.SS Result
Different browsers do not always agree whether a \f[CR]change\f[R] event
should be fired for certain types of interaction.
For example, keyboard navigation in \f[CR]<select>\f[R] elements used to
never fire a \f[CR]change\f[R] event in Gecko until the user hit Enter
or switched the focus away from the \f[CR]<select>\f[R] (see \c
.UR https://bugzil.la/126379
Firefox bug 126379
.UE \c
).
Since Firefox 63 (Quantum), this behavior is consistent between all
major browsers, however.
