.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "AudioContext.close" "JS" "October 8, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
AudioContext.close \- AudioContext: close() method
.SH SYNOPSIS
The \f[CR]close()\f[R] method of the \f[CR]AudioContext\f[R] Interface
closes the audio context, releasing any system audio resources that it
uses.
.PP
This function does not automatically release all
\f[CR]AudioContext\f[R]\-created objects, unless other references have
been released as well; however, it will forcibly release any system
audio resources that might prevent additional \f[CR]AudioContexts\f[R]
from being created and used, suspend the progression of audio time in
the audio context, and stop processing audio data.
The returned \f[CR]Promise\f[R] resolves when all
\f[CR]AudioContext\f[R]\-creation\-blocking resources have been
released.
This method throws an \f[CR]INVALID_STATE_ERR\f[R] exception if called
on an \f[CR]OfflineAudioContext\f[R].
.SH SYNTAX
.IP
.EX
close()
.EE
.SS Parameters
None.
.SS Return value
A \f[CR]Promise\f[R] that resolves with \f[CR]undefined\f[R].
.SH EXAMPLES
The following snippet is taken from our \c
.UR https://github.com/mdn/webaudio-examples/blob/main/audiocontext-states/index.html
AudioContext states demo
.UE \c
\ (\c
.UR https://mdn.github.io/webaudio-examples/audiocontext-states/
see it running live
.UE \c
\&.)
When the stop button is clicked, \f[CR]close()\f[R] is called.
When the promise resolves, the example is reset to its beginning state.
.IP
.EX
stopBtn.onclick = () \f[B]=>\f[R] {
  audioCtx.close().then(() \f[B]=>\f[R] {
    startBtn.removeAttribute(\[dq]disabled\[dq]);
    susResBtn.setAttribute(\[dq]disabled\[dq], \[dq]disabled\[dq]);
    stopBtn.setAttribute(\[dq]disabled\[dq], \[dq]disabled\[dq]);
  });
};
.EE
.SH SEE ALSO
.IP \[bu] 2
Using the Web Audio API
.IP \[bu] 2
Web Audio API
