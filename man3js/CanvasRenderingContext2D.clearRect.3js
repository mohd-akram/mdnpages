.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "CanvasRenderingContext2D.clearRect" "JS" "July 26, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
CanvasRenderingContext2D.clearRect \- CanvasRenderingContext2D:
clearRect() method
.SH SYNOPSIS
The \f[B]\f[CB]CanvasRenderingContext2D.clearRect()\f[B]\f[R] method of
the Canvas 2D API erases the pixels in a rectangular area by setting
them to transparent black.
.RS
.PP
\f[B]Note:\f[R] Be aware that \f[CR]clearRect()\f[R] may cause
unintended side effects if you\[cq]re not using paths properly.
Make sure to call \f[CR]beginPath()\f[R] before starting to draw new
items after calling \f[CR]clearRect()\f[R].
.RE
.SH SYNTAX
.IP
.EX
clearRect(x, y, width, height)
.EE
.PP
The \f[CR]clearRect()\f[R] method sets the pixels in a rectangular area
to transparent black (\f[CR]rgb(0 0 0 / 0%)\f[R]).
The rectangle\[cq]s top\-left corner is at \f[CR](x, y)\f[R], and its
size is specified by \f[CR]width\f[R] and \f[CR]height\f[R].
.SS Parameters
.TP
\f[B]x\f[R]
The x\-axis coordinate of the rectangle\[cq]s starting point.
.TP
\f[B]y\f[R]
The y\-axis coordinate of the rectangle\[cq]s starting point.
.TP
\f[B]width\f[R]
The rectangle\[cq]s width.
Positive values are to the right, and negative to the left.
.TP
\f[B]height\f[R]
The rectangle\[cq]s height.
Positive values are down, and negative are up.
.SS Return value
None (\f[CR]undefined\f[R]).
.SH EXAMPLES
.SS Erasing the whole canvas
This code snippet erases the entire canvas.
This is commonly required at the start of each frame in an animation.
The dimensions of the cleared area are set to equal the
\f[CR]<canvas>\f[R] element\[cq]s \f[CR]width\f[R] and \f[CR]height\f[R]
attributes.
.IP
.EX
\f[B]const\f[R] canvas = document.getElementById(\[dq]canvas\[dq]);
\f[B]const\f[R] ctx = canvas.getContext(\[dq]2d\[dq]);
ctx.clearRect(0, 0, canvas.width, canvas.height);
.EE
.SS Erasing part of a canvas
This example draws a blue triangle on top of a yellowish background.
The \f[CR]clearRect()\f[R] method then erases part of the canvas.
.SS HTML
.IP
.EX
<\f[B]canvas\f[R] id=\[dq]canvas\[dq]></\f[B]canvas\f[R]>
.EE
.SS JavaScript
The cleared area is rectangular in shape, with its top\-left corner at
(10, 10).
The cleared area has a width of 120 and a height of 100.
.IP
.EX
\f[B]const\f[R] canvas = document.getElementById(\[dq]canvas\[dq]);
\f[B]const\f[R] ctx = canvas.getContext(\[dq]2d\[dq]);

\f[I]// Draw yellow background\f[R]
ctx.beginPath();
ctx.fillStyle = \[dq]#ff6\[dq];
ctx.fillRect(0, 0, canvas.width, canvas.height);

\f[I]// Draw blue triangle\f[R]
ctx.beginPath();
ctx.fillStyle = \[dq]blue\[dq];
ctx.moveTo(20, 20);
ctx.lineTo(180, 20);
ctx.lineTo(130, 130);
ctx.closePath();
ctx.fill();

\f[I]// Clear part of the canvas\f[R]
ctx.clearRect(10, 10, 120, 100);
.EE
.SS Result
.SH SEE ALSO
.IP \[bu] 2
The interface defining this method: \f[CR]CanvasRenderingContext2D\f[R]
.IP \[bu] 2
\f[CR]CanvasRenderingContext2D.fillRect()\f[R]
.IP \[bu] 2
\f[CR]CanvasRenderingContext2D.strokeRect()\f[R]
