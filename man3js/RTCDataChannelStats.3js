.\" Automatically generated by Pandoc 3.4
.\"
.TH "RTCDataChannelStats" "JS" "August 6, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
RTCDataChannelStats \- RTCDataChannelStats
.SH SYNOPSIS
The \f[B]\f[CB]RTCDataChannelStats\f[B]\f[R] dictionary of the WebRTC
API provides statistics related to one \f[CR]RTCDataChannel\f[R] object
on the connection.
.PP
The report can be obtained by iterating the \f[CR]RTCStatsReport\f[R]
returned by \f[CR]RTCPeerConnection.getStats()\f[R] until you find an
entry with the \f[CR]type\f[R] of \f[CR]data\-channel\f[R].
.PP
The data channels statistics may be correlated to a particular channel
by comparing the \f[CR]dataChannelIdentifier\f[R] property to a matching
\f[CR]RTCDataChannel.id\f[R].
.SH INSTANCE PROPERTIES
.TP
\f[B]bytesSent\f[R] \f[I](optional)\f[R]
A positive integer value indicating the total number of payload bytes
sent on the associated \f[CR]RTCDataChannel\f[R].
.TP
\f[B]bytesReceived\f[R] \f[I](optional)\f[R]
A positive integer value indicating the total number of payload bytes
received on the associated \f[CR]RTCDataChannel\f[R].
.TP
\f[B]dataChannelIdentifier\f[R] \f[I](optional)\f[R]
A positive integer value containing the \f[CR]id\f[R] of the associated
\f[CR]RTCDataChannel\f[R].
.TP
\f[B]label\f[R] \f[I](optional)\f[R]
A string containing the \f[CR]label\f[R] of the associated
\f[CR]RTCDataChannel\f[R].
.TP
\f[B]messagesReceived\f[R] \f[I](optional)\f[R]
A positive integer value indicating the total number of
\f[CR]message\f[R] events fired for received messages on the associated
\f[CR]RTCDataChannel\f[R].
.TP
\f[B]messagesSent\f[R] \f[I](optional)\f[R]
A positive integer value indicating the total number of
\f[CR]message\f[R] events fired for sent messages on the channel.
.TP
\f[B]protocol\f[R] \f[I](optional)\f[R]
A string containing the \f[CR]protocol\f[R] of the associated
\f[CR]RTCDataChannel\f[R].
.TP
\f[B]state\f[R]
The \f[CR]readyState\f[R] of the associated \f[CR]RTCDataChannel\f[R].
.SS Common instance properties
The following properties are common to all WebRTC statistics objects
(See \f[CR]RTCStatsReport\f[R] for more information).
.TP
\f[B]id\f[R]
A string that uniquely identifies the object that is being monitored to
produce this set of statistics.
.TP
\f[B]timestamp\f[R]
A \f[CR]DOMHighResTimeStamp\f[R] object indicating the time at which the
sample was taken for this statistics object.
.TP
\f[B]type\f[R]
A string with the value \f[CR]\[dq]data\-channel\[dq]\f[R], indicating
the type of statistics that the object contains.
.SH EXAMPLES
Given a variable \f[CR]myPeerConnection\f[R], which is an instance of
\f[CR]RTCPeerConnection\f[R], the code below uses \f[CR]await\f[R] to
wait for the statistics report, and then iterates it using
\f[CR]RTCStatsReport.forEach()\f[R].
It then filters the dictionaries for just those reports that have the
type of \f[CR]data\-channel\f[R] and logs the result.
.IP
.EX
\f[B]const\f[R] stats = \f[B]await\f[R] myPeerConnection.getStats();

stats.forEach((report) \f[B]=>\f[R] {
  \f[B]if\f[R] (report.type === \[dq]data\-channel\[dq]) {
    \f[I]// Log the channel information\f[R]
    console.log(report);
  }
});
.EE
