.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "WINDOW.CROSSORIGINISOLATED" "3JS" "March 13, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Window.crossOriginIsolated \- Window: crossOriginIsolated property
.SH SYNOPSIS
The \f[B]\f[CB]crossOriginIsolated\f[B]\f[R] read\-only property of the
\f[CR]Window\f[R] interface returns a boolean value that indicates
whether the document is cross\-origin isolated.
.PP
A cross\-origin isolated document only shares its browsing context group
with same\-origin documents in popups and navigations, and resources
(both same\-origin and cross\-origin) that the document has opted into
using via CORS (and COEP for \f[CR]<iframe>\f[R]).
The relationship between a cross\-origin opener of the document or any
cross\-origin popups that it opens are severed.
The document may also be hosted in a separate OS process alongside other
documents with which it can communicate by operating on shared memory.
This mitigates the risk of side\-channel attacks and cross\-origin
attacks referred to as \c
.UR https://xsleaks.dev/
XS\-Leaks
.UE \c
\&.
.PP
Cross\-origin isolated documents operate with fewer restrictions when
using the following APIs:
.IP \(bu 2
\f[CR]SharedArrayBuffer\f[R] can be created and sent via a
\f[CR]Window.postMessage()\f[R] or a
\f[CR]MessagePort.postMessage()\f[R] call.
.IP \(bu 2
\f[CR]Performance.now()\f[R] offers better precision.
.IP \(bu 2
\f[CR]Performance.measureUserAgentSpecificMemory()\f[R] can be called.
.PP
A document will be cross\-origin isolated if it is returned with an HTTP
response that includes the headers:
.IP \(bu 2
\f[CR]Cross\-Origin\-Opener\-Policy\f[R] header with the directive
\f[CR]same\-origin\f[R].
.IP \(bu 2
\f[CR]Cross\-Origin\-Embedder\-Policy\f[R] header with the directive
\f[CR]require\-corp\f[R] or \f[CR]credentialless\f[R].
.PP
Access to the APIs must also be allowed by the
\f[CR]Permissions\-Policy\f[R] \f[CR]cross\-origin\-isolated\f[R].
Otherwise \f[CR]crossOriginIsolated\f[R] property will return
\f[CR]false\f[R], and the document will not be able to use the APIs
listed above with reduced restrictions.
.SH VALUE
A boolean value.
.SH EXAMPLES
.SS Cross\-origin isolating a document
To cross\-origin isolate a document:
.IP \(bu 2
Set the \f[CR]Cross\-Origin\-Opener\-Policy\f[R] HTTP header to
\f[CR]same\-origin\f[R]:
.RS 2
.IP
.EX
Cross\-Origin\-Opener\-Policy: same\-origin
.EE
.RE
.IP \(bu 2
Set the \f[CR]Cross\-Origin\-Embedder\-Policy\f[R] HTTP header to
\f[CR]require\-corp\f[R] or \f[CR]credentialless\f[R]:
.RS 2
.IP
.EX
Cross\-Origin\-Embedder\-Policy: require\-corp
Cross\-Origin\-Embedder\-Policy: credentialless
.EE
.RE
.IP \(bu 2
The \f[CR]cross\-origin\-isolated\f[R] directive of the
\f[CR]Permissions\-Policy\f[R] header must not block access to the
feature.
Note that the default allowlist of the directive is \f[CR]self\f[R], so
the permission will be granted by default to cross\-origin isolated
documents.
.SS Checking if the document is cross\-origin isolated
.IP
.EX
\f[B]const\f[R] myWorker = \f[B]new\f[R] Worker(\(dqworker.js\(dq);

\f[B]if\f[R] (window.crossOriginIsolated) {
  \f[B]const\f[R] buffer = \f[B]new\f[R] SharedArrayBuffer(16);
  myWorker.postMessage(buffer);
} \f[B]else\f[R] {
  \f[B]const\f[R] buffer = \f[B]new\f[R] ArrayBuffer(16);
  myWorker.postMessage(buffer);
}
.EE
.SH SEE ALSO
.IP \(bu 2
\f[CR]WorkerGlobalScope.crossOriginIsolated\f[R]
