.\" Automatically generated by Pandoc 3.4
.\"
.TH "Document.scrollend_event" "JS" "July 26, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Document.scrollend_event \- Document: scrollend event
.SH SYNOPSIS
The \f[B]\f[CB]scrollend\f[B]\f[R] event fires when the document view
has completed scrolling.
Scrolling is considered completed when the scroll position has no more
pending updates and the user has completed their gesture.
.PP
Scroll position updates include smooth or instant mouse wheel scrolling,
keyboard scrolling, scroll\-snap events, or other APIs and gestures
which cause the scroll position to update.
User gestures like touch panning or trackpad scrolling aren\[cq]t
complete until pointers or keys have released.
If the scroll position did not change, then no scrollend event fires.
.PP
For detecting when scrolling inside an element is complete, see the
\f[CR]scrollend\f[R] event of \f[CR]Element\f[R].
.SH SYNTAX
Use the event name in methods like \f[CR]addEventListener()\f[R], or set
an event handler property.
.IP
.EX
addEventListener(\[dq]scrollend\[dq], (event) \f[B]=>\f[R] {});

onscrollend = (event) \f[B]=>\f[R] {};
.EE
.SH EVENT TYPE
A generic \f[CR]Event\f[R].
.SH EXAMPLES
.SS Using Document \f[CR]scrollend\f[R] with an event listener
The following example shows how to use the \f[CR]scrollend\f[R] event
with an event listener to detect when the user has stopped scrolling the
document.
In the example, there is content in the embedded iframe that is taller
and wider than the iframe itself, so scrolling within the iframe in both
directions is possible.
When the user stops scrolling, the \f[CR]scrollend\f[R] event fires:
.IP
.EX
<\f[B]div\f[R] class=\[dq]box\-wrapper\[dq]>
  <\f[B]div\f[R] class=\[dq]box\[dq]></\f[B]div\f[R]>
  <\f[B]div\f[R] class=\[dq]box\[dq]></\f[B]div\f[R]>
  <\f[B]div\f[R] class=\[dq]box\[dq]></\f[B]div\f[R]>
  <\f[B]div\f[R] class=\[dq]box\[dq]></\f[B]div\f[R]>
</\f[B]div\f[R]>
<\f[B]p\f[R] id=\[dq]output\[dq]>Waiting on scroll events...</\f[B]p\f[R]>
.EE
.IP
.EX
\f[B]const\f[R] output = document.querySelector(\[dq]p#output\[dq]);

document.addEventListener(\[dq]scroll\[dq], (event) \f[B]=>\f[R] {
  output.textContent = \[dq]Document scroll event fired!\[dq];
});

document.addEventListener(\[dq]scrollend\[dq], (event) \f[B]=>\f[R] {
  output.textContent = \[dq]Document scrollend event fired!\[dq];
});
.EE
.SS Using \f[CR]onscrollend\f[R] event handler property
The following example shows how to use the \f[CR]scrollend\f[R] event
handler property to detect when the user has stopped scrolling the
document.
In the example, there is content in the embedded iframe that is taller
and wider than the iframe itself, so scrolling within the iframe in both
directions is possible.
This builds on the first example, but uses
\f[CR]document.onscrollend\f[R] instead of an event listener:
.IP
.EX
<\f[B]div\f[R] class=\[dq]box\-wrapper\[dq]>
  <\f[B]div\f[R] class=\[dq]box\[dq]></\f[B]div\f[R]>
  <\f[B]div\f[R] class=\[dq]box\[dq]></\f[B]div\f[R]>
  <\f[B]div\f[R] class=\[dq]box\[dq]></\f[B]div\f[R]>
  <\f[B]div\f[R] class=\[dq]box\[dq]></\f[B]div\f[R]>
</\f[B]div\f[R]>
<\f[B]p\f[R] id=\[dq]output\[dq]>Waiting on scroll events...</\f[B]p\f[R]>
.EE
.IP
.EX
document.onscroll = (event) \f[B]=>\f[R] {
  output.textContent = \[dq]Document scroll event fired!\[dq];
};

document.onscrollend = (event) \f[B]=>\f[R] {
  output.textContent = \[dq]Document scrollend event fired!\[dq];
};
.EE
.SH SEE ALSO
.IP \[bu] 2
Document \f[CR]scroll\f[R] event
.IP \[bu] 2
Element \f[CR]scrollend\f[R] event
.IP \[bu] 2
Element \f[CR]scroll\f[R] event
