.\" Automatically generated by Pandoc 3.4
.\"
.TH "WritableStreamDefaultWriter.abort" "JS" "April 22, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
WritableStreamDefaultWriter.abort \- WritableStreamDefaultWriter:
abort() method
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]abort()\f[B]\f[R] method of the
\f[CR]WritableStreamDefaultWriter\f[R] interface aborts the stream,
signaling that the producer can no longer successfully write to the
stream and it is to be immediately moved to an error state, with any
queued writes discarded.
.PP
If the writer is active, the \f[CR]abort()\f[R] method behaves the same
as that for the associated stream (\f[CR]WritableStream.abort()\f[R]).
If not, it returns a rejected promise.
.SH SYNTAX
.IP
.EX
abort()
abort(reason)
.EE
.SS Parameters
.TP
\f[B]reason\f[R] \f[I](optional)\f[R]
A string representing a human\-readable reason for the abort.
.SS Return value
A \f[CR]Promise\f[R], which fulfills to \f[CR]undefined\f[R] when the
stream is aborted, or rejects with an error if the writer was inactive
or the receiver stream is invalid.
.SS Exceptions
.TP
\f[B]TypeError\f[R]
The stream you are trying to abort is not a \f[CR]WritableStream\f[R],
or it is locked.
.SH EXAMPLES
.IP
.EX
\f[B]const\f[R] writableStream = \f[B]new\f[R] WritableStream(
  {
    write(chunk) {
      \f[I]// ...\f[R]
    },
    close() {
      \f[I]// ...\f[R]
    },
    abort(err) {
      \f[I]// ...\f[R]
    },
  },
  queuingStrategy,
);

\f[I]// ...\f[R]

\f[B]const\f[R] writer = writableStream.getWriter();

\f[I]// ...\f[R]

\f[I]// abort the stream when desired\f[R]
\f[B]await\f[R] writer.abort(\[dq]WritableStream aborted. Reason: ...\[dq]);
.EE
