.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "MESSAGECHANNEL.PORT2" "3JS" "December 18, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
MessageChannel.port2 \- MessageChannel: port2 property
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]port2\f[B]\f[R] read\-only property of the
\f[CR]MessageChannel\f[R] interface returns the second port of the
message channel \(em the port attached to the context at the other end
of the channel, which the message is initially sent to.
.SH VALUE
A \f[CR]MessagePort\f[R] object representing the second port of the
channel, the port attached to the context at the other end of the
channel.
.SH EXAMPLES
In the following code block, you can see a new channel being created
using the \f[CR]MessageChannel()\f[R] constructor.
When the IFrame has loaded, we pass \f[CR]port2\f[R] to the IFrame using
\f[CR]Window.postMessage()\f[R] along with a message.
The \f[CR]handleMessage\f[R] handler then responds to a message being
sent back from the IFrame (using \f[CR]onmessage\f[R]), putting it into
a paragraph.
\f[CR]port1\f[R] is listened to, to check when the message arrives.
.IP
.EX
\f[B]const\f[R] channel = \f[B]new\f[R] MessageChannel();
\f[B]const\f[R] para = document.querySelector(\(dqp\(dq);

\f[B]const\f[R] ifr = document.querySelector(\(dqiframe\(dq);
\f[B]const\f[R] otherWindow = ifr.contentWindow;

ifr.addEventListener(\(dqload\(dq, iframeLoaded, \f[B]false\f[R]);

\f[B]function\f[R] iframeLoaded() {
  otherWindow.postMessage(\(dqHello from the main page!\(dq, \(dq*\(dq, [channel.port2]);
}

channel.port1.onmessage = handleMessage;
\f[B]function\f[R] handleMessage(e) {
  para.innerHTML = e.data;
}
.EE
.PP
For a full working example, see our \c
.UR https://github.com/mdn/dom-examples/tree/main/channel-messaging-basic
channel messaging basic demo
.UE \c
\ on GitHub (\c
.UR https://mdn.github.io/dom-examples/channel-messaging-basic/
run it live too
.UE \c
).
.SH SEE ALSO
.IP \(bu 2
Using channel messaging
