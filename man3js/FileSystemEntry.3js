.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "FILESYSTEMENTRY" "3JS" "April 2, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
FileSystemEntry \- FileSystemEntry
.SH SYNOPSIS
The \f[B]\f[CB]FileSystemEntry\f[B]\f[R] interface of the File and
Directory Entries API represents a single entry in a file system.
The entry can be a file or a directory (directories are represented by
the \f[CR]FileSystemDirectoryEntry\f[R] interface).
It includes methods for working with files\(emincluding copying, moving,
removing, and reading files\(emas well as information about a file it
points to\(emincluding the file name and its path from the root to the
entry.
.SH BASIC CONCEPTS
You don\(cqt create \f[CR]FileSystemEntry\f[R] objects directly.
Instead, you will receive an object based on this interface through
other APIs.
This interface serves as a base class for the
\f[CR]FileSystemFileEntry\f[R] and \f[CR]FileSystemDirectoryEntry\f[R]
interfaces, which provide features specific to file system entries
representing files and directories, respectively.
.PP
The \f[CR]FileSystemEntry\f[R] interface includes methods that you would
expect for manipulating files and directories, but it also includes a
convenient method for obtaining the URL of the entry:
\f[CR]toURL()\f[R].
It also introduces a new URL scheme: \f[CR]filesystem:\f[R].
.PP
You can use the \f[CR]filesystem:\f[R] scheme on Google Chrome to see
all the files and folders that are stored in the origin of your app.
Just use \f[CR]filesystem:\f[R] scheme for the root directory of the
origin of the app.
For example, if your app is in \c
.UR https://www.example.com/
\f[CR]http://www.example.com\f[R]
.UE \c
, open \f[CR]filesystem:http://www.example.com/temporary/\f[R] in a tab.
Chrome shows a read\-only list of all the files and folders stored the
origin of your app.
.SS Example
To see an example of how \f[CR]toURL()\f[R] works, see the method
description.
The snippet below shows you how you can remove a file by name.
.IP
.EX
\f[I]// Taking care of the browser\-specific prefixes.\f[R]
window.requestFileSystem =
  window.requestFileSystem || window.webkitRequestFileSystem;

\f[I]// \&...\f[R]

\f[I]// Opening a file system with temporary storage\f[R]
window.requestFileSystem(
  TEMPORARY,
  1024 * 1024 \f[I]/*1MB*/\f[R],
  (fs) \f[B]=>\f[R] {
    fs.root.getFile(
      \(dqlog.txt\(dq,
      {},
      (fileEntry) \f[B]=>\f[R] {
        fileEntry.remove(() \f[B]=>\f[R] {
          console.log(\(dqFile removed.\(dq);
        }, onError);
      },
      onError,
    );
  },
  onError,
);
.EE
.SH INSTANCE PROPERTIES
\f[I]This interface provides the following properties.\f[R]
.TP
\f[B]filesystem\f[R] \f[I](read\-only)\f[R]
A \f[CR]FileSystem\f[R] object representing the file system in which the
entry is located.
.TP
\f[B]fullPath\f[R] \f[I](read\-only)\f[R]
A string which provides the full, absolute path from the file
system\(cqs root to the entry; it can also be thought of as a path which
is relative to the root directory, prepended with a \(lq/\(rq character.
.TP
\f[B]isDirectory\f[R] \f[I](read\-only)\f[R]
A boolean value which is \f[CR]true\f[R] if the entry represents a
directory; otherwise, it\(cqs \f[CR]false\f[R].
.TP
\f[B]isFile\f[R] \f[I](read\-only)\f[R]
A Boolean which is \f[CR]true\f[R] if the entry represents a file.
If it\(cqs not a file, this value is \f[CR]false\f[R].
.TP
\f[B]name\f[R] \f[I](read\-only)\f[R]
A string containing the name of the entry (the final part of the path,
after the last \(lq/\(rq character).
.SH INSTANCE METHODS
\f[I]This interface defines the following methods.\f[R]
.TP
\f[B]copyTo()\f[R] \f[I](deprecated)\f[R] \f[I](non\-standard)\f[R]
Copies the file or directory to a new location on the file system.
.TP
\f[B]getMetadata()\f[R] \f[I](deprecated)\f[R] \f[I](non\-standard)\f[R]
Obtains metadata about the file, such as its modification date and size.
.TP
\f[B]getParent()\f[R]
Returns a \f[CR]FileSystemDirectoryEntry\f[R] representing the
entry\(cqs parent directory.
.TP
\f[B]moveTo()\f[R] \f[I](deprecated)\f[R] \f[I](non\-standard)\f[R]
Moves the file or directory to a new location on the file system, or
renames the file or directory.
.TP
\f[B]remove()\f[R] \f[I](deprecated)\f[R] \f[I](non\-standard)\f[R]
Removes the specified file or directory.
You can only remove directories which are empty.
.TP
\f[B]toURL()\f[R] \f[I](deprecated)\f[R] \f[I](non\-standard)\f[R]
Creates and returns a URL which identifies the entry.
This URL uses the URL scheme \f[CR]\(dqfilesystem:\(dq\f[R].
.SH SEE ALSO
.IP \(bu 2
File and Directory Entries API
.IP \(bu 2
\f[CR]FileSystemFileEntry\f[R] and \f[CR]FileSystemDirectoryEntry\f[R]
are based on \f[CR]FileSystemEntry\f[R].
