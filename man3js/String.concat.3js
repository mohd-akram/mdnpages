.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "STRING.CONCAT" "3JS" "June 20, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
String.concat \- String.prototype.concat()
.SH SYNOPSIS
The \f[B]\f[CB]concat()\f[B]\f[R] method of \f[CR]String\f[R] values
concatenates the string arguments to this string and returns a new
string.
.IP
.EX
\f[B]const\f[R] str1 = \(dqHello\(dq;
\f[B]const\f[R] str2 = \(dqWorld\(dq;

console.log(str1.concat(\(dq \(dq, str2));
\f[I]// Expected output: \(dqHello World\(dq\f[R]

console.log(str2.concat(\(dq, \(dq, str1));
\f[I]// Expected output: \(dqWorld, Hello\(dq\f[R]
.EE
.SH SYNTAX
.IP
.EX
concat(str1)
concat(str1, str2)
concat(str1, str2, /* \&..., */ strN)
.EE
.SS Parameters
.TP
\f[B]str1\f[R], \&..., \f[B]strN\f[R]
One or more strings to concatenate to \f[CR]str\f[R].
Though technically permitted, calling
\f[CR]String.prototype.concat()\f[R] with no arguments is a useless
operation, because it does not result in observable copying (like
\f[CR]Array.prototype.concat()\f[R]), since strings are immutable.
It should only happen if you are spreading an array of strings as
arguments, and that array happens to be empty.
.SS Return value
A new string containing the combined text of the strings provided.
.SH DESCRIPTION
The \f[CR]concat()\f[R] function concatenates the string arguments to
the calling string and returns a new string.
.PP
If the arguments are not of the type string, they are converted to
string values before concatenating.
.PP
The \f[CR]concat()\f[R] method is very similar to the addition/string
concatenation operators (\f[CR]+\f[R], \f[CR]+=\f[R]), except that
\f[CR]concat()\f[R] coerces its arguments directly to strings, while
addition coerces its operands to primitives first.
For more information, see the reference page for the \f[CR]+\f[R]
operator.
.SH EXAMPLES
.SS Using concat()
The following example combines strings into a new string.
.IP
.EX
\f[B]const\f[R] hello = \(dqHello, \(dq;
console.log(hello.concat(\(dqKevin\(dq, \(dq. Have a nice day.\(dq));
\f[I]// Hello, Kevin. Have a nice day.\f[R]

\f[B]const\f[R] greetList = [\(dqHello\(dq, \(dq \(dq, \(dqVenkat\(dq, \(dq!\(dq];
\(dq\(dq.concat(...greetList); \f[I]// \(dqHello Venkat!\(dq\f[R]

\(dq\(dq.concat({}); \f[I]// \(dq[object Object]\(dq\f[R]
\(dq\(dq.concat([]); \f[I]// \(dq\(dq\f[R]
\(dq\(dq.concat(\f[B]null\f[R]); \f[I]// \(dqnull\(dq\f[R]
\(dq\(dq.concat(\f[B]true\f[R]); \f[I]// \(dqtrue\(dq\f[R]
\(dq\(dq.concat(4, 5); \f[I]// \(dq45\(dq\f[R]
.EE
.SH SEE ALSO
.IP \(bu 2
\f[CR]Array.prototype.concat()\f[R]
.IP \(bu 2
Addition (\f[CR]+\f[R])
