.\" Automatically generated by Pandoc 3.4
.\"
.TH "ReadableByteStreamController.close" "JS" "July 26, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
ReadableByteStreamController.close \- ReadableByteStreamController:
close() method
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]close()\f[B]\f[R] method of the
\f[CR]ReadableByteStreamController\f[R] interface closes the associated
stream.
.PP
This might be called by the underlying source when its data source has
been exhausted/completed.
.RS
.PP
\f[B]Note:\f[R] Readers will still be able to read any
previously\-enqueued chunks from the stream, but once those are read,
the stream will become closed.
However if there is an outstanding and partially written
\f[CR]byobRequest\f[R] when \f[CR]close()\f[R] is called, the stream
will be errored.
.RE
.SH SYNTAX
.IP
.EX
close()
.EE
.SS Parameters
None.
.SS Return value
None (\f[CR]undefined\f[R]).
.SS Exceptions
.TP
\f[B]TypeError\f[R]
Thrown if the source object is not a
\f[CR]ReadableByteStreamController\f[R], it is already closed, or the
stream is not readable for some other reason.
.SH EXAMPLES
The example in Using readable byte streams > Creating a readable socket
push byte stream how we might close the stream when there is no more
data.
.PP
The relevant code is reproduced below.
This relies on the hypothetical \f[CR]readInto()\f[R] method returning 0
bytes only when there is no more data.
.IP
.EX
bytesRead = socket.readInto(v.buffer, v.byteOffset, v.byteLength);
\f[B]if\f[R] (bytesRead === 0) {
  controller.close();
}
.EE
.PP
After calling close, the stream will be closed, and any consumers
signalled.
For example if using a \f[CR]ReadableStreamBYOBReader\f[R] any
\f[CR]read()\f[R] requests would resolve with \f[CR]done: true\f[R] and
the promise from \f[CR]ReadableStreamBYOBReader.closed\f[R] would also
be resolved.
.SH SEE ALSO
.IP \[bu] 2
Using readable byte streams
.IP \[bu] 2
\f[CR]ReadableByteStreamController\f[R]
