.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "ASYNCITERATOR.SYMBOL.ASYNCITERATOR" "3JS" "June 20, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
AsyncIterator.Symbol.asyncIterator \-
AsyncIterator.prototypeSymbol.asyncIterator
.SH SYNOPSIS
The \f[B]\f[CB][Symbol.asyncIterator]()\f[B]\f[R] method of
\f[CR]AsyncIterator\f[R] instances implements the async iterable
protocol and allows built\-in async iterators to be consumed by most
syntaxes expecting async iterables, such as \f[CR]for await...of\f[R]
loops.
It returns the value of \f[CR]this\f[R], which is the async iterator
object itself.
.SH SYNTAX
.IP
.EX
asyncIterator[Symbol.asyncIterator]()
.EE
.SS Parameters
None.
.SS Return value
The value of \f[CR]this\f[R], which is the async iterator object itself.
.SH EXAMPLES
.SS Iteration using for await\&...of loop
Note that you seldom need to call this method directly.
The existence of the \f[CR][Symbol.asyncIterator]()\f[R] method makes
all built\-in async iterators async iterable, and iterating syntaxes
like the \f[CR]for await...of\f[R] loop automatically calls this method
to obtain the async iterator to loop over.
.IP
.EX
\f[B]const\f[R] asyncIterator = (\f[B]async\f[R] \f[B]function\f[R]* () {
  \f[B]yield\f[R] 1;
  \f[B]yield\f[R] 2;
  \f[B]yield\f[R] 3;
})();
(\f[B]async\f[R] () \f[B]=>\f[R] {
  \f[B]for\f[R] \f[B]await\f[R] (\f[B]const\f[R] value \f[B]of\f[R] asyncIterator) {
    console.log(value);
  }
})();
\f[I]// Logs: 1, 2, 3\f[R]
.EE
.SH SEE ALSO
.IP \(bu 2
\f[CR]for await...of\f[R]
