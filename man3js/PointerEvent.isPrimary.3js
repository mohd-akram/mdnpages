.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "PointerEvent.isPrimary" "JS" "July 26, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
PointerEvent.isPrimary \- PointerEvent: isPrimary property
.SH SYNOPSIS
The \f[B]\f[CB]isPrimary\f[B]\f[R] read\-only property of the
\f[CR]PointerEvent\f[R] interface indicates whether or not the pointer
device that created the event is the \f[I]primary\f[R] pointer.
It returns \f[CR]true\f[R] if the pointer that caused the event to be
fired is the primary one and returns \f[CR]false\f[R] otherwise.
.PP
In a multi\-pointer scenario (such as a touch screen that supports more
than one touch point), this property is used to identify a \f[I]master
pointer\f[R] among the set of active pointers for each pointer type.
Only a primary pointer will produce \f[I]compatibility mouse
events\f[R].
Authors who desire only single\-pointer interaction can achieve that by
ignoring non\-primary pointers.
.PP
A pointer is considered primary if the pointer represents a mouse
device.
A pointer representing pen input is considered the primary pen input if
its \f[CR]pointerdown\f[R] event was dispatched when no other active
pointers representing pen input existed.
A pointer representing touch input is considered the primary touch input
if its \f[CR]pointerdown\f[R] event was dispatched when no other active
pointers representing touch input existed.
.PP
When two or more pointer device types are being used concurrently,
multiple pointers (one for each \f[CR]pointerType\f[R]) are considered
primary.
For example, a touch contact and a mouse cursor moved simultaneously
will produce pointers that are both considered primary.
If there are multiple primary pointers, these pointers will all produce
\f[I]compatibility mouse events\f[R] (see Pointer events for more
information about pointer, mouse and touch interaction).
.SH VALUE
A boolean, \f[CR]true\f[R] if the pointer for this event is the primary
pointer and returns \f[CR]false\f[R] otherwise.
.SH EXAMPLES
This example illustrates using the value of \f[CR]isPrimary\f[R] to call
the appropriate processing function.
.IP
.EX
target.addEventListener(
  \[dq]pointerdown\[dq],
  (event) \f[B]=>\f[R] {
    \f[B]if\f[R] (event.isPrimary) {
      process_primary_pointer(event);
    } \f[B]else\f[R] {
      process_secondary_pointer(event);
    }
  },
  \f[B]false\f[R],
);
.EE
