.\" Automatically generated by Pandoc 3.4
.\"
.TH "XMLHttpRequestUpload.error_event" "JS" "April 4, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
XMLHttpRequestUpload.error_event \- XMLHttpRequestUpload: error event
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers, except for
Service Workers.
.PP
The \f[CR]error\f[R] event is fired when the request encountered an
error.
.SH SYNTAX
Use the event name in methods like \f[CR]addEventListener()\f[R], or set
an event handler property.
.IP
.EX
addEventListener(\[dq]error\[dq], (event) \f[B]=>\f[R] {});

onerror = (event) \f[B]=>\f[R] {};
.EE
.SH EVENT TYPE
A \f[CR]ProgressEvent\f[R].
Inherits from \f[CR]Event\f[R].
.SH EVENT PROPERTIES
\f[I]In addition to the properties listed below, properties from the
parent interface, \f[CI]Event\f[I], are available.\f[R]
.TP
\f[B]lengthComputable\f[R] \f[I](read\-only)\f[R]
A boolean flag indicating if the total work to be done, and the amount
of work already done, by the underlying process is calculable.
In other words, it tells if the progress is measurable or not.
.TP
\f[B]loaded\f[R] \f[I](read\-only)\f[R]
A 64\-bit unsigned integer value indicating the amount of work already
performed by the underlying process.
The ratio of work done can be calculated by dividing \f[CR]total\f[R] by
the value of this property.
When downloading a resource using HTTP, this only counts the body of the
HTTP message, and doesn\[cq]t include headers and other overhead.
.TP
\f[B]total\f[R] \f[I](read\-only)\f[R]
A 64\-bit unsigned integer representing the total amount of work that
the underlying process is in the progress of performing.
When downloading a resource using HTTP, this is the
\f[CR]Content\-Length\f[R] (the size of the body of the message), and
doesn\[cq]t include the headers and other overhead.
.SH EXAMPLES
.SS Using the \f[CR]error\f[R] event
You can use the \f[CR]error\f[R] event to detect a problem with the
upload.
For a complete code example that uploads a file and displays a progress
bar, see the main \f[CR]XMLHttpRequestUpload\f[R] page.
.IP
.EX
\f[I]// In case of an error we hide the progress bar\f[R]
\f[I]// Note that this event can be listened to on the xhr object too\f[R]
\f[B]function\f[R] errorAction(event) {
  progressBar.classList.remove(\[dq]visible\[dq]);
  log.textContent = \[ga]Upload failed: ${event.type}\[ga];
}
xhr.upload.addEventListener(\[dq]error\[dq], errorAction);
.EE
.SH SEE ALSO
.IP \[bu] 2
Related events: \f[CR]loadstart\f[R], \f[CR]load\f[R],
\f[CR]progress\f[R], \f[CR]abort\f[R], \f[CR]loadend\f[R],
\f[CR]timeout\f[R]
.IP \[bu] 2
\f[CR]XMLHttpRequestUpload\f[R]
