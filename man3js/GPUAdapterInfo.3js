.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "GPUADAPTERINFO" "3JS" "June 18, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
GPUAdapterInfo \- GPUAdapterInfo
.SH SYNOPSIS
\f[B]Secure context:\f[R] This feature is available only in secure
contexts (HTTPS).
.PP
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]GPUAdapterInfo\f[B]\f[R] interface of the WebGPU API
contains identifying information about a \f[CR]GPUAdapter\f[R].
.PP
An adapter\(cqs \f[CR]GPUAdapterInfo\f[R] can be retrieved using the
\f[CR]GPUAdapter.info\f[R] property of the adapter itself, or the
\f[CR]GPUDevice.adapterInfo\f[R] property of a device that originated
from the adapter.
.PP
This object allows developers to access specific details about the
user\(cqs GPU so that they can preemptively apply workarounds for
GPU\-specific bugs, or provide different codepaths to better suit
different GPU architectures.
Providing such information does present a security risk \(em it could be
used for fingerprinting \(em therefore the information shared is kept at
a minimum, and different browser vendors are likely to share different
information types and granularities.
.SH INSTANCE PROPERTIES
.TP
\f[B]architecture\f[R] \f[I](read\-only)\f[R]
The name of the family or class of GPUs the adapter belongs to.
Returns an empty string if it is not available.
.TP
\f[B]description\f[R] \f[I](read\-only)\f[R]
A human\-readable string describing the adapter.
Returns an empty string if it is not available.
.TP
\f[B]device\f[R] \f[I](read\-only)\f[R]
A vendor\-specific identifier for the adapter.
Returns an empty string if it is not available.
.TP
\f[B]vendor\f[R] \f[I](read\-only)\f[R]
The name of the adapter vendor.
Returns an empty string if it is not available.
.TP
\f[B]subgroupMaxSize\f[R] \f[I](experimental)\f[R] \f[I](read\-only)\f[R]
The maximum supported \c
.UR https://gpuweb.github.io/gpuweb/wgsl/#subgroup-size
subgroup size
.UE \c
\ for the \f[CR]GPUAdapter\f[R].
.TP
\f[B]subgroupMinSize\f[R] \f[I](experimental)\f[R] \f[I](read\-only)\f[R]
The minimum supported \c
.UR https://gpuweb.github.io/gpuweb/wgsl/#subgroup-size
subgroup size
.UE \c
\ for the \f[CR]GPUAdapter\f[R].
.SH EXAMPLES
.SS Access GPUAdapterInfo via GPUAdapter.info
.IP
.EX
\f[B]const\f[R] adapter = \f[B]await\f[R] navigator.gpu.requestAdapter();
\f[B]if\f[R] (!adapter) {
  \f[B]throw\f[R] Error(\(dqCouldn\(aqt request WebGPU adapter.\(dq);
}

\f[B]const\f[R] adapterInfo = adapter.info;
console.log(adapterInfo.vendor);
console.log(adapterInfo.architecture);
.EE
.SS Access GPUAdapterInfo via GPUDevice.adapterInfo
.IP
.EX
\f[B]const\f[R] adapter = \f[B]await\f[R] navigator.gpu.requestAdapter();
\f[B]if\f[R] (!adapter) {
  \f[B]throw\f[R] Error(\(dqCouldn\(aqt request WebGPU adapter.\(dq);
}

\f[B]const\f[R] myDevice = \f[B]await\f[R] adapter.requestDevice();

\f[B]function\f[R] optimizeForGpuDevice(device) {
  \f[B]if\f[R] (device.adapterInfo.vendor === \(dqamd\(dq) {
    \f[I]// Use AMD\-specific optimizations\f[R]
  } \f[B]else\f[R] \f[B]if\f[R] (device.adapterInfo.architecture.includes(\(dqturing\(dq)) {
    \f[I]// Optimize for NVIDIA Turing architecture\f[R]
  }
}

optimizeForGpuDevice(myDevice);
.EE
.SH SEE ALSO
.IP \(bu 2
\f[CR]GPUAdapter.info\f[R]
.IP \(bu 2
The WebGPU API
