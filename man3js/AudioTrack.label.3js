.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "AudioTrack.label" "JS" "July 25, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
AudioTrack.label \- AudioTrack: label property
.SH SYNOPSIS
The read\-only \f[B]\f[CB]AudioTrack\f[B]\f[R] property
\f[B]\f[CB]label\f[B]\f[R] returns a string specifying the audio
track\[cq]s human\-readable label, if one is available; otherwise, it
returns an empty string.
.SH VALUE
A string specifying the track\[cq]s human\-readable label, if one is
available in the track metadata.
Otherwise, an empty string (\f[CR]\[dq]\[dq]\f[R]) is returned.
.PP
For example, a track whose \f[CR]kind\f[R] is
\f[CR]\[dq]commentary\[dq]\f[R] might have a \f[CR]label\f[R] such as
\f[CR]\[dq]Commentary with director Mark Markmarkimark and star Donna Donnalidon\[dq]\f[R].
.SH EXAMPLES
This example returns an array of track kinds and labels for potential
use in a user interface to select audio tracks for a specified media
element.
The list is filtered to only allow certain track kinds through.
.IP
.EX
\f[B]function\f[R] getTrackList(el) {
  \f[B]const\f[R] trackList = [];
  \f[B]const\f[R] wantedKinds = [
    \[dq]main\[dq],
    \[dq]alternative\[dq],
    \[dq]main\-desc\[dq],
    \[dq]translation\[dq],
    \[dq]commentary\[dq],
  ];

  el.audioTracks.forEach((track) \f[B]=>\f[R] {
    \f[B]if\f[R] (wantedKinds.includes(track.kind)) {
      trackList.push({
        id: track.id,
        kind: track.kind,
        label: track.label,
      });
    }
  });
  \f[B]return\f[R] trackList;
}
.EE
.PP
The resulting \f[CR]trackList\f[R] contains an array of audio tracks
whose \f[CR]kind\f[R] is one of those in the array
\f[CR]wantedKinds\f[R], with each entry providing the track\[cq]s
\f[CR]id\f[R], \f[CR]kind\f[R], and \f[CR]label\f[R].
