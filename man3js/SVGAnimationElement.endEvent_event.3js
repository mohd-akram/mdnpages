.\" Automatically generated by Pandoc 3.4
.\"
.TH "SVGAnimationElement.endEvent_event" "JS" "July 26, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
SVGAnimationElement.endEvent_event \- SVGAnimationElement: endEvent
event
.SH SYNOPSIS
The \f[B]\f[CB]endEvent\f[B]\f[R] event of the
\f[CR]SVGAnimationElement\f[R] interface is fired when at the active end
of the animation is reached.
.RS
.PP
\f[B]Note:\f[R] This event is not raised at the simple end of each
animation repeat.
This event may be raised both in the course of normal (i.e.\ scheduled
or interactive) timeline play, as well as in the case that the element
was ended with a DOM method.
.RE
.PP
This event is not cancelable and does not bubble.
.SH SYNTAX
Use the event name in methods like \f[CR]addEventListener()\f[R], or set
an event handler property.
.IP
.EX
addEventListener(\[dq]endEvent\[dq], (event) \f[B]=>\f[R] {});

onend = (event) \f[B]=>\f[R] {};
.EE
.SH EVENT TYPE
A \f[CR]TimeEvent\f[R].
Inherits from \f[CR]Event\f[R].
.SH EVENT PROPERTIES
.TP
\f[B]TimeEvent.detail\f[R] \f[I](read\-only)\f[R]
A \f[CR]long\f[R] that specifies some detail information about the
Event, depending on the type of the event.
For this event type, indicates the repeat number for the animation.
.TP
\f[B]TimeEvent.view\f[R] \f[I](read\-only)\f[R]
A WindowProxy that identifies the Window from which the event was
generated.
.SH EXAMPLES
.SS Animated circle
.IP
.EX
<\f[B]svg\f[R] xmlns=\[dq]http://www.w3.org/2000/svg\[dq] width=\[dq]300px\[dq] height=\[dq]100px\[dq]>
  <\f[B]title\f[R]>SVG SMIL Animate with Path</\f[B]title\f[R]>
  <\f[B]circle\f[R] cx=\[dq]0\[dq] cy=\[dq]50\[dq] r=\[dq]50\[dq] fill=\[dq]blue\[dq] stroke=\[dq]black\[dq] stroke\-width=\[dq]1\[dq]>
    <\f[B]animateMotion\f[R] path=\[dq]M 0 0 H 300 Z\[dq] dur=\[dq]5s\[dq] repeatCount=\[dq]indefinite\[dq] />
  </\f[B]circle\f[R]>
</\f[B]svg\f[R]>

<\f[B]hr\f[R] />

<\f[B]button\f[R]>Stop animation</\f[B]button\f[R]>

<\f[B]ul\f[R]></\f[B]ul\f[R]>
.EE
.IP
.EX
ul {
  \f[B]height\f[R]: 100px;
  \f[B]border\f[R]: 1px solid #ddd;
  \f[B]overflow\-y\f[R]: scroll;
  \f[B]padding\f[R]: 10px 30px;
}
.EE
.IP
.EX
\f[B]let\f[R] svgElem = document.querySelector(\[dq]svg\[dq]);
\f[B]let\f[R] animateElem = document.querySelector(\[dq]animateMotion\[dq]);
\f[B]let\f[R] list = document.querySelector(\[dq]ul\[dq]);
\f[B]let\f[R] btn = document.querySelector(\[dq]button\[dq]);

animateElem.addEventListener(\[dq]beginEvent\[dq], () \f[B]=>\f[R] {
  \f[B]let\f[R] listItem = document.createElement(\[dq]li\[dq]);
  listItem.textContent = \[dq]beginEvent fired\[dq];
  list.appendChild(listItem);
});

animateElem.addEventListener(\[dq]endEvent\[dq], () \f[B]=>\f[R] {
  \f[B]let\f[R] listItem = document.createElement(\[dq]li\[dq]);
  listItem.textContent = \[dq]endEvent fired\[dq];
  list.appendChild(listItem);
});

animateElem.addEventListener(\[dq]repeatEvent\[dq], (e) \f[B]=>\f[R] {
  \f[B]let\f[R] listItem = document.createElement(\[dq]li\[dq]);
  \f[B]let\f[R] msg = \[dq]repeatEvent fired\[dq];
  \f[B]if\f[R] (e.detail) {
    msg += \[ga]; repeat number: ${e.detail}\[ga];
  }
  listItem.textContent = msg;
  list.appendChild(listItem);
});

btn.addEventListener(\[dq]click\[dq], () \f[B]=>\f[R] {
  btn.disabled = \f[B]true\f[R];
  animateElem.setAttribute(\[dq]repeatCount\[dq], \[dq]1\[dq]);
});
.EE
.SS Event handler property equivalent
Note that you can also create an event listener for the \f[CR]end\f[R]
event using the \f[CR]onend\f[R] event handler property:
.IP
.EX
animateElem.onend = () \f[B]=>\f[R] {
  console.log(\[dq]endEvent fired\[dq]);
};
.EE
.SH SEE ALSO
.IP \[bu] 2
SVG animation with SMIL
.IP \[bu] 2
\f[CR]beginEvent\f[R] event
.IP \[bu] 2
\f[CR]repeatEvent\f[R] event
