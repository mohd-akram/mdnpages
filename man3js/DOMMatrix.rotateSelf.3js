.\" Automatically generated by Pandoc 3.4
.\"
.TH "DOMMatrix.rotateSelf" "JS" "December 24, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
DOMMatrix.rotateSelf \- DOMMatrix: rotateSelf() method
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[CR]rotateSelf()\f[R] method of the \f[CR]DOMMatrix\f[R] interface
is a mutable transformation method that modifies a matrix.
It rotates the source matrix around each of its axes by the specified
number of degrees and returns the rotated matrix.
.PP
To rotate a matrix without mutating it, see
\f[CR]DOMMatrixReadOnly.rotate()\f[R]
.SH SYNTAX
.IP
.EX
DOMMatrix.rotateSelf()
DOMMatrix.rotateSelf(rotX)
DOMMatrix.rotateSelf(rotX, rotY)
DOMMatrix.rotateSelf(rotX, rotY, rotZ)
.EE
.SS Parameters
.TP
\f[B]rotX\f[R]
A number; the x\-coordinate of the vector denoting the axis of rotation
.TP
\f[B]rotY\f[R] \f[I](optional)\f[R]
A number; the y\-coordinate of the vector denoting the axis of rotation.
.TP
\f[B]rotZ\f[R] \f[I](optional)\f[R]
A number; the z\-coordinate of the vector denoting the axis of rotation
.PP
If only one parameter is passed, \f[CR]rotZ\f[R] is the value of
\f[CR]rotX\f[R], and both \f[CR]rotX\f[R] and \f[CR]rotY\f[R] are
\f[CR]0\f[R], and the rotation is a 2D rotation.
If \f[CR]rotX\f[R] and \f[CR]rotY\f[R] are non\-zero, the
\f[CR]is_2d\f[R] is \f[CR]false\f[R].
.SS Return value
Returns itself; the \f[CR]DOMMatrix\f[R] rotated by the given vectors.
.SH EXAMPLES
.IP
.EX
\f[B]const\f[R] matrix = \f[B]new\f[R] DOMMatrix(); \f[I]// create a matrix\f[R]
console.log(matrix.toString()); \f[I]// output: \[dq]matrix(1, 0, 0, 1, 0, 0)\[dq]\f[R]
matrix.rotateSelf(30); \f[I]// mutate it\f[R]
console.log(matrix); \f[I]// output: \[dq]matrix(0.866, 0.5, \-0.5, 0.866, 0, 0)\[dq]\f[R]
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]DOMMatrixReadOnly.rotate()\f[R]
.IP \[bu] 2
CSS \f[CR]transform\f[R] property
.IP \[bu] 2
CSS \f[CR]rotate\f[R] property
.IP \[bu] 2
CSS \f[CR]transform\-function\f[R] functions
.RS 2
.IP \[bu] 2
\f[CR]rotate()\f[R]
.IP \[bu] 2
\f[CR]rotate3d()\f[R]
.IP \[bu] 2
\f[CR]rotateX()\f[R]
.IP \[bu] 2
\f[CR]rotateY()\f[R]
.IP \[bu] 2
\f[CR]rotateZ()\f[R]
.RE
.IP \[bu] 2
CSS transforms module
.IP \[bu] 2
SVG \f[CR]transform\f[R] attribute
.IP \[bu] 2
\f[CR]CanvasRenderingContext2D\f[R] interface methods
.RS 2
.IP \[bu] 2
\f[CR]CanvasRenderingContext2D.rotate()\f[R]
.IP \[bu] 2
\f[CR]CanvasRenderingContext2D.transform()\f[R]
.IP \[bu] 2
\f[CR]CanvasRenderingContext2D.setTransform()\f[R]
.IP \[bu] 2
\f[CR]CanvasRenderingContext2D.resetTransform()\f[R]
.RE
