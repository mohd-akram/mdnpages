.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "IDBRequest.source" "JS" "March 6, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
IDBRequest.source \- IDBRequest: source property
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]source\f[B]\f[R] read\-only property of the
\f[CR]IDBRequest\f[R] interface returns the source of the request, such
as an Index or an object store.
If no source exists (such as when calling \f[CR]IDBFactory.open\f[R]),
it returns null.
.SH VALUE
An object representing the source of the request, such as an
\f[CR]IDBIndex\f[R], \f[CR]IDBObjectStore\f[R] or \f[CR]IDBCursor\f[R].
.SH EXAMPLES
The following example requests a given record title,
\f[CR]onsuccess\f[R] gets the associated record from the
\f[CR]IDBObjectStore\f[R] (made available as
\f[CR]objectStoreTitleRequest.result\f[R]), updates one property of the
record, and then puts the updated record back into the object store in
another request.
The source of the 2nd request is logged to the developer console.
For a full working example, see our \c
.UR https://github.com/mdn/dom-examples/tree/main/to-do-notifications
To\-do Notifications
.UE \c
\ app (\c
.UR https://mdn.github.io/dom-examples/to-do-notifications/
View the example live
.UE \c
).
.IP
.EX
\f[B]const\f[R] title = \[dq]Walk dog\[dq];

\f[I]// Open up a transaction as usual\f[R]
\f[B]const\f[R] objectStore = db
  .transaction([\[dq]toDoList\[dq]], \[dq]readwrite\[dq])
  .objectStore(\[dq]toDoList\[dq]);

\f[I]// Get the to\-do list object that has this title as its title\f[R]
\f[B]const\f[R] objectStoreTitleRequest = objectStore.get(title);

objectStoreTitleRequest.onsuccess = () \f[B]=>\f[R] {
  \f[I]// Grab the data object returned as the result\f[R]
  \f[B]const\f[R] data = objectStoreTitleRequest.result;

  \f[I]// Update the notified value in the object to \[dq]yes\[dq]\f[R]
  data.notified = \[dq]yes\[dq];

  \f[I]// Create another request that inserts the item\f[R]
  \f[I]// back into the database\f[R]
  \f[B]const\f[R] updateTitleRequest = objectStore.put(data);

  \f[I]// Log the source of this request\f[R]
  console.log(\[ga]The source of this request is ${updateTitleRequest.source}\[ga]);
  \f[I]// When this new request succeeds, run the displayData()\f[R]
  \f[I]// function again to update the display\f[R]
  updateTitleRequest.onsuccess = () \f[B]=>\f[R] {
    displayData();
  };
};
.EE
.SH SEE ALSO
.IP \[bu] 2
Using IndexedDB
.IP \[bu] 2
Starting transactions: \f[CR]IDBDatabase\f[R]
.IP \[bu] 2
Using transactions: \f[CR]IDBTransaction\f[R]
.IP \[bu] 2
Setting a range of keys: \f[CR]IDBKeyRange\f[R]
.IP \[bu] 2
Retrieving and making changes to your data: \f[CR]IDBObjectStore\f[R]
.IP \[bu] 2
Using cursors: \f[CR]IDBCursor\f[R]
.IP \[bu] 2
Reference example: \c
.UR https://github.com/mdn/dom-examples/tree/main/to-do-notifications
To\-do Notifications
.UE \c
\ (\c
.UR https://mdn.github.io/dom-examples/to-do-notifications/
View the example live
.UE \c
).
