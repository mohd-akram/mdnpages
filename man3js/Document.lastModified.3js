.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "DOCUMENT.LASTMODIFIED" "3JS" "July 24, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Document.lastModified \- Document: lastModified property
.SH SYNOPSIS
The \f[B]\f[CB]lastModified\f[B]\f[R] property of the
\f[CR]Document\f[R] interface returns a string containing the date and
local time on which the current document was last modified.
.SH VALUE
A string.
.SH EXAMPLES
.SS Simple usage
This example alerts the value of \f[CR]lastModified\f[R].
.IP
.EX
alert(document.lastModified);
\f[I]// returns: Tuesday, December 16, 2017 11:09:42\f[R]
.EE
.SS Transforming lastModified into a Date object
This example transforms \f[CR]lastModified\f[R] into a \f[CR]Date\f[R]
object.
.IP
.EX
\f[B]let\f[R] oLastModif = \f[B]new\f[R] Date(document.lastModified);
.EE
.SS Transforming lastModified into milliseconds
This example transforms \f[CR]lastModified\f[R] into the number of
milliseconds since January 1, 1970, 00:00:00, local time.
.IP
.EX
\f[B]let\f[R] nLastModif = Date.parse(document.lastModified);
.EE
.SH NOTES
Note that as a string, \f[CR]lastModified\f[R] cannot \f[I]easily\f[R]
be used for comparing the modification dates of documents.
Here is a possible example of how to show an alert message when the page
changes (see also: JavaScript cookies API):
.IP
.EX
\f[I]// Match \(aqtimestamp\(aq in \(aqlast_modif=timestamp\(aq\f[R]
\f[I]// e.g. \(aq1687964614822\(aq in \(aqlast_modif=1687964614822\(aq\f[R]
\f[B]const\f[R] pattern = /last_modif\(rss*=\(rss*([\(ha;]*)/;

\f[B]if\f[R] (
  Date.parse(document.lastModified) >
  (parseFloat(document.cookie.match(pattern)?.[1]) || 0)
) {
  document.cookie = \(galast_modif=${Date.now()}; expires=Fri, 31 Dec 9999 23:59:59 GMT; path=${
    location.pathname
  }\(ga;
  alert(\(dqThis page has changed!\(dq);
}
.EE
.PP
\&...the same example, but skipping the first visit:
.IP
.EX
\f[B]const\f[R] pattern = /last_modif\(rss*=\(rss*([\(ha;]*)/;

\f[B]const\f[R] lastVisit = parseFloat(document.cookie.replace(pattern, \(dq$1\(dq));
\f[B]const\f[R] lastModif = Date.parse(document.lastModified);

\f[B]if\f[R] (Number.isNaN(lastVisit) || lastModif > lastVisit) {
  document.cookie = \(galast_modif=${Date.now()}; expires=Fri, 31 Dec 9999 23:59:59 GMT; path=${
    location.pathname
  }\(ga;

  \f[B]if\f[R] (isFinite(lastVisit)) {
    alert(\(dqThis page has been changed!\(dq);
  }
}
.EE
.PP
If you want to know whether an \f[I]external\f[R] page has changed, you
can make a \f[CR]HEAD\f[R] request using the \f[CR]fetch()\f[R] API, and
examine the \f[CR]Last\-Modified\f[R] response header.
