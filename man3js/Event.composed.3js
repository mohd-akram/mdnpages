.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "Event.composed" "JS" "July 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Event.composed \- Event: composed property
.SH SYNOPSIS
The read\-only \f[B]\f[CB]composed\f[B]\f[R] property of the
\f[CR]Event\f[R] interface returns a boolean value which indicates
whether or not the event will propagate across the shadow DOM boundary
into the standard DOM.
.PP
All UA\-dispatched UI events are composed
(click/touch/mouseover/copy/paste, etc.).
Most other types of events are not composed, and so will return
\f[CR]false\f[R].
For example, this includes synthetic events that are created without
their \f[CR]composed\f[R] option set to \f[CR]true\f[R].
.PP
Propagation only occurs if the \f[CR]bubbles\f[R] property is also
\f[CR]true\f[R].
However, capturing only composed events are also handled at host as if
they were in \f[CR]AT_TARGET\f[R] phase.
You can determine the path the event will follow through the shadow root
to the DOM root by calling \f[CR]composedPath()\f[R].
.SH VALUE
A boolean value which is \f[CR]true\f[R] if the event will cross from
the shadow DOM into the standard DOM after reaching the shadow root.
(That is, the first node in the shadow DOM in which the event began to
propagate.)
.PP
If this value is \f[CR]false\f[R], the shadow root will be the last node
to be offered the event.
.SH EXAMPLES
In this \c
.UR https://mdn.github.io/web-components-examples/composed-composed-path/
example
.UE \c
, we define two trivial custom elements, \f[CR]<open\-shadow>\f[R] and
\f[CR]<closed\-shadow>\f[R], both of which take the contents of their
text attribute and insert them into the element\[cq]s shadow DOM as the
text content of a \f[CR]<p>\f[R] element.
The only difference between the two is that their shadow roots are
attached with their modes set to \f[CR]open\f[R] and \f[CR]closed\f[R]
respectively.
.PP
The two definitions look like this:
.IP
.EX
customElements.define(
  \[dq]open\-shadow\[dq],
  \f[B]class\f[R] \f[B]extends\f[R] HTMLElement {
    constructor() {
      \f[B]super\f[R]();

      \f[B]const\f[R] pElem = document.createElement(\[dq]p\[dq]);
      pElem.textContent = \f[B]this\f[R].getAttribute(\[dq]text\[dq]);

      \f[B]const\f[R] shadowRoot = \f[B]this\f[R].attachShadow({
        mode: \[dq]open\[dq],
      });

      shadowRoot.appendChild(pElem);
    }
  },
);

customElements.define(
  \[dq]closed\-shadow\[dq],
  \f[B]class\f[R] \f[B]extends\f[R] HTMLElement {
    constructor() {
      \f[B]super\f[R]();

      \f[B]const\f[R] pElem = document.createElement(\[dq]p\[dq]);
      pElem.textContent = \f[B]this\f[R].getAttribute(\[dq]text\[dq]);

      \f[B]const\f[R] shadowRoot = \f[B]this\f[R].attachShadow({
        mode: \[dq]closed\[dq],
      });

      shadowRoot.appendChild(pElem);
    }
  },
);
.EE
.PP
We then insert one of each element into our page:
.IP
.EX
<\f[B]open\-shadow\f[R] text=\[dq]I have an open shadow root\[dq]></\f[B]open\-shadow\f[R]>
<\f[B]closed\-shadow\f[R] text=\[dq]I have a closed shadow root\[dq]></\f[B]closed\-shadow\f[R]>
.EE
.PP
Then include a click event listener on the \f[CR]<html>\f[R] element:
.IP
.EX
document.querySelector(\[dq]html\[dq]).addEventListener(\[dq]click\[dq], (e) \f[B]=>\f[R] {
  console.log(e.composed);
  console.log(e.composedPath());
});
.EE
.PP
When you click on the \f[CR]<open\-shadow>\f[R] element and then the
\f[CR]<closed\-shadow>\f[R] element, you\[cq]ll notice two things.
.IP "1." 3
The \f[CR]composed\f[R] property returns \f[CR]true\f[R] because the
\f[CR]click\f[R] event is always able to propagate across shadow
boundaries.
.IP "2." 3
A difference in the value of \f[CR]composedPath\f[R] for the two
elements.
.PP
The \f[CR]<open\-shadow>\f[R] element\[cq]s composed path is this:
.IP
.EX
Array [ p, ShadowRoot, open\-shadow, body, html, HTMLDocument https://mdn.github.io/web\-components\-examples/composed\-composed\-path/, Window ]
.EE
.PP
Whereas the \f[CR]<closed\-shadow>\f[R] element\[cq]s composed path is a
follows:
.IP
.EX
Array [ closed\-shadow, body, html, HTMLDocument https://mdn.github.io/web\-components\-examples/composed\-composed\-path/, Window ]
.EE
.PP
In the second case, the event listeners only propagate as far as the
\f[CR]<closed\-shadow>\f[R] element itself, but not to the nodes inside
the shadow boundary.
