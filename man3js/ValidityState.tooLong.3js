.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "ValidityState.tooLong" "JS" "December 19, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
ValidityState.tooLong \- ValidityState: tooLong property
.SH SYNOPSIS
The read\-only \f[B]\f[CB]tooLong\f[B]\f[R] property of the
\f[CR]ValidityState\f[R] interface indicates if the value of an
\f[CR]<input>\f[R] or \f[CR]<textarea>\f[R], after having been edited by
the user, exceeds the maximum code\-unit length established by the
element\[cq]s \f[CR]maxlength\f[R] attribute.
.SH VALUE
A boolean that is \f[CR]true\f[R] if the \f[CR]ValidityState\f[R] does
not conform to the constraints.
.SH EXAMPLES
.SS Textarea with too long character count
The following example checks the validity of a textarea element.
A constraint has been added using the \f[CR]maxlength\f[R] attribute so
the textarea expects a maximum of 10 characters.
If there are too many characters in the textarea (which is true below),
the element fails constraint validation, and the styles matching
\f[CR]:invalid\f[R] CSS pseudo\-class are applied.
.PP
When editing the textarea, the browser will not allow the user to add
characters that would fail constraint validation of maximum character
count, so at first, only deleting characters is allowed.
Newline characters are normalized and count as a single character in the
maximum length calculation.
.IP
.EX
textarea\f[BI]:invalid\f[R] {
  \f[B]outline\f[R]: red solid 3px;
}
.EE
.IP
.EX
<\f[B]pre\f[R] id=\[dq]log\[dq]>Validation logged here...</\f[B]pre\f[R]>
<\f[B]textarea\f[R] name=\[dq]story\[dq] id=\[dq]userText\[dq] maxlength=\[dq]10\[dq] rows=\[dq]5\[dq]>
It was a dark and

stormy night...
</\f[B]textarea\f[R]>
.EE
.IP
.EX
\f[B]const\f[R] userInput = document.getElementById(\[dq]userText\[dq]);
\f[B]const\f[R] logElement = document.getElementById(\[dq]log\[dq]);

\f[B]function\f[R] log(text) {
  logElement.innerText = text;
}

userInput.addEventListener(\[dq]input\[dq], () \f[B]=>\f[R] {
  userInput.reportValidity();
  \f[B]if\f[R] (userInput.validity.tooLong) {
    log(\[dq]Too many characters in the textarea.\[dq]);
  } \f[B]else\f[R] {
    log(\[dq]Input is valid\&...\[dq]);
  }
});
.EE
.SH SEE ALSO
.IP \[bu] 2
Constraint validation
.IP \[bu] 2
Forms: Data form validation
