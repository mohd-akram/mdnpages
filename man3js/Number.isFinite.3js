.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "NUMBER.ISFINITE" "3JS" "June 20, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Number.isFinite \- Number.isFinite()
.SH SYNOPSIS
The \f[B]\f[CB]Number.isFinite()\f[B]\f[R] static method determines
whether the passed value is a finite number \(em that is, it checks that
a given value is a number, and the number is neither positive
\f[CR]Infinity\f[R], negative \f[CR]Infinity\f[R], nor \f[CR]NaN\f[R].
.IP
.EX
console.log(Number.isFinite(1 / 0));
\f[I]// Expected output: false\f[R]

console.log(Number.isFinite(10 / 5));
\f[I]// Expected output: true\f[R]

console.log(Number.isFinite(0 / 0));
\f[I]// Expected output: false\f[R]
.EE
.SH SYNTAX
.IP
.EX
Number.isFinite(value)
.EE
.SS Parameters
.TP
\f[B]value\f[R]
The value to be tested for finiteness.
.SS Return value
The boolean value \f[CR]true\f[R] if the given value is a finite number.
Otherwise \f[CR]false\f[R].
.SH EXAMPLES
.SS Using isFinite()
.IP
.EX
Number.isFinite(\f[B]Infinity\f[R]); \f[I]// false\f[R]
Number.isFinite(\f[B]NaN\f[R]); \f[I]// false\f[R]
Number.isFinite(\-\f[B]Infinity\f[R]); \f[I]// false\f[R]

Number.isFinite(0); \f[I]// true\f[R]
Number.isFinite(2e64); \f[I]// true\f[R]
.EE
.SS Difference between Number.isFinite() and global isFinite()
In comparison to the global \f[CR]isFinite()\f[R] function, this method
doesn\(cqt first convert the parameter to a number.
This means only values of the type number \f[I]and\f[R] are finite
return \f[CR]true\f[R], and non\-numbers always return \f[CR]false\f[R].
.IP
.EX
isFinite(\(dq0\(dq); \f[I]// true; coerced to number 0\f[R]
Number.isFinite(\(dq0\(dq); \f[I]// false\f[R]
isFinite(\f[B]null\f[R]); \f[I]// true; coerced to number 0\f[R]
Number.isFinite(\f[B]null\f[R]); \f[I]// false\f[R]
.EE
.SH SEE ALSO
.IP \(bu 2
\c
.UR https://github.com/zloirock/core-js#ecmascript-number
Polyfill of \f[CR]Number.isFinite\f[R] in \f[CR]core\-js\f[R]
.UE \c
.IP \(bu 2
\c
.UR https://www.npmjs.com/package/number.isfinite
es\-shims polyfill of \f[CR]Number.isFinite\f[R]
.UE \c
.IP \(bu 2
\f[CR]Number\f[R]
.IP \(bu 2
\f[CR]isFinite()\f[R]
