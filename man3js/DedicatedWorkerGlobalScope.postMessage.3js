.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "DedicatedWorkerGlobalScope.postMessage" "JS" "April 22, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
DedicatedWorkerGlobalScope.postMessage \- DedicatedWorkerGlobalScope:
postMessage() method
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is only available in Dedicated Web Workers.
.PP
The \f[B]\f[CB]postMessage()\f[B]\f[R] method of the
\f[CR]DedicatedWorkerGlobalScope\f[R] interface sends a message to the
main thread that spawned it.
.PP
This accepts a data parameter, which contains data to copy from the
worker to the main thread.
The data may be any value or JavaScript object handled by the structured
clone algorithm, which includes cyclical references.
.PP
The method also accepts an optional array of transferable objects to
\f[I]transfer\f[R] to the main thread; Unlike the data parameter
transferred objects are no longer usable in the worker thread.
(Where possible, objects are transferred using a high performance
zero\-copy operation).
.PP
The main scope that spawned the worker can send back information to the
thread that spawned it using the \f[CR]Worker.postMessage\f[R] method.
.SH SYNTAX
.IP
.EX
postMessage(message)
postMessage(message, options)
postMessage(message, transfer)
.EE
.SS Parameters
.TP
\f[B]message\f[R]
The object to deliver to the main thread; this will be in the data field
in the event delivered to the \f[CR]Worker.message_event\f[R].
This may be any value or JavaScript object handled by the structured
clone algorithm, which includes cyclical references.
.TP
\f[B]options\f[R] \f[I](optional)\f[R]
An optional object containing a \f[CR]transfer\f[R] field with an array
of transferable objects to transfer ownership of.
If the ownership of an object is transferred, it becomes unusable in the
context it was sent from and it becomes available only to the main
thread it was sent to.
.TP
\f[B]transfer\f[R] \f[I](optional)\f[R]
An optional ordered array of transferable objects to transfer ownership
of.
If the ownership of an object is transferred, it becomes unusable in the
context it was sent from and it becomes available only to the main
thread it was sent to.
.RS
.PP
Only transferable objects can be transferred.
.RE
.SS Return value
None (\f[CR]undefined\f[R]).
.SH EXAMPLES
The following code snippet shows \f[CR]worker.js\f[R], in which an
\f[CR]onmessage\f[R] handler is used to handle messages from the main
script.
Inside the handler a calculation is done from which a result message is
created; this is then sent back to the main thread using
\f[CR]postMessage(workerResult);\f[R]
.IP
.EX
onmessage = (e) \f[B]=>\f[R] {
  console.log(\[dq]Message received from main script\[dq]);
  \f[B]const\f[R] workerResult = \[ga]Result: ${e.data[0] * e.data[1]}\[ga];
  console.log(\[dq]Posting message back to main script\[dq]);
  postMessage(workerResult);
};
.EE
.PP
In the main script, \f[CR]onmessage\f[R] would have to be called on a
\f[CR]Worker object\f[R], whereas inside the worker script you just need
\f[CR]onmessage\f[R] because the worker is effectively the global scope
(\f[CR]DedicatedWorkerGlobalScope\f[R]).
.PP
For a full example, see our \c
.UR https://github.com/mdn/dom-examples/tree/main/web-workers/simple-web-worker
Basic dedicated worker example
.UE \c
\ (\c
.UR https://mdn.github.io/dom-examples/web-workers/simple-web-worker/
run dedicated worker
.UE \c
).
.RS
.PP
\f[B]Note:\f[R] \f[CR]postMessage()\f[R] can only send a single object
at once.
As seen above, if you want to pass multiple values you can send an
array.
.RE
.SH SEE ALSO
The \f[CR]DedicatedWorkerGlobalScope\f[R] interface it belongs to.
