.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "WebGLRenderingContext.getFramebufferAttachmentParameter" "JS" "July 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
WebGLRenderingContext.getFramebufferAttachmentParameter \-
WebGLRenderingContext: getFramebufferAttachmentParameter() method
.SH SYNOPSIS
The
\f[B]\f[CB]WebGLRenderingContext.getFramebufferAttachmentParameter()\f[B]\f[R]
method of the WebGL API returns information about a framebuffer\[cq]s
attachment.
.SH SYNTAX
.IP
.EX
getFramebufferAttachmentParameter(target, attachment, pname)
.EE
.SS Parameters
.TP
\f[B]target\f[R]
A \f[CR]GLenum\f[R] specifying the binding point (target).
Possible values:
.RS
.TP
\f[B]gl.FRAMEBUFFER\f[R]
Collection buffer data storage of color, alpha, depth and stencil
buffers used to render an image.
.PP
When using a WebGL 2 context, the following values are available
additionally:
.TP
\f[B]gl.DRAW_FRAMEBUFFER\f[R]
Equivalent to \f[CR]gl.FRAMEBUFFER\f[R].
Used as a destination for drawing, rendering, clearing, and writing
operations.
.TP
\f[B]gl.READ_FRAMEBUFFER\f[R]
Used as a source for reading operations.
.RE
.TP
\f[B]attachment\f[R]
A \f[CR]GLenum\f[R] specifying the attachment point for the
\f[CR]texture\f[R].
Possible values:
.RS
.IP \[bu] 2
\f[CR]gl.COLOR_ATTACHMENT0\f[R]: Texture attachment for the
framebuffer\[cq]s color buffer.
.IP \[bu] 2
\f[CR]gl.DEPTH_ATTACHMENT\f[R]: Texture attachment for the
framebuffer\[cq]s depth buffer.
.IP \[bu] 2
\f[CR]gl.STENCIL_ATTACHMENT\f[R]: Texture attachment for the
framebuffer\[cq]s stencil buffer.
.IP \[bu] 2
\f[CR]gl.DEPTH_STENCIL_ATTACHMENT\f[R]: Texture attachment for both, the
depth and stencil buffer.
.PP
When using a WebGL 2 context, the following values are available
additionally:
.IP \[bu] 2
\f[CR]gl.COLOR_ATTACHMENT1 gl.COLOR_ATTACHMENT2 gl.COLOR_ATTACHMENT3 gl.COLOR_ATTACHMENT4 gl.COLOR_ATTACHMENT5 gl.COLOR_ATTACHMENT6 gl.COLOR_ATTACHMENT7 gl.COLOR_ATTACHMENT8 gl.COLOR_ATTACHMENT9 gl.COLOR_ATTACHMENT10 gl.COLOR_ATTACHMENT11 gl.COLOR_ATTACHMENT12 gl.COLOR_ATTACHMENT13 gl.COLOR_ATTACHMENT14 gl.COLOR_ATTACHMENT15\f[R]
.PP
When using the \f[CR]WEBGL_draw_buffers\f[R] extension:
.IP \[bu] 2
\f[CR]ext.COLOR_ATTACHMENT0_WEBGL\f[R] (same as
\f[CR]gl.COLOR_ATTACHMENT0\f[R])
\f[CR]ext.COLOR_ATTACHMENT1_WEBGL ext.COLOR_ATTACHMENT2_WEBGL ext.COLOR_ATTACHMENT3_WEBGL ext.COLOR_ATTACHMENT4_WEBGL ext.COLOR_ATTACHMENT5_WEBGL ext.COLOR_ATTACHMENT6_WEBGL ext.COLOR_ATTACHMENT7_WEBGL ext.COLOR_ATTACHMENT8_WEBGL ext.COLOR_ATTACHMENT9_WEBGL ext.COLOR_ATTACHMENT10_WEBGL ext.COLOR_ATTACHMENT11_WEBGL ext.COLOR_ATTACHMENT12_WEBGL ext.COLOR_ATTACHMENT13_WEBGL ext.COLOR_ATTACHMENT14_WEBGL ext.COLOR_ATTACHMENT15_WEBGL\f[R]
.RE
.TP
\f[B]pname\f[R]
A \f[CR]GLenum\f[R] specifying information to query.
Possible values:
.RS
.IP \[bu] 2
\f[CR]gl.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE\f[R]: The type which
contains the attached image.
.IP \[bu] 2
\f[CR]gl.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME\f[R]: The texture or
renderbuffer of the attached image (\f[CR]WebGLRenderbuffer\f[R] or
\f[CR]WebGLTexture\f[R]).
.IP \[bu] 2
\f[CR]gl.FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL\f[R]: Mipmap level.
Default value: 0.
.IP \[bu] 2
\f[CR]gl.FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE\f[R]: The name of
cube\-map face of the texture.
.PP
When using the \f[CR]EXT_sRGB\f[R] extension:
.IP \[bu] 2
\f[CR]ext.FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT\f[R]: The
framebuffer color encoding.
.PP
When using a WebGL 2 context, the following values are available
additionally:
.IP \[bu] 2
\f[CR]gl.FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE\f[R]
.IP \[bu] 2
\f[CR]gl.FRAMEBUFFER_ATTACHMENT_BLUE_SIZE\f[R]
.IP \[bu] 2
\f[CR]gl.FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING\f[R]
.IP \[bu] 2
\f[CR]gl.FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE\f[R]
.IP \[bu] 2
\f[CR]gl.FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE\f[R]
.IP \[bu] 2
\f[CR]gl.FRAMEBUFFER_ATTACHMENT_GREEN_SIZE\f[R]
.IP \[bu] 2
\f[CR]gl.FRAMEBUFFER_ATTACHMENT_RED_SIZE\f[R]
.IP \[bu] 2
\f[CR]gl.FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE\f[R]
.IP \[bu] 2
\f[CR]gl.FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER\f[R]
.PP
When using the \f[CR]OVR_multiview2\f[R] extension:
.IP \[bu] 2
\f[CR]ext.FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR\f[R]: the number
of views of the framebuffer object attachment.
.IP \[bu] 2
\f[CR]ext.FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR\f[R]: the
base view index of the framebuffer object attachment.
.RE
.SS Return value
Depends on the requested information (as specified with
\f[CR]pname\f[R]).
Either a \f[CR]GLint\f[R], a \f[CR]GLenum\f[R], a
\f[CR]WebGLRenderbuffer\f[R], or a \f[CR]WebGLTexture\f[R].
pname parameter
Return value
gl.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE
A \f[CR]GLenum\f[R] indicating the type of the texture.
Either gl.RENDERBUFFER, gl.TEXTURE, or if no image is attached, gl.NONE.
gl.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME
The texture (\f[CR]WebGLTexture\f[R]) or renderbuffer
(\f[CR]WebGLRenderbuffer\f[R]) of the attached image.
gl.FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL
A \f[CR]GLint\f[R] indicating the mipmap level.
Default value: 0.
gl.FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE
A \f[CR]GLenum\f[R] indicating the name of cube\-map face of the
texture.
Possible values:
gl.TEXTURE_CUBE_MAP_POSITIVE_X: Image for the positive X face of the
cube.
gl.TEXTURE_CUBE_MAP_NEGATIVE_X: Image for the negative X face of the
cube.
gl.TEXTURE_CUBE_MAP_POSITIVE_Y: Image for the positive Y face of the
cube.
gl.TEXTURE_CUBE_MAP_NEGATIVE_Y: Image for the negative Y face of the
cube.
gl.TEXTURE_CUBE_MAP_POSITIVE_Z: Image for the positive Z face of the
cube.
gl.TEXTURE_CUBE_MAP_NEGATIVE_Z: Image for the negative Z face of the
cube.
gl.FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE
A \f[CR]GLint\f[R] indicating the number of bits in the alpha component
of the attachment.
gl.FRAMEBUFFER_ATTACHMENT_BLUE_SIZE
A \f[CR]GLint\f[R] indicating the number of bits in the blue component
of the attachment.
gl.FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING
A \f[CR]GLenum\f[R] indicating the encoding of components of the
specified attachment.
Either gl.LINEAR or gl.SRGB.
gl.FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE
A \f[CR]GLenum\f[R] indicating the format of the components of the
specified attachment.
Either gl.FLOAT, gl.INT, gl.UNSIGNED_INT, gl.SIGNED_NORMALIZED, or
gl.UNSIGNED_NORMALIZED.
gl.FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE
A \f[CR]GLint\f[R] indicating the number of bits in the depth component
of the attachment.
gl.FRAMEBUFFER_ATTACHMENT_GREEN_SIZE
A \f[CR]GLint\f[R] indicating the number of bits in the green component
of the attachment.
gl.FRAMEBUFFER_ATTACHMENT_RED_SIZE
A \f[CR]GLint\f[R] indicating the number of bits in the red component of
the attachment.
gl.FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE
A \f[CR]GLint\f[R] indicating the number of bits in the stencil
component of the attachment.
gl.FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER
A \f[CR]GLint\f[R] indicating the number of the texture layer which
contains the attached image.
ext.FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT
A \f[CR]GLenum\f[R] indicating the framebuffer color encoding.
Either gl.LINEAR or ext.SRGB_EXT.
ext.FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR
A \f[CR]GLsizei\f[R] indicating the number of views of the framebuffer
object attachment.
ext.FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR
A \f[CR]GLint\f[R] indicating the base view index of the framebuffer
object attachment.
.SS Exceptions
.IP \[bu] 2
A \f[CR]gl.INVALID_ENUM\f[R] error is thrown if \f[CR]target\f[R] is not
\f[CR]gl.FRAMEBUFFER\f[R], \f[CR]gl.DRAW_FRAMEBUFFER\f[R],
\f[CR]gl.READ_FRAMEBUFFER\f[R] or if \f[CR]attachment\f[R] is not one of
the accepted attachment points.
.SH EXAMPLES
.IP
.EX
gl.getFramebufferAttachmentParameter(
  gl.FRAMEBUFFER,
  gl.COLOR_ATTACHMENT0,
  gl.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE,
);
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]WebGLRenderingContext.createFramebuffer()\f[R]
.IP \[bu] 2
\f[CR]WebGLRenderingContext.deleteFramebuffer()\f[R]
.IP \[bu] 2
\f[CR]WebGLRenderingContext.isFramebuffer()\f[R]
.IP \[bu] 2
Other buffers: \f[CR]WebGLBuffer\f[R], \f[CR]WebGLRenderbuffer\f[R]
.IP \[bu] 2
\f[CR]EXT_sRGB\f[R]
.IP \[bu] 2
\f[CR]WEBGL_draw_buffers\f[R]
