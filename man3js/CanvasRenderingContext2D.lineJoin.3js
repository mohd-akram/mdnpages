.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "CanvasRenderingContext2D.lineJoin" "JS" "March 12, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
CanvasRenderingContext2D.lineJoin \- CanvasRenderingContext2D: lineJoin
property
.SH SYNOPSIS
The \f[B]\f[CB]CanvasRenderingContext2D.lineJoin\f[B]\f[R] property of
the Canvas 2D API determines the shape used to join two line segments
where they meet.
.PP
This property has no effect wherever two connected segments have the
same direction, because no joining area will be added in this case.
Degenerate segments with a length of zero (i.e., with all endpoints and
control points at the exact same position) are also ignored.
.RS
.PP
\f[B]Note:\f[R] Lines can be drawn with the \f[CR]stroke()\f[R],
\f[CR]strokeRect()\f[R], and \f[CR]strokeText()\f[R] methods.
.RE
.SH VALUE
There are three possible values for this property:
\f[CR]\[dq]round\[dq]\f[R], \f[CR]\[dq]bevel\[dq]\f[R], and
\f[CR]\[dq]miter\[dq]\f[R].
The default is \f[CR]\[dq]miter\[dq]\f[R].
[IMAGE: Three horizontal zigzag lines with round, bevel, and miter
values, shown from top to bottom respectively.]
Three horizontal zigzag lines with round, bevel, and miter values, shown
from top to bottom respectively.
.TP
\f[B]\[dq]round\[dq]\f[R]
Rounds off the corners of a shape by filling an additional sector of
disc centered at the common endpoint of connected segments.
The radius for these rounded corners is equal to the line width.
.TP
\f[B]\[dq]bevel\[dq]\f[R]
Fills an additional triangular area between the common endpoint of
connected segments, and the separate outside rectangular corners of each
segment.
.TP
\f[B]\[dq]miter\[dq]\f[R]
Connected segments are joined by extending their outside edges to
connect at a single point, with the effect of filling an additional
lozenge\-shaped area.
This setting is affected by the \f[CR]miterLimit\f[R] property.
Default value.
.SH EXAMPLES
.SS Changing the joins in a path
This example applies rounded line joins to a path.
.SS HTML
.IP
.EX
<\f[B]canvas\f[R] id=\[dq]canvas\[dq]></\f[B]canvas\f[R]>
.EE
.SS JavaScript
.IP
.EX
\f[B]const\f[R] canvas = document.getElementById(\[dq]canvas\[dq]);
\f[B]const\f[R] ctx = canvas.getContext(\[dq]2d\[dq]);

ctx.lineWidth = 20;
ctx.lineJoin = \[dq]round\[dq];
ctx.beginPath();
ctx.moveTo(20, 20);
ctx.lineTo(190, 100);
ctx.lineTo(280, 20);
ctx.lineTo(280, 150);
ctx.stroke();
.EE
.SS Result
.SS Comparison of line joins
The example below draws three different paths, demonstrating each of the
three \f[CR]lineJoin\f[R] options.
.IP
.EX
\f[B]const\f[R] ctx = document.getElementById(\[dq]canvas\[dq]).getContext(\[dq]2d\[dq]);
ctx.lineWidth = 10;

[\[dq]round\[dq], \[dq]bevel\[dq], \[dq]miter\[dq]].forEach((join, i) \f[B]=>\f[R] {
  ctx.lineJoin = join;
  ctx.beginPath();
  ctx.moveTo(\-5, 5 + i * 40);
  ctx.lineTo(35, 45 + i * 40);
  ctx.lineTo(75, 5 + i * 40);
  ctx.lineTo(115, 45 + i * 40);
  ctx.lineTo(155, 5 + i * 40);
  ctx.stroke();
});
.EE
.SS WebKit/Blink\-specific notes
.IP \[bu] 2
In WebKit\- and Blink\-based Browsers, a non\-standard and deprecated
method \f[CR]ctx.setLineJoin()\f[R] is implemented in addition to this
property.
.SH SEE ALSO
.IP \[bu] 2
The interface defining this property:
\f[CR]CanvasRenderingContext2D\f[R]
.IP \[bu] 2
\f[CR]CanvasRenderingContext2D.lineCap\f[R]
.IP \[bu] 2
\f[CR]CanvasRenderingContext2D.lineWidth\f[R]
.IP \[bu] 2
Applying styles and color
