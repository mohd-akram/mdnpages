.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "SVGGraphicsElement.paste_event" "JS" "November 26, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
SVGGraphicsElement.paste_event \- SVGGraphicsElement: paste event
.SH SYNOPSIS
The \f[B]\f[CB]paste\f[B]\f[R] event is fired on an
\f[CR]SVGGraphicsElement\f[R] when the user has initiated a
\[lq]paste\[rq] action through the browser\[cq]s user interface.
.PP
If the cursor is in an editable context (for example, in a
\f[CR]<textarea>\f[R] or an element with \f[CR]contenteditable\f[R]
attribute set to \f[CR]true\f[R]) then the default action is to insert
the contents of the clipboard into the document at the cursor position.
.PP
A handler for this event can access the clipboard contents by calling
\f[CR]getData()\f[R] on the event\[cq]s \f[CR]clipboardData\f[R]
property.
.PP
To override the default behavior (for example to insert some different
data or a transformation of the clipboard contents) an event handler
must cancel the default action using \f[CR]event.preventDefault()\f[R],
and then insert its desired data manually.
.PP
It\[cq]s possible to construct and dispatch a synthetic \f[CR]paste\f[R]
event, but this will not affect the document\[cq]s contents.
.SH SYNTAX
Use the event name in methods like \f[CR]addEventListener()\f[R], or set
an event handler property.
.IP
.EX
addEventListener(\[dq]paste\[dq], (event) \f[B]=>\f[R] {});

onpaste = (event) \f[B]=>\f[R] {};
.EE
.SH EVENT TYPE
A \f[CR]ClipboardEvent\f[R].
Inherits from \f[CR]Event\f[R].
.SH EXAMPLE
.SS HTML
.IP
.EX
\f[B]<?xml\f[R] version=\[dq]1.0\[dq] encoding=\[dq]UTF\-8\[dq]\f[B]?>\f[R]
<\f[B]svg\f[R]
  viewBox=\[dq]0 0 140 30\[dq]
  width=\[dq]600\[dq]
  height=\[dq]320\[dq]
  xmlns=\[dq]http://www.w3.org/2000/svg\[dq]>
  <\f[B]foreignObject\f[R] x=\[dq]5\[dq] y=\[dq]\-10\[dq] width=\[dq]90\[dq] height=\[dq]20\[dq]>
    <\f[B]input\f[R] xmlns=\[dq]http://www.w3.org/1999/xhtml\[dq] value=\[dq]Copy this text\[dq] />
  </\f[B]foreignObject\f[R]>
  <\f[B]text\f[R] x=\[dq]5\[dq] y=\[dq]30\[dq] id=\[dq]element\-to\-paste\-text\[dq] tabindex=\[dq]1\[dq]>
    Paste it here
  </\f[B]text\f[R]>
</\f[B]svg\f[R]>
.EE
.SS CSS
.IP
.EX
input {
  \f[B]font\-size\f[R]: 10px;
  \f[B]width\f[R]: 100%;
  \f[B]height\f[R]: 90%;
  \f[B]box\-sizing\f[R]: border\-box;
  \f[B]border\f[R]: 1px solid black;
}
.EE
.SS JavaScript
.IP
.EX
document
  .getElementById(\[dq]element\-to\-paste\-text\[dq])
  .addEventListener(\[dq]paste\[dq], (evt) \f[B]=>\f[R] {
    evt.target.textContent = evt.clipboardData
      .getData(\[dq]text/plain\[dq])
      .toUpperCase();
    evt.preventDefault();
  });
.EE
.SS Result
.SH SEE ALSO
.IP \[bu] 2
Related events: \f[CR]cut\f[R], \f[CR]copy\f[R]
.IP \[bu] 2
This event on HTML \f[CR]Element\f[R] targets: \f[CR]paste\f[R]
.IP \[bu] 2
This event on \f[CR]Document\f[R] targets: \f[CR]paste\f[R]
.IP \[bu] 2
This event on \f[CR]Window\f[R] targets: \f[CR]paste\f[R]
