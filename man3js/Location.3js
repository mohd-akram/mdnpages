.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "Location" "JS" "October 16, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Location \- Location
.SH SYNOPSIS
The \f[B]\f[CB]Location\f[B]\f[R] interface represents the location
(URL) of the object it is linked to.
Changes done on it are reflected on the object it relates to.
Both the \f[CR]Document\f[R] and \f[CR]Window\f[R] interface have such a
linked \f[CR]Location\f[R], accessible via \f[CR]Document.location\f[R]
and \f[CR]Window.location\f[R] respectively.
.SH LOCATION ANATOMY
Hover over the URL segments below to highlight their meaning:
.SH INSTANCE PROPERTIES
.TP
\f[B]Location.ancestorOrigins\f[R] \f[I](read\-only)\f[R]
A static \f[CR]DOMStringList\f[R] containing, in reverse order, the
origins of all ancestor browsing contexts of the document associated
with the given \f[CR]Location\f[R] object.
.TP
\f[B]Location.href\f[R]
A stringifier that returns a string containing the entire URL.
If changed, the associated document navigates to the new page.
It can be set from a different origin than the associated document.
.TP
\f[B]Location.protocol\f[R]
A string containing the protocol scheme of the URL, including the final
\f[CR]\[aq]:\[aq]\f[R].
.TP
\f[B]Location.host\f[R]
A string containing the host, that is the \f[I]hostname\f[R], a
\f[CR]\[aq]:\[aq]\f[R], and the \f[I]port\f[R] of the URL.
.TP
\f[B]Location.hostname\f[R]
A string containing the domain of the URL.
.TP
\f[B]Location.port\f[R]
A string containing the port number of the URL.
.TP
\f[B]Location.pathname\f[R]
A string containing an initial \f[CR]\[aq]/\[aq]\f[R] followed by the
path of the URL, not including the query string or fragment.
.TP
\f[B]Location.search\f[R]
A string containing a \f[CR]\[aq]?\[aq]\f[R] followed by the parameters
or \[lq]query string\[rq] of the URL.
Modern browsers provide \f[CR]URLSearchParams\f[R] and
\f[CR]URL.searchParams\f[R] to make it easy to parse out the parameters
from the query string.
.TP
\f[B]Location.hash\f[R]
A string containing a \f[CR]\[aq]#\[aq]\f[R] followed by the fragment
identifier of the URL.
.TP
\f[B]Location.origin\f[R] \f[I](read\-only)\f[R]
Returns a string containing the canonical form of the origin of the
specific location.
.SH INSTANCE METHODS
.TP
\f[B]Location.assign()\f[R]
Loads the resource at the URL provided in parameter.
.TP
\f[B]Location.reload()\f[R]
Reloads the current URL, like the Refresh button.
.TP
\f[B]Location.replace()\f[R]
Replaces the current resource with the one at the provided URL
(redirects to the provided URL).
The difference from the \f[CR]assign()\f[R] method and setting the
\f[CR]href\f[R] property is that after using \f[CR]replace()\f[R] the
current page will not be saved in session \f[CR]History\f[R], meaning
the user won\[cq]t be able to use the \f[I]back\f[R] button to navigate
to it.
.TP
\f[B]Location.toString()\f[R]
Returns a string containing the whole URL.
It is a synonym for \f[CR]Location.href\f[R], though it can\[cq]t be
used to modify the value.
.SH EXAMPLES
.IP
.EX
\f[I]// location: https://developer.mozilla.org:8080/en\-US/search?q=URL#search\-results\-close\-container\f[R]
\f[B]const\f[R] loc = document.location;
console.log(loc.href); \f[I]// https://developer.mozilla.org:8080/en\-US/search?q=URL#search\-results\-close\-container\f[R]
console.log(loc.protocol); \f[I]// https:\f[R]
console.log(loc.host); \f[I]// developer.mozilla.org:8080\f[R]
console.log(loc.hostname); \f[I]// developer.mozilla.org\f[R]
console.log(loc.port); \f[I]// 8080\f[R]
console.log(loc.pathname); \f[I]// /en\-US/search\f[R]
console.log(loc.search); \f[I]// ?q=URL\f[R]
console.log(loc.hash); \f[I]// #search\-results\-close\-container\f[R]
console.log(loc.origin); \f[I]// https://developer.mozilla.org:8080\f[R]

location.assign(\[dq]http://another.site\[dq]); \f[I]// load another page\f[R]
.EE
.SH SEE ALSO
.IP \[bu] 2
Two \f[CR]Location\f[R] properties: \f[CR]Window.location\f[R] and
\f[CR]Document.location\f[R].
.IP \[bu] 2
URL manipulation interfaces: \f[CR]URL\f[R] and
\f[CR]URLSearchParams\f[R].
