.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "RTCIceCandidate.type" "JS" "July 25, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
RTCIceCandidate.type \- RTCIceCandidate: type property
.SH SYNOPSIS
The \f[B]\f[CB]RTCIceCandidate\f[B]\f[R] interface\[cq]s read\-only
\f[B]\f[CB]type\f[B]\f[R] specifies the type of candidate the object
represents.
.PP
The \f[CR]type\f[R] field\[cq]s value is set from the
\f[CR]candidateInfo\f[R] options object passed to the
\f[CR]RTCIceCandidate()\f[R] constructor.
You can\[cq]t specify the value of \f[CR]type\f[R] directly in the
options object, but its value is automatically extracted from the
object\[cq]s \f[CR]candidate\f[R] a\-line (the \f[CR]cand\-type\f[R]
field), if it\[cq]s formatted properly.
.SH VALUE
A string whose value is one of those defined below.
These candidate types are listed in order of priority; the higher in the
list they are, the more efficient they are.
.TP
\f[B]host\f[R]
The candidate is a host candidate, whose IP address as specified in the
\f[CR]RTCIceCandidate.address\f[R] property is in fact the true address
of the remote peer.
.TP
\f[B]srflx\f[R]
The candidate is a server reflexive candidate; the \f[CR]ip\f[R] and
port are a binding allocated by a NAT for an agent when it sent a packet
through the NAT to a server.
They can be learned by the STUN server and TURN server to represent the
candidate\[cq]s peer anonymously.
.TP
\f[B]prflx\f[R]
The candidate is a peer reflexive candidate; the \f[CR]ip\f[R] and port
are a binding allocated by a NAT when it sent a STUN request to
represent the candidate\[cq]s peer anonymously.
.TP
\f[B]relay\f[R]
The candidate is a relay candidate, obtained from a TURN server.
The relay candidate\[cq]s IP address is an address the TURN server uses
to forward the media between the two peers.
.PP
If \f[CR]type\f[R] is \f[CR]null\f[R], that information was missing from
the \f[CR]candidate\f[R]\[cq]s a\-line, which will cause
\f[CR]RTCPeerConnection.addIceCandidate()\f[R] to throw an
\f[CR]OperationError\f[R] exception.
.SH EXAMPLES
In this example, the candidate\[cq]s \f[CR]type\f[R] is used to present
a modified user interface for host candidates (those where the
\f[CR]ip\f[R] refers directly to the remote peer, rather than an
intermediary).
.IP
.EX
\f[B]if\f[R] (candidate.type === \[dq]host\[dq]) {
  showHostControls();
} \f[B]else\f[R] {
  hideHostControls();
}
.EE
.SH SEE ALSO
.IP \[bu] 2
WebRTC API
.IP \[bu] 2
Introduction to WebRTC protocols
.IP \[bu] 2
WebRTC connectivity
.IP \[bu] 2
\f[CR]RTCIceCandidate.tcpType\f[R]
