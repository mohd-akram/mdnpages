.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "Intl.Locale.numeric" "JS" "April 12, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Intl.Locale.numeric \- Intl.Locale.prototype.numeric
.SH SYNOPSIS
The \f[B]\f[CB]numeric\f[B]\f[R] accessor property of
\f[CR]Intl.Locale\f[R] instances returns whether this locale has special
collation handling for numeric characters.
.SH DESCRIPTION
Like \f[CR]caseFirst\f[R], \f[CR]numeric\f[R] represents a modification
to the collation rules utilized by the locale.
\f[CR]numeric\f[R] is a boolean value, which means that it can be either
\f[CR]true\f[R] or \f[CR]false\f[R].
If \f[CR]numeric\f[R] is set to \f[CR]false\f[R], there will be no
special handling of numeric values in strings.
If \f[CR]numeric\f[R] is set to \f[CR]true\f[R], then the locale will
take numeric characters into account when collating strings.
This special numeric handling means that sequences of decimal digits
will be compared as numbers.
For example, the string \[lq]A\-21\[rq] will be considered less than
\[lq]A\-123\[rq].
.SH EXAMPLES
.SS Setting the numeric value via the locale string
In the \c
.UR https://www.unicode.org/reports/tr35/
Unicode locale string spec
.UE \c
, the values that \f[CR]numeric\f[R] represents correspond to the key
\f[CR]kn\f[R].
\f[CR]kn\f[R] is considered a locale string \[lq]extension subtag\[rq].
These subtags add additional data about the locale, and are added to
locale identifiers by using the \f[CR]\-u\f[R] extension key.
Thus, the \f[CR]numeric\f[R] value can be added to the initial locale
identifier string that is passed into the \f[CR]Intl.Locale()\f[R]
constructor.
To set the \f[CR]numeric\f[R] value, first add the \f[CR]\-u\f[R]
extension key to the string.
Next, add the \f[CR]\-kn\f[R] extension key to indicate that you are
adding a value for \f[CR]numeric\f[R].
Finally, add the \f[CR]numeric\f[R] value to the string.
If you want to set \f[CR]numeric\f[R] to \f[CR]true\f[R], adding the
\f[CR]kn\f[R] key will suffice.
To set the value to \f[CR]false\f[R], you must specify in by adding
\f[CR]\[dq]false\[dq]\f[R] after the \f[CR]kn\f[R] key.
.IP
.EX
\f[B]const\f[R] locale = \f[B]new\f[R] Intl.Locale(\[dq]fr\-Latn\-FR\-u\-kn\-false\[dq]);
console.log(locale.numeric); \f[I]// Prints \[dq]false\[dq]\f[R]
.EE
.SS Setting the numeric value via the configuration object argument
The \f[CR]Intl.Locale()\f[R] constructor has an optional configuration
object argument, which can be used to pass extension types.
Set the \f[CR]numeric\f[R] property of the configuration object to your
desired \f[CR]numeric\f[R] value and pass it into the constructor.
.IP
.EX
\f[B]const\f[R] locale = \f[B]new\f[R] Intl.Locale(\[dq]en\-Latn\-US\[dq], { numeric: \f[B]true\f[R] });
console.log(locale.numeric); \f[I]// Prints \[dq]true\[dq]\f[R]
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]Intl.Locale\f[R]
