.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "WebGLRenderingContext.bindFramebuffer" "JS" "April 8, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
WebGLRenderingContext.bindFramebuffer \- WebGLRenderingContext:
bindFramebuffer() method
.SH SYNOPSIS
The \f[B]\f[CB]WebGLRenderingContext.bindFramebuffer()\f[B]\f[R] method
of the WebGL API binds to the specified target the provided
\f[CR]WebGLFramebuffer\f[R], or, if the \f[CR]framebuffer\f[R] argument
is null, the default \f[CR]WebGLFramebuffer\f[R], which is associated
with the canvas rendering context.
.SH SYNTAX
.IP
.EX
bindFramebuffer(target, framebuffer)
.EE
.SS Parameters
.TP
\f[B]target\f[R]
A \f[CR]GLenum\f[R] specifying the binding point (target).
Possible values:
.RS
.TP
\f[B]gl.FRAMEBUFFER\f[R]
Collection buffer data storage of color, alpha, depth and stencil
buffers used as both a destination for drawing and as a source for
reading (see below).
.PP
When using a WebGL 2 context, the following values are available
additionally:
.TP
\f[B]gl.DRAW_FRAMEBUFFER\f[R]
Used as a destination for drawing operations such as
\f[CR]gl.draw*\f[R], \f[CR]gl.clear*\f[R] and
\f[CR]gl.blitFramebuffer\f[R].
.TP
\f[B]gl.READ_FRAMEBUFFER\f[R]
Used as a source for reading operations such as \f[CR]gl.readPixels\f[R]
and \f[CR]gl.blitFramebuffer\f[R].
.RE
.TP
\f[B]framebuffer\f[R]
A \f[CR]WebGLFramebuffer\f[R] object to bind, or \f[CR]null\f[R] for
binding the \f[CR]HTMLCanvasElement\f[R] or \f[CR]OffscreenCanvas\f[R]
object associated with the rendering context.
.SS Return value
None (\f[CR]undefined\f[R]).
.SS Exceptions
A \f[CR]gl.INVALID_ENUM\f[R] error is thrown if \f[CR]target\f[R] is not
\f[CR]gl.FRAMEBUFFER\f[R], \f[CR]gl.DRAW_FRAMEBUFFER\f[R], or
\f[CR]gl.READ_FRAMEBUFFER\f[R].
.SH EXAMPLES
.SS Binding a frame buffer
.IP
.EX
\f[B]const\f[R] canvas = document.getElementById(\[dq]canvas\[dq]);
\f[B]const\f[R] gl = canvas.getContext(\[dq]webgl\[dq]);
\f[B]const\f[R] framebuffer = gl.createFramebuffer();

gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);
.EE
.SS Getting current bindings
To check the current frame buffer binding, query the
\f[CR]FRAMEBUFFER_BINDING\f[R] constant.
.IP
.EX
gl.getParameter(gl.FRAMEBUFFER_BINDING);
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]WebGLRenderingContext.createFramebuffer()\f[R]
.IP \[bu] 2
\f[CR]WebGLRenderingContext.deleteFramebuffer()\f[R]
.IP \[bu] 2
\f[CR]WebGLRenderingContext.isFramebuffer()\f[R]
.IP \[bu] 2
Other buffers: \f[CR]WebGLBuffer\f[R], \f[CR]WebGLRenderbuffer\f[R]
