.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "ReadableByteStreamController" "JS" "April 22, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
ReadableByteStreamController \- ReadableByteStreamController
.SH SYNOPSIS
This feature is available in Web Workers.
.PP
The \f[B]\f[CB]ReadableByteStreamController\f[B]\f[R] interface of the
Streams API represents a controller for a readable byte stream.
It allows control of the state and internal queue of a
\f[CR]ReadableStream\f[R] with an underlying byte source, and enables
efficient zero\-copy transfer of data from the underlying source to a
consumer when the stream\[cq]s internal queue is empty.
.PP
An instance of this controller type is created if an
\f[CR]underlyingSource\f[R] object with the property
\f[CR]type=\[dq]bytes\[dq]\f[R] is passed as an argument to the
\f[CR]ReadableStream()\f[R] constructor.
The \f[CR]underlyingSource\f[R] object may also define
\f[CR]start()\f[R] and \f[CR]pull()\f[R] callback functions.
These are called with the controller as a parameter, in order to set up
the underlying source, and request data when needed.
.PP
The underlying source uses the controller to supply data to the stream
via its \f[CR]byobRequest\f[R] property or \f[CR]enqueue()\f[R] method.
\f[CR]byobRequest\f[R] is a \f[CR]ReadableStreamBYOBRequest\f[R] object
that represents a pending request from a consumer to make a zero\-copy
transfer of data direct to a consumer.
\f[CR]byobRequest\f[R] must be used to copy data if it exists (do not
use \f[CR]enqueue()\f[R] in this case)!
If the underlying source needs to pass data to the stream and
\f[CR]byobRequest\f[R] is \f[CR]null\f[R] then the source can call
\f[CR]enqueue()\f[R] to add the data to the stream\[cq]s internal
queues.
.PP
Note that the \f[CR]byobRequest\f[R] is only created in \[lq]BYOB
mode\[rq] when there is a request from a reader and the stream\[cq]s
internal queue is empty.
\[lq]BYOB mode\[rq] is enabled when using a
\f[CR]ReadableStreamBYOBReader\f[R] (typically constructed by calling
\f[CR]ReadableStream.getReader()\f[R] with the argument
\f[CR]{ mode: \[aq]byob\[aq] }\f[R]).
It is also enabled when using a default reader and
\f[CR]autoAllocateChunkSize\f[R] is specified in the
\f[CR]ReadableController()\f[R] constructor.
.PP
An underlying byte source can also use the controller to
\f[CR]close()\f[R] the stream when all the data has been sent and report
errors from the underlying source using \f[CR]error()\f[R].
The controller\[cq]s \f[CR]desiredSize\f[R] property is used to apply
\[lq]backpressure\[rq], informing the underlying source of the size of
the internal queue (small values indicate that the queue is filling up,
hinting to the underlying source that it is be desirable to pause or
throttle the inflow).
.PP
Note that even though the controller is primarily used by the underlying
byte source, there is no reason it cannot be stored used by other parts
of the system to signal the stream.
.SH CONSTRUCTOR
None.
\f[CR]ReadableByteStreamController\f[R] instances are automatically
created if an \f[CR]underlyingSource\f[R] with the property
\f[CR]type=\[dq]bytes\[dq]\f[R] is passed to the
\f[CR]ReadableStream()\f[R] constructor.
.SH INSTANCE PROPERTIES
.TP
\f[B]ReadableByteStreamController.byobRequest\f[R] \f[I](read\-only)\f[R]
Returns the current BYOB pull request, or \f[CR]null\f[R] if there no
outstanding request.
.TP
\f[B]ReadableByteStreamController.desiredSize\f[R] \f[I](read\-only)\f[R]
Returns the desired size required to fill the stream\[cq]s internal
queue.
.SH INSTANCE METHODS
.TP
\f[B]ReadableByteStreamController.close()\f[R]
Closes the associated stream.
.TP
\f[B]ReadableByteStreamController.enqueue()\f[R]
Enqueues a given chunk in the associated stream.
.TP
\f[B]ReadableByteStreamController.error()\f[R]
Causes any future interactions with the associated stream to error.
.SH EXAMPLES
The controller is used by an underlying source to transfer or enqueue
data, to signal that the stream has no more data (has closed) or has
errored.
It is also used to signal the underlying source from \[lq]upstream\[rq]
of the desired data rate, using \f[CR]desiredSize\f[R].
.PP
The example in Using readable byte streams, in particular Creating a
readable socket push byte stream, show most of these cases.
.SH SEE ALSO
.IP \[bu] 2
Streams API concepts
.IP \[bu] 2
Using readable byte streams
.IP \[bu] 2
\f[CR]ReadableStream\f[R]
.IP \[bu] 2
\c
.UR https://whatwg-stream-visualizer.glitch.me/
WHATWG Stream Visualizer
.UE \c
, for a basic visualization of readable, writable, and transform
streams.
.IP \[bu] 2
\c
.UR https://github.com/MattiasBuelens/web-streams-polyfill
Web\-streams\-polyfill
.UE \c
\ or \c
.UR https://github.com/stardazed/sd-streams
sd\-streams
.UE \c
\ \- polyfills
