.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "AudioWorkletNode.processorerror_event" "JS" "February 5, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
AudioWorkletNode.processorerror_event \- AudioWorkletNode:
processorerror event
.SH SYNOPSIS
\f[B]Secure context\f[R]: This feature is available only in secure
contexts (HTTPS).
.PP
The \f[CR]processorerror\f[R] event fires when the underlying
\f[CR]AudioWorkletProcessor\f[R] behind the node throws an exception in
its constructor, the \f[CR]process\f[R] method, or any user\-defined
class method.
.PP
Once an exception is thrown, the processor (and thus the node) will
output silence throughout its lifetime.
.SH SYNTAX
Use the event name in methods like \f[CR]addEventListener()\f[R], or set
an event handler property.
.IP
.EX
addEventListener(\[dq]processorerror\[dq], (event) => { })

onprocessorerror = (event) => { }
.EE
.SH EVENT TYPE
A generic \f[CR]Event\f[R].
.SH EXAMPLES
To be informed when the processor throws an exception, you can add a
handler to your \f[CR]AudioWorkletNode\f[R] instance using
\f[CR]addEventListener()\f[R], like this:
.IP
.EX
whiteNoiseNode.addEventListener(\[dq]processorerror\[dq], (event) \f[B]=>\f[R] {
  console.error(\[dq]There was an error!\[dq]);
});
.EE
.PP
Alternatively, you can use the \f[CR]onprocessorerror\f[R] event handler
property to establish a handler for the \f[CR]processorerror\f[R] event:
.IP
.EX
whiteNoiseNode.onprocessorerror = (event) \f[B]=>\f[R] {
  console.error(\[dq]There was an error!\[dq]);
};
.EE
.SH SEE ALSO
.IP \[bu] 2
Using the Web Audio API
