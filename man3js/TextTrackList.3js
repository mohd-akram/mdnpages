.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "TextTrackList" "JS" "August 19, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
TextTrackList \- TextTrackList
.SH SYNOPSIS
The \f[B]\f[CB]TextTrackList\f[B]\f[R] interface is used to represent a
list of the text tracks defined for the associated video or audio
element, with each track represented by a separate \f[CR]textTrack\f[R]
object in the list.
.PP
Text tracks can be added to a media element declaratively using the
\f[CR]<track>\f[R] element or programmatically using the
\f[CR]HTMLMediaElement.addTextTrack()\f[R] method.
.PP
An instance of this object can be retrieved using the
\f[CR]textTracks\f[R] property of an \f[CR]HTMLMediaElement\f[R] object.
.PP
For a given \f[CR]HTMLMediaElement\f[R] object \f[I]media\f[R], the
individual tracks can be accessed using:
.IP \[bu] 2
\f[CR]media.TextTracks[n]\f[R], to get the n\-th text track from the
object\[cq]s list of text tracks
.IP \[bu] 2
the \f[CR]media.textTracks.getTrackById()\f[R] method
.SH INSTANCE PROPERTIES
\f[I]This interface also inherits properties from its parent interface,
\f[CI]EventTarget\f[I].\f[R]
.TP
\f[B]length\f[R] \f[I](read\-only)\f[R]
The number of tracks in the list.
.SH INSTANCE METHODS
\f[I]This interface also inherits methods from its parent interface,
\f[CI]EventTarget\f[I].\f[R]
.TP
\f[B]getTrackById()\f[R]
Returns the \f[CR]TextTrack\f[R] found within the
\f[CR]TextTrackList\f[R] whose \f[CR]id\f[R] matches the specified
string.
If no match is found, \f[CR]null\f[R] is returned.
.SH EVENTS
.TP
\f[B]addtrack\f[R]
Fired when a new text track has been added to the media element.
Also available via the \f[CR]onaddtrack\f[R] property.
.TP
\f[B]change\f[R]
Fired when a text track has been made active or inactive.
Also available via the \f[CR]onchange\f[R] property.
.TP
\f[B]removetrack\f[R]
Fired when a new text track has been removed from the media element.
Also available via the \f[CR]onremovetrack\f[R] property.
.SH USAGE NOTES
In addition to being able to obtain direct access to the text tracks
present on a media element, \f[CR]TextTrackList\f[R] lets you set event
handlers on the \f[CR]addtrack\f[R] and \f[CR]removetrack\f[R] events,
so that you can detect when tracks are added to or removed from the
media element\[cq]s stream.
.SH EXAMPLES
.SS Getting a video element\[cq]s text track list
To get a media element\[cq]s \f[CR]TextTrackList\f[R], use its
\f[CR]textTracks\f[R] property.
.IP
.EX
\f[B]const\f[R] textTracks = document.querySelector(\[dq]video\[dq]).textTracks;
.EE
.SS Monitoring track count changes
In this example, we have an app that displays information about the
number of channels available.
To keep it up to date, handlers for the \f[CR]addtrack\f[R] and
\f[CR]removetrack\f[R] events are set up.
.IP
.EX
textTracks.onaddtrack = updateTrackCount;
textTracks.onremovetrack = updateTrackCount;

\f[B]function\f[R] updateTrackCount(event) {
  trackCount = textTracks.length;
  drawTrackCountIndicator(trackCount);
}
.EE
