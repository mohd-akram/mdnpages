.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "IDBCursor" "JS" "July 26, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
IDBCursor \- IDBCursor
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers.
.RS
.PP
\f[B]Note:\f[R] Not to be confused with \f[CR]IDBCursorWithValue\f[R]
which is just an \f[B]\f[CB]IDBCursor\f[B]\f[R] interface with an
additional \f[B]\f[CB]value\f[B]\f[R] property.
.RE
.PP
The \f[B]\f[CB]IDBCursor\f[B]\f[R] interface of the IndexedDB API
represents a cursor for traversing or iterating over multiple records in
a database.
.PP
The cursor has a source that indicates which index or object store it is
iterating over.
It has a position within the range, and moves in a direction that is
increasing or decreasing in the order of record keys.
The cursor enables an application to asynchronously process all the
records in the cursor\[cq]s range.
.PP
You can have an unlimited number of cursors at the same time.
You always get the same \f[CR]IDBCursor\f[R] object representing a given
cursor.
Operations are performed on the underlying index or object store.
.SH INSTANCE PROPERTIES
.RS
.PP
\f[B]Note:\f[R] \f[CR]IDBCursorWithValue\f[R] is an
\f[B]\f[CB]IDBCursor\f[B]\f[R] interface with an additional
\f[B]\f[CB]value\f[B]\f[R] property.
.RE
.TP
\f[B]IDBCursor.source\f[R] \f[I](read\-only)\f[R]
Returns the \f[CR]IDBObjectStore\f[R] or \f[CR]IDBIndex\f[R] that the
cursor is iterating.
This function never returns null or throws an exception, even if the
cursor is currently being iterated, has iterated past its end, or its
transaction is not active.
.TP
\f[B]IDBCursor.direction\f[R] \f[I](read\-only)\f[R]
Returns the direction of traversal of the cursor.
.TP
\f[B]IDBCursor.key\f[R] \f[I](read\-only)\f[R]
Returns the key for the record at the cursor\[cq]s position.
If the cursor is outside its range, this is set to \f[CR]undefined\f[R].
The cursor\[cq]s key can be any data type.
.TP
\f[B]IDBCursor.primaryKey\f[R] \f[I](read\-only)\f[R]
Returns the cursor\[cq]s current effective primary key.
If the cursor is currently being iterated or has iterated outside its
range, this is set to \f[CR]undefined\f[R].
The cursor\[cq]s primary key can be any data type.
.TP
\f[B]IDBCursor.request\f[R] \f[I](read\-only)\f[R]
Returns the \f[CR]IDBRequest\f[R] that was used to obtain the cursor.
.SH INSTANCE METHODS
.TP
\f[B]IDBCursor.advance()\f[R]
Sets the number of times a cursor should move its position forward.
.TP
\f[B]IDBCursor.continue()\f[R]
Advances the cursor to the next position along its direction, to the
item whose key matches the optional \f[CR]key\f[R] parameter.
.TP
\f[B]IDBCursor.continuePrimaryKey()\f[R]
Sets the cursor to the given index key and primary key given as
arguments.
.TP
\f[B]IDBCursor.delete()\f[R]
Returns an \f[CR]IDBRequest\f[R] object, and, in a separate thread,
deletes the record at the cursor\[cq]s position, without changing the
cursor\[cq]s position.
This can be used to delete specific records.
.TP
\f[B]IDBCursor.update()\f[R]
Returns an \f[CR]IDBRequest\f[R] object, and, in a separate thread,
updates the value at the current position of the cursor in the object
store.
This can be used to update specific records.
.SH CONSTANTS
\f[B]Deprecated:\f[R] This feature is no longer recommended.
.RS
.PP
\f[B]Warning:\f[R] These constants are no longer available \[em] they
were removed in Gecko 25.
You should use the string constants directly instead.
(\c
.UR https://bugzil.la/891944
Firefox bug 891944
.UE \c
)
.RE
.IP \[bu] 2
\f[CR]NEXT\f[R]: \f[CR]\[dq]next\[dq]\f[R] : The cursor shows all
records, including duplicates.
It starts at the lower bound of the key range and moves upwards
(monotonically increasing in the order of keys).
.IP \[bu] 2
\f[CR]NEXTUNIQUE\f[R] : \f[CR]\[dq]nextunique\[dq]\f[R] : The cursor
shows all records, excluding duplicates.
If multiple records exist with the same key, only the first one iterated
is retrieved.
It starts at the lower bound of the key range and moves upwards.
.IP \[bu] 2
\f[CR]PREV\f[R]: \f[CR]\[dq]prev\[dq]\f[R] : The cursor shows all
records, including duplicates.
It starts at the upper bound of the key range and moves downwards
(monotonically decreasing in the order of keys).
.IP \[bu] 2
\f[CR]PREVUNIQUE\f[R]: \f[CR]\[dq]prevunique\[dq]\f[R] : The cursor
shows all records, excluding duplicates.
If multiple records exist with the same key, only the first one iterated
is retrieved.
It starts at the upper bound of the key range and moves downwards.
.SH EXAMPLES
In this simple fragment we create a transaction, retrieve an object
store, then use a cursor to iterate through all the records in the
object store.
The cursor does not require us to select the data based on a key; we can
just grab all of it.
Also note that in each iteration of the loop, you can grab data from the
current record under the cursor object using
\f[CR]cursor.value.foo\f[R].
For a complete working example, see our \c
.UR https://github.com/mdn/dom-examples/tree/main/indexeddb-examples/idbcursor
IDBCursor example
.UE \c
\ (\c
.UR https://mdn.github.io/dom-examples/indexeddb-examples/idbcursor/
view example live
.UE \c
\&.)
.IP
.EX
\f[B]function\f[R] displayData() {
  \f[B]const\f[R] transaction = db.transaction([\[dq]rushAlbumList\[dq]], \[dq]readonly\[dq]);
  \f[B]const\f[R] objectStore = transaction.objectStore(\[dq]rushAlbumList\[dq]);

  objectStore.openCursor().onsuccess = (event) \f[B]=>\f[R] {
    \f[B]const\f[R] cursor = event.target.result;
    \f[B]if\f[R] (cursor) {
      \f[B]const\f[R] listItem = document.createElement(\[dq]li\[dq]);
      listItem.textContent = \[ga]${cursor.value.albumTitle}, ${cursor.value.year}\[ga];
      list.appendChild(listItem);

      cursor.continue();
    } \f[B]else\f[R] {
      console.log(\[dq]Entries all displayed.\[dq]);
    }
  };
}
.EE
.SH SEE ALSO
.IP \[bu] 2
Using IndexedDB
.IP \[bu] 2
Starting transactions: \f[CR]IDBDatabase\f[R]
.IP \[bu] 2
Using transactions: \f[CR]IDBTransaction\f[R]
.IP \[bu] 2
Setting a range of keys: \f[CR]IDBKeyRange\f[R]
.IP \[bu] 2
Retrieving and making changes to your data: \f[CR]IDBObjectStore\f[R]
.IP \[bu] 2
Reference example: \c
.UR https://github.com/mdn/dom-examples/tree/main/to-do-notifications
To\-do Notifications
.UE \c
\ (\c
.UR https://mdn.github.io/dom-examples/to-do-notifications/
view example live
.UE \c
).
