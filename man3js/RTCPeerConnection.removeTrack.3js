.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "RTCPeerConnection.removeTrack" "JS" "March 25, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
RTCPeerConnection.removeTrack \- RTCPeerConnection: removeTrack() method
.SH SYNOPSIS
The \f[B]\f[CB]removeTrack()\f[B]\f[R] method of the
\f[CR]RTCPeerConnection\f[R] interface tells the local end of the
connection to stop sending media from the specified track, without
actually removing the corresponding \f[CR]RTCRtpSender\f[R] from the
list of senders as reported by
\f[CR]RTCPeerConnection.getSenders()\f[R].
If the track is already stopped, or is not in the connection\[cq]s
senders list, this method has no effect.
.PP
If the connection has already been negotiated (\f[CR]signalingState\f[R]
is set to \f[CR]\[dq]stable\[dq]\f[R]), it is marked as needing to be
negotiated again; the remote peer won\[cq]t experience the change until
this negotiation occurs.
A \f[CR]negotiationneeded\f[R] event is sent to the
\f[CR]RTCPeerConnection\f[R] to let the local end know this negotiation
must occur.
.SH SYNTAX
.IP
.EX
removeTrack(sender)
.EE
.SS Parameters
.TP
\f[B]sender\f[R]
A \f[CR]RTCRtpSender\f[R] specifying the sender to remove from the
connection.
.SS Return value
\f[CR]undefined\f[R].
.SS Exceptions
.TP
\f[B]InvalidStateError\f[R] \f[B]DOMException\f[R]
Thrown if the connection is not open.
.SH EXAMPLE
This example adds a video track to a connection and sets up a listener
on a close button which removes the track when the user clicks the
button.
.IP
.EX
\f[B]let\f[R] pc;
\f[B]let\f[R] sender;
navigator.getUserMedia({ video: \f[B]true\f[R] }, (stream) \f[B]=>\f[R] {
  pc = \f[B]new\f[R] RTCPeerConnection();
  \f[B]const\f[R] [track] = stream.getVideoTracks();
  sender = pc.addTrack(track, stream);
});

document.getElementById(\[dq]closeButton\[dq]).addEventListener(
  \[dq]click\[dq],
  (event) \f[B]=>\f[R] {
    pc.removeTrack(sender);
    pc.close();
  },
  \f[B]false\f[R],
);
.EE
.SH SEE ALSO
.IP \[bu] 2
WebRTC API
