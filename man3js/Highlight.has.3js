.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "Highlight.has" "JS" "December 2, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Highlight.has \- Highlight: has() method
.SH SYNOPSIS
The \f[B]\f[CB]has()\f[B]\f[R] method of the \f[CR]Highlight\f[R]
interface returns a boolean indicating whether a \f[CR]Range\f[R] object
exists in a \f[CR]Highlight\f[R] object or not.
.PP
\f[CR]Highlight\f[R] is a \f[CR]Set\f[R]\-like object, so this is
similar to using \f[CR]Set.has()\f[R].
.SH SYNTAX
.IP
.EX
has(range)
.EE
.SS Parameters
.TP
\f[B]range\f[R]
The \f[CR]Range\f[R] object to test for presence in the
\f[CR]Highlight\f[R] object.
.SS Return value
Returns \f[CR]true\f[R] if the specified range exists in the
\f[CR]Highlight\f[R] object; otherwise \f[CR]false\f[R].
.SH EXAMPLES
The code snippet below creates two ranges, and a highlight object that
contains one of them.
The code then uses the \f[CR]has()\f[R] method to check whether each
range exists in the highlight:
.IP
.EX
\f[B]const\f[R] range1 = \f[B]new\f[R] Range();
\f[B]const\f[R] range2 = \f[B]new\f[R] Range();
\f[B]const\f[R] myHighlight = \f[B]new\f[R] Highlight(range1);

myHighlight.has(range1); \f[I]// true\f[R]
myHighlight.has(range2); \f[I]// false\f[R]
.EE
.SH SEE ALSO
.IP \[bu] 2
The CSS Custom Highlight API
.IP \[bu] 2
\c
.UR https://css-tricks.com/css-custom-highlight-api-early-look/
CSS Custom Highlight API: The Future of Highlighting Text Ranges on the
Web
.UE \c
