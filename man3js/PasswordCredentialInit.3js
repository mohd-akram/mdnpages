'\" t
.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "PASSWORDCREDENTIALINIT" "3JS" "April 10, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
PasswordCredentialInit \- PasswordCredentialInit
.SH SYNOPSIS
The \f[B]\f[CB]PasswordCredentialInit\f[B]\f[R] dictionary represents
the object passed to \f[CR]CredentialsContainer.create()\f[R] as the
value of the \f[CR]password\f[R] option, when creating a password
credential.
.SH INITIALIZATION FROM A FORM
Instead of passing this dictionary directly, a website can pass an
\f[CR]HTMLFormElement\f[R], and the implementation of
\f[CR]create()\f[R] will populate the credential\(cqs data from the
values of the form\(cqs submittable elements, based on the value of the
element\(cqs \f[CR]autocomplete\f[R] attribute.
.PP
.TS
tab(@);
lw(41.2n) lw(28.8n).
T{
\f[CR]autocomplete\f[R] value
T}@T{
Credential property targeted
T}
_
T{
\f[CR]\(dqusername\(dq\f[R]
T}@T{
\f[CR]id\f[R]
T}
T{
\f[CR]\(dqname\(dq\f[R] or \f[CR]\(dqnickname\(dq\f[R]
T}@T{
\f[CR]name\f[R]
T}
T{
\f[CR]\(dqnew\-password\(dq\f[R] or \f[CR]\(dqcurrent\-password\(dq\f[R]
T}@T{
\f[CR]password\f[R]
T}
T{
\f[CR]\(dqphoto\(dq\f[R]
T}@T{
\f[CR]iconURL\f[R]
T}
.TE
.PP
If the form contains both \f[CR]\(dqnew\-password\(dq\f[R] and
\f[CR]\(dqcurrent\-password\(dq\f[R] elements, the value for
\f[CR]\(dqnew\-password\(dq\f[R] will be used.
.PP
The \f[CR]origin\f[R] property is set to the origin of the document the
\f[CR]HTMLFormElement\f[R] is contained within.
.SH INSTANCE PROPERTIES
.TP
\f[B]iconURL\f[R] \f[I](optional)\f[R]
A string representing the URL of an icon or avatar to be associated with
the credential.
.TP
\f[B]id\f[R]
A string representing a unique ID for the credential.
.TP
\f[B]name\f[R] \f[I](optional)\f[R]
A string representing the credential username.
.TP
\f[B]origin\f[R]
A string representing the credential\(cqs origin.
\f[CR]PasswordCredential\f[R] objects are origin\-bound, which means
that they will only be usable on the specified origin they were intended
to be used on.
.TP
\f[B]password\f[R]
A string representing the credential password.
.SH EXAMPLES
.SS Creating a password credential from an object literal
This example constructs an object literal to initialize a password
credential.
.IP
.EX
\f[B]const\f[R] credInit = {
  id: \(dq1234\(dq,
  name: \(dqSerpentina\(dq,
  origin: \(dqhttps://example.org\(dq,
  password: \(dqthe last visible dog\(dq,
};

\f[B]const\f[R] makeCredential = document.querySelector(\(dq#make\-credential\(dq);

makeCredential.addEventListener(\(dqclick\(dq, \f[B]async\f[R] () \f[B]=>\f[R] {
  \f[B]const\f[R] cred = \f[B]await\f[R] navigator.credentials.create({
    password: credInit,
  });
  console.log(cred.name);
  \f[I]// Serpentina\f[R]
  console.log(cred.password);
  \f[I]// the last visible dog\f[R]
});
.EE
.SS Creating a password credential from a form
This example uses a form to initialize a password credential.
.SS HTML
The HTML declares a \f[CR]<form>\f[R] containing three submittable
elements, representing the user ID, user\(cqs display name, and
password.
.IP
.EX
<\f[B]form\f[R]>
  <\f[B]div\f[R]>
    <\f[B]label\f[R] for=\(dquserid\(dq>Enter your user ID: </\f[B]label\f[R]>
    <\f[B]input\f[R] type=\(dqtext\(dq name=\(dquserid\(dq id=\(dquserid\(dq autocomplete=\(dqusername\(dq />
  </\f[B]div\f[R]>
  <\f[B]div\f[R]>
    <\f[B]label\f[R] for=\(dqusername\(dq>Enter your username: </\f[B]label\f[R]>
    <\f[B]input\f[R] type=\(dqtext\(dq name=\(dqusername\(dq id=\(dqusername\(dq autocomplete=\(dqname\(dq />
  </\f[B]div\f[R]>
  <\f[B]div\f[R]>
    <\f[B]label\f[R] for=\(dqpassword\(dq>Enter your password: </\f[B]label\f[R]>
    <\f[B]input\f[R]
      type=\(dqpassword\(dq
      name=\(dqpassword\(dq
      id=\(dqpassword\(dq
      autocomplete=\(dqnew\-password\(dq />
  </\f[B]div\f[R]>
</\f[B]form\f[R]>

<\f[B]button\f[R] id=\(dqmake\-credential\(dq>Make credential</\f[B]button\f[R]>

<\f[B]pre\f[R] id=\(dqlog\(dq></\f[B]pre\f[R]>
.EE
.SS JavaScript
The JavaScript passes the form into \f[CR]create()\f[R], and logs some
of the values of the resulting credential.
.PP
The promise returned by \f[CR]create()\f[R] will reject if the form does
not contain values for the mandatory credential properties.
.IP
.EX
\f[B]const\f[R] makeCredential = document.querySelector(\(dq#make\-credential\(dq);
\f[B]const\f[R] formCreds = document.querySelector(\(dqform\(dq);

makeCredential.addEventListener(\(dqclick\(dq, \f[B]async\f[R] () \f[B]=>\f[R] {
  \f[B]try\f[R] {
    \f[B]const\f[R] credential = \f[B]await\f[R] navigator.credentials.create({
      password: formCreds,
    });
    log(
      \(gaNew credential:\(rsnname: ${credential.name}, password: ${credential.password}\(ga,
    );
  } \f[B]catch\f[R] (e) {
    \f[B]if\f[R] (e.name === \(dqTypeError\(dq) {
      log(\(dqError creating credential\(rsnMake sure you filled in all the fields\(dq);
    }
  }
});

\f[B]const\f[R] logElement = document.querySelector(\(dq#log\(dq);
\f[B]function\f[R] log(text) {
  logElement.innerText = text;
}
.EE
.SS Result
