.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "TypedArray.length" "JS" "September 12, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
TypedArray.length \- TypedArray.prototype.length
.SH SYNOPSIS
The \f[B]\f[CB]length\f[B]\f[R] accessor property of
\f[CR]TypedArray\f[R] instances returns the length (in elements) of this
typed array.
.SH DESCRIPTION
The \f[CR]length\f[R] property is an accessor property whose set
accessor function is \f[CR]undefined\f[R], meaning that you can only
read this property.
The value is established when a \f[I]TypedArray\f[R] is constructed and
cannot be changed.
If the \f[I]TypedArray\f[R] is not specifying a \f[CR]byteOffset\f[R] or
a \f[CR]length\f[R], the length of the referenced \f[CR]ArrayBuffer\f[R]
will be returned.
\f[I]TypedArray\f[R] is one of the TypedArray objects.
.SH EXAMPLES
.SS Using the \f[CR]length\f[R] property
.IP
.EX
\f[B]const\f[R] buffer = \f[B]new\f[R] ArrayBuffer(8);

\f[B]let\f[R] uint8 = \f[B]new\f[R] Uint8Array(buffer);
uint8.length; \f[I]// 8 (matches the length of the buffer)\f[R]

uint8 = \f[B]new\f[R] Uint8Array(buffer, 1, 5);
uint8.length; \f[I]// 5 (as specified when constructing the Uint8Array)\f[R]

uint8 = \f[B]new\f[R] Uint8Array(buffer, 2);
uint8.length; \f[I]// 6 (due to the offset of the constructed Uint8Array)\f[R]
.EE
.SH SEE ALSO
.IP \[bu] 2
JavaScript typed arrays guide
.IP \[bu] 2
\f[CR]TypedArray\f[R]
