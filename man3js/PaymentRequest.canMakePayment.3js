.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "PaymentRequest.canMakePayment" "JS" "July 26, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
PaymentRequest.canMakePayment \- PaymentRequest: canMakePayment() method
.SH SYNOPSIS
\f[B]Secure context:\f[R] This feature is available only in secure
contexts (HTTPS).
.PP
The \f[CR]PaymentRequest\f[R] method
\f[B]\f[CB]canMakePayment()\f[B]\f[R] determines whether or not the
request is configured in a way that is compatible with at least one
payment method supported by the user agent.
.PP
You can call this before calling \f[CR]show()\f[R] to provide a
streamlined user experience when the user\[cq]s browser can\[cq]t handle
any of the payment methods you accept.
.PP
For instance, you might call \f[CR]canMakePayment()\f[R] to determine if
the browser will let the user pay using Payment Request API, and if it
won\[cq]t, you could fall back to another payment method, or offer a
list of methods that aren\[cq]t handled by Payment Request API (or even
provide instructions for paying by mail or by phone).
.SH SYNTAX
.IP
.EX
canMakePayment()
.EE
.SS Parameters
None.
.SS Return value
A \f[CR]Promise\f[R] to a boolean value that resolves to \f[CR]true\f[R]
if the user agent supports any of the payment methods supplied when
instantiating the request using the \f[CR]PaymentRequest\f[R]
constructor.
If the payment can\[cq]t be processed, the promise receives a value of
\f[CR]false\f[R].
.RS
.PP
\f[B]Note:\f[R] If you call this too often, the browser may reject the
returned promise with a \f[CR]DOMException\f[R].
.RE
.SH EXAMPLES
In the following example, is \c
.UR https://rsolomakhin.github.io/samples/paymentrequest/can-make-payment/
excerpted from a demo
.UE \c
\ that asynchronously builds a \f[CR]PaymentRequest\f[R] object for both
Apple Pay and Example Pay.
It wraps the call to \f[CR]canMakePayment()\f[R] in feature detection,
and calls an appropriate callback depending on the resolution of the
\f[CR]Promise\f[R].
.IP
.EX
\f[B]async\f[R] \f[B]function\f[R] initPaymentRequest() {
  \f[B]const\f[R] details = {
    total: {
      label: \[dq]Total\[dq],
      amount: {
        currency: \[dq]USD\[dq],
        value: \[dq]0.00\[dq],
      },
    },
  };

  \f[B]const\f[R] supportsApplePay = \f[B]new\f[R] PaymentRequest(
    [{ supportedMethods: \[dq]https://apple.com/apple\-pay\[dq] }],
    details,
  ).canMakePayment();

  \f[I]// Supports Apple Pay?\f[R]
  \f[B]if\f[R] (\f[B]await\f[R] supportsApplePay) {
    \f[I]// show Apple Pay logo, for instance\f[R]
    \f[B]return\f[R];
  }

  \f[I]// Otherwise, let\[aq]s see if we can use Example Pay\f[R]
  \f[B]const\f[R] supportsExamplePay = \f[B]await\f[R] \f[B]new\f[R] PaymentRequest(
    [{ supportedMethods: \[dq]https://example.com/pay\[dq] }],
    details,
  ).canMakePayment();

  \f[B]if\f[R] (supportsExamplePay) {
    \f[I]// show Example Pay support\f[R]
    \f[B]return\f[R];
  }

  \f[I]// Otherwise, make payments using HTML form element\f[R]
}
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]PaymentRequest.show()\f[R]
