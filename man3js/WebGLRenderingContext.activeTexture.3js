.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "WebGLRenderingContext.activeTexture" "JS" "April 8, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
WebGLRenderingContext.activeTexture \- WebGLRenderingContext:
activeTexture() method
.SH SYNOPSIS
The \f[B]\f[CB]WebGLRenderingContext.activeTexture()\f[B]\f[R] method of
the WebGL API specifies which texture unit to make active.
.SH SYNTAX
.IP
.EX
activeTexture(texture)
.EE
.SS Parameters
.TP
\f[B]texture\f[R]
The texture unit to make active.
The value is a \f[CR]gl.TEXTUREI\f[R] where \f[I]I\f[R] is within the
range from 0 to \f[CR]gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS \- 1\f[R].
.SS Return value
None (\f[CR]undefined\f[R]).
.SS Exceptions
If \f[I]texture\f[R] is not one of \f[CR]gl.TEXTUREI\f[R], where
\f[I]I\f[R] is within the range from 0 to
\f[CR]gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS \- 1\f[R], a
\f[CR]gl.INVALID_ENUM\f[R] error is thrown.
.SH EXAMPLES
The following call selects \f[CR]gl.TEXTURE1\f[R] as the current
texture.
Subsequent calls that modify the texture state will affect this texture.
.IP
.EX
gl.activeTexture(gl.TEXTURE1);
.EE
.PP
The number of texture units is implementation dependent, you can get
this number with the help of the
\f[CR]MAX_COMBINED_TEXTURE_IMAGE_UNITS\f[R] constant.
It is, per specification, at least 8.
.IP
.EX
gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);
.EE
.PP
To get the active texture, query the \f[CR]ACTIVE_TEXTURE\f[R] constant.
.IP
.EX
gl.activeTexture(gl.TEXTURE0);
gl.getParameter(gl.ACTIVE_TEXTURE);
\f[I]// returns \[dq]33984\[dq] (0x84C0, gl.TEXTURE0 enum value)\f[R]
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]WebGLRenderingContext.getParameter()\f[R]
