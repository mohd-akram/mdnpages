.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "Element.animate" "JS" "August 2, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Element.animate \- Element: animate() method
.SH SYNOPSIS
The \f[CR]Element\f[R] interface\[cq]s \f[B]\f[CB]animate()\f[B]\f[R]
method is a shortcut method which creates a new \f[CR]Animation\f[R],
applies it to the element, then plays the animation.
It returns the created \f[CR]Animation\f[R] object instance.
.RS
.PP
\f[B]Note:\f[R] Elements can have multiple animations applied to them.
You can get a list of the animations that affect an element by calling
\f[CR]Element.getAnimations()\f[R].
.RE
.SH SYNTAX
.IP
.EX
animate(keyframes, options)
.EE
.SS Parameters
.TP
\f[B]keyframes\f[R]
Either an array of keyframe objects, \f[B]or\f[R] a keyframe object
whose properties are arrays of values to iterate over.
See Keyframe Formats for more details.
.TP
\f[B]options\f[R]
Either an \f[B]integer representing the animation\[cq]s duration\f[R]
(in milliseconds), \f[B]or\f[R] an Object containing one or more timing
properties described in the \f[CR]KeyframeEffect()\f[R] options
parameter and/or the following options:
.RS
.TP
\f[B]id\f[R] \f[I](optional)\f[R]
A property unique to \f[CR]animate()\f[R]: A string with which to
reference the animation.
.TP
\f[B]rangeEnd\f[R] \f[I](optional)\f[R]
Specifies the end of an animation\[cq]s attachment range along its
timeline, i.e.\ where along the timeline an animation will end.
The JavaScript equivalent of the CSS \f[CR]animation\-range\-end\f[R]
property.
\f[CR]rangeEnd\f[R] can take several different value types, as follows:
.RS
.IP \[bu] 2
A string that can be \f[CR]normal\f[R] (meaning no change to the
animation\[cq]s attachment range), a CSS \f[CR]length\-percentage\f[R]
representing an offset, a \f[CR]<timeline\-range\-name>\f[R], or a
\f[CR]<timeline\-range\-name>\f[R] with a
\f[CR]<length\-percentage>\f[R] following it.
For example:
.RS 2
.IP
.EX
\[dq]normal\[dq]
\[dq]entry\[dq]
\[dq]cover 100%\[dq]
.EE
.PP
See \f[CR]animation\-range\f[R] for a detailed description of the
available values.
Also check out the \c
.UR https://scroll-driven-animations.style/tools/view-timeline/ranges/
View Timeline Ranges Visualizer
.UE \c
, which shows exactly what the different values mean in an easy visual
format.
.RE
.IP \[bu] 2
An object containing \f[CR]rangeName\f[R] (a string) and
\f[CR]offset\f[R] (a \f[CR]CSSNumericValue\f[R]) properties representing
a \f[CR]<timeline\-range\-name>\f[R] and
\f[CR]<length\-percentage>\f[R], as described in the previous bullet.
For example:
.RS 2
.IP
.EX
{
  rangeName: \[aq]entry\[aq],
  offset: CSS.percent(\[aq]100\[aq]),
}
.EE
.RE
.IP \[bu] 2
A \f[CR]CSSNumericValue\f[R] representing an offset, for example:
.RS 2
.IP
.EX
CSS.percent(\[dq]100\[dq]);
.EE
.RE
.RE
.TP
\f[B]rangeStart\f[R] \f[I](optional)\f[R]
Specifies the start of an animation\[cq]s attachment range along its
timeline, i.e.\ where along the timeline an animation will start.
The JavaScript equivalent of the CSS \f[CR]animation\-range\-start\f[R]
property.
\f[CR]rangeStart\f[R] can take the same value types as
\f[CR]rangeEnd\f[R].
.TP
\f[B]timeline\f[R] \f[I](optional)\f[R]
A property unique to \f[CR]animate()\f[R]: The
\f[CR]AnimationTimeline\f[R] to associate with the animation.
Defaults to \f[CR]Document.timeline\f[R].
The JavaScript equivalent of the CSS \f[CR]animation\-timeline\f[R]
property.
.RE
.SS Return value
Returns an \f[CR]Animation\f[R].
.SH EXAMPLES
.SS Rotating and scaling
In this example we use the \f[CR]animate()\f[R] method to rotate and
scale an element.
.SS HTML
.IP
.EX
<\f[B]div\f[R] class=\[dq]newspaper\[dq]>Spinning newspaper<\f[B]br\f[R] />causes dizziness</\f[B]div\f[R]>
.EE
.SS CSS
.IP
.EX
html,
body {
  \f[B]height\f[R]: 100%;
}

body {
  \f[B]display\f[R]: flex;
  \f[B]justify\-content\f[R]: center;
  \f[B]align\-items\f[R]: center;
  \f[B]background\-color\f[R]: black;
}

\&.newspaper {
  \f[B]padding\f[R]: 0.5rem;
  \f[B]text\-transform\f[R]: uppercase;
  \f[B]text\-align\f[R]: center;
  \f[B]background\-color\f[R]: white;
  \f[B]cursor\f[R]: pointer;
}
.EE
.SS JavaScript
.IP
.EX
\f[B]const\f[R] newspaperSpinning = [
  { transform: \[dq]rotate(0) scale(1)\[dq] },
  { transform: \[dq]rotate(360deg) scale(0)\[dq] },
];

\f[B]const\f[R] newspaperTiming = {
  duration: 2000,
  iterations: 1,
};

\f[B]const\f[R] newspaper = document.querySelector(\[dq].newspaper\[dq]);

newspaper.addEventListener(\[dq]click\[dq], () \f[B]=>\f[R] {
  newspaper.animate(newspaperSpinning, newspaperTiming);
});
.EE
.SS Result
.SS Down the Rabbit Hole demo
In the demo \c
.UR https://codepen.io/rachelnabors/pen/rxpmJL/?editors=0010
Down the Rabbit Hole (with the Web Animation API)
.UE \c
, we use the convenient \f[CR]animate()\f[R] method to immediately
create and play an animation on the \f[CR]#tunnel\f[R] element to make
it flow upwards, infinitely.
Notice the array of objects passed as keyframes and also the timing
options block.
.IP
.EX
document.getElementById(\[dq]tunnel\[dq]).animate(
  [
    \f[I]// keyframes\f[R]
    { transform: \[dq]translateY(0px)\[dq] },
    { transform: \[dq]translateY(\-300px)\[dq] },
  ],
  {
    \f[I]// timing options\f[R]
    duration: 1000,
    iterations: \f[B]Infinity\f[R],
  },
);
.EE
.SS Implicit to/from keyframes
In newer browser versions, you are able to set a beginning or end state
for an animation only (i.e.\ a single keyframe), and the browser will
infer the other end of the animation if it is able to.
For example, consider \c
.UR https://mdn.github.io/dom-examples/web-animations-api/implicit-keyframes.html
this simple animation
.UE \c
\ \[em] the Keyframe object looks like so:
.IP
.EX
\f[B]let\f[R] rotate360 = [{ transform: \[dq]rotate(360deg)\[dq] }];
.EE
.PP
We have only specified the end state of the animation, and the beginning
state is implied.
.SS timeline, rangeStart, and rangeEnd
Typical usage of the \f[CR]timeline\f[R], \f[CR]rangeStart\f[R], and
\f[CR]rangeEnd\f[R] properties might look like this:
.IP
.EX
\f[B]const\f[R] img = document.querySelector(\[dq]img\[dq]);

\f[B]const\f[R] timeline = \f[B]new\f[R] ViewTimeline({
  subject: img,
  axis: \[dq]block\[dq],
});

img.animate(
  {
    opacity: [0, 1],
    transform: [\[dq]scaleX(0)\[dq], \[dq]scaleX(1)\[dq]],
  },
  {
    fill: \[dq]both\[dq],
    duration: 1,
    timeline,
    rangeStart: \[dq]cover 0%\[dq],
    rangeEnd: \[dq]cover 100%\[dq],
  },
);
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]Animation\f[R]
.IP \[bu] 2
\f[CR]Element.getAnimations()\f[R]
.IP \[bu] 2
\f[CR]animation\-range\-end\f[R], \f[CR]animation\-range\-start\f[R],
\f[CR]animation\-timeline\f[R]
.IP \[bu] 2
CSS scroll\-driven animations
.IP \[bu] 2
Web Animations API
