.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "Highlight" "JS" "December 2, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Highlight \- Highlight
.SH SYNOPSIS
The \f[B]\f[CB]Highlight\f[B]\f[R] interface of the CSS Custom Highlight
API is used to represent a collection of \f[CR]Range\f[R] instances to
be styled using the API.
.PP
To style arbitrary ranges in a page, instantiate a new
\f[CR]Highlight\f[R] object, add one or more \f[CR]Range\f[R] objects to
it, and register it using the \f[CR]HighlightRegistry\f[R].
.PP
A \f[CR]Highlight\f[R] instance is a \f[CR]Set\f[R]\-like object that
can hold one or more \f[CR]Range\f[R] objects.
.SH CONSTRUCTOR
.TP
\f[B]Highlight()\f[R]
Returns a newly created \f[CR]Highlight\f[R] object.
.SH INSTANCE PROPERTIES
\f[I]The \f[CI]Highlight\f[I] interface doesn\[cq]t inherit any
properties.\f[R]
.TP
\f[B]Highlight.priority\f[R]
A number that indicates the priority of this \f[CR]Highlight\f[R]
object.
When multiple highlights overlap, the browser uses this priority to
decide how to style the overlapping parts.
.TP
\f[B]Highlight.size\f[R] \f[I](read\-only)\f[R]
Returns the number of ranges in the \f[CR]Highlight\f[R] object.
.TP
\f[B]Highlight.type\f[R]
An enumerated \f[CR]String\f[R] used to specify the semantic meaning of
the highlight.
This allows assistive technologies to include this meaning when exposing
the highlight to users.
.SH INSTANCE METHODS
\f[I]The \f[CI]Highlight\f[I] interface doesn\[cq]t inherit any
methods\f[R].
.TP
\f[B]Highlight.add()\f[R]
Add a new range to this highlight.
.TP
\f[B]Highlight.clear()\f[R]
Remove all ranges from this highlight.
.TP
\f[B]Highlight.delete()\f[R]
Remove a range from this highlight.
.TP
\f[B]Highlight.entries()\f[R]
Returns a new iterator object that contains each range in the highlight
object, in insertion order.
.TP
\f[B]Highlight.forEach()\f[R]
Calls the given callback once for each range in the highlight object, in
insertion order.
.TP
\f[B]Highlight.has()\f[R]
Returns a boolean asserting whether a range is present the highlight
object or not.
.TP
\f[B]Highlight.keys()\f[R]
An alias for \f[CR]Highlight.values()\f[R].
.TP
\f[B]Highlight.values()\f[R]
Returns a new iterator object that yields the ranges in the highlight
object in insertion order.
.SH EXAMPLES
The following example demonstrates how to create ranges, instantiate a
new \f[CR]Highlight\f[R] object for them, and register it to be styled
on the page:
.IP
.EX
\f[B]const\f[R] parentNode = document.getElementById(\[dq]foo\[dq]);

\f[I]// Create a couple of ranges.\f[R]
\f[B]const\f[R] range1 = \f[B]new\f[R] Range();
range1.setStart(parentNode, 10);
range1.setEnd(parentNode, 20);

\f[B]const\f[R] range2 = \f[B]new\f[R] Range();
range2.setStart(parentNode, 40);
range2.setEnd(parentNode, 60);

\f[I]// Create a custom highlight for these ranges.\f[R]
\f[B]const\f[R] highlight = \f[B]new\f[R] Highlight(range1, range2);

\f[I]// Register the ranges in the HighlightRegistry.\f[R]
CSS.highlights.set(\[dq]my\-custom\-highlight\[dq], highlight);
.EE
.PP
The following CSS code snippet demonstrates how to style the registered
custom highlight by using the \f[CR]::highlight\f[R] pseudo\-element:
.IP
.EX
\f[BI]::highlight(\f[R]my\-custom\-highlight\f[BI])\f[R] {
  \f[B]background\-color\f[R]: peachpuff;
}
.EE
.SH SEE ALSO
.IP \[bu] 2
The CSS Custom Highlight API
.IP \[bu] 2
\c
.UR https://css-tricks.com/css-custom-highlight-api-early-look/
CSS Custom Highlight API: The Future of Highlighting Text Ranges on the
Web
.UE \c
