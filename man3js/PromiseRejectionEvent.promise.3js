.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "PROMISEREJECTIONEVENT.PROMISE" "3JS" "October 8, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
PromiseRejectionEvent.promise \- PromiseRejectionEvent: promise property
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[CR]PromiseRejectionEvent\f[R] interface\(cqs
\f[B]\f[CB]promise\f[B]\f[R] read\-only property indicates the
JavaScript \f[CR]Promise\f[R] which was rejected.
You can examine the event\(cqs \f[CR]PromiseRejectionEvent.reason\f[R]
property to learn why the promise was rejected.
.SH VALUE
The JavaScript \f[CR]Promise\f[R] which was rejected, and whose
rejection went unhandled.
.SH EXAMPLES
This example listens for unhandled promises and, if the
\f[CR]reason\f[R] is an object with a \f[CR]code\f[R] field containing
the text \(lqModule not ready\(rq, it sets up an idle callback that will
retry the task that failed to execute correctly.
.PP
\f[CR]event.preventDefault()\f[R] is called to indicate that the promise
has now been handled.
.IP
.EX
window.onunhandledrejection = (event) \f[B]=>\f[R] {
  \f[B]if\f[R] (event.reason?.code === \(dqModule not ready\(dq) {
    requestIdleCallback((deadline) \f[B]=>\f[R] {
      loadModule(event.reason.moduleName).then(performStartup);
    });
    event.preventDefault();
  }
};
.EE
.SH SEE ALSO
.IP \(bu 2
Promise rejection events
.IP \(bu 2
\f[CR]Promise\f[R]
.IP \(bu 2
\f[CR]PromiseRejectionEvent\f[R]
.IP \(bu 2
\f[CR]rejectionhandled\f[R]
.IP \(bu 2
\f[CR]unhandledrejection\f[R]
