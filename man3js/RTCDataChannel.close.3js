.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "RTCDATACHANNEL.CLOSE" "3JS" "July 6, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
RTCDataChannel.close \- RTCDataChannel: close() method
.SH SYNOPSIS
The \f[B]\f[CB]RTCDataChannel.close()\f[B]\f[R] method closes the
\f[CR]RTCDataChannel\f[R].
Either peer is permitted to call this method to initiate closure of the
channel.
.PP
Closure of the data channel is not instantaneous.
Most of the process of closing the connection is handled asynchronously;
you can detect when the channel has finished closing by watching for a
\f[CR]close\f[R] event on the data channel.
.PP
The sequence of events which occurs in response to this method being
called:
.IP "1." 3
\f[CR]RTCDataChannel.readyState\f[R] is set to \f[CR]closing\f[R].
.IP "2." 3
A background task is established to handle the remainder of the steps
below, and \f[CR]close()\f[R] returns to the caller.
.IP "3." 3
The transport layer deals with any buffered messages; the protocol layer
decides whether to send them or discard them.
.IP "4." 3
The underlying data transport is closed.
.IP "5." 3
The \f[CR]RTCDataChannel.readyState\f[R] property is set to
\f[CR]closed\f[R].
.IP "6." 3
If the transport was closed with an error, the \f[CR]RTCDataChannel\f[R]
is sent an \f[CR]error\f[R] event with its \f[CR]name\f[R] set to
\f[CR]NetworkError\f[R].
.IP "7." 3
A \f[CR]close\f[R] event is sent to the channel.
.SH SYNTAX
.IP
.EX
close()
.EE
.SS Parameters
None.
.SS Return value
None (\f[CR]undefined\f[R]).
.SH EXAMPLES
.IP
.EX
\f[B]const\f[R] pc = \f[B]new\f[R] RTCPeerConnection();
\f[B]const\f[R] dc = pc.createDataChannel(\(dqmy channel\(dq);

dc.onmessage = (event) \f[B]=>\f[R] {
  console.log(\(gareceived: ${event.data}\(ga);
  dc.close(); \f[I]// We decided to close after the first received message\f[R]
};

dc.onopen = () \f[B]=>\f[R] {
  console.log(\(dqdatachannel open\(dq);
};

dc.onclose = () \f[B]=>\f[R] {
  console.log(\(dqdatachannel close\(dq);
};

\f[I]// Now negotiate the connection and so forth\&...\f[R]
.EE
.SH SEE ALSO
.IP \(bu 2
WebRTC
.IP \(bu 2
\f[CR]RTCDataChannel\f[R]
.IP \(bu 2
\f[CR]RTCDataChannel.readyState\f[R]
.IP \(bu 2
\f[CR]close\f[R] event
