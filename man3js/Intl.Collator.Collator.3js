.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "INTL.COLLATOR.COLLATOR" "3JS" "March 14, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Intl.Collator.Collator \- Intl.Collator() constructor
.SH SYNOPSIS
The \f[B]\f[CB]Intl.Collator()\f[B]\f[R] constructor creates
\f[CR]Intl.Collator\f[R] objects.
.IP
.EX
console.log([\(dqZ\(dq, \(dqa\(dq, \(dqz\(dq, \(dqä\(dq].sort(\f[B]new\f[R] Intl.Collator(\(dqde\(dq).compare));
\f[I]// Expected output: Array [\(dqa\(dq, \(dqä\(dq, \(dqz\(dq, \(dqZ\(dq]\f[R]

console.log([\(dqZ\(dq, \(dqa\(dq, \(dqz\(dq, \(dqä\(dq].sort(\f[B]new\f[R] Intl.Collator(\(dqsv\(dq).compare));
\f[I]// Expected output: Array [\(dqa\(dq, \(dqz\(dq, \(dqZ\(dq, \(dqä\(dq]\f[R]

console.log(
  [\(dqZ\(dq, \(dqa\(dq, \(dqz\(dq, \(dqä\(dq].sort(
    \f[B]new\f[R] Intl.Collator(\(dqde\(dq, { caseFirst: \(dqupper\(dq }).compare,
  ),
);
\f[I]// Expected output: Array [\(dqa\(dq, \(dqä\(dq, \(dqZ\(dq, \(dqz\(dq]\f[R]
.EE
.SH SYNTAX
.IP
.EX
new Intl.Collator()
new Intl.Collator(locales)
new Intl.Collator(locales, options)

Intl.Collator()
Intl.Collator(locales)
Intl.Collator(locales, options)
.EE
.RS
.PP
\f[B]Note:\f[R] \f[CR]Intl.Collator()\f[R] can be called with or without
\f[CR]new\f[R].
Both create a new \f[CR]Intl.Collator\f[R] instance.
.RE
.SS Parameters
.TP
\f[B]locales\f[R] \f[I](optional)\f[R]
A string with a BCP 47 language tag or an \f[CR]Intl.Locale\f[R]
instance, or an array of such locale identifiers.
The runtime\(cqs default locale is used when \f[CR]undefined\f[R] is
passed or when none of the specified locale identifiers is supported.
For the general form and interpretation of the \f[CR]locales\f[R]
argument, see the parameter description on the \f[CR]Intl\f[R] main
page.
.RS
.PP
The following Unicode extension keys are allowed:
.TP
\f[B]co\f[R]
See \f[CR]collation\f[R].
.TP
\f[B]kn\f[R]
See \f[CR]numeric\f[R].
.TP
\f[B]kf\f[R]
See \f[CR]caseFirst\f[R].
.PP
These keys can also be set with \f[CR]options\f[R] (as listed below).
When both are set, the \f[CR]options\f[R] property takes precedence.
.RE
.TP
\f[B]options\f[R] \f[I](optional)\f[R]
An object containing the following properties, in the order they are
retrieved (all of them are optional):
.RS
.TP
\f[B]usage\f[R]
Whether the comparison is for sorting a list of strings or fuzzy (for
the Latin script diacritic\-insensitive and case\-insensitive) filtering
a list of strings by key.
Possible values are:
.RS
.TP
\f[B]\(dqsort\(dq\f[R] (default)
For sorting a list of strings.
.TP
\f[B]\(dqsearch\(dq\f[R]
For filtering a list of strings by testing each list item for a
full\-string match against a key.
With \f[CR]\(dqsearch\(dq\f[R], the caller should only pay attention to
whether \f[CR]compare()\f[R] returns zero or non\-zero and should not
distinguish the non\-zero return values from each other.
That is, it is inappropriate to use \f[CR]\(dqsearch\(dq\f[R] for
sorting/ordering.
.RE
.TP
\f[B]localeMatcher\f[R]
The locale matching algorithm to use.
Possible values are \f[CR]\(dqlookup\(dq\f[R] and
\f[CR]\(dqbest fit\(dq\f[R]; the default is \f[CR]\(dqbest fit\(dq\f[R].
For information about this option, see Locale identification and
negotiation.
.TP
\f[B]collation\f[R]
Variant collations for certain locales, such as
\f[CR]\(dqemoji\(dq\f[R], \f[CR]\(dqpinyin\(dq\f[R],
\f[CR]\(dqstroke\(dq\f[R], and so on.
Only has an effect when \f[CR]usage\f[R] is \f[CR]\(dqsort\(dq\f[R]
(because \f[CR]\(dqsearch\(dq\f[R] is underlyingly its own collation
type).
For a list of supported collation types, see
\f[CR]Intl.supportedValuesOf()\f[R]; the default is
\f[CR]\(dqdefault\(dq\f[R].
This option can also be set through the \f[CR]co\f[R] Unicode extension
key; if both are provided, this \f[CR]options\f[R] property takes
precedence.
.TP
\f[B]numeric\f[R]
Whether numeric collation should be used, such that \(lq1\(rq <
\(lq2\(rq < \(lq10\(rq.
Possible values are \f[CR]true\f[R] and \f[CR]false\f[R]; the default is
\f[CR]false\f[R].
This option can also be set through the \f[CR]kn\f[R] Unicode extension
key; if both are provided, this \f[CR]options\f[R] property takes
precedence.
.TP
\f[B]caseFirst\f[R]
Whether upper case or lower case should sort first.
Possible values are \f[CR]\(dqupper\(dq\f[R], \f[CR]\(dqlower\(dq\f[R],
and \f[CR]\(dqfalse\(dq\f[R] (use the locale\(cqs default); the default
is \f[CR]\(dqfalse\(dq\f[R].
This option can also be set through the \f[CR]kf\f[R] Unicode extension
key; if both are provided, this \f[CR]options\f[R] property takes
precedence.
.TP
\f[B]sensitivity\f[R]
Which differences in the strings should lead to non\-zero result values.
Possible values are:
.RS
.TP
\f[B]\(dqbase\(dq\f[R]
Only strings that differ in base letters compare as unequal.
Examples: a ≠ b, a = á, a = A. In the Unicode collation algorithm, this
is equivalent to the primary strength level.
.TP
\f[B]\(dqaccent\(dq\f[R]
Only strings that differ in base letters or accents and other diacritic
marks compare as unequal.
Examples: a ≠ b, a ≠ á, a = A. In the Unicode collation algorithm, this
is equivalent to the secondary strength level.
.TP
\f[B]\(dqcase\(dq\f[R]
Only strings that differ in base letters or case compare as unequal.
Examples: a ≠ b, a = á, a ≠ A. In the Unicode collation algorithm, this
is equivalent to the primary strength level with case level handling.
.TP
\f[B]\(dqvariant\(dq\f[R]
Strings that differ in base letters, accents and other diacritic marks,
or case compare as unequal.
Other differences may also be taken into consideration.
Examples: a ≠ b, a ≠ á, a ≠ A. In the Unicode collation algorithm, this
is equivalent to the tertiary strength level.
.PP
The default is \f[CR]\(dqvariant\(dq\f[R] for usage
\f[CR]\(dqsort\(dq\f[R]; it\(cqs locale dependent for usage
\f[CR]\(dqsearch\(dq\f[R] per spec, but is usually also
\f[CR]\(dqvariant\(dq\f[R].
Because the core functionality of \f[CR]\(dqsearch\(dq\f[R] is
accent\-insensitive and case\-insensitive filtering, setting it to
\f[CR]\(dqbase\(dq\f[R] makes the most sense (and perhaps
\f[CR]\(dqcase\(dq\f[R]).
.RE
.TP
\f[B]ignorePunctuation\f[R]
Whether punctuation should be ignored.
Possible values are \f[CR]true\f[R] and \f[CR]false\f[R].
The default is \f[CR]true\f[R] for Thai (\f[CR]th\f[R]) and
\f[CR]false\f[R] for all other languages.
.RE
.SS Exceptions
.TP
\f[B]RangeError\f[R]
Thrown if \f[CR]locales\f[R] or \f[CR]options\f[R] contain invalid
values.
.SH EXAMPLES
.SS Using Collator
The following example demonstrates the different potential results for a
string occurring before, after, or at the same level as another:
.IP
.EX
console.log(\f[B]new\f[R] Intl.Collator().compare(\(dqa\(dq, \(dqc\(dq)); \f[I]// \-1, or some other negative value\f[R]
console.log(\f[B]new\f[R] Intl.Collator().compare(\(dqc\(dq, \(dqa\(dq)); \f[I]// 1, or some other positive value\f[R]
console.log(\f[B]new\f[R] Intl.Collator().compare(\(dqa\(dq, \(dqa\(dq)); \f[I]// 0\f[R]
.EE
.PP
Note that the results shown in the code above can vary between browsers
and browser versions.
This is because the values are implementation\-specific.
That is, the specification requires only that the before and after
values are negative and positive.
.SH SEE ALSO
.IP \(bu 2
\f[CR]Intl.Collator\f[R]
.IP \(bu 2
\f[CR]Intl\f[R]
