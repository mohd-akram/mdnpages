.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "Intl.Collator.Collator" "JS" "May 1, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Intl.Collator.Collator \- Intl.Collator() constructor
.SH SYNOPSIS
The \f[B]\f[CB]Intl.Collator()\f[B]\f[R] constructor creates
\f[CR]Intl.Collator\f[R] objects.
.SH SYNTAX
.IP
.EX
new Intl.Collator()
new Intl.Collator(locales)
new Intl.Collator(locales, options)

Intl.Collator()
Intl.Collator(locales)
Intl.Collator(locales, options)
.EE
.RS
.PP
\f[B]Note:\f[R] \f[CR]Intl.Collator()\f[R] can be called with or without
\f[CR]new\f[R].
Both create a new \f[CR]Intl.Collator\f[R] instance.
.RE
.SS Parameters
.TP
\f[B]locales\f[R] \f[I](optional)\f[R]
A string with a BCP 47 language tag or an \f[CR]Intl.Locale\f[R]
instance, or an array of such locale identifiers.
The runtime\[cq]s default locale is used when \f[CR]undefined\f[R] is
passed or when none of the specified locale identifiers is supported.
For the general form and interpretation of the \f[CR]locales\f[R]
argument, see the parameter description on the \f[CR]Intl\f[R] main
page.
.RS
.PP
The following Unicode extension keys are allowed:
.TP
\f[B]co\f[R]
See \f[CR]collation\f[R].
.TP
\f[B]kn\f[R]
See \f[CR]numeric\f[R].
.TP
\f[B]kf\f[R]
See \f[CR]caseFirst\f[R].
.PP
These keys can also be set with \f[CR]options\f[R] (as listed below).
When both are set, the \f[CR]options\f[R] property takes precedence.
.RE
.TP
\f[B]options\f[R] \f[I](optional)\f[R]
An object containing the following properties, in the order they are
retrieved (all of them are optional):
.RS
.TP
\f[B]usage\f[R]
Whether the comparison is for sorting a list of strings or fuzzy (for
the Latin script diacritic\-insensitive and case\-insensitive) filtering
a list of strings by key.
Possible values are:
.RS
.TP
\f[B]\[dq]sort\[dq]\f[R] (default)
For sorting a list of strings.
.TP
\f[B]\[dq]search\[dq]\f[R]
For filtering a list of strings by testing each list item for a
full\-string match against a key.
With \f[CR]\[dq]search\[dq]\f[R], the caller should only pay attention
to whether \f[CR]compare()\f[R] returns zero or non\-zero and should not
distinguish the non\-zero return values from each other.
That is, it is inappropriate to use \f[CR]\[dq]search\[dq]\f[R] for
sorting/ordering.
.RE
.TP
\f[B]localeMatcher\f[R]
The locale matching algorithm to use.
Possible values are \f[CR]\[dq]lookup\[dq]\f[R] and
\f[CR]\[dq]best fit\[dq]\f[R]; the default is
\f[CR]\[dq]best fit\[dq]\f[R].
For information about this option, see Locale identification and
negotiation.
.TP
\f[B]collation\f[R]
Variant collations for certain locales, such as
\f[CR]\[dq]emoji\[dq]\f[R], \f[CR]\[dq]pinyin\[dq]\f[R],
\f[CR]\[dq]stroke\[dq]\f[R], and so on.
For a list of supported collation types, see
\f[CR]Intl.Locale.prototype.getCollations()\f[R]; the default is
\f[CR]\[dq]default\[dq]\f[R].
This option can also be set through the \f[CR]co\f[R] Unicode extension
key; if both are provided, this \f[CR]options\f[R] property takes
precedence.
.TP
\f[B]numeric\f[R]
Whether numeric collation should be used, such that \[lq]1\[rq] <
\[lq]2\[rq] < \[lq]10\[rq].
Possible values are \f[CR]true\f[R] and \f[CR]false\f[R]; the default is
\f[CR]false\f[R].
This option can also be set through the \f[CR]kn\f[R] Unicode extension
key; if both are provided, this \f[CR]options\f[R] property takes
precedence.
.TP
\f[B]caseFirst\f[R]
Whether upper case or lower case should sort first.
Possible values are \f[CR]\[dq]upper\[dq]\f[R],
\f[CR]\[dq]lower\[dq]\f[R], and \f[CR]\[dq]false\[dq]\f[R] (use the
locale\[cq]s default); the default is \f[CR]\[dq]false\[dq]\f[R].
This option can also be set through the \f[CR]kf\f[R] Unicode extension
key; if both are provided, this \f[CR]options\f[R] property takes
precedence.
.TP
\f[B]sensitivity\f[R]
Which differences in the strings should lead to non\-zero result values.
Possible values are:
.RS
.TP
\f[B]\[dq]base\[dq]\f[R]
Only strings that differ in base letters compare as unequal.
Examples: a ≠ b, a = á, a = A.
.TP
\f[B]\[dq]accent\[dq]\f[R]
Only strings that differ in base letters or accents and other diacritic
marks compare as unequal.
Examples: a ≠ b, a ≠ á, a = A.
.TP
\f[B]\[dq]case\[dq]\f[R]
Only strings that differ in base letters or case compare as unequal.
Examples: a ≠ b, a = á, a ≠ A.
.TP
\f[B]\[dq]variant\[dq]\f[R]
Strings that differ in base letters, accents and other diacritic marks,
or case compare as unequal.
Other differences may also be taken into consideration.
Examples: a ≠ b, a ≠ á, a ≠ A.
.PP
The default is \f[CR]\[dq]variant\[dq]\f[R] for usage
\f[CR]\[dq]sort\[dq]\f[R]; it\[cq]s locale dependent for usage
\f[CR]\[dq]search\[dq]\f[R] per spec, but the core functionality of
\f[CR]\[dq]search\[dq]\f[R] is accent\-insensitive and case\-insensitive
filtering, so \f[CR]\[dq]base\[dq]\f[R] makes the most sense (and
perhaps \f[CR]\[dq]case\[dq]\f[R]).
.RE
.TP
\f[B]ignorePunctuation\f[R]
Whether punctuation should be ignored.
Possible values are \f[CR]true\f[R] and \f[CR]false\f[R].
The default is \f[CR]true\f[R] for Thai (\f[CR]th\f[R]) and
\f[CR]false\f[R] for all other languages.
.RE
.SS Exceptions
.TP
\f[B]RangeError\f[R]
Thrown if \f[CR]locales\f[R] or \f[CR]options\f[R] contain invalid
values.
.SH EXAMPLES
.SS Using Collator
The following example demonstrates the different potential results for a
string occurring before, after, or at the same level as another:
.IP
.EX
console.log(\f[B]new\f[R] Intl.Collator().compare(\[dq]a\[dq], \[dq]c\[dq])); \f[I]// \-1, or some other negative value\f[R]
console.log(\f[B]new\f[R] Intl.Collator().compare(\[dq]c\[dq], \[dq]a\[dq])); \f[I]// 1, or some other positive value\f[R]
console.log(\f[B]new\f[R] Intl.Collator().compare(\[dq]a\[dq], \[dq]a\[dq])); \f[I]// 0\f[R]
.EE
.PP
Note that the results shown in the code above can vary between browsers
and browser versions.
This is because the values are implementation\-specific.
That is, the specification requires only that the before and after
values are negative and positive.
.PP
When usage is \f[CR]\[dq]search\[dq]\f[R], the caller should only pay
attention to whether the return value of \f[CR]compare()\f[R] is zero or
non\-zero.
It is inappropriate to use a \f[CR]Collator\f[R] with usage
\f[CR]\[dq]search\[dq]\f[R] for sorting.
.SH SEE ALSO
.IP \[bu] 2
\f[CR]Intl.Collator\f[R]
.IP \[bu] 2
\f[CR]Intl\f[R]
