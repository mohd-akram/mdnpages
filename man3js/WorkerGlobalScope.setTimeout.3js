.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "WORKERGLOBALSCOPE.SETTIMEOUT" "3JS" "April 8, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
WorkerGlobalScope.setTimeout \- WorkerGlobalScope: setTimeout() method
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is only available in Web Workers.
.PP
The \f[B]\f[CB]setTimeout()\f[B]\f[R] method of the
\f[CR]WorkerGlobalScope\f[R] interface sets a timer which executes a
function or specified piece of code once the timer expires.
.SH SYNTAX
.IP
.EX
setTimeout(code)
setTimeout(code, delay)

setTimeout(functionRef)
setTimeout(functionRef, delay)
setTimeout(functionRef, delay, param1)
setTimeout(functionRef, delay, param1, param2)
setTimeout(functionRef, delay, param1, param2, /* \&..., */ paramN)
.EE
.SS Parameters
.TP
\f[B]functionRef\f[R]
A \f[CR]function\f[R] to be executed after the timer expires.
.TP
\f[B]code\f[R]
An alternative syntax that allows you to include a string instead of a
function, which is compiled and executed when the timer expires.
This syntax is \f[B]not recommended\f[R] for the same reasons that make
using \f[CR]eval()\f[R] a security risk.
.TP
\f[B]delay\f[R] \f[I](optional)\f[R]
The time, in milliseconds that the timer should wait before the
specified function or code is executed.
If this parameter is omitted, a value of 0 is used, meaning execute
\(lqimmediately\(rq, or more accurately, the next event cycle.
.RS
.PP
Note that in either case, the actual delay may be longer than intended;
see Reasons for delays longer than specified.
.PP
Also note that if the value isn\(cqt a number, implicit type coercion is
silently done on the value to convert it to a number \(em which can lead
to unexpected and surprising results; see Non\-number delay values are
silently coerced into numbers for an example.
.RE
.TP
\f[B]param1\f[R], \&..., \f[B]paramN\f[R] \f[I](optional)\f[R]
Additional arguments which are passed through to the function specified
by \f[CR]functionRef\f[R].
.SS Return value
The \f[CR]setTimeout()\f[R] method returns a positive integer (typically
within the range of 1 to 2,147,483,647) that uniquely identifies the
timer created by the call.
This identifier, often referred to as a \(lqtimeout ID\(rq, can be
passed to \f[CR]clearTimeout()\f[R] to cancel the timer.
.PP
Within the same global environment (e.g., a specific window or worker)
the timeout ID is guaranteed not to be reused for any new timer as long
as the original timer remains active.
However, separate global environments maintain their own independent
pools of timer IDs.
.SH DESCRIPTION
See \f[CR]Window.setTimeout()\f[R] for detailed descriptions.
.SH EXAMPLES
See \f[CR]Window.setTimeout()\f[R] for examples.
.SH SEE ALSO
.IP \(bu 2
\c
.UR https://github.com/zloirock/core-js#settimeout-and-setinterval
Polyfill of \f[CR]setTimeout\f[R] which allows passing arguments to the
callback in \f[CR]core\-js\f[R]
.UE \c
.IP \(bu 2
\f[CR]Window.setTimeout()\f[R]
.IP \(bu 2
\f[CR]WorkerGlobalScope.clearTimeout()\f[R]
.IP \(bu 2
\f[CR]WorkerGlobalScope.setInterval()\f[R]
.IP \(bu 2
\f[CR]DedicatedWorkerGlobalScope.requestAnimationFrame()\f[R]
.IP \(bu 2
\f[CR]WorkerGlobalScope.queueMicrotask()\f[R]
