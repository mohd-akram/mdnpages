.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "HTMLInputElement.setSelectionRange" "JS" "April 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
HTMLInputElement.setSelectionRange \- HTMLInputElement:
setSelectionRange() method
.SH SYNOPSIS
The \f[B]\f[CB]HTMLInputElement.setSelectionRange()\f[B]\f[R] method
sets the start and end positions of the current text selection in an
\f[CR]<input>\f[R] or \f[CR]<textarea>\f[R] element.
.PP
Optionally, in newer browser versions, you can specify the direction in
which selection should be considered to have occurred.
This lets you indicate, for example, that the selection was set by the
user clicking and dragging from the end of the selected text toward the
beginning.
.PP
This method updates the \f[CR]HTMLInputElement.selectionStart\f[R],
\f[CR]selectionEnd\f[R], and \f[CR]selectionDirection\f[R] properties in
one call.
.PP
Note that according to the \c
.UR https://html.spec.whatwg.org/multipage/forms.html#concept-input-apply
WHATWG forms spec
.UE \c
\ \f[CR]selectionStart\f[R], \f[CR]selectionEnd\f[R] properties and
\f[CR]setSelectionRange\f[R] method apply only to inputs of types text,
search, URL, tel and password.
Chrome, starting from version 33, throws an exception while accessing
those properties and method on the rest of input types.
For example, on input of type number: \[lq]Failed to read the
`selectionStart' property from `HTMLInputElement': The input
element\[cq]s type (`number') does not support selection\[rq].
.PP
If you wish to select \f[B]all\f[R] text of an input element, you can
use the HTMLInputElement.select() method instead.
.SH SYNTAX
.IP
.EX
setSelectionRange(selectionStart, selectionEnd)
setSelectionRange(selectionStart, selectionEnd, selectionDirection)
.EE
.SS Parameters
If \f[CR]selectionEnd\f[R] is less than \f[CR]selectionStart\f[R], then
both are treated as the value of \f[CR]selectionEnd\f[R].
.TP
\f[B]selectionStart\f[R]
The 0\-based index of the first selected character.
An index greater than the length of the element\[cq]s value is treated
as pointing to the end of the value.
.TP
\f[B]selectionEnd\f[R]
The 0\-based index of the character \f[I]after\f[R] the last selected
character.
An index greater than the length of the element\[cq]s value is treated
as pointing to the end of the value.
.TP
\f[B]selectionDirection\f[R] \f[I](optional)\f[R]
A string indicating the direction in which the selection is considered
to have been performed.
Possible values:
.RS
.IP \[bu] 2
\f[CR]\[dq]forward\[dq]\f[R]
.IP \[bu] 2
\f[CR]\[dq]backward\[dq]\f[R]
.IP \[bu] 2
\f[CR]\[dq]none\[dq]\f[R] if the direction is unknown or irrelevant.
Default value.
.RE
.SS Return value
None (\f[CR]undefined\f[R]).
.SH EXAMPLES
Click the button in this example to select the third, fourth, and fifth
characters in the text box (\[lq]zil\[rq] in the word
\[lq]Mozilla\[rq]).
.SS HTML
.IP
.EX
<\f[B]input\f[R] type=\[dq]text\[dq] id=\[dq]text\-box\[dq] size=\[dq]20\[dq] value=\[dq]Mozilla\[dq] />
<\f[B]button\f[R] onclick=\[dq]selectText()\[dq]>Select text</\f[B]button\f[R]>
.EE
.SS JavaScript
.IP
.EX
\f[B]function\f[R] selectText() {
  \f[B]const\f[R] input = document.getElementById(\[dq]text\-box\[dq]);
  input.focus();
  input.setSelectionRange(2, 5);
}
.EE
.SS Result
.SH SEE ALSO
.IP \[bu] 2
\f[CR]<input>\f[R]
.IP \[bu] 2
\f[CR]<textarea>\f[R]
.IP \[bu] 2
\f[CR]HTMLInputElement\f[R]
.IP \[bu] 2
\f[CR]Selection\f[R]
