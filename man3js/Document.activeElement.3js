.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "DOCUMENT.ACTIVEELEMENT" "3JS" "February 16, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Document.activeElement \- Document: activeElement property
.SH SYNOPSIS
The \f[B]\f[CB]activeElement\f[B]\f[R] read\-only property of the
\f[CR]Document\f[R] interface returns the \f[CR]Element\f[R] within the
DOM that is receiving keyboard events such as \f[CR]keydown\f[R] and
\f[CR]keyup\f[R].
This is usually analogous to the focused element.
.PP
Which elements are focusable varies depending on the platform and the
browser\(cqs current configuration.
For example, on Safari, following the behavior of macOS, elements that
aren\(cqt text input elements are not focusable by default, unless the
\(lqFull Keyboard Access\(rq setting is enabled in System Preferences.
.PP
Typically a user can press the Tab key to move the focus around the page
among focusable elements, and use keyboard gestures such as Space or
Enter to simulate clicks on the focused element.
.RS
.PP
\f[B]Note:\f[R] Focus (which element is receiving user input events) is
not the same thing as selection (the currently highlighted part of the
document).
You can get the current selection using
\f[CR]window.getSelection()\f[R].
.RE
.SH VALUE
The deepest \f[CR]Element\f[R] which currently has focus.
.IP \(bu 2
If the focused element is within a shadow tree within the current
document (for example, the focused element is inside an
\f[CR]iframe\f[R], and the invoking \f[CR]document\f[R] contains that
iframe), then this will be the root element of that tree (in this
example, that \f[CR]iframe\f[R]).
.IP \(bu 2
If the focused element is within a document tree that\(cqs not descended
from the current document (for example, the focused element is in the
main document, and the invoking \f[CR]document\f[R] is an embedded
iframe), then this will be \f[CR]null\f[R].
.IP \(bu 2
If there\(cqs no focused element, this is the \f[CR]Document.body\f[R]
or \f[CR]Document.documentElement\f[R].
.SH EXAMPLES
.SS HTML
.IP
.EX
<\f[B]p\f[R]>Select some text from one of the text areas below:</\f[B]p\f[R]>

<\f[B]form\f[R]>
  <\f[B]textarea\f[R] name=\(dqta\-example\-one\(dq id=\(dqta\-example\-one\(dq rows=\(dq7\(dq cols=\(dq40\(dq>
This is Text Area One. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec tincidunt, lorem a porttitor molestie, odio nibh iaculis libero, et accumsan nunc orci eu dui.</\f[B]textarea\f[R]
  >
  <\f[B]textarea\f[R] name=\(dqta\-example\-two\(dq id=\(dqta\-example\-two\(dq rows=\(dq7\(dq cols=\(dq40\(dq>
This is Text Area Two. Fusce ullamcorper, nisl ac porttitor adipiscing, urna orci egestas libero, ut accumsan orci lacus laoreet diam. Morbi sed euismod diam.</\f[B]textarea\f[R]
  >
</\f[B]form\f[R]>

<\f[B]p\f[R]>Active element ID: <\f[B]em\f[R] id=\(dqoutput\-element\(dq></\f[B]em\f[R]></\f[B]p\f[R]>
<\f[B]p\f[R]>Selected text: <\f[B]em\f[R] id=\(dqoutput\-text\(dq></\f[B]em\f[R]></\f[B]p\f[R]>
.EE
.SS JavaScript
.IP
.EX
\f[B]function\f[R] onMouseUp(e) {
  \f[B]const\f[R] activeTextarea = document.activeElement;
  \f[B]const\f[R] selection = activeTextarea.value.substring(
    activeTextarea.selectionStart,
    activeTextarea.selectionEnd,
  );

  \f[B]const\f[R] outputElement = document.getElementById(\(dqoutput\-element\(dq);
  \f[B]const\f[R] outputText = document.getElementById(\(dqoutput\-text\(dq);
  outputElement.textContent = activeTextarea.id;
  outputText.textContent = selection;
}

\f[B]const\f[R] textarea1 = document.getElementById(\(dqta\-example\-one\(dq);
\f[B]const\f[R] textarea2 = document.getElementById(\(dqta\-example\-two\(dq);
textarea1.addEventListener(\(dqmouseup\(dq, onMouseUp, \f[B]false\f[R]);
textarea2.addEventListener(\(dqmouseup\(dq, onMouseUp, \f[B]false\f[R]);
.EE
.SS Result
.SH SEE ALSO
.IP \(bu 2
\f[CR]Document.hasFocus\f[R]
