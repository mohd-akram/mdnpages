'\" t
.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "undefined" "JS" "July 26, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
undefined \- undefined
.SH SYNOPSIS
The \f[B]\f[CB]undefined\f[B]\f[R] global property represents the
primitive value \f[CR]undefined\f[R].
It is one of JavaScript\[cq]s primitive types.
.SH VALUE
The primitive value \f[CR]undefined\f[R].
.PP
.TS
tab(@);
l l.
T{
Writable
T}@T{
no
T}
T{
Enumerable
T}@T{
no
T}
T{
Configurable
T}@T{
no
T}
.TE
.SH DESCRIPTION
\f[CR]undefined\f[R] is a property of the \f[I]global object\f[R].
That is, it is a variable in global scope.
.PP
In all non\-legacy browsers, \f[CR]undefined\f[R] is a
non\-configurable, non\-writable property.
Even when this is not the case, avoid overriding it.
.PP
A variable that has not been assigned a value is of type
\f[CR]undefined\f[R].
A method or statement also returns \f[CR]undefined\f[R] if the variable
that is being evaluated does not have an assigned value.
A function returns \f[CR]undefined\f[R] if a value was not
\f[CR]returned\f[R].
.RS
.PP
\f[B]Note:\f[R] While you can use \f[CR]undefined\f[R] as an identifier
(variable name) in any scope other than the global scope (because
\f[CR]undefined\f[R] is not a reserved word), doing so is a very bad
idea that will make your code difficult to maintain and debug.
.PP
\f[B]Bad\f[R]
.IP
.EX
\f[I]// DON\[aq]T DO THIS\f[R]

(() \f[B]=>\f[R] {
  \f[B]const\f[R] \f[B]undefined\f[R] = \[dq]foo\[dq];
  console.log(\f[B]undefined\f[R], \f[B]typeof\f[R] \f[B]undefined\f[R]); \f[I]// foo string\f[R]
})();

((\f[B]undefined\f[R]) \f[B]=>\f[R] {
  console.log(\f[B]undefined\f[R], \f[B]typeof\f[R] \f[B]undefined\f[R]); \f[I]// foo string\f[R]
})(\[dq]foo\[dq]);
.EE
.RE
.SH EXAMPLES
.SS Strict equality and undefined
You can use \f[CR]undefined\f[R] and the strict equality and inequality
operators to determine whether a variable has a value.
In the following code, the variable \f[CR]x\f[R] is not initialized, and
the \f[CR]if\f[R] statement evaluates to true.
.IP
.EX
\f[B]let\f[R] x;
\f[B]if\f[R] (x === \f[B]undefined\f[R]) {
  \f[I]// these statements execute\f[R]
} \f[B]else\f[R] {
  \f[I]// these statements do not execute\f[R]
}
.EE
.RS
.PP
\f[B]Note:\f[R] The \f[I]strict equality\f[R] operator (as opposed to
the \f[I]standard equality\f[R] operator) must be used here, because
\f[CR]x == undefined\f[R] also checks whether \f[CR]x\f[R] is
\f[CR]null\f[R], while strict equality doesn\[cq]t.
This is because \f[CR]null\f[R] is not equivalent to
\f[CR]undefined\f[R].
.PP
See Equality comparison and sameness for details.
.RE
.SS typeof operator and undefined
Alternatively, \f[CR]typeof\f[R] can be used:
.IP
.EX
\f[B]let\f[R] x;
\f[B]if\f[R] (\f[B]typeof\f[R] x === \[dq]undefined\[dq]) {
  \f[I]// these statements execute\f[R]
}
.EE
.PP
One reason to use \f[CR]typeof\f[R] is that it does not throw an error
if the variable has not been declared.
.IP
.EX
\f[I]// x has not been declared before\f[R]
\f[I]// evaluates to true without errors\f[R]
\f[B]if\f[R] (\f[B]typeof\f[R] x === \[dq]undefined\[dq]) {
  \f[I]// these statements execute\f[R]
}

\f[I]// Throws a ReferenceError\f[R]
\f[B]if\f[R] (x === \f[B]undefined\f[R]) {
}
.EE
.PP
However, there is another alternative.
JavaScript is a statically scoped language, so knowing if a variable is
declared can be read by seeing whether it is declared in an enclosing
context.
.PP
The global scope is bound to the global object, so checking the
existence of a variable in the global context can be done by checking
the existence of a property on the \f[I]global object\f[R], using the
\f[CR]in\f[R] operator, for instance:
.IP
.EX
\f[B]if\f[R] (\[dq]x\[dq] \f[B]in\f[R] window) {
  \f[I]// These statements execute only if x is defined globally\f[R]
}
.EE
.SS void operator and undefined
The \f[CR]void\f[R] operator is a third alternative.
.IP
.EX
\f[B]let\f[R] x;
\f[B]if\f[R] (x === \f[B]void\f[R] 0) {
  \f[I]// these statements execute\f[R]
}

\f[I]// y has not been declared before\f[R]
\f[B]if\f[R] (y === \f[B]void\f[R] 0) {
  \f[I]// throws Uncaught ReferenceError: y is not defined\f[R]
}
.EE
.SH SEE ALSO
.IP \[bu] 2
JavaScript data types and data structures
.IP \[bu] 2
\f[CR]null\f[R]
