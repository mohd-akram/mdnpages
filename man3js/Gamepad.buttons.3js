.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "Gamepad.buttons" "JS" "December 2, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Gamepad.buttons \- Gamepad: buttons property
.SH SYNOPSIS
\f[B]Secure context:\f[R] This feature is available only in secure
contexts (HTTPS).
.PP
The \f[B]\f[CB]buttons\f[B]\f[R] property of the \f[CR]Gamepad\f[R]
interface returns an array of \f[CR]gamepadButton\f[R] objects
representing the buttons present on the device.
.PP
Each entry in the array is \f[CR]0\f[R] if the button is not pressed,
and non\-zero (typically \f[CR]1.0\f[R]) if the button is pressed.
.PP
Each \f[CR]gamepadButton\f[R] object has two properties:
.TP
\f[B]pressed\f[R]
A boolean indicating whether the button is currently pressed
(\f[CR]true\f[R]) or unpressed (\f[CR]false\f[R]).
.TP
\f[B]value\f[R]
A floating point value used to enable representing analog buttons, such
as the triggers on many modern gamepads.
The values are normalized to the range 0.0 \[en] 1.0, with 0.0
representing a button that is not pressed, and 1.0 representing a button
that is fully pressed.
.SH VALUE
An array of \f[CR]gamepadButton\f[R] objects.
.SH EXAMPLES
Depending on the type of button, we need to access the
\f[CR]GamepadButton.value\f[R] or \f[CR]GamepadButton.pressed\f[R]
properties.
This example supports both:
.IP
.EX
\f[B]function\f[R] gameLoop() {
  \f[B]const\f[R] gp = navigator.getGamepads()[0];

  \f[B]if\f[R] (gp.buttons[0].value > 0 || gp.buttons[0].pressed) {
    b\-\-;
  } \f[B]else\f[R] \f[B]if\f[R] (gp.buttons[1].value > 0 || gp.buttons[1].pressed) {
    a++;
  } \f[B]else\f[R] \f[B]if\f[R] (gp.buttons[2].value > 0 || gp.buttons[2].pressed) {
    b++;
  } \f[B]else\f[R] \f[B]if\f[R] (gp.buttons[3].value > 0 || gp.buttons[3].pressed) {
    a\-\-;
  }

  ball.style.left = \[ga]${a * 2}px\[ga]; \f[I]// ball is a UI widget\f[R]
  ball.style.top = \[ga]${b * 2}px\[ga];

  requestAnimationFrame(gameLoop);
}
.EE
.SH SEE ALSO
Using the Gamepad API
