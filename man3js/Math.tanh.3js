.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "Math.tanh" "JS" "February 11, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Math.tanh \- Math.tanh()
.SH SYNOPSIS
The \f[B]\f[CB]Math.tanh()\f[B]\f[R] static method returns the
hyperbolic tangent of a number.
That is,
.PP
\ 𝙼𝚊𝚝𝚑.𝚝𝚊𝚗𝚑(𝚡)=tanh(x)=sinh(x)cosh(x)=ex−e−xex+e−x=e2x−1e2x+1 = (x) =  =
\ =  
.IP
.EX
console.log(Math.tanh(\-1));
\f[I]// Expected output: \-0.7615941559557649\f[R]

console.log(Math.tanh(0));
\f[I]// Expected output: 0\f[R]

console.log(Math.tanh(\f[B]Infinity\f[R]));
\f[I]// Expected output: 1\f[R]

console.log(Math.tanh(1));
\f[I]// Expected output: 0.7615941559557649\f[R]
.EE
.SH SYNTAX
.IP
.EX
Math.tanh(x)
.EE
.SS Parameters
.TP
\f[B]x\f[R]
A number.
.SS Return value
The hyperbolic tangent of \f[CR]x\f[R].
.SH DESCRIPTION
Because \f[CR]tanh()\f[R] is a static method of \f[CR]Math\f[R], you
always use it as \f[CR]Math.tanh()\f[R], rather than as a method of a
\f[CR]Math\f[R] object you created (\f[CR]Math\f[R] is not a
constructor).
.SH EXAMPLES
.SS Using Math.tanh()
.IP
.EX
Math.tanh(\-\f[B]Infinity\f[R]); \f[I]// \-1\f[R]
Math.tanh(\-0); \f[I]// \-0\f[R]
Math.tanh(0); \f[I]// 0\f[R]
Math.tanh(1); \f[I]// 0.7615941559557649\f[R]
Math.tanh(\f[B]Infinity\f[R]); \f[I]// 1\f[R]
.EE
.SH SEE ALSO
.IP \[bu] 2
\c
.UR https://github.com/zloirock/core-js#ecmascript-math
Polyfill of \f[CR]Math.tanh\f[R] in \f[CR]core\-js\f[R]
.UE \c
.IP \[bu] 2
\f[CR]Math.acosh()\f[R]
.IP \[bu] 2
\f[CR]Math.asinh()\f[R]
.IP \[bu] 2
\f[CR]Math.atanh()\f[R]
.IP \[bu] 2
\f[CR]Math.cosh()\f[R]
.IP \[bu] 2
\f[CR]Math.sinh()\f[R]
