.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "WEBGLRENDERINGCONTEXT.BINDTEXTURE" "3JS" "May 22, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
WebGLRenderingContext.bindTexture \- WebGLRenderingContext:
bindTexture() method
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]WebGLRenderingContext.bindTexture()\f[B]\f[R] method of
the WebGL API binds a given \f[CR]WebGLTexture\f[R] to a target (binding
point).
.SH SYNTAX
.IP
.EX
bindTexture(target, texture)
.EE
.SS Parameters
.TP
\f[B]target\f[R]
A \f[CR]GLenum\f[R] specifying the binding point (target).
Possible values:
.RS
.TP
\f[B]gl.TEXTURE_2D\f[R]
A two\-dimensional texture.
.TP
\f[B]gl.TEXTURE_CUBE_MAP\f[R]
A cube\-mapped texture.
.PP
When using a WebGL 2 context, the following values are available
additionally:
.TP
\f[B]gl.TEXTURE_3D\f[R]
A three\-dimensional texture.
.TP
\f[B]gl.TEXTURE_2D_ARRAY\f[R]
A two\-dimensional array texture.
.RE
.TP
\f[B]texture\f[R]
A \f[CR]WebGLTexture\f[R] object to bind.
If \f[CR]null\f[R] is passed, the currently bound texture for the
specified target is unbound.
.SS Return value
None (\f[CR]undefined\f[R]).
.SS Exceptions
A \f[CR]gl.INVALID_ENUM\f[R] error is thrown if \f[CR]target\f[R] is not
\f[CR]gl.TEXTURE_2D\f[R], \f[CR]gl.TEXTURE_CUBE_MAP\f[R],
\f[CR]gl.TEXTURE_3D\f[R], or \f[CR]gl.TEXTURE_2D_ARRAY\f[R].
.SH EXAMPLES
.SS Binding a texture
.IP
.EX
\f[B]const\f[R] canvas = document.getElementById(\(dqcanvas\(dq);
\f[B]const\f[R] gl = canvas.getContext(\(dqwebgl\(dq);
\f[B]const\f[R] texture = gl.createTexture();

gl.bindTexture(gl.TEXTURE_2D, texture);
.EE
.SS Unbinding a texture
.IP
.EX
\f[I]// Unbind any texture currently bound to TEXTURE_2D\f[R]
gl.bindTexture(gl.TEXTURE_2D, \f[B]null\f[R]);
.EE
.SS Getting current bindings
To check the current texture binding, query the
\f[CR]gl.TEXTURE_BINDING_2D\f[R] or
\f[CR]gl.TEXTURE_BINDING_CUBE_MAP\f[R] constants.
.IP
.EX
gl.getParameter(gl.TEXTURE_BINDING_2D);
.EE
.SH SEE ALSO
.IP \(bu 2
\f[CR]WebGLRenderingContext.createTexture()\f[R]
.IP \(bu 2
\f[CR]WebGLRenderingContext.deleteTexture()\f[R]
.IP \(bu 2
\f[CR]WebGLRenderingContext.isTexture()\f[R]
.IP \(bu 2
\f[CR]WebGLRenderingContext.texImage2D()\f[R]
