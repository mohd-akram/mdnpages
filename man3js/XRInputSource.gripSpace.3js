.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "XRInputSource.gripSpace" "JS" "March 12, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
XRInputSource.gripSpace \- XRInputSource: gripSpace property
.SH SYNOPSIS
\f[B]Secure context:\f[R] This feature is available only in secure
contexts (HTTPS).
.PP
The read\-only \f[CR]XRInputSource\f[R] property
\f[B]\f[CB]gripSpace\f[B]\f[R] returns an \f[CR]XRSpace\f[R] whose
native origin tracks the pose used to render virtual objects so they
appear to be held in (or part of) the user\[cq]s hand.
For example, if a user were holding a virtual straight rod, the native
origin of this \f[CR]XRSpace\f[R] would be located at the approximate
center of mass of the user\[cq]s fist.
.SH VALUE
An \f[CR]XRSpace\f[R] object representing the position and orientation
of the input device in virtual space, suitable for rendering an image of
the device into the scene.
\f[CR]gripSpace\f[R] is \f[CR]null\f[R] if the input source is not
inherently trackable.
For example, only inputs whose \f[CR]targetRayMode\f[R] is
\f[CR]tracked\-pointer\f[R] provide a \f[CR]gripSpace\f[R].
.PP
Imagine that the controller is shaped like a straight rod, held in the
user\[cq]s fist.
The native origin of the grip space is located at the centroid\[em]the
center of mass\[em]of the user\[cq]s fist, tracking the position of the
user\[cq]s hand.
.PP
\f[B]The coordinate system for the left hand\[cq]s grip space.\f[R]
[IMAGE: A diagram showing how the grip space indicates the local
coordinate system for the player\[cq]s hand relative to the world.]
A diagram showing how the grip space indicates the local coordinate
system for the player\[cq]s hand relative to the world.
.PP
\f[B]The coordinate system for the right hand\[cq]s grip space.\f[R]
[IMAGE: A diagram showing how the grip space indicates the local
coordinate system for the player\[cq]s hand relative to the world.]
A diagram showing how the grip space indicates the local coordinate
system for the player\[cq]s hand relative to the world.
.PP
As shown in the diagram above, the coordinate system is oriented as
follows:
.IP \[bu] 2
The x\-axis is perpendicular to the palm of the user\[cq]s hand, with
the direction extending outward from the back of the hand being +X if
the controller is in the user\[cq]s right hand or \-X if the controller
is in the left hand.
.IP \[bu] 2
The z\-axis along the length of the rod, parallel to the user\[cq]s palm
and along the length of their grip.
\-Z is in the direction of the user\[cq]s thumb, and +Z is in the
opposite direction.
.IP \[bu] 2
The y\-axis is implied by the relationship between the other two axes;
as is always the case, it\[cq]s the cross product of the other two axes
(lying 90Â° away from both the X and Z axes).
.SH EXAMPLES
In tis example, taken from the frame rendering callback, the
\f[CR]gripSpace\f[R] is used to render a mesh that represents the
position and orientation of the controller in the virtual environment.
.IP
.EX
\f[B]for\f[R] (\f[B]const\f[R] source \f[B]in\f[R] xrSession.inputSources) {
  \f[B]if\f[R] (source.gripSpace) {
    \f[B]const\f[R] gripPose = frame.getPose(source.gripSpace, xrRefSpace);

    \f[B]if\f[R] (gripPose) {
      myDrawMeshUsingTransform(controllerMesh, gripPose.transform.matrix);
    }
  }
}
.EE
.PP
For each input source which has a value for \f[CR]gripSpace\f[R], this
loop obtains the \f[CR]XRPose\f[R] representing the position and
orientation that are described by \f[CR]gripSpace\f[R].
If a valid pose is returned, a method
\f[CR]myDrawMeshUsingTransform()\f[R] is called to draw the
controller\[cq]s mesh transformed using the grip pose\[cq]s transform
matrix.
