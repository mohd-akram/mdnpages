.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "FORMDATA.FORMDATA" "3JS" "April 10, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
FormData.FormData \- FormData: FormData() constructor
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]FormData()\f[B]\f[R] constructor creates a new
\f[CR]FormData\f[R] object.
.SH SYNTAX
.IP
.EX
new FormData()
new FormData(form)
new FormData(form, submitter)
.EE
.SS Parameters
.TP
\f[B]form\f[R] \f[I](optional)\f[R]
An HTML \f[CR]<form>\f[R] element \(em when specified, the
\f[CR]FormData\f[R] object will be populated with the
\f[CR]form\f[R]\(cqs current keys/values using the name property of each
element for the keys and their submitted value for the values.
It will also encode file input content.
A \f[CR]formdata\f[R] event is fired on the form when the
\f[CR]FormData\f[R] object is created, allowing the form to modify the
formdata if necessary.
.TP
\f[B]submitter\f[R] \f[I](optional)\f[R]
A submit button that is a member of the \f[CR]form\f[R].
If the \f[CR]submitter\f[R] has a \f[CR]name\f[R] attribute or is an
\f[CR]&lt;input type=\(dqimage\(dq&gt;\f[R], its data will be included
in the \f[CR]FormData\f[R] object (e.g., \f[CR]btnName=btnValue\f[R]).
.SS Exceptions
.TP
\f[B]TypeError\f[R]
Thrown if the specified \f[CR]submitter\f[R] is not a submit button.
.TP
\f[B]NotFoundError\f[R] \f[B]DOMException\f[R]
Thrown if the specified \f[CR]submitter\f[R] isn\(cqt a member of the
\f[CR]form\f[R].
The \f[CR]submitter\f[R] must be either a descendant of the form element
or must have a \f[CR]form\f[R] attribute referring to the form.
.SH EXAMPLES
.SS Creating an empty FormData
The following line creates an empty \f[CR]FormData\f[R] object:
.IP
.EX
\f[B]const\f[R] formData = \f[B]new\f[R] FormData();
.EE
.PP
You could add a key/value pair to this using \f[CR]append()\f[R]:
.IP
.EX
formData.append(\(dqusername\(dq, \(dqChris\(dq);
.EE
.SS Prepopulating from a HTML form element
You can specify the optional \f[CR]form\f[R] and \f[CR]submitter\f[R]
arguments when creating the \f[CR]FormData\f[R] object, to prepopulate
it with values from the specified form.
.RS
.PP
\f[B]Note:\f[R] Only successful form controls are included in a FormData
object, i.e., those with a name and not in a disabled state.
.RE
.SS HTML
.IP
.EX
<\f[B]form\f[R] id=\(dqform\(dq>
  <\f[B]input\f[R] type=\(dqtext\(dq name=\(dqtext1\(dq value=\(dqfoo\(dq />
  <\f[B]input\f[R] type=\(dqtext\(dq name=\(dqtext2\(dq value=\(dqbar\(dq />
  <\f[B]input\f[R] type=\(dqtext\(dq name=\(dqtext2\(dq value=\(dqbaz\(dq />
  <\f[B]input\f[R] type=\(dqcheckbox\(dq name=\(dqcheck\(dq checked disabled />
  <\f[B]button\f[R] name=\(dqintent\(dq value=\(dqsave\(dq>Save</\f[B]button\f[R]>
  <\f[B]button\f[R] name=\(dqintent\(dq value=\(dqsaveAsCopy\(dq>Save As Copy</\f[B]button\f[R]>
</\f[B]form\f[R]>

<\f[B]output\f[R] id=\(dqoutput\(dq></\f[B]output\f[R]>
.EE
.SS JavaScript
.IP
.EX
\f[B]const\f[R] form = document.getElementById(\(dqform\(dq);
\f[B]const\f[R] submitter = document.querySelector(\(dqbutton[value=save]\(dq);
\f[B]const\f[R] formData = \f[B]new\f[R] FormData(form, submitter);

\f[B]const\f[R] output = document.getElementById(\(dqoutput\(dq);

\f[B]for\f[R] (\f[B]const\f[R] [key, value] \f[B]of\f[R] formData) {
  output.textContent += \(ga${key}: ${value}\(rsn\(ga;
}
.EE
.SS Result
For brevity, the \f[CR]<form>\f[R] element is hidden from view.
.SH SEE ALSO
.IP \(bu 2
Using FormData objects
.IP \(bu 2
\f[CR]<Form>\f[R]
