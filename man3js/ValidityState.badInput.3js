.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "VALIDITYSTATE.BADINPUT" "3JS" "April 10, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
ValidityState.badInput \- ValidityState: badInput property
.SH SYNOPSIS
The read\-only \f[B]\f[CB]badInput\f[B]\f[R] property of the
ValidityState interface indicates if the user has provided input that
the browser is unable to convert.
For example, if you have a number input element whose content is a
string.
.SH VALUE
A boolean that is \f[CR]true\f[R] if the \f[CR]ValidityState\f[R] object
does not conform to the expected type.
.SH EXAMPLES
.SS Detecting bad input
The following example checks the validity of a numeric input element.
If the user enters text instead of a number, the element fails
constraint validation, and the styles matching \f[CR]input:invalid\f[R]
are applied.
The \f[CR]<pre>\f[R] element above the input shows the validation
message when the element \f[CR]badInput\f[R] evaluates to
\f[CR]true\f[R]:
.IP
.EX
input\f[BI]:invalid\f[R] {
  \f[B]outline\f[R]: red solid 3px;
}
.EE
.IP
.EX
<\f[B]pre\f[R] id=\(dqlog\(dq>Validation logged here...</\f[B]pre\f[R]>
<\f[B]input\f[R] type=\(dqnumber\(dq id=\(dqage\(dq />
.EE
.IP
.EX
\f[B]const\f[R] userInput = document.getElementById(\(dqage\(dq);
\f[B]const\f[R] logElement = document.getElementById(\(dqlog\(dq);

\f[B]function\f[R] log(text) {
  logElement.innerText = text;
}

userInput.addEventListener(\(dqinput\(dq, () \f[B]=>\f[R] {
  userInput.reportValidity();
  \f[B]if\f[R] (userInput.validity.badInput) {
    log(\(dqBad input detected: \(dq + userInput.validationMessage);
  }
});
.EE
.SH SEE ALSO
.IP \(bu 2
ValidityState valid, customError properties.
.IP \(bu 2
Guide: Constraint validation
.IP \(bu 2
Tutorial: Form data validation
