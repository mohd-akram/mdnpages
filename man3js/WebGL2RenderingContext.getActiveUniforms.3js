.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "WebGL2RenderingContext.getActiveUniforms" "JS" "July 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
WebGL2RenderingContext.getActiveUniforms \- WebGL2RenderingContext:
getActiveUniforms() method
.SH SYNOPSIS
The \f[B]\f[CB]WebGL2RenderingContext.getActiveUniforms()\f[B]\f[R]
method of the WebGL 2 API retrieves information about active uniforms
within a \f[CR]WebGLProgram\f[R].
.SH SYNTAX
.IP
.EX
getActiveUniforms(program, uniformIndices, pname)
.EE
.SS Parameters
.TP
\f[B]program\f[R]
A \f[CR]WebGLProgram\f[R] containing the active uniforms.
.TP
\f[B]uniformIndices\f[R]
An \f[CR]Array\f[R] of \f[CR]GLuint\f[R] specifying the indices of the
active uniforms to query.
.TP
\f[B]pname\f[R]
A \f[CR]GLenum\f[R] specifying which information to query.
Possible values:
.RS
.TP
\f[B]gl.UNIFORM_TYPE\f[R]
Returns an \f[CR]Array\f[R] of \f[CR]GLenum\f[R] indicating the types of
the uniforms.
.TP
\f[B]gl.UNIFORM_SIZE\f[R]
Returns an \f[CR]Array\f[R] of \f[CR]GLuint\f[R] indicating the sizes of
the uniforms.
.TP
\f[B]gl.UNIFORM_BLOCK_INDEX\f[R]
Returns an \f[CR]Array\f[R] of \f[CR]GLint\f[R] indicating the block
indices of the uniforms.
.TP
\f[B]gl.UNIFORM_OFFSET\f[R]
Returns an \f[CR]Array\f[R] of \f[CR]GLint\f[R] indicating the uniform
buffer offsets.
.TP
\f[B]gl.UNIFORM_ARRAY_STRIDE\f[R]
Returns an \f[CR]Array\f[R] of \f[CR]GLint\f[R] indicating the strides
between the elements.
.TP
\f[B]gl.UNIFORM_MATRIX_STRIDE\f[R]
Returns an \f[CR]Array\f[R] of \f[CR]GLint\f[R] indicating the strides
between columns of a column\-major matrix or a row\-major matrix.
.TP
\f[B]gl.UNIFORM_IS_ROW_MAJOR\f[R]
Returns an \f[CR]Array\f[R] of \f[CR]GLboolean\f[R] indicating whether
each of the uniforms is a row\-major matrix or not.
.RE
.SS Return value
Depends on which information is requested using the \f[CR]pname\f[R]
parameter.
.SH EXAMPLES
.IP
.EX
\f[B]const\f[R] uniformIndices = gl.getUniformIndices(program, [
  \[dq]UBORed\[dq],
  \[dq]UBOGreen\[dq],
  \[dq]UBOBlue\[dq],
]);
\f[B]const\f[R] uniformOffsets = gl.getActiveUniforms(
  program,
  uniformIndices,
  gl.UNIFORM_OFFSET,
);
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]WebGL2RenderingContext.getActiveUniformBlockParameter()\f[R]
