.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "HTMLSlotElement" "JS" "December 26, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
HTMLSlotElement \- HTMLSlotElement
.SH SYNOPSIS
The \f[B]\f[CB]HTMLSlotElement\f[B]\f[R] interface of the Shadow DOM API
enables access to the name and assigned nodes of an HTML
\f[CR]<slot>\f[R] element.
.SH INSTANCE PROPERTIES
\f[I]Also inherits properties from its parent interface,
\f[CI]HTMLElement\f[I].\f[R]
.TP
\f[B]HTMLSlotElement.name\f[R]
A string used to get and set the slot\[cq]s name.
.SH INSTANCE METHODS
\f[I]Also inherits methods from its parent interface,
\f[CI]HTMLElement\f[I].\f[R]
.TP
\f[B]HTMLSlotElement.assign()\f[R]
Sets the manually assigned nodes for this slot to the given nodes.
.TP
\f[B]HTMLSlotElement.assignedNodes()\f[R]
Returns a sequence of the nodes assigned to this slot.
If the \f[CR]flatten\f[R] option is set to \f[CR]true\f[R], it returns a
sequence of both the nodes assigned to this slot, and the nodes assigned
to any other slots that are descendants of this slot.
If no assigned nodes are found, it returns the slot\[cq]s fallback
content.
.TP
\f[B]HTMLSlotElement.assignedElements()\f[R]
Returns a sequence of the elements assigned to this slot (and no other
nodes).
If the \f[CR]flatten\f[R] option is set to \f[CR]true\f[R], it returns a
sequence of both the elements assigned to this slot, and the elements
assigned to any other slots that are descendants of this slot.
If no assigned elements are found, it returns the slot\[cq]s fallback
content.
.SH EVENTS
\f[I]Also inherits events from its parent interface,
\f[CI]HTMLElement\f[I].\f[R]
.PP
Listen to these events using \f[CR]addEventListener()\f[R] or by
assigning an event listener to the \f[CR]oneventname\f[R] property of
this interface.
.TP
\f[B]slotchange\f[R]
Fired on an \f[CR]HTMLSlotElement\f[R] instance (\f[CR]<slot>\f[R]
element) when the node(s) contained in that slot change.
.SH EXAMPLES
The following snippet is taken from our \c
.UR https://github.com/mdn/web-components-examples/tree/main/slotchange
slotchange example
.UE \c
\ (\c
.UR https://mdn.github.io/web-components-examples/slotchange/
see it live also
.UE \c
).
.IP
.EX
\f[B]let\f[R] slots = \f[B]this\f[R].shadowRoot.querySelectorAll(\[dq]slot\[dq]);
slots[1].addEventListener(\[dq]slotchange\[dq], (e) \f[B]=>\f[R] {
  \f[B]let\f[R] nodes = slots[1].assignedNodes();
  console.log(
    \[ga]Element in Slot \[dq]${slots[1].name}\[dq] changed to \[dq]${nodes[0].outerHTML}\[dq].\[ga],
  );
});
.EE
.PP
Here we grab references to all the slots, then add a slotchange event
listener to the 2nd slot in the template \[em] which is the one that
keeps having its contents changed in the example.
.PP
Every time the element inserted in the slot changes, we log a report to
the console saying which slot has changed, and what the new node inside
the slot is.
