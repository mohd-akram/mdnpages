.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "VideoPlaybackQuality.totalVideoFrames" "JS" "March 7, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
VideoPlaybackQuality.totalVideoFrames \- VideoPlaybackQuality:
totalVideoFrames property
.SH SYNOPSIS
The \f[CR]VideoPlaybackQuality\f[R] interface\[cq]s
\f[B]\f[CB]totalVideoFrames\f[B]\f[R] read\-only property returns the
total number of video frames that have been displayed or dropped since
the media was loaded.
.SH VALUE
The total number of frames that the \f[CR]<video>\f[R] element has
displayed or dropped since the media was loaded into it.
Essentially, this is the number of frames the element \f[I]would have
presented\f[R] had no problems occurred.
.PP
This value is reset when the media is reloaded or replaced.
.SH EXAMPLES
This example calls \f[CR]getVideoPlaybackQuality()\f[R] to obtain a
\f[CR]VideoPlaybackQuality\f[R] object, then determines what percentage
of frames have been lost by either corruption or being dropped.
If that exceeds 10% (0.1), a function called
\f[CR]lostFramesThresholdExceeded()\f[R] is called to, perhaps, update a
quality indicator to show an increase in frame loss.
.IP
.EX
\f[B]const\f[R] videoElem = document.getElementById(\[dq]my_vid\[dq]);
\f[B]const\f[R] quality = videoElem.getVideoPlaybackQuality();

\f[B]if\f[R] (
  (quality.corruptedVideoFrames + quality.droppedVideoFrames) /
    quality.totalVideoFrames >
  0.1
) {
  lostFramesThresholdExceeded();
}
.EE
.PP
A similar algorithm might be used to attempt to switch to a
lower\-resolution video that requires less bandwidth, in order to avoid
dropping frames.
.SH SEE ALSO
.IP \[bu] 2
The \f[CR]HTMLVideoElement.getVideoPlaybackQuality()\f[R] method for
constructing and returning this interface.
