.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "INTL.LOCALE.MAXIMIZE" "3JS" "June 20, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Intl.Locale.maximize \- Intl.Locale.prototype.maximize()
.SH SYNOPSIS
The \f[B]\f[CB]maximize()\f[B]\f[R] method of \f[CR]Intl.Locale\f[R]
instances gets the most likely values for the language, script, and
region of this locale based on existing values.
.IP
.EX
\f[B]const\f[R] english = \f[B]new\f[R] Intl.Locale(\(dqen\(dq);
\f[B]const\f[R] korean = \f[B]new\f[R] Intl.Locale(\(dqko\(dq);
\f[B]const\f[R] arabic = \f[B]new\f[R] Intl.Locale(\(dqar\(dq);

console.log(english.maximize().baseName);
\f[I]// Expected output: \(dqen\-Latn\-US\(dq\f[R]

console.log(korean.maximize().baseName);
\f[I]// Expected output: \(dqko\-Kore\-KR\(dq\f[R]

console.log(arabic.maximize().baseName);
\f[I]// Expected output: \(dqar\-Arab\-EG\(dq\f[R]
.EE
.SH SYNTAX
.IP
.EX
maximize()
.EE
.SS Parameters
None.
.SS Return value
A \f[CR]Intl.Locale\f[R] instance whose \f[CR]baseName\f[R] property
returns the result of the \c
.UR https://www.unicode.org/reports/tr35/#Likely_Subtags
Add Likely Subtags
.UE \c
\ algorithm executed against \f[I]\f[CI]locale.baseName\f[I]\f[R].
.SH DESCRIPTION
Sometimes, it is convenient to be able to identify the most likely
locale language identifier subtags based on an incomplete language ID.
The Add Likely Subtags algorithm gives us this functionality.
For instance, given the language ID \(lqen\(rq, the algorithm would
return \(lqen\-Latn\-US\(rq, since English can only be written in the
Latin script, and is most likely to be used in the United States, as it
is the largest English\-speaking country in the world.
This functionality is provided to JavaScript programmers via the
\f[CR]maximize()\f[R] method.
\f[CR]maximize()\f[R] only affects the main subtags that comprise the \c
.UR https://www.unicode.org/reports/tr35/#Language_Locale_Field_Definitions
language identifier
.UE \c
: language, script, and region subtags.
Other subtags after the \(lq\-u\(rq in the locale identifier are called
extension subtags and are not affected by the \f[CR]maximize()\f[R]
method.
Examples of these subtags include \f[CR]hourCycle\f[R],
\f[CR]calendar\f[R], and \f[CR]numeric\f[R].
.SH EXAMPLES
.SS Using maximize
.IP
.EX
\f[B]const\f[R] myLocale = \f[B]new\f[R] Intl.Locale(\(dqfr\(dq, {
  hourCycle: \(dqh12\(dq,
  calendar: \(dqgregory\(dq,
});
console.log(myLocale.baseName); \f[I]// Prints \(dqfr\(dq\f[R]
console.log(myLocale.toString()); \f[I]// Prints \(dqfr\-u\-ca\-gregory\-hc\-h12\(dq\f[R]
\f[B]const\f[R] myLocMaximized = myLocale.maximize();

\f[I]// Prints \(dqfr\-Latn\-FR\(dq. The \(dqLatn\(dq and \(dqFR\(dq tags are added,\f[R]
\f[I]// since French is only written in the Latin script and is most likely to be spoken in France.\f[R]
console.log(myLocMaximized.baseName);

\f[I]// Prints \(dqfr\-Latn\-FR\-u\-ca\-gregory\-hc\-h12\(dq.\f[R]
\f[I]// Note that the extension tags (after \(dq\-u\(dq) remain unchanged.\f[R]
console.log(myLocMaximized.toString());
.EE
.SH SEE ALSO
.IP \(bu 2
\f[CR]Intl.Locale\f[R]
.IP \(bu 2
\f[CR]baseName\f[R]
.IP \(bu 2
\c
.UR https://www.unicode.org/reports/tr35/#Likely_Subtags
Likely Subtags
.UE \c
\ in the Unicode locale data markup language spec
