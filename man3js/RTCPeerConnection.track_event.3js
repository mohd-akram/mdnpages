.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "RTCPEERCONNECTION.TRACK_EVENT" "3JS" "May 2, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
RTCPeerConnection.track_event \- RTCPeerConnection: track event
.SH SYNOPSIS
The \f[B]\f[CB]track\f[B]\f[R] event is sent to the \f[CR]ontrack\f[R]
event handler on \f[CR]RTCPeerConnection\f[R]s after a new track has
been added to an \f[CR]RTCRtpReceiver\f[R] which is part of the
connection.
.PP
By the time this event is delivered, the new track has been fully added
to the peer connection.
See Track event types for details.
.PP
This event is not cancellable and does not bubble.
.SH SYNTAX
Use the event name in methods like \f[CR]addEventListener()\f[R], or set
an event handler property.
.IP
.EX
addEventListener(\(dqtrack\(dq, (event) => { })

ontrack = (event) => { }
.EE
.SH EVENT TYPE
An \f[CR]RTCTrackEvent\f[R].
Inherits from \f[CR]Event\f[R].
.SH EVENT PROPERTIES
\f[I]Since \f[CI]RTCTrackEvent\f[I] is based on \f[CI]Event\f[I], its
properties are also available.\f[R]
.TP
\f[B]receiver\f[R] \f[I](read\-only)\f[R]
The \f[CR]RTCRtpReceiver\f[R] used by the track that\(cqs been added to
the \f[CR]RTCPeerConnection\f[R].
.TP
\f[B]streams\f[R] \f[I](read\-only)\f[R] \f[I](optional)\f[R]
An array of \f[CR]MediaStream\f[R] objects, each representing one of the
media streams to which the added \f[CR]track\f[R] belongs.
By default, the array is empty, indicating a streamless track.
.TP
\f[B]track\f[R] \f[I](read\-only)\f[R]
The \f[CR]MediaStreamTrack\f[R] which has been added to the connection.
.TP
\f[B]transceiver\f[R] \f[I](read\-only)\f[R]
The \f[CR]RTCRtpTransceiver\f[R] being used by the new track.
.SH EXAMPLES
This example shows code that creates a new \f[CR]RTCPeerConnection\f[R],
then adds a new \f[CR]track\f[R] event handler.
.IP
.EX
pc = \f[B]new\f[R] RTCPeerConnection({
  iceServers: [
    {
      urls: \(dqturn:fake.turn\-server.url\(dq,
      username: \(dqsome username\(dq,
      credential: \(dqsome\-password\(dq,
    },
  ],
});

pc.addEventListener(
  \(dqtrack\(dq,
  (e) \f[B]=>\f[R] {
    videoElement.srcObject = e.streams[0];
    hangupButton.disabled = \f[B]false\f[R];
  },
  \f[B]false\f[R],
);
.EE
.PP
The event handler assigns the new track\(cqs first stream to an existing
\f[CR]<video>\f[R] element, identified using the variable
\f[CR]videoElement\f[R].
.PP
You can also assign the event handler function to the \f[CR]ontrack\f[R]
property, rather than use \f[CR]addEventListener()\f[R].
.IP
.EX
pc.ontrack = (e) \f[B]=>\f[R] {
  videoElement.srcObject = e.streams[0];
  hangupButton.disabled = \f[B]false\f[R];
  \f[B]return\f[R] \f[B]false\f[R];
};
.EE
