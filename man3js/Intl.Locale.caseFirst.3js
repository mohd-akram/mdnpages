'\" t
.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "Intl.Locale.caseFirst" "JS" "September 25, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Intl.Locale.caseFirst \- Intl.Locale.prototype.caseFirst
.SH SYNOPSIS
The \f[B]\f[CB]caseFirst\f[B]\f[R] accessor property of
\f[CR]Intl.Locale\f[R] instances returns whether case is taken into
account for this locale\[cq]s collation rules.
.SH DESCRIPTION
A locale\[cq]s collation rules are used to determine how strings are
ordered in that locale.
Certain locales use a character\[cq]s case (UPPERCASE or lowercase) in
the collation process.
This additional rule can be expressed in a \f[CR]Intl.Locale\f[R]
object\[cq]s \f[CR]caseFirst\f[R] property.
.PP
There are 3 values that the \f[CR]caseFirst\f[R] property can have,
outlined in the table below.
.SS \f[CR]caseFirst\f[R] values
.PP
.TS
tab(@);
l l.
T{
Value
T}@T{
Description
T}
_
T{
\f[CR]upper\f[R]
T}@T{
Upper case to be sorted before lower case.
T}
T{
\f[CR]lower\f[R]
T}@T{
Lower case to be sorted before upper case.
T}
T{
\f[CR]false\f[R]
T}@T{
No special case ordering.
T}
.TE
.SH EXAMPLES
.SS Setting the caseFirst value via the locale string
In the \c
.UR https://www.unicode.org/reports/tr35/
Unicode locale string spec
.UE \c
, the values that \f[CR]caseFirst\f[R] represents correspond to the key
\f[CR]kf\f[R].
\f[CR]kf\f[R] is treated as a locale string \[lq]extension subtag\[rq].
These subtags add additional data about the locale, and are added to
locale identifiers by using the \f[CR]\-u\f[R] extension key.
Thus, the \f[CR]caseFirst\f[R] value can be added to the initial locale
identifier string that is passed into the \f[CR]Locale\f[R] constructor.
To add the \f[CR]caseFirst\f[R] value, first add the \f[CR]\-u\f[R]
extension key to the string.
Next, add the \f[CR]\-kf\f[R] extension key to indicate that you are
adding a value for \f[CR]caseFirst\f[R].
Finally, add the \f[CR]caseFirst\f[R] value to the string.
.IP
.EX
\f[B]const\f[R] locale = \f[B]new\f[R] Intl.Locale(\[dq]fr\-Latn\-FR\-u\-kf\-upper\[dq]);
console.log(locale.caseFirst); \f[I]// Prints \[dq]upper\[dq]\f[R]
.EE
.SS Setting the caseFirst value via the configuration object argument
The \f[CR]Intl.Locale()\f[R] constructor has an optional configuration
object argument, which can be used to pass extension types.
Set the \f[CR]caseFirst\f[R] property of the configuration object to
your desired \f[CR]caseFirst\f[R] value, and then pass it into the
constructor.
.IP
.EX
\f[B]const\f[R] locale = \f[B]new\f[R] Intl.Locale(\[dq]en\-Latn\-US\[dq], { caseFirst: \[dq]lower\[dq] });
console.log(locale.caseFirst); \f[I]// Prints \[dq]lower\[dq]\f[R]
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]Intl.Locale\f[R]
.IP \[bu] 2
\c
.UR https://github.com/unicode-org/cldr/blob/main/common/bcp47/collation.xml#L49
Unicode case first collation spec
.UE \c
