.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "CSSFONTFEATUREVALUESRULE.FONTFAMILY" "3JS" "August 5, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
CSSFontFeatureValuesRule.fontFamily \- CSSFontFeatureValuesRule:
fontFamily property
.SH SYNOPSIS
The \f[B]\f[CB]fontFamily\f[B]\f[R] property of the
\f[CR]CSSConditionRule\f[R] interface represents the name of the font
family it applies to.
.SH VALUE
A string.
.SH EXAMPLES
.SS Read font family
In this example, we declare two \f[CR]\(atfont\-feature\-values\f[R] one
for the \f[I]Font One\f[R] font family, and the other for \f[I]Font
Two\f[R].
We then use the CSSOM to read these font families, displaying them into
the log.
.IP
.EX
<\f[B]pre\f[R] id=\(dqlog\(dq></\f[B]pre\f[R]>
.EE
.SS CSS
.IP
.EX
\f[I]/* At\-rule for \(dqnice\-style\(dq in Font One */\f[R]
\f[B]\(atfont\-feature\-values\f[R] Font One {
  \f[B]\(atstyleset\f[R] {
    nice\-style\f[BI]:\f[R] 12;
  }
}

\f[I]/* At\-rule for \(dqnice\-style\(dq in Font Two */\f[R]
\f[B]\(atfont\-feature\-values\f[R] Font Two {
  \f[B]\(atstyleset\f[R] {
    nice\-style\f[BI]:\f[R] 4;
  }
}

\f[I]/* Apply the at\-rules with a single declaration */\f[R]
\&.nice\-look {
  \f[B]font\-variant\-alternates\f[R]: styleset(nice\-style);
}
.EE
.SS JavaScript
.IP
.EX
\f[B]const\f[R] log = document.getElementById(\(dqlog\(dq);
\f[B]const\f[R] rules = document.styleSheets[document.styleSheets.length \- 1].cssRules;

\f[B]const\f[R] fontOne = rules[0]; \f[I]// A CSSFontFeatureValuesRule\f[R]
log.textContent = \(gaThe 1st \(aq\(atfont\-feature\-values\(aq family: \(dq${fontOne.fontFamily}\(dq.\(rsn\(ga;

\f[B]const\f[R] fontTwo = rules[1]; \f[I]// Another CSSFontFeatureValuesRule\f[R]
log.textContent += \(gaThe 2nd \(aq\(atfont\-feature\-values\(aq family: \(dq${fontTwo.fontFamily}\(dq.\(ga;
.EE
