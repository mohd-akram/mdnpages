.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "INTL.NUMBERFORMAT.FORMATRANGETOPARTS" "3JS" "January 16, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Intl.NumberFormat.formatRangeToParts \-
Intl.NumberFormat.prototype.formatRangeToParts()
.SH SYNOPSIS
The \f[B]\f[CB]formatRangeToParts()\f[B]\f[R] method of
\f[CR]Intl.NumberFormat\f[R] instances returns an \f[CR]Array\f[R] of
objects containing the locale\-specific tokens from which it is possible
to build custom strings while preserving the locale\-specific parts.
This makes it possible to provide locale\-aware custom formatting ranges
of number strings.
.SH SYNTAX
.IP
.EX
formatRangeToParts(startRange, endRange)
.EE
.SS Parameters
.TP
\f[B]startRange\f[R]
A \f[CR]Number\f[R], \f[CR]BigInt\f[R], or string, to format.
Strings are parsed in the same way as in number conversion, except that
\f[CR]formatRangeToParts()\f[R] will use the exact value that the string
represents, avoiding loss of precision during implicitly conversion to a
number.
.TP
\f[B]endRange\f[R]
A \f[CR]Number\f[R], \f[CR]BigInt\f[R], or string, to format.
.SS Return value
An \f[CR]Array\f[R] of objects containing the formatted range in parts.
Each object has three properties, \f[CR]type\f[R], \f[CR]value\f[R], and
\f[CR]source\f[R], each containing a string.
The string concatenation of \f[CR]value\f[R], in the order provided,
will result in the same string as \f[CR]formatRange()\f[R].
The \f[CR]type\f[R] may have the same values as
\f[CR]formatToParts()\f[R].
The \f[CR]source\f[R] can be one of the following:
.TP
\f[B]startRange\f[R]
The token is a part of the start number.
.TP
\f[B]endRange\f[R]
The token is a part of the end number.
.TP
\f[B]shared\f[R]
The token is shared between the start and end; for example, the currency
symbol.
All literals that are part of the range pattern itself, such as the
\f[CR]\(dq\(en\(dq\f[R] separator, are also marked as \f[CR]shared\f[R].
.PP
If the start and end numbers are equivalent, then the output has the
same list of tokens as calling \f[CR]formatToParts()\f[R] on the start
number, with all tokens marked as \f[CR]source: \(dqshared\(dq\f[R].
.SS Exceptions
.TP
\f[B]RangeError\f[R]
Thrown if either \f[CR]startRange\f[R] or \f[CR]endRange\f[R] is
\f[CR]NaN\f[R] or an inconvertible string.
.TP
\f[B]TypeError\f[R]
Thrown if either \f[CR]startRange\f[R] or \f[CR]endRange\f[R] is
undefined.
.SH EXAMPLES
.SS Using formatRangeToParts()
The \f[CR]formatRange()\f[R] method outputs localized, opaque strings
that cannot be manipulated directly:
.IP
.EX
\f[B]const\f[R] startRange = 3500;
\f[B]const\f[R] endRange = 9500;

\f[B]const\f[R] formatter = \f[B]new\f[R] Intl.NumberFormat(\(dqde\-DE\(dq, {
  style: \(dqcurrency\(dq,
  currency: \(dqEUR\(dq,
});

console.log(formatter.formatRange(startRange, endRange));
\f[I]// \(dq3.500,00\(en9.500,00 €\(dq\f[R]
.EE
.PP
However, in many user interfaces you may want to customize the
formatting of this string, or interleave it with other texts.
The \f[CR]formatRangeToParts()\f[R] method produces the same information
in parts:
.IP
.EX
console.log(formatter.formatRangeToParts(startRange, endRange));

\f[I]// return value:\f[R]
[
  { type: \(dqinteger\(dq, value: \(dq3\(dq, source: \(dqstartRange\(dq },
  { type: \(dqgroup\(dq, value: \(dq.\(dq, source: \(dqstartRange\(dq },
  { type: \(dqinteger\(dq, value: \(dq500\(dq, source: \(dqstartRange\(dq },
  { type: \(dqdecimal\(dq, value: \(dq,\(dq, source: \(dqstartRange\(dq },
  { type: \(dqfraction\(dq, value: \(dq00\(dq, source: \(dqstartRange\(dq },
  { type: \(dqliteral\(dq, value: \(dq\(en\(dq, source: \(dqshared\(dq },
  { type: \(dqinteger\(dq, value: \(dq9\(dq, source: \(dqendRange\(dq },
  { type: \(dqgroup\(dq, value: \(dq.\(dq, source: \(dqendRange\(dq },
  { type: \(dqinteger\(dq, value: \(dq500\(dq, source: \(dqendRange\(dq },
  { type: \(dqdecimal\(dq, value: \(dq,\(dq, source: \(dqendRange\(dq },
  { type: \(dqfraction\(dq, value: \(dq00\(dq, source: \(dqendRange\(dq },
  { type: \(dqliteral\(dq, value: \(dq \(dq, source: \(dqshared\(dq },
  { type: \(dqcurrency\(dq, value: \(dq€\(dq, source: \(dqshared\(dq },
];
.EE
.SH SEE ALSO
.IP \(bu 2
\f[CR]Intl.NumberFormat\f[R]
.IP \(bu 2
\f[CR]Intl.NumberFormat.prototype.format()\f[R]
