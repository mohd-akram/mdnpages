.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "TransformStreamDefaultController.enqueue" "JS" "April 22, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
TransformStreamDefaultController.enqueue \-
TransformStreamDefaultController: enqueue() method
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]enqueue()\f[B]\f[R] method of the
\f[CR]TransformStreamDefaultController\f[R] interface enqueues the given
chunk in the readable side of the stream.
.PP
For more information on readable streams and chunks see Using Readable
Streams.
.SH SYNTAX
.IP
.EX
enqueue(chunk)
.EE
.SS Parameters
.TP
\f[B]chunk\f[R]
The chunk being queued.
A chunk is a single piece of data.
It can be any type of data, and a stream can contain chunks of different
types.
.SS Return value
None (\f[CR]undefined\f[R]).
.SS Exceptions
.TP
\f[B]TypeError\f[R]
The stream is not readable.
This might occur if the stream is errored via
\f[CR]controller.error()\f[R], or when it is closed without its
controller\[cq]s \f[CR]controller.close()\f[R] method ever being called.
.SH EXAMPLES
In this example an encoded chunk is passed to the queue using the
\f[CR]enqueue()\f[R] method.
.IP
.EX
\f[B]const\f[R] textEncoderStream = \f[B]new\f[R] TransformStream({
  transform(chunk, controller) {
    controller.enqueue(\f[B]new\f[R] TextEncoder().encode(chunk));
  },
  flush(controller) {
    controller.terminate();
  },
});
.EE
