'\" t
.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "DATE.TOTIMESTRING" "3JS" "June 20, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Date.toTimeString \- Date.prototype.toTimeString()
.SH SYNOPSIS
The \f[B]\f[CB]toTimeString()\f[B]\f[R] method of \f[CR]Date\f[R]
instances returns a string representing the time portion of this date
interpreted in the local timezone.
.IP
.EX
\f[B]const\f[R] event = \f[B]new\f[R] Date(\(dqAugust 19, 1975 23:15:30\(dq);

console.log(event.toTimeString());
\f[I]// Expected output: \(dq23:15:30 GMT+0200 (CEST)\(dq\f[R]
\f[I]// Note: your timezone may vary\f[R]
.EE
.SH SYNTAX
.IP
.EX
toTimeString()
.EE
.SS Parameters
None.
.SS Return value
A string representing the time portion of the given date (see
description for the format).
Returns \f[CR]\(dqInvalid Date\(dq\f[R] if the date is invalid.
.SH DESCRIPTION
\f[CR]Date\f[R] instances refer to a specific point in time.
\f[CR]toTimeString()\f[R] interprets the date in the local timezone and
formats the \f[I]time\f[R] part in English.
It always uses the format of \f[CR]HH:mm:ss GMT±xxxx (TZ)\f[R], where:
.PP
.TS
tab(@);
lw(7.9n) lw(62.1n).
T{
Format String
T}@T{
Description
T}
_
T{
\f[CR]HH\f[R]
T}@T{
Hour, as two digits with leading zero if required
T}
T{
\f[CR]mm\f[R]
T}@T{
Minute, as two digits with leading zero if required
T}
T{
\f[CR]ss\f[R]
T}@T{
Seconds, as two digits with leading zero if required
T}
T{
\f[CR]±xxxx\f[R]
T}@T{
The local timezone\(cqs offset \(em two digits for hours and two digits
for minutes (e.g., \f[CR]\-0500\f[R], \f[CR]+0800\f[R])
T}
T{
\f[CR]TZ\f[R]
T}@T{
The timezone\(cqs name (e.g., \f[CR]PDT\f[R], \f[CR]PST\f[R])
T}
.TE
.PP
For example: \(lq04:42:04 GMT+0000 (Coordinated Universal Time)\(rq.
.IP \(bu 2
If you only want to get the \f[I]date\f[R] part, use
\f[CR]toDateString()\f[R].
.IP \(bu 2
If you want to get both the date and time, use \f[CR]toString()\f[R].
.IP \(bu 2
If you want to make the date interpreted as UTC instead of local
timezone, use \f[CR]toUTCString()\f[R].
.IP \(bu 2
If you want to format the date in a more user\-friendly format (e.g.,
localization), use \f[CR]toLocaleTimeString()\f[R].
.SH EXAMPLES
.SS Using toTimeString()
.IP
.EX
\f[B]const\f[R] d = \f[B]new\f[R] Date(0);

console.log(d.toString()); \f[I]// \(dqThu Jan 01 1970 00:00:00 GMT+0000 (Coordinated Universal Time)\(dq\f[R]
console.log(d.toTimeString()); \f[I]// \(dq00:00:00 GMT+0000 (Coordinated Universal Time)\(dq\f[R]
.EE
.SH SEE ALSO
.IP \(bu 2
\f[CR]Date.prototype.toLocaleTimeString()\f[R]
.IP \(bu 2
\f[CR]Date.prototype.toDateString()\f[R]
.IP \(bu 2
\f[CR]Date.prototype.toString()\f[R]
