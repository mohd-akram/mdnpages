.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "AudioScheduledSourceNode.ended_event" "JS" "August 6, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
AudioScheduledSourceNode.ended_event \- AudioScheduledSourceNode: ended
event
.SH SYNOPSIS
The \f[CR]ended\f[R] event of the \f[CR]AudioScheduledSourceNode\f[R]
interface is fired when the source node has stopped playing.
.PP
This event occurs when a \f[CR]AudioScheduledSourceNode\f[R] has stopped
playing, either because it\[cq]s reached a predetermined stop time, the
full duration of the audio has been performed, or because the entire
buffer has been played.
.PP
This event is not cancelable and does not bubble.
.SH SYNTAX
Use the event name in methods like \f[CR]addEventListener()\f[R], or set
an event handler property.
.IP
.EX
addEventListener(\[dq]ended\[dq], (event) => { })

onended = (event) => { }
.EE
.SH EVENT TYPE
A generic \f[CR]Event\f[R].
.SH EXAMPLES
In this simple example, an event listener for the \f[CR]ended\f[R] event
is set up to enable a \[lq]Start\[rq] button in the user interface when
the node stops playing:
.IP
.EX
node.addEventListener(\[dq]ended\[dq], () \f[B]=>\f[R] {
  document.getElementById(\[dq]startButton\[dq]).disabled = \f[B]false\f[R];
});
.EE
.PP
You can also set up the event handler using the \f[CR]onended\f[R]
property:
.IP
.EX
node.onended = () \f[B]=>\f[R] {
  document.getElementById(\[dq]startButton\[dq]).disabled = \f[B]false\f[R];
};
.EE
.PP
For an example of the ended event in use, see our \c
.UR https://mdn.github.io/webaudio-examples/audio-buffer/
audio\-buffer example on GitHub
.UE \c
\&.
.SH RELATED EVENTS
.IP \[bu] 2
audioprocess
.IP \[bu] 2
complete
.SH SEE ALSO
.IP \[bu] 2
\f[CR]HTMLAudioElement\f[R]
.IP \[bu] 2
\f[CR]HTMLVideoElement\f[R]
.IP \[bu] 2
\f[CR]<audio>\f[R]
.IP \[bu] 2
\f[CR]<video>\f[R]
.IP \[bu] 2
The HTMLMediaElement \f[CR]ended\f[R] event
.IP \[bu] 2
The MediaStreamTrack \f[CR]ended\f[R] event
