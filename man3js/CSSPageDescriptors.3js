.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "CSSPAGEDESCRIPTORS" "3JS" "June 18, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
CSSPageDescriptors \- CSSPageDescriptors
.SH SYNOPSIS
The \f[B]\f[CB]CSSPageDescriptors\f[B]\f[R] interface represents a CSS
declaration block for an \f[CR]\(atpage\f[R] at\-rule.
.PP
The interface exposes style information and various style\-related
methods and properties for the page.
Each multi\-word property has versions in camel\- and snake\-case.
This means, for example, that you can access the \f[CR]margin\-top\f[R]
CSS property using the syntax \f[CR]style[\(dqmargin\-top\(dq]\f[R] or
\f[CR]style.marginTop\f[R] (where \f[CR]style\f[R] is a
\f[CR]CSSPageDescriptor\f[R]).
.PP
A \f[CR]CSSPageDescriptors\f[R] object is accessed through the
\f[CR]style\f[R] property of the \f[CR]CSSPageRule\f[R] interface, which
can in turn be found using the \f[CR]CSSStyleSheet\f[R] API.
.SH ATTRIBUTES
\f[I]This interface also inherits properties of its parent,
\f[CI]CSSStyleDeclaration\f[I].\f[R]
.TP
\f[B]margin\f[R]
A string representing the \f[CR]margin\f[R] property of the
corresponding \f[CR]\(atpage\f[R] at\-rule.
.TP
\f[B]margin\-top\f[R]
A string representing the \f[CR]margin\-top\f[R] property of the
corresponding \f[CR]\(atpage\f[R] at\-rule.
.TP
\f[B]marginTop\f[R]
A string representing the \f[CR]margin\-top\f[R] property of the
corresponding \f[CR]\(atpage\f[R] at\-rule.
.TP
\f[B]margin\-right\f[R]
A string representing the \f[CR]margin\-right\f[R] property of the
corresponding \f[CR]\(atpage\f[R] at\-rule.
.TP
\f[B]marginRight\f[R]
A string representing the \f[CR]margin\-right\f[R] property of the
corresponding \f[CR]\(atpage\f[R] at\-rule.
.TP
\f[B]margin\-bottom\f[R]
A string representing the \f[CR]margin\-bottom\f[R] property of the
corresponding \f[CR]\(atpage\f[R] at\-rule.
.TP
\f[B]marginBottom\f[R]
A string representing the \f[CR]margin\-bottom\f[R] property of the
corresponding \f[CR]\(atpage\f[R] at\-rule.
.TP
\f[B]margin\-left\f[R]
A string representing the \f[CR]margin\-left\f[R] property of the
corresponding \f[CR]\(atpage\f[R] at\-rule.
.TP
\f[B]marginLeft\f[R]
A string representing the \f[CR]margin\-left\f[R] property of the
corresponding \f[CR]\(atpage\f[R] at\-rule.
.TP
\f[B]page\-orientation\f[R] \f[I](experimental)\f[R]
A string representing the \f[CR]page\-orientation\f[R] property of the
corresponding \f[CR]\(atpage\f[R] at\-rule.
.TP
\f[B]pageOrientation\f[R] \f[I](experimental)\f[R]
A string representing the \f[CR]page\-orientation\f[R] property of the
corresponding \f[CR]\(atpage\f[R] at\-rule.
.TP
\f[B]size\f[R]
A string representing the \f[CR]size\f[R] property of the corresponding
\f[CR]\(atpage\f[R] at\-rule.
.SH INSTANCE METHODS
\f[I]This interface inherits the methods of its parent,
\f[CI]CSSStyleDeclaration\f[I].\f[R]
.SH EXAMPLES
.SS Inspecting a page at\-rule
This example gets the \f[CR]CSSPageDescriptors\f[R] for a
\f[CR]\(atpage\f[R] at\-rule, if the object is supported on the browser,
and then logs its properties.
.SS CSS
Below we define styles for the page using a \f[CR]\(atpage\f[R]
at\-rule.
We assign different values for each margin property using the
\f[CR]margin\f[R] shorthand, and also specify the \f[CR]size\f[R].
We don\(cqt set the \f[CR]page\-orientation\f[R].
This allows us to see how the properties map in the Web API object.
.IP
.EX
\f[B]\(atpage\f[R] {
  \f[B]margin\f[R]: 1cm 2px 3px 4px;
  \f[I]/* page\-orientation: upright; */\f[R]
  \f[B]size\f[R]: A4;
}
.EE
.SS JavaScript
First we check if \f[CR]CSSPageDescriptors\f[R] is defined on the global
window object, and if not we log that the interface is not supported.
.PP
If \f[CR]CSSPageDescriptors\f[R] is supported, we get the document
stylesheet at index \f[CR]1\f[R], and then gets the \f[CR]cssRules\f[R]
defined in that stylesheet.
We need to get this stylesheet because the example is embedded in a
separate frame with its own sheet (index \f[CR]0\f[R] is the CSS for
this page).
.PP
We then iterate through the rules defined for the live example and match
any that are of type \f[CR]CSSPageRule\f[R], as these correspond to
\f[CR]\(atpage\f[R] rules.
For the matching objects we then log the \f[CR]style\f[R] and all its
values.
.IP
.EX
\f[B]if\f[R] (\f[B]typeof\f[R] window.CSSPageDescriptors === \(dqundefined\(dq) {
  log(\(dqCSSPageDescriptors is not supported on this browser.\(dq);
} \f[B]else\f[R] {
  \f[I]// Get stylesheets for example and then get its cssRules\f[R]
  \f[B]const\f[R] myRules = document.styleSheets[1].cssRules;
  \f[B]for\f[R] (\f[B]const\f[R] rule \f[B]of\f[R] myRules) {
    \f[B]if\f[R] (rule \f[B]instanceof\f[R] CSSPageRule) {
      log(\(ga${rule.style}\(ga);
      log(\(gamargin: ${rule.style.margin}\(ga);

      \f[I]// Access properties using CamelCase syntax\f[R]
      log(\(gamarginTop: ${rule.style.marginTop}\(ga);
      log(\(gamarginRight: ${rule.style.marginRight}\(ga);
      log(\(gamarginBottom: ${rule.style.marginBottom}\(ga);
      log(\(gamarginLeft: ${rule.style.marginLeft}\(ga);
      log(\(gapageOrientation: ${rule.style.pageOrientation}\(ga);

      \f[I]// Access properties using snake\-case syntax\f[R]
      log(\(gamargin\-top: ${rule.style[\(dqmargin\-top\(dq]}\(ga);
      log(\(gamargin\-right: ${rule.style[\(dqmargin\-right\(dq]}\(ga);
      log(\(gamargin\-left: ${rule.style[\(dqmargin\-left\(dq]}\(ga);
      log(\(gamargin\-bottom: ${rule.style[\(dqmargin\-bottom\(dq]}\(ga);
      log(\(gapage\-orientation: ${rule.style[\(dqpage\-orientation\(dq]}\(ga);

      log(\(gasize: ${rule.style.size}\(ga);

      \f[I]// Log the original CSS text using inherited property: cssText\f[R]
      log(\(gacssText: ${rule.style.cssText}\(ga);
      log(\(dq\(rsn\(dq);
    }
  }
}
.EE
.SS Results
The results are shown below.
Note that the \f[CR]style\f[R] object displayed at the top of the log
should be a \f[CR]CSSPageDescriptors\f[R] to match the current
specification, but may be a \f[CR]CSSStyleDeclaration\f[R] in some
browsers.
Note also that the corresponding values for properties in camel\- and
snake\-case match each other and the \f[CR]\(atpage\f[R] declaration,
and that \f[CR]page\-orientation\f[R] is the empty string
\f[CR]\(dq\(dq\f[R] because it is not defined in \f[CR]\(atpage\f[R].
