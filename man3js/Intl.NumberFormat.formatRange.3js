.\" Automatically generated by Pandoc 3.4
.\"
.TH "Intl.NumberFormat.formatRange" "JS" "November 16, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Intl.NumberFormat.formatRange \-
Intl.NumberFormat.prototype.formatRange()
.SH SYNOPSIS
The \f[B]\f[CB]formatRange()\f[B]\f[R] method of
\f[CR]Intl.NumberFormat\f[R] instances formats a range of numbers
according to the locale and formatting options of this
\f[CR]Intl.NumberFormat\f[R] object.
.SH SYNTAX
.IP
.EX
formatRange(startRange, endRange)
.EE
.SS Parameters
.TP
\f[B]startRange\f[R]
A \f[CR]Number\f[R], \f[CR]BigInt\f[R], or string, to format.
Strings are parsed in the same way as in number conversion, except that
\f[CR]formatRange()\f[R] will use the exact value that the string
represents, avoiding loss of precision during implicitly conversion to a
number.
.TP
\f[B]endRange\f[R]
A \f[CR]Number\f[R], \f[CR]BigInt\f[R], or string, to format.
.SS Return value
A string representing the given range of numbers formatted according to
the locale and formatting options of this \f[CR]Intl.NumberFormat\f[R]
object.
.SS Exceptions
.TP
\f[B]RangeError\f[R]
Thrown if either \f[CR]startRange\f[R] or \f[CR]endRange\f[R] is
\f[CR]NaN\f[R] or an inconvertible string.
.TP
\f[B]TypeError\f[R]
Thrown if either \f[CR]startRange\f[R] or \f[CR]endRange\f[R] is
undefined.
.SH DESCRIPTION
The \f[CR]formatRange\f[R] getter function formats a range of numbers
into a string according to the locale and formatting options of this
\f[CR]Intl.NumberFormat\f[R] object from which it is called.
.SH EXAMPLES
.SS Using formatRange
Use the \f[CR]formatRange\f[R] getter function for formatting a range of
currency values:
.IP
.EX
\f[B]const\f[R] nf = \f[B]new\f[R] Intl.NumberFormat(\[dq]en\-US\[dq], {
  style: \[dq]currency\[dq],
  currency: \[dq]USD\[dq],
  maximumFractionDigits: 0,
});

console.log(nf.formatRange(3, 5)); \f[I]// \[dq]$3 \[en] $5\[dq]\f[R]

\f[I]// Note: the \[dq]approximately equals\[dq] symbol is added if\f[R]
\f[I]// startRange and endRange round to the same values.\f[R]
console.log(nf.formatRange(2.9, 3.1)); \f[I]// \[dq]\[ti]$3\[dq]\f[R]
.EE
.IP
.EX
\f[B]const\f[R] nf = \f[B]new\f[R] Intl.NumberFormat(\[dq]es\-ES\[dq], {
  style: \[dq]currency\[dq],
  currency: \[dq]EUR\[dq],
  maximumFractionDigits: 0,
});

console.log(nf.formatRange(3, 5)); \f[I]// \[dq]3\-5 €\[dq]\f[R]
console.log(nf.formatRange(2.9, 3.1)); \f[I]// \[dq]\[ti]3 €\[dq]\f[R]
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]Intl.NumberFormat\f[R]
.IP \[bu] 2
\f[CR]Number.prototype.toLocaleString()\f[R]
