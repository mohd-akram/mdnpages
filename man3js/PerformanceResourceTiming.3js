.\" Automatically generated by Pandoc 3.4
.\"
.TH "PerformanceResourceTiming" "JS" "October 12, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
PerformanceResourceTiming \- PerformanceResourceTiming
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]PerformanceResourceTiming\f[B]\f[R] interface enables
retrieval and analysis of detailed network timing data regarding the
loading of an application\[cq]s resources.
An application can use the timing metrics to determine, for example, the
length of time it takes to fetch a specific resource, such as an
\f[CR]XMLHttpRequest\f[R], \f[CR]SVG element\f[R], image, or script.
.SH DESCRIPTION
The interface\[cq]s properties create a resource loading timeline with
high\-resolution timestamps for network events such as redirect start
and end times, fetch start, DNS lookup start and end times, response
start and end times, and more.
Additionally, the interface extends \f[CR]PerformanceEntry\f[R] with
other properties which provide data about the size of the fetched
resource as well as the type of resource that initiated the fetch.
.SS Typical resource timing metrics
The properties of this interface allow you to calculate certain resource
timing metrics.
Common use cases include:
.IP \[bu] 2
Measuring TCP handshake time (\f[CR]connectEnd\f[R] \-
\f[CR]connectStart\f[R])
.IP \[bu] 2
Measuring DNS lookup time (\f[CR]domainLookupEnd\f[R] \-
\f[CR]domainLookupStart\f[R])
.IP \[bu] 2
Measuring redirection time (\f[CR]redirectEnd\f[R] \-
\f[CR]redirectStart\f[R])
.IP \[bu] 2
Measuring interim request time (\f[CR]firstInterimResponseStart\f[R] \-
\f[CR]requestStart\f[R])
.IP \[bu] 2
Measuring request time (\f[CR]responseStart\f[R] \-
\f[CR]requestStart\f[R])
.IP \[bu] 2
Measuring TLS negotiation time (\f[CR]requestStart\f[R] \-
\f[CR]secureConnectionStart\f[R])
.IP \[bu] 2
Measuring time to fetch (without redirects) (\f[CR]responseEnd\f[R] \-
\f[CR]fetchStart\f[R])
.IP \[bu] 2
Measuring ServiceWorker processing time (\f[CR]fetchStart\f[R] \-
\f[CR]workerStart\f[R])
.IP \[bu] 2
Checking if content was compressed (\f[CR]decodedBodySize\f[R] should
not be \f[CR]encodedBodySize\f[R])
.IP \[bu] 2
Checking if local caches were hit (\f[CR]transferSize\f[R] should be
\f[CR]0\f[R])
.IP \[bu] 2
Checking if modern and fast protocols are used
(\f[CR]nextHopProtocol\f[R] should be HTTP/2 or HTTP/3)
.IP \[bu] 2
Checking if the correct resources are render\-blocking
(\f[CR]renderBlockingStatus\f[R])
.SH INSTANCE PROPERTIES
.SS Inherited from \f[CR]PerformanceEntry\f[R]
This interface extends the following \f[CR]PerformanceEntry\f[R]
properties for resource performance entry types by qualifying and
constraining them as follows:
.TP
\f[B]PerformanceEntry.duration\f[R] \f[I](read\-only)\f[R]
Returns a \f[CR]timestamp\f[R] that is the difference between the
\f[CR]responseEnd\f[R] and the \f[CR]startTime\f[R] properties.
.TP
\f[B]PerformanceEntry.entryType\f[R] \f[I](read\-only)\f[R]
Returns \f[CR]\[dq]resource\[dq]\f[R].
.TP
\f[B]PerformanceEntry.name\f[R] \f[I](read\-only)\f[R]
Returns the resource\[cq]s URL.
.TP
\f[B]PerformanceEntry.startTime\f[R] \f[I](read\-only)\f[R]
Returns the \f[CR]timestamp\f[R] for the time a resource fetch started.
This value is equivalent to
\f[CR]PerformanceResourceTiming.fetchStart\f[R].
.SS Timestamps
The interface supports the following timestamp properties which you can
see in the diagram and are listed in the order in which they are
recorded for the fetching of a resource.
An alphabetical listing is shown in the navigation, at left.
[IMAGE: \c
.UR https://mdn.github.io/shared-assets/images/diagrams/api/performance/timestamp-diagram.svg
Timestamp diagram listing timestamps in the order in which they are
recorded for the fetching of a resource
.UE \c
]
Timestamp diagram listing timestamps in the order in which they are
recorded for the fetching of a resource
.TP
\f[B]PerformanceResourceTiming.redirectStart\f[R] \f[I](read\-only)\f[R]
A \f[CR]DOMHighResTimeStamp\f[R] that represents the start time of the
fetch which initiates the redirect.
.TP
\f[B]PerformanceResourceTiming.redirectEnd\f[R] \f[I](read\-only)\f[R]
A \f[CR]DOMHighResTimeStamp\f[R] immediately after receiving the last
byte of the response of the last redirect.
.TP
\f[B]PerformanceResourceTiming.workerStart\f[R] \f[I](read\-only)\f[R]
Returns a \f[CR]DOMHighResTimeStamp\f[R] immediately before dispatching
the \f[CR]FetchEvent\f[R] if a Service Worker thread is already running,
or immediately before starting the Service Worker thread if it is not
already running.
If the resource is not intercepted by a Service Worker the property will
always return 0.
.TP
\f[B]PerformanceResourceTiming.fetchStart\f[R] \f[I](read\-only)\f[R]
A \f[CR]DOMHighResTimeStamp\f[R] immediately before the browser starts
to fetch the resource.
.TP
\f[B]PerformanceResourceTiming.domainLookupStart\f[R] \f[I](read\-only)\f[R]
A \f[CR]DOMHighResTimeStamp\f[R] immediately before the browser starts
the domain name lookup for the resource.
.TP
\f[B]PerformanceResourceTiming.domainLookupEnd\f[R] \f[I](read\-only)\f[R]
A \f[CR]DOMHighResTimeStamp\f[R] representing the time immediately after
the browser finishes the domain name lookup for the resource.
.TP
\f[B]PerformanceResourceTiming.connectStart\f[R] \f[I](read\-only)\f[R]
A \f[CR]DOMHighResTimeStamp\f[R] immediately before the browser starts
to establish the connection to the server to retrieve the resource.
.TP
\f[B]PerformanceResourceTiming.secureConnectionStart\f[R] \f[I](read\-only)\f[R]
A \f[CR]DOMHighResTimeStamp\f[R] immediately before the browser starts
the handshake process to secure the current connection.
.TP
\f[B]PerformanceResourceTiming.connectEnd\f[R] \f[I](read\-only)\f[R]
A \f[CR]DOMHighResTimeStamp\f[R] immediately after the browser finishes
establishing the connection to the server to retrieve the resource.
.TP
\f[B]PerformanceResourceTiming.requestStart\f[R] \f[I](read\-only)\f[R]
A \f[CR]DOMHighResTimeStamp\f[R] immediately before the browser starts
requesting the resource from the server.
.TP
\f[B]PerformanceResourceTiming.firstInterimResponseStart\f[R] \f[I](experimental)\f[R] \f[I](read\-only)\f[R]
A \f[CR]DOMHighResTimeStamp\f[R] that represents the interim response
time (for example, 100 Continue or 103 Early Hints).
.TP
\f[B]PerformanceResourceTiming.responseStart\f[R] \f[I](read\-only)\f[R]
A \f[CR]DOMHighResTimeStamp\f[R] immediately after the browser receives
the first byte of the response from the server.
.TP
\f[B]PerformanceResourceTiming.responseEnd\f[R] \f[I](read\-only)\f[R]
A \f[CR]DOMHighResTimeStamp\f[R] immediately after the browser receives
the last byte of the resource or immediately before the transport
connection is closed, whichever comes first.
.SS Additional resource information
Additionally, this interface exposes the following properties containing
more information about a resource:
.TP
\f[B]PerformanceResourceTiming.contentType\f[R] \f[I](read\-only)\f[R] \f[I](experimental)\f[R]
A string representing a minimized and standardized version of the
MIME\-type of the fetched resource.
.TP
\f[B]PerformanceResourceTiming.decodedBodySize\f[R] \f[I](read\-only)\f[R]
A number that is the size (in octets) received from the fetch (HTTP or
cache) of the message body, after removing any applied content encoding.
.TP
\f[B]PerformanceResourceTiming.deliveryType\f[R] \f[I](experimental)\f[R] \f[I](read\-only)\f[R]
Indicates how the resource was delivered \[em] for example from the
cache or from a navigational prefetch.
.TP
\f[B]PerformanceResourceTiming.encodedBodySize\f[R] \f[I](read\-only)\f[R]
A number representing the size (in octets) received from the fetch (HTTP
or cache), of the payload body, before removing any applied content
encodings.
.TP
\f[B]PerformanceResourceTiming.initiatorType\f[R] \f[I](read\-only)\f[R]
A string representing the web platform feature that initiated the
performance entry.
.TP
\f[B]PerformanceResourceTiming.nextHopProtocol\f[R] \f[I](read\-only)\f[R]
A string representing the network protocol used to fetch the resource,
as identified by the \c
.UR https://datatracker.ietf.org/doc/html/rfc7301
ALPN Protocol ID (RFC7301)
.UE \c
\&.
.TP
\f[B]PerformanceResourceTiming.renderBlockingStatus\f[R] \f[I](read\-only)\f[R]
A string representing the render\-blocking status.
Either \f[CR]\[dq]blocking\[dq]\f[R] or
\f[CR]\[dq]non\-blocking\[dq]\f[R].
.TP
\f[B]PerformanceResourceTiming.responseStatus\f[R] \f[I](read\-only)\f[R]
A number representing the HTTP response status code returned when
fetching the resource.
.TP
\f[B]PerformanceResourceTiming.transferSize\f[R] \f[I](read\-only)\f[R]
A number representing the size (in octets) of the fetched resource.
The size includes the response header fields plus the response payload
body.
.TP
\f[B]PerformanceResourceTiming.serverTiming\f[R] \f[I](read\-only)\f[R]
An array of \f[CR]PerformanceServerTiming\f[R] entries containing server
timing metrics.
.SH INSTANCE METHODS
.TP
\f[B]PerformanceResourceTiming.toJSON()\f[R]
Returns a JSON representation of the
\f[CR]PerformanceResourceTiming\f[R] object.
.SH EXAMPLES
.SS Logging resource timing information
Example using a \f[CR]PerformanceObserver\f[R], which notifies of new
\f[CR]resource\f[R] performance entries as they are recorded in the
browser\[cq]s performance timeline.
Use the \f[CR]buffered\f[R] option to access entries from before the
observer creation.
.IP
.EX
\f[B]const\f[R] observer = \f[B]new\f[R] PerformanceObserver((list) \f[B]=>\f[R] {
  list.getEntries().forEach((entry) \f[B]=>\f[R] {
    console.log(entry);
  });
});

observer.observe({ type: \[dq]resource\[dq], buffered: \f[B]true\f[R] });
.EE
.PP
Example using \f[CR]Performance.getEntriesByType()\f[R], which only
shows \f[CR]resource\f[R] performance entries present in the
browser\[cq]s performance timeline at the time you call this method:
.IP
.EX
\f[B]const\f[R] resources = performance.getEntriesByType(\[dq]resource\[dq]);
resources.forEach((entry) \f[B]=>\f[R] {
  console.log(entry);
});
.EE
.SH SECURITY REQUIREMENTS
.SS Cross\-origin timing information
Many of the resource timing properties are restricted to return
\f[CR]0\f[R] or an empty string when the resource is a cross\-origin
request.
To expose cross\-origin timing information, the
\f[CR]Timing\-Allow\-Origin\f[R] HTTP response header needs to be set.
.PP
For example, to allow \f[CR]https://developer.mozilla.org\f[R] to see
resource timing information, the cross\-origin resource should send:
.IP
.EX
Timing\-Allow\-Origin: https://developer.mozilla.org
.EE
.SH SEE ALSO
.IP \[bu] 2
Resource timing (Overview)
