.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "PROGRESSEVENT" "3JS" "June 2, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
ProgressEvent \- ProgressEvent
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]ProgressEvent\f[B]\f[R] interface represents events that
measure the progress of an underlying process, like an HTTP request
(e.g., an \f[CR]XMLHttpRequest\f[R], or the loading of the underlying
resource of an \f[CR]<img>\f[R], \f[CR]<audio>\f[R], \f[CR]<video>\f[R],
\f[CR]<style>\f[R] or \f[CR]<link>\f[R]).
.SH CONSTRUCTOR
.TP
\f[B]ProgressEvent()\f[R]
Creates a \f[CR]ProgressEvent\f[R] event with the given parameters.
.SH INSTANCE PROPERTIES
\f[I]Also inherits properties from its parent \f[CI]Event\f[I]\f[R].
.TP
\f[B]ProgressEvent.lengthComputable\f[R] \f[I](read\-only)\f[R]
A boolean flag indicating if the ratio between the size of the data
already transmitted or processed (\f[CR]loaded\f[R]), and the total size
of the data (\f[CR]total\f[R]), is calculable.
In other words, it tells if the progress is measurable or not.
.TP
\f[B]ProgressEvent.loaded\f[R] \f[I](read\-only)\f[R]
A number indicating the size of the data already transmitted or
processed.
For a \f[CR]ProgressEvent\f[R] dispatched by the browser in HTTP
messages, the value refers to the size, in bytes, of the message body,
excluding headers and other overhead.
In compressed messages of unknown total size, \f[CR]loaded\f[R] might
refer to the size of the compressed or uncompressed data, depending on
the browser.
As of 2024, it contains the size of the compressed data in Firefox, and
the uncompressed data in Chrome.
In a \f[CR]ProgressEvent\f[R] you create yourself, you can assign any
numeric value to \f[CR]loaded\f[R] that represents the amount of work
completed relative to the \f[CR]total\f[R] value.
.TP
\f[B]ProgressEvent.total\f[R] \f[I](read\-only)\f[R]
A number indicating the total size of the data being transmitted or
processed.
For \f[CR]ProgressEvent\f[R]s dispatched by the browser in HTTP
messages, the value refers to the size, in bytes, of a resource and is
derived from the \f[CR]Content\-Length\f[R] header.
In a \f[CR]ProgressEvent\f[R] you create yourself, you may wish to
normalize \f[CR]total\f[R] to a value such as \f[CR]100\f[R] or
\f[CR]1\f[R] if revealing the precise amount of bytes of a resource is a
concern.
If using \f[CR]1\f[R] as a total, for example, then \f[CR]loaded\f[R]
would be a decimal value between \f[CR]0\f[R] and \f[CR]1\f[R].
.SH INSTANCE METHODS
\f[I]Inherits methods from its parent, \f[CI]Event\f[I].\f[R]
.SH EXAMPLES
.SS Showing the status of a request
The following example adds a \f[CR]ProgressEvent\f[R] to a new
\f[CR]XMLHttpRequest\f[R] and uses it to display the status of the
request.
.IP
.EX
\f[B]const\f[R] progressBar = document.getElementById(\(dqp\(dq),
  client = \f[B]new\f[R] XMLHttpRequest();
client.open(\(dqGET\(dq, \(dqmagical\-unicorns\(dq);
client.onprogress = (pe) \f[B]=>\f[R] {
  \f[B]if\f[R] (pe.lengthComputable) {
    progressBar.max = pe.total;
    progressBar.value = pe.loaded;
  }
};
client.onloadend = (pe) \f[B]=>\f[R] {
  progressBar.value = pe.loaded;
};
client.send();
.EE
.SS Using fractions in a ProgressEvent
The total number of bytes of a resource may reveal too much information
about a resource, so a number between 0 and 1 may be used in a
\f[CR]ProgressEvent()\f[R] instead:
.IP
.EX
\f[B]function\f[R] updateProgress(loaded, total) {
  \f[B]const\f[R] progressEvent = \f[B]new\f[R] ProgressEvent(\(dqprogress\(dq, {
    lengthComputable: \f[B]true\f[R],
    loaded,
    total,
  });

  document.dispatchEvent(progressEvent);
}

document.addEventListener(\(dqprogress\(dq, (event) \f[B]=>\f[R] {
  console.log(\(gaProgress: ${event.loaded}/${event.total}\(ga);
});

updateProgress(0.123456, 1);
.EE
.SH SEE ALSO
.IP \(bu 2
The \f[CR]Event\f[R] base interface.
