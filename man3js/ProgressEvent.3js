.\" Automatically generated by Pandoc 3.4
.\"
.TH "ProgressEvent" "JS" "October 8, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
ProgressEvent \- ProgressEvent
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]ProgressEvent\f[B]\f[R] interface represents events
measuring progress of an underlying process, like an HTTP request (for
an \f[CR]XMLHttpRequest\f[R], or the loading of the underlying resource
of an \f[CR]<img>\f[R], \f[CR]<audio>\f[R], \f[CR]<video>\f[R],
\f[CR]<style>\f[R] or \f[CR]<link>\f[R]).
.SH CONSTRUCTOR
.TP
\f[B]ProgressEvent()\f[R]
Creates a \f[CR]ProgressEvent\f[R] event with the given parameters.
.SH INSTANCE PROPERTIES
\f[I]Also inherits properties from its parent \f[CI]Event\f[I]\f[R].
.TP
\f[B]ProgressEvent.lengthComputable\f[R] \f[I](read\-only)\f[R]
A boolean flag indicating if the ratio between the size of the data
already transmitted or processed (\f[CR]loaded\f[R]), and the total size
of the data (\f[CR]total\f[R]), is calculable.
In other words, it tells if the progress is measurable or not.
.TP
\f[B]ProgressEvent.loaded\f[R] \f[I](read\-only)\f[R]
A 64\-bit unsigned integer indicating the size, in bytes, of the data
already transmitted or processed.
The ratio can be calculated by dividing \f[CR]ProgressEvent.total\f[R]
by the value of this property.
When downloading a resource using HTTP, this only counts the body of the
HTTP message, and doesn\[cq]t include headers and other overhead.
Note that for compressed requests of unknown total size,
\f[CR]loaded\f[R] might contain the size of the compressed, or
decompressed, data, depending on the browser.
As of 2024, it contains the size of the compressed data in Firefox, and
the size of the uncompressed data in Chrome.
.TP
\f[B]ProgressEvent.total\f[R] \f[I](read\-only)\f[R]
A 64\-bit unsigned integer indicating the total size, in bytes, of the
data being transmitted or processed.
When downloading a resource using HTTP, this value is taken from the
\f[CR]Content\-Length\f[R] response header.
It only counts the body of the HTTP message, and doesn\[cq]t include
headers and other overhead.
.SH INSTANCE METHODS
\f[I]Inherits methods from its parent, \f[CI]Event\f[I].\f[R]
.SH EXAMPLES
The following example adds a \f[CR]ProgressEvent\f[R] to a new
\f[CR]XMLHTTPRequest\f[R] and uses it to display the status of the
request.
.IP
.EX
\f[B]const\f[R] progressBar = document.getElementById(\[dq]p\[dq]),
  client = \f[B]new\f[R] XMLHttpRequest();
client.open(\[dq]GET\[dq], \[dq]magical\-unicorns\[dq]);
client.onprogress = (pe) \f[B]=>\f[R] {
  \f[B]if\f[R] (pe.lengthComputable) {
    progressBar.max = pe.total;
    progressBar.value = pe.loaded;
  }
};
client.onloadend = (pe) \f[B]=>\f[R] {
  progressBar.value = pe.loaded;
};
client.send();
.EE
.SH SEE ALSO
.IP \[bu] 2
The \f[CR]Event\f[R] base interface.
