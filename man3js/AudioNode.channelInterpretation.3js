.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "AudioNode.channelInterpretation" "JS" "April 6, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
AudioNode.channelInterpretation \- AudioNode: channelInterpretation
property
.SH SYNOPSIS
The \f[B]\f[CB]channelInterpretation\f[B]\f[R] property of the
\f[CR]AudioNode\f[R] interface represents an enumerated value describing
how input channels are mapped to output channels when the number of
inputs/outputs is different.
For example, this setting defines how a mono input will be up\-mixed to
a stereo or 5.1 channel output, or how a quad channel input will be
down\-mixed to a stereo or mono output.
.PP
The property has two options: \f[CR]speakers\f[R] and
\f[CR]discrete\f[R].
These are documented in Basic concepts behind Web Audio API > up\-mixing
and down\-mixing.
.SH VALUE
The values are documented in Basic concepts behind Web Audio API >
up\-mixing and down\-mixing.
.PP
In summary:
.TP
\f[B]speakers\f[R]
Use set of \[lq]standard\[rq] mappings for combinations of common
speaker input and outputs setups (mono, stereo, quad, 5.1).
For example, with this setting a mono channel input will output to both
channels of a stereo output.
.TP
\f[B]discrete\f[R]
Input channels are mapped to output channels in order.
If there are more inputs that outputs the additional inputs are dropped;
if there are fewer than the unused outputs are silent.
.SH EXAMPLES
.IP
.EX
\f[B]const\f[R] audioCtx = \f[B]new\f[R] AudioContext();

\f[B]const\f[R] oscillator = audioCtx.createOscillator();
\f[B]const\f[R] gainNode = audioCtx.createGain();

oscillator.connect(gainNode);
gainNode.connect(audioCtx.destination);

oscillator.channelInterpretation = \[dq]discrete\[dq];
.EE
.SH SEE ALSO
.IP \[bu] 2
Using the Web Audio API
