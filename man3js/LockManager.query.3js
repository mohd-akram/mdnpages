.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "LockManager.query" "JS" "March 6, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
LockManager.query \- LockManager: query() method
.SH SYNOPSIS
\f[B]Secure context:\f[R] This feature is available only in secure
contexts (HTTPS).
.PP
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]query()\f[B]\f[R] method of the \f[CR]LockManager\f[R]
interface returns a \f[CR]Promise\f[R] that resolves with an object
containing information about held and pending locks.
.SH SYNTAX
.IP
.EX
query()
.EE
.SS Parameters
None.
.SS Return value
A \f[CR]Promise\f[R] that resolves with an object containing a snapshot
of the \f[CR]LockManager\f[R] state.
The object has the following properties:
.TP
\f[B]held\f[R]
An array of \f[CR]LockInfo\f[R] objects for held locks.
.TP
\f[B]pending\f[R]
An array of \f[CR]LockInfo\f[R] objects for pending lock requests.
.PP
The \f[CR]LockInfo\f[R] object can have the following properties:
.TP
\f[B]name\f[R]
The name passed to \f[CR]LockManager.request()\f[R] when the lock was
requested.
.TP
\f[B]mode\f[R]
The access mode passed to \f[CR]LockManager.request()\f[R] when the lock
was requested.
The mode is either \f[CR]\[dq]exclusive\[dq]\f[R] or
\f[CR]\[dq]shared\[dq]\f[R].
.TP
\f[B]clientId\f[R]
The unique identity of the context where
\f[CR]LockManager.request()\f[R] is called.
This is the same value as \f[CR]Client.id\f[R].
.SS Exceptions
This method may return a promise rejected with a \f[CR]DOMException\f[R]
of one of the following types:
.TP
\f[B]InvalidStateError\f[R] \f[B]DOMException\f[R]
Thrown if the environments document is not fully active.
.TP
\f[B]SecurityError\f[R] \f[B]DOMException\f[R]
Thrown if a lock manager cannot be obtained for the current environment.
.SH EXAMPLES
.IP
.EX
\f[B]const\f[R] state = \f[B]await\f[R] navigator.locks.query();
\f[B]for\f[R] (\f[B]const\f[R] lock \f[B]of\f[R] state.held) {
  console.log(\[ga]held lock: name ${lock.name}, mode ${lock.mode}\[ga]);
}
\f[B]for\f[R] (\f[B]const\f[R] request \f[B]of\f[R] state.pending) {
  console.log(\[ga]requested lock: name ${request.name}, mode ${request.mode}\[ga]);
}
.EE
