.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "Symbol.keyFor" "JS" "February 11, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Symbol.keyFor \- Symbol.keyFor()
.SH SYNOPSIS
The \f[B]\f[CB]Symbol.keyFor()\f[B]\f[R] static method retrieves a
shared symbol key from the global symbol registry for the given symbol.
.IP
.EX
\f[B]const\f[R] globalSym = Symbol.for(\[dq]foo\[dq]); \f[I]// Global symbol\f[R]

console.log(Symbol.keyFor(globalSym));
\f[I]// Expected output: \[dq]foo\[dq]\f[R]

\f[B]const\f[R] localSym = Symbol(); \f[I]// Local symbol\f[R]

console.log(Symbol.keyFor(localSym));
\f[I]// Expected output: undefined\f[R]

console.log(Symbol.keyFor(Symbol.iterator));
\f[I]// Expected output: undefined\f[R]
.EE
.SH SYNTAX
.IP
.EX
Symbol.keyFor(sym)
.EE
.SS Parameters
.TP
\f[B]sym\f[R]
Symbol, required.
The symbol to find a key for.
.SS Return value
A string representing the key for the given symbol if one is found on
the global registry; otherwise, \f[CR]undefined\f[R].
.SH EXAMPLES
.SS Using keyFor()
.IP
.EX
\f[B]const\f[R] globalSym = Symbol.for(\[dq]foo\[dq]); \f[I]// create a new global symbol\f[R]
Symbol.keyFor(globalSym); \f[I]// \[dq]foo\[dq]\f[R]

\f[B]const\f[R] localSym = Symbol();
Symbol.keyFor(localSym); \f[I]// undefined\f[R]

\f[I]// well\-known symbols are not symbols registered\f[R]
\f[I]// in the global symbol registry\f[R]
Symbol.keyFor(Symbol.iterator); \f[I]// undefined\f[R]
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]Symbol.for()\f[R]
