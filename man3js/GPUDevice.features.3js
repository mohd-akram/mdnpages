.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "GPUDEVICE.FEATURES" "3JS" "June 18, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
GPUDevice.features \- GPUDevice: features property
.SH SYNOPSIS
\f[B]Secure context:\f[R] This feature is available only in secure
contexts (HTTPS).
.PP
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]features\f[B]\f[R] read\-only property of the
\f[CR]GPUDevice\f[R] interface returns a \f[CR]GPUSupportedFeatures\f[R]
object that describes additional functionality supported by the device.
Only features requested during the creation of the device (i.e., when
\f[CR]GPUAdapter.requestDevice()\f[R] is called) are included.
.RS
.PP
\f[B]Note:\f[R] Not all features will be available to WebGPU in all
browsers that support it, even if the features are supported by the
underlying hardware.
See \f[CR]GPUAdapter.features\f[R] for more details.
.RE
.SH VALUE
A \f[CR]GPUSupportedFeatures\f[R] object instance.
This is a setlike object.
.SH EXAMPLES
In the following code we check whether a \f[CR]GPUAdapter\f[R] has the
\f[CR]texture\-compression\-astc\f[R] feature available.
If so, we push it into the array of \f[CR]requiredFeatures\f[R], and
request a device with that feature requirement using
\f[CR]GPUAdapter.requestDevice()\f[R].
.PP
We then log all items in the \f[CR]GPUDevice.features\f[R] set to the
console.
This set should only contain a single item \(em
\f[CR]texture\-compression\-astc\f[R] \(em as that was the only feature
requested when the device was created.
.IP
.EX
\f[B]async\f[R] \f[B]function\f[R] init() {
  \f[B]if\f[R] (!navigator.gpu) {
    \f[B]throw\f[R] Error(\(dqWebGPU not supported.\(dq);
  }

  \f[B]const\f[R] adapter = \f[B]await\f[R] navigator.gpu.requestAdapter();
  \f[B]if\f[R] (!adapter) {
    \f[B]throw\f[R] Error(\(dqCouldn\(aqt request WebGPU adapter.\(dq);
  }

  \f[B]const\f[R] requiredFeatures = [];

  \f[B]if\f[R] (adapter.features.has(\(dqtexture\-compression\-astc\(dq)) {
    requiredFeatures.push(\(dqtexture\-compression\-astc\(dq);
  }

  \f[B]const\f[R] device = \f[B]await\f[R] adapter.requestDevice({
    requiredFeatures,
  });

  device.features.forEach((value) \f[B]=>\f[R] {
    console.log(value);
  });

  \f[I]// \&...\f[R]
}
.EE
.SH SEE ALSO
.IP \(bu 2
The WebGPU API
