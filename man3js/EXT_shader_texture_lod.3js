.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "EXT_shader_texture_lod" "JS" "October 16, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
EXT_shader_texture_lod \- EXT_shader_texture_lod extension
.SH SYNOPSIS
The \f[B]\f[CB]EXT_shader_texture_lod\f[B]\f[R] extension is part of the
WebGL API and adds additional texture functions to the OpenGL ES Shading
Language which provide the shader writer with explicit control of LOD
(\c
.UR https://en.wikipedia.org/wiki/Level_of_detail
Level of detail
.UE \c
).
.PP
WebGL extensions are available using the
\f[CR]WebGLRenderingContext.getExtension()\f[R] method.
For more information, see also Using Extensions in the WebGL tutorial.
.RS
.PP
\f[B]Note:\f[R] This extension is only available to WebGL1 contexts.
In WebGL2, the functionality of this extension is available on the
WebGL2 context by default.
It requires GLSL \f[CR]#version 300 es\f[R].
.RE
.SH GLSL BUILT\-IN FUNCTIONS
The following new functions can be used in GLSL shader code, if this
extension is enabled:
.IP
.EX
vec4 texture2DLodEXT(sampler2D sampler, vec2 coord, float lod)
vec4 texture2DProjLodEXT(sampler2D sampler, vec3 coord, float lod)
vec4 texture2DProjLodEXT(sampler2D sampler, vec4 coord, float lod)
vec4 textureCubeLodEXT(samplerCube sampler, vec3 coord, float lod)
vec4 texture2DGradEXT(sampler2D sampler, vec2 P, vec2 dPdx, vec2 dPdy)
vec4 texture2DProjGradEXT(sampler2D sampler, vec3 P, vec2 dPdx, vec2 dPdy)
vec4 texture2DProjGradEXT(sampler2D sampler, vec4 P, vec2 dPdx, vec2 dPdy)
vec4 textureCubeGradEXT(samplerCube sampler, vec3 P, vec3 dPdx, vec3 dPdy)
.EE
.SH EXAMPLES
Enabling the extensions:
.IP
.EX
gl.getExtension(\[dq]EXT_shader_texture_lod\[dq]);
.EE
.PP
Shader code that avoids artifacts when wrapping texture coordinates:
.IP
.EX
<\f[B]script\f[R] type=\[dq]x\-shader/x\-fragment\[dq]>
  #extension GL_EXT_shader_texture_lod : enable
  #extension GL_OES_standard_derivatives : enable

  uniform sampler2D myTexture;
  varying vec2 texCoord;

  \f[B]void\f[R] main(){
    gl_FragColor = texture2DGradEXT(myTexture, mod(texCoord, vec2(0.1, 0.5)),
                                    dFdx(texCoord), dFdy(texCoord));
  }
</\f[B]script\f[R]>
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]WebGLRenderingContext.getExtension()\f[R]
.IP \[bu] 2
\f[CR]OES_standard_derivatives\f[R]
