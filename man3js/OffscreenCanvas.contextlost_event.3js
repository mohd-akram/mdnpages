.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "OffscreenCanvas.contextlost_event" "JS" "April 24, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
OffscreenCanvas.contextlost_event \- OffscreenCanvas: contextlost event
.SH SYNOPSIS
The \f[B]\f[CB]contextlost\f[B]\f[R] event of the
\f[CR]OffscreenCanvas\f[R] interface is fired if the browser detects
that the \f[CR]OffscreenCanvasRenderingContext2D\f[R] context is lost.
Contexts can be lost for several reasons, such as an associated GPU
driver crashes, or the application runs out of memory, and so on.
.PP
By default the user agent will attempt to restore the context and then
fire the \f[CR]contextrestored\f[R] event.
User code can prevent the context from being restored by calling
\f[CR]Event.preventDefault()\f[R] during event handling.
.SH SYNTAX
Use the event name in methods like \f[CR]addEventListener()\f[R], or set
an event handler property.
.IP
.EX
addEventListener(\[dq]contextlost\[dq], (event) \f[B]=>\f[R] {});

oncontextlost = (event) \f[B]=>\f[R] {};
.EE
.SH EVENT TYPE
A generic \f[CR]Event\f[R].
.SH EXAMPLES
The code fragment below detects the \f[CR]contextlost\f[R] event.
.IP
.EX
\f[B]const\f[R] canvas = \f[B]new\f[R] OffscreenCanvas(256, 256);
\f[B]const\f[R] gl = offscreen.getContext(\[dq]2d\[dq]);

\f[I]// Do drawing etc\f[R]

canvas.addEventListener(\[dq]contextlost\[dq], (event) \f[B]=>\f[R] {
  console.log(event);
});
.EE
.PP
To prevent the context from being restored the event handler code might
instead look like this:
.IP
.EX
canvas.addEventListener(\[dq]contextlost\[dq], (event) \f[B]=>\f[R] {
  event.preventDefault();
});
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]OffScreenCanvas: contextrestored\f[R] event
.IP \[bu] 2
\f[CR]OffscreenCanvasRenderingContext2D.isContextLost()\f[R]
.IP \[bu] 2
\f[CR]HTMLCanvasElement: contextlost\f[R] event
