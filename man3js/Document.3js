.\" Automatically generated by Pandoc 3.4
.\"
.TH "Document" "JS" "December 22, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Document \- Document
.SH SYNOPSIS
The \f[B]\f[CB]Document\f[B]\f[R] interface represents any web page
loaded in the browser and serves as an entry point into the web
page\[cq]s content, which is the DOM tree.
.PP
The DOM tree includes elements such as \f[CR]<body>\f[R] and
\f[CR]<table>\f[R], among many others.
It provides functionality globally to the document, like how to obtain
the page\[cq]s URL and create new elements in the document.
.PP
The \f[CR]Document\f[R] interface describes the common properties and
methods for any kind of document.
Depending on the document\[cq]s type (e.g.\ HTML, XML, SVG, \&...), a
larger API is available: HTML documents, served with the
\f[CR]\[dq]text/html\[dq]\f[R] content type, also implement the
\f[CR]HTMLDocument\f[R] interface, whereas XML and SVG documents
implement the \f[CR]XMLDocument\f[R] interface.
.SH CONSTRUCTOR
.TP
\f[B]Document()\f[R]
Creates a new \f[CR]Document\f[R] object.
.SH INSTANCE PROPERTIES
\f[I]This interface also inherits from the \f[CI]Node\f[I] and
\f[CI]EventTarget\f[I] interfaces.\f[R]
.TP
\f[B]Document.activeElement\f[R] \f[I](read\-only)\f[R]
Returns the \f[CR]Element\f[R] that currently has focus.
.TP
\f[B]Document.adoptedStyleSheets\f[R]
Add an array of constructed stylesheets to be used by the document.
These stylesheets may also be shared with shadow DOM subtrees of the
same document.
.TP
\f[B]Document.body\f[R]
Returns the \f[CR]<body>\f[R] or \f[CR]<frameset>\f[R] node of the
current document.
.TP
\f[B]Document.characterSet\f[R] \f[I](read\-only)\f[R]
Returns the character set being used by the document.
.TP
\f[B]Document.childElementCount\f[R] \f[I](read\-only)\f[R]
Returns the number of child elements of the current document.
.TP
\f[B]Document.children\f[R] \f[I](read\-only)\f[R]
Returns the child elements of the current document.
.TP
\f[B]Document.compatMode\f[R] \f[I](read\-only)\f[R]
Indicates whether the document is rendered in \f[I]quirks\f[R] or
\f[I]strict\f[R] mode.
.TP
\f[B]Document.contentType\f[R] \f[I](read\-only)\f[R]
Returns the Content\-Type from the MIME Header of the current document.
.TP
\f[B]Document.currentScript\f[R] \f[I](read\-only)\f[R]
Returns the \f[CR]<script>\f[R] element whose script is currently being
processed and \c
.UR https://github.com/whatwg/html/issues/997
isn\[cq]t a JavaScript module
.UE \c
\&.
.TP
\f[B]Document.doctype\f[R] \f[I](read\-only)\f[R]
Returns the Document Type Definition (DTD) of the current document.
.TP
\f[B]Document.documentElement\f[R] \f[I](read\-only)\f[R]
Returns the \f[CR]Element\f[R] that is a direct child of the document.
For HTML documents, this is normally the \f[CR]HTMLHtmlElement\f[R]
object representing the document\[cq]s \f[CR]<html>\f[R] element.
.TP
\f[B]Document.documentURI\f[R] \f[I](read\-only)\f[R]
Returns the document location as a string.
.TP
\f[B]Document.embeds\f[R] \f[I](read\-only)\f[R]
Returns an \f[CR]HTMLCollection\f[R] of the embedded \f[CR]<embed>\f[R]
elements in the document.
.TP
\f[B]Document.featurePolicy\f[R] \f[I](experimental)\f[R] \f[I](read\-only)\f[R]
Returns the \f[CR]FeaturePolicy\f[R] interface with the feature policies
applied to the document.
.TP
\f[B]Document.firstElementChild\f[R] \f[I](read\-only)\f[R]
Returns the first child element of the current document.
.TP
\f[B]Document.fonts\f[R]
Returns the \f[CR]FontFaceSet\f[R] interface of the current document.
.TP
\f[B]Document.forms\f[R] \f[I](read\-only)\f[R]
Returns an \f[CR]HTMLCollection\f[R] of the \f[CR]<form>\f[R] elements
in the document.
.TP
\f[B]Document.fragmentDirective\f[R] \f[I](read\-only)\f[R]
Returns the \f[CR]FragmentDirective\f[R] for the current document.
.TP
\f[B]Document.fullscreenElement\f[R] \f[I](read\-only)\f[R]
The element that\[cq]s currently in full screen mode for this document.
.TP
\f[B]Document.head\f[R] \f[I](read\-only)\f[R]
Returns the \f[CR]<head>\f[R] element of the current document.
.TP
\f[B]Document.hidden\f[R] \f[I](read\-only)\f[R]
Returns a Boolean value indicating if the page is considered hidden or
not.
.TP
\f[B]Document.images\f[R] \f[I](read\-only)\f[R]
Returns an \f[CR]HTMLCollection\f[R] of the images in the document.
.TP
\f[B]Document.implementation\f[R] \f[I](read\-only)\f[R]
Returns the DOM implementation associated with the current document.
.TP
\f[B]Document.lastElementChild\f[R] \f[I](read\-only)\f[R]
Returns the last child element of the current document.
.TP
\f[B]Document.links\f[R] \f[I](read\-only)\f[R]
Returns an \f[CR]HTMLCollection\f[R] of the hyperlinks in the document.
.TP
\f[B]Document.pictureInPictureElement\f[R] \f[I](read\-only)\f[R]
Returns the \f[CR]Element\f[R] currently being presented in
picture\-in\-picture mode in this document.
.TP
\f[B]Document.pictureInPictureEnabled\f[R] \f[I](read\-only)\f[R]
Returns true if the picture\-in\-picture feature is enabled.
.TP
\f[B]Document.plugins\f[R] \f[I](read\-only)\f[R]
Returns an \f[CR]HTMLCollection\f[R] of the available plugins.
.TP
\f[B]Document.pointerLockElement\f[R] \f[I](read\-only)\f[R]
Returns the element set as the target for mouse events while the pointer
is locked.
\f[CR]null\f[R] if lock is pending, pointer is unlocked, or if the
target is in another document.
.TP
\f[B]Document.prerendering\f[R] \f[I](read\-only)\f[R] \f[I](experimental)\f[R]
Returns a boolean that indicates whether the document is currently in
the process of prerendering, as initiated via the Speculation Rules API.
.TP
\f[B]Document.scripts\f[R] \f[I](read\-only)\f[R]
Returns an \f[CR]HTMLCollection\f[R] of the \f[CR]<script>\f[R] elements
in the document.
.TP
\f[B]Document.scrollingElement\f[R] \f[I](read\-only)\f[R]
Returns a reference to the \f[CR]Element\f[R] that scrolls the document.
.TP
\f[B]Document.styleSheets\f[R] \f[I](read\-only)\f[R]
Returns a \f[CR]StyleSheetList\f[R] of \f[CR]CSSStyleSheet\f[R] objects
for stylesheets explicitly linked into, or embedded in a document.
.TP
\f[B]Document.timeline\f[R] \f[I](read\-only)\f[R]
Returns timeline as a special instance of \f[CR]DocumentTimeline\f[R]
that is automatically created on page load.
.TP
\f[B]Document.visibilityState\f[R] \f[I](read\-only)\f[R]
Returns a \f[CR]string\f[R] denoting the visibility state of the
document.
Possible values are \f[CR]visible\f[R], \f[CR]hidden\f[R],
\f[CR]prerender\f[R], and \f[CR]unloaded\f[R].
.SS Extensions for HTMLDocument
\f[I]The \f[CI]Document\f[I] interface for HTML documents inherits from
the \f[CI]HTMLDocument\f[I] interface or is extended for such
documents.\f[R]
.TP
\f[B]Document.cookie\f[R]
Returns a semicolon\-separated list of the cookies for that document or
sets a single cookie.
.TP
\f[B]Document.defaultView\f[R] \f[I](read\-only)\f[R]
Returns a reference to the window object.
.TP
\f[B]Document.designMode\f[R]
Gets/sets the ability to edit the whole document.
.TP
\f[B]Document.dir\f[R]
Gets/sets directionality (rtl/ltr) of the document.
.TP
\f[B]Document.fullscreenEnabled\f[R] \f[I](read\-only)\f[R]
Indicates whether fullscreen mode is available.
.TP
\f[B]Document.lastModified\f[R] \f[I](read\-only)\f[R]
Returns the date on which the document was last modified.
.TP
\f[B]Document.location\f[R] \f[I](read\-only)\f[R]
Returns the URI of the current document.
.TP
\f[B]Document.readyState\f[R] \f[I](read\-only)\f[R]
Returns loading status of the document.
.TP
\f[B]Document.referrer\f[R] \f[I](read\-only)\f[R]
Returns the URI of the page that linked to this page.
.TP
\f[B]Document.title\f[R]
Sets or gets the title of the current document.
.TP
\f[B]Document.URL\f[R] \f[I](read\-only)\f[R]
Returns the document location as a string.
.SS Deprecated properties
.TP
\f[B]Document.alinkColor\f[R] \f[I](deprecated)\f[R]
Returns or sets the color of active links in the document body.
.TP
\f[B]Document.all\f[R] \f[I](deprecated)\f[R]
Provides access to all elements in the document \[em] it returns an
\f[CR]HTMLAllCollection\f[R] rooted at the document node.
This is a legacy, non\-standard property and should not be used.
.TP
\f[B]Document.anchors\f[R] \f[I](deprecated)\f[R] \f[I](read\-only)\f[R]
Returns a list of all of the anchors in the document.
.TP
\f[B]Document.applets\f[R] \f[I](deprecated)\f[R] \f[I](read\-only)\f[R]
Returns an empty \f[CR]HTMLCollection\f[R].
Legacy property that used to return the list of applets within a
document.
.TP
\f[B]Document.bgColor\f[R] \f[I](deprecated)\f[R]
Gets/sets the background color of the current document.
.TP
\f[B]Document.charset\f[R] \f[I](deprecated)\f[R] \f[I](read\-only)\f[R]
Alias of \f[CR]Document.characterSet\f[R].
Use this property instead.
.TP
\f[B]Document.domain\f[R] \f[I](deprecated)\f[R]
Gets/sets the domain of the current document.
.TP
\f[B]Document.fgColor\f[R] \f[I](deprecated)\f[R]
Gets/sets the foreground color, or text color, of the current document.
.TP
\f[B]Document.fullscreen\f[R] \f[I](deprecated)\f[R]
Returns \f[CR]true\f[R] when the document is in fullscreen mode.
.TP
\f[B]Document.inputEncoding\f[R] \f[I](deprecated)\f[R] \f[I](read\-only)\f[R]
Alias of \f[CR]Document.characterSet\f[R].
Use this property instead.
.TP
\f[B]Document.lastStyleSheetSet\f[R] \f[I](deprecated)\f[R] \f[I](read\-only)\f[R] \f[I](non\-standard)\f[R]
Returns the name of the style sheet set that was last enabled.
Has the value \f[CR]null\f[R] until the style sheet is changed by
setting the value of \f[CR]selectedStyleSheetSet\f[R].
.TP
\f[B]Document.linkColor\f[R] \f[I](deprecated)\f[R]
Gets/sets the color of hyperlinks in the document.
.TP
\f[B]Document.preferredStyleSheetSet\f[R] \f[I](deprecated)\f[R] \f[I](read\-only)\f[R] \f[I](non\-standard)\f[R]
Returns the preferred style sheet set as specified by the page author.
.TP
\f[B]Document.rootElement\f[R] \f[I](deprecated)\f[R]
Like \f[CR]Document.documentElement\f[R], but only for \f[CR]<svg>\f[R]
root elements.
Use this property instead.
.TP
\f[B]Document.selectedStyleSheetSet\f[R] \f[I](deprecated)\f[R] \f[I](non\-standard)\f[R]
Returns which style sheet set is currently in use.
.TP
\f[B]Document.styleSheetSets\f[R] \f[I](deprecated)\f[R] \f[I](read\-only)\f[R] \f[I](non\-standard)\f[R]
Returns a list of the style sheet sets available on the document.
.TP
\f[B]Document.vlinkColor\f[R] \f[I](deprecated)\f[R]
Gets/sets the color of visited hyperlinks.
.TP
\f[B]Document.xmlEncoding\f[R] \f[I](deprecated)\f[R]
Returns the encoding as determined by the XML declaration.
.TP
\f[B]Document.xmlStandalone\f[R] \f[I](deprecated)\f[R]
Returns \f[CR]true\f[R] if the XML declaration specifies the document to
be standalone (\f[I]e.g.,\f[R] An external part of the DTD affects the
document\[cq]s content), else \f[CR]false\f[R].
.TP
\f[B]Document.xmlVersion\f[R] \f[I](deprecated)\f[R]
Returns the version number as specified in the XML declaration or
\f[CR]\[dq]1.0\[dq]\f[R] if the declaration is absent.
.SH INSTANCE METHODS
\f[I]This interface also inherits from the \f[CI]Node\f[I] and
\f[CI]EventTarget\f[I] interfaces.\f[R]
.TP
\f[B]Document.adoptNode()\f[R]
Adopt node from an external document.
.TP
\f[B]Document.append()\f[R]
Inserts a set of \f[CR]Node\f[R] objects or strings after the last child
of the document.
.TP
\f[B]Document.browsingTopics()\f[R] \f[I](experimental)\f[R] \f[I](non\-standard)\f[R]
Returns a promise that fulfills with an array of objects representing
the top topics for the user, one from each of the last three epochs.
By default, the method also causes the browser to record the current
page visit as observed by the caller, so the page\[cq]s hostname can
later be used in topics calculation.
See the Topics API for more details.
.TP
\f[B]Document.captureEvents()\f[R] \f[I](deprecated)\f[R]
See \f[CR]Window.captureEvents\f[R].
.TP
\f[B]Document.caretPositionFromPoint()\f[R]
Returns a \f[CR]CaretPosition\f[R] object containing the DOM node
containing the caret, and caret\[cq]s character offset within that node.
.TP
\f[B]Document.caretRangeFromPoint()\f[R] \f[I](non\-standard)\f[R]
Gets a \f[CR]Range\f[R] object for the document fragment under the
specified coordinates.
.TP
\f[B]Document.createAttribute()\f[R]
Creates a new \f[CR]Attr\f[R] object and returns it.
.TP
\f[B]Document.createAttributeNS()\f[R]
Creates a new attribute node in a given namespace and returns it.
.TP
\f[B]Document.createCDATASection()\f[R]
Creates a new CDATA node and returns it.
.TP
\f[B]Document.createComment()\f[R]
Creates a new comment node and returns it.
.TP
\f[B]Document.createDocumentFragment()\f[R]
Creates a new document fragment.
.TP
\f[B]Document.createElement()\f[R]
Creates a new element with the given tag name.
.TP
\f[B]Document.createElementNS()\f[R]
Creates a new element with the given tag name and namespace URI.
.TP
\f[B]Document.createEvent()\f[R] \f[I](deprecated)\f[R]
Creates an event object.
.TP
\f[B]Document.createNodeIterator()\f[R]
Creates a \f[CR]NodeIterator\f[R] object.
.TP
\f[B]Document.createProcessingInstruction()\f[R]
Creates a new \f[CR]ProcessingInstruction\f[R] object.
.TP
\f[B]Document.createRange()\f[R]
Creates a \f[CR]Range\f[R] object.
.TP
\f[B]Document.createTextNode()\f[R]
Creates a text node.
.TP
\f[B]Document.createTouch()\f[R] \f[I](deprecated)\f[R] \f[I](non\-standard)\f[R]
Creates a \f[CR]Touch\f[R] object.
.TP
\f[B]Document.createTouchList()\f[R] \f[I](deprecated)\f[R] \f[I](non\-standard)\f[R]
Creates a \f[CR]TouchList\f[R] object.
.TP
\f[B]Document.createTreeWalker()\f[R]
Creates a \f[CR]TreeWalker\f[R] object.
.TP
\f[B]Document.elementFromPoint()\f[R]
Returns the topmost element at the specified coordinates.
.TP
\f[B]Document.elementsFromPoint()\f[R]
Returns an array of all elements at the specified coordinates.
.TP
\f[B]Document.enableStyleSheetsForSet()\f[R] \f[I](deprecated)\f[R] \f[I](non\-standard)\f[R]
Enables the style sheets for the specified style sheet set.
.TP
\f[B]Document.exitFullscreen()\f[R]
Stops document\[cq]s fullscreen element from being displayed fullscreen.
.TP
\f[B]Document.exitPictureInPicture()\f[R]
Remove the video from the floating picture\-in\-picture window back to
its original container.
.TP
\f[B]Document.exitPointerLock()\f[R]
Release the pointer lock.
.TP
\f[B]Document.getAnimations()\f[R]
Returns an array of all \f[CR]Animation\f[R] objects currently in
effect, whose target elements are descendants of the
\f[CR]document\f[R].
.TP
\f[B]Document.getBoxQuads()\f[R] \f[I](experimental)\f[R]
Returns a list of \f[CR]DOMQuad\f[R] objects representing the CSS
fragments of the node.
.TP
\f[B]Document.getElementById()\f[R]
Returns an object reference to the identified element.
.TP
\f[B]Document.getElementsByClassName()\f[R]
Returns a list of elements with the given class name.
.TP
\f[B]Document.getElementsByTagName()\f[R]
Returns a list of elements with the given tag name.
.TP
\f[B]Document.getElementsByTagNameNS()\f[R]
Returns a list of elements with the given tag name and namespace.
.TP
\f[B]Document.getSelection()\f[R]
Returns a \f[CR]Selection\f[R] object representing the range of text
selected by the user, or the current position of the caret.
.TP
\f[B]Document.hasStorageAccess()\f[R]
Returns a \f[CR]Promise\f[R] that resolves with a boolean value
indicating whether the document has access to unpartitioned cookies.
.TP
\f[B]Document.hasUnpartitionedCookieAccess()\f[R]
New name for \f[CR]Document.hasStorageAccess()\f[R].
.TP
\f[B]Document.importNode()\f[R]
Returns a clone of a node from an external document.
.TP
\f[B]Document.mozSetImageElement()\f[R] \f[I](non\-standard)\f[R]
Allows you to change the element being used as the background image for
a specified element ID.
.TP
\f[B]Document.prepend()\f[R]
Inserts a set of \f[CR]Node\f[R] objects or strings before the first
child of the document.
.TP
\f[B]Document.querySelector()\f[R]
Returns the first Element node within the document, in document order,
that matches the specified selectors.
.TP
\f[B]Document.querySelectorAll()\f[R]
Returns a list of all the Element nodes within the document that match
the specified selectors.
.TP
\f[B]Document.releaseCapture()\f[R] \f[I](non\-standard)\f[R]
Releases the current mouse capture if it\[cq]s on an element in this
document.
.TP
\f[B]Document.releaseEvents()\f[R] \f[I](deprecated)\f[R]
See \f[CR]Window.releaseEvents()\f[R].
.TP
\f[B]Document.replaceChildren()\f[R]
Replaces the existing children of a document with a specified new set of
children.
.TP
\f[B]Document.requestStorageAccess()\f[R]
Allows a document loaded in a third\-party context (i.e.\ embedded in an
\f[CR]<iframe>\f[R]) to request access to unpartitioned cookies, in
cases where user agents by default block access to unpartitioned cookies
by sites loaded in a third\-party context to improve privacy.
.TP
\f[B]Document.requestStorageAccessFor()\f[R] \f[I](experimental)\f[R]
Allows top\-level sites to request third\-party cookie access on behalf
of embedded content originating from another site in the same related
website set.
.TP
\f[B]Document.startViewTransition()\f[R]
Starts a new view transition and returns a \f[CR]ViewTransition\f[R]
object to represent it.
.PP
The \f[CR]Document\f[R] interface is extended with the
\f[CR]XPathEvaluator\f[R] interface:
.TP
\f[B]Document.createExpression()\f[R]
Compiles an \f[CR]XPathExpression\f[R] which can then be used for
(repeated) evaluations.
.TP
\f[B]Document.createNSResolver()\f[R] \f[I](deprecated)\f[R]
Returns the input node as\-is.
.TP
\f[B]Document.evaluate()\f[R]
Evaluates an XPath expression.
.SS Extension for HTML documents
The \f[CR]Document\f[R] interface for HTML documents inherit from the
\f[CR]HTMLDocument\f[R] interface or is extended for such documents:
.TP
\f[B]Document.clear()\f[R] \f[I](deprecated)\f[R]
This method does nothing.
.TP
\f[B]Document.close()\f[R]
Closes a document stream for writing.
.TP
\f[B]Document.execCommand()\f[R] \f[I](deprecated)\f[R]
On an editable document, executes a formatting command.
.TP
\f[B]Document.getElementsByName()\f[R]
Returns a list of elements with the given name.
.TP
\f[B]Document.hasFocus()\f[R]
Returns \f[CR]true\f[R] if the focus is currently located anywhere
inside the specified document.
.TP
\f[B]Document.open()\f[R]
Opens a document stream for writing.
.TP
\f[B]Document.queryCommandEnabled()\f[R] \f[I](deprecated)\f[R] \f[I](non\-standard)\f[R]
Returns true if the formatting command can be executed on the current
range.
.TP
\f[B]Document.queryCommandIndeterm()\f[R] \f[I](deprecated)\f[R]
Returns true if the formatting command is in an indeterminate state on
the current range.
.TP
\f[B]Document.queryCommandState()\f[R] \f[I](deprecated)\f[R] \f[I](non\-standard)\f[R]
Returns true if the formatting command has been executed on the current
range.
.TP
\f[B]Document.queryCommandSupported()\f[R] \f[I](deprecated)\f[R] \f[I](non\-standard)\f[R]
Returns true if the formatting command is supported on the current
range.
.TP
\f[B]Document.queryCommandValue()\f[R] \f[I](deprecated)\f[R]
Returns the current value of the current range for a formatting command.
.TP
\f[B]Document.write()\f[R] \f[I](deprecated)\f[R]
Writes text in a document.
.TP
\f[B]Document.writeln()\f[R]
Writes a line of text in a document.
.SH STATIC METHODS
\f[I]This interface also inherits from the \f[CI]Node\f[I] and
\f[CI]EventTarget\f[I] interfaces.\f[R]
.TP
\f[B]Document.parseHTMLUnsafe()\f[R]
Creates a new \f[CR]Document\f[R] object from a string of HTML without
performing sanitization.
The string may contain declarative shadow roots.
.SH EVENTS
Listen to these events using \f[CR]addEventListener()\f[R] or by
assigning an event listener to the \f[CR]oneventname\f[R] property of
this interface.
In addition to the events listed below, many events can bubble from
nodes contained in the document tree.
.TP
\f[B]afterscriptexecute\f[R] \f[I](non\-standard)\f[R]
Fired when a static \f[CR]<script>\f[R] element finishes executing its
script
.TP
\f[B]beforescriptexecute\f[R] \f[I](non\-standard)\f[R]
Fired when a static \f[CR]<script>\f[R] is about to start executing.
.TP
\f[B]prerenderingchange\f[R] \f[I](experimental)\f[R]
Fired on a prerendered document when it is activated (i.e.\ the user
views the page).
.TP
\f[B]securitypolicyviolation\f[R]
Fired when a content security policy is violated.
.TP
\f[B]visibilitychange\f[R]
Fired when the content of a tab has become visible or has been hidden.
.SS Clipboard events
.TP
\f[B]copy\f[R]
Fired when the user initiates a copy action through the browser\[cq]s
user interface.
.TP
\f[B]cut\f[R]
Fired when the user initiates a cut action through the browser\[cq]s
user interface.
.TP
\f[B]paste\f[R]
Fired when the user initiates a paste action through the browser\[cq]s
user interface.
.SS Fullscreen events
.TP
\f[B]fullscreenchange\f[R]
Fired when the \f[CR]Document\f[R] transitions into or out of fullscreen
mode.
.TP
\f[B]fullscreenerror\f[R]
Fired if an error occurs while attempting to switch into or out of
fullscreen mode.
.SS Load & unload events
.TP
\f[B]DOMContentLoaded\f[R]
Fired when the document has been completely loaded and parsed, without
waiting for stylesheets, images, and subframes to finish loading.
.TP
\f[B]readystatechange\f[R]
Fired when the \f[CR]readyState\f[R] attribute of a document has
changed.
.SS Pointer lock events
.TP
\f[B]pointerlockchange\f[R]
Fired when the pointer is locked/unlocked.
.TP
\f[B]pointerlockerror\f[R]
Fired when locking the pointer failed.
.SS Scroll events
.TP
\f[B]scroll\f[R]
Fired when the document view or an element has been scrolled.
.TP
\f[B]scrollend\f[R]
Fired when the document view or an element has completed scrolling.
.TP
\f[B]scrollsnapchange\f[R] \f[I](experimental)\f[R]
Fired on the scroll container at the end of a scrolling operation when a
new scroll snap target has been selected.
.TP
\f[B]scrollsnapchanging\f[R] \f[I](experimental)\f[R]
Fired on the scroll container when the browser determines a new scroll
snap target is pending, i.e.\ it will be selected when the current
scroll gesture ends.
.SS Selection events
.TP
\f[B]selectionchange\f[R]
Fired when the current text selection on a document is changed.
