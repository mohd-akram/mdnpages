.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "FileSystemWritableFileStream.seek" "JS" "April 5, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
FileSystemWritableFileStream.seek \- FileSystemWritableFileStream:
seek() method
.SH SYNOPSIS
\f[B]Secure context:\f[R] This feature is available only in secure
contexts (HTTPS).
.PP
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]seek()\f[B]\f[R] method of the
\f[CR]FileSystemWritableFileStream\f[R] interface updates the current
file cursor offset to the position (in bytes) specified when calling the
method.
.SH SYNTAX
.IP
.EX
seek(position)
.EE
.SS Parameters
.TP
\f[B]position\f[R]
A number specifying the byte position from the beginning of the file.
.SS Return value
A \f[CR]Promise\f[R] that returns \f[CR]undefined\f[R].
.SS Exceptions
.TP
\f[B]NotAllowedError\f[R] \f[B]DOMException\f[R]
Thrown if \f[CR]PermissionStatus.state\f[R] is not \f[CR]granted\f[R].
.TP
\f[B]TypeError\f[R]
Thrown if \f[CR]position\f[R] is not a number or not defined.
.SH EXAMPLES
The following asynchronous function opens the `Save File' picker, which
returns a \f[CR]FileSystemFileHandle\f[R] once a file is selected.
From this, a writable stream is created using the
\f[CR]FileSystemFileHandle.createWritable()\f[R] method.
.PP
Next, we write to the stream:
.IP "1." 3
A text string is written to the stream.
.IP "2." 3
The \f[CR]seek()\f[R] method is used to put the cursor at the start of
the stream.
.IP "3." 3
A second text string is written to the start of the stream, overwriting
the first write.
.PP
The stream is then closed.
.IP
.EX
\f[B]async\f[R] \f[B]function\f[R] saveFile() {
  \f[B]try\f[R] {
    \f[I]// create a new handle\f[R]
    \f[B]const\f[R] newHandle = \f[B]await\f[R] window.showSaveFilePicker();

    \f[I]// create a FileSystemWritableFileStream to write to\f[R]
    \f[B]const\f[R] writableStream = \f[B]await\f[R] newHandle.createWritable();

    \f[I]// write our file\f[R]
    \f[B]await\f[R] writableStream.write(\[dq]My first file content\[dq]);
    \f[B]await\f[R] writableStream.seek(0);
    \f[B]await\f[R] writableStream.write(\[dq]My second file content\[dq]);

    \f[I]// close the file and write the contents to disk.\f[R]
    \f[B]await\f[R] writableStream.close();
  } \f[B]catch\f[R] (err) {
    console.error(err.name, err.message);
  }
}
.EE
.PP
If you run the above function and then open the resulting file created
on disk, you should see the text \[lq]My second file content\[rq].
.SH SEE ALSO
.IP \[bu] 2
File System API
.IP \[bu] 2
\c
.UR https://developer.chrome.com/docs/capabilities/web-apis/file-system-access
The File System Access API: simplifying access to local files
.UE \c
