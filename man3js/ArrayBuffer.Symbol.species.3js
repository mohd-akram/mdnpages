.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "ArrayBuffer.Symbol.species" "JS" "July 26, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
ArrayBuffer.Symbol.species \- ArrayBuffer[Symbol.species]
.SH SYNOPSIS
The \f[B]\f[CB]ArrayBuffer[Symbol.species]\f[B]\f[R] static accessor
property returns the constructor used to construct return values from
array buffer methods.
.RS
.PP
\f[B]Warning:\f[R] The existence of \f[CR][Symbol.species]\f[R] allows
execution of arbitrary code and may create security vulnerabilities.
It also makes certain optimizations much harder.
Engine implementers are \c
.UR https://github.com/tc39/proposal-rm-builtin-subclassing
investigating whether to remove this feature
.UE \c
\&.
Avoid relying on it if possible.
.RE
.SH SYNTAX
.IP
.EX
ArrayBuffer[Symbol.species]
.EE
.SS Return value
The value of the constructor (\f[CR]this\f[R]) on which
\f[CR]get [Symbol.species]\f[R] was called.
The return value is used to construct return values from array buffer
methods that create new array buffers.
.SH DESCRIPTION
The \f[CR][Symbol.species]\f[R] accessor property returns the default
constructor for \f[CR]ArrayBuffer\f[R] objects.
Subclass constructors may override it to change the constructor
assignment.
The default implementation is basically:
.IP
.EX
\f[I]// Hypothetical underlying implementation for illustration\f[R]
\f[B]class\f[R] ArrayBuffer {
  \f[B]static\f[R] \f[B]get\f[R] [Symbol.species]() {
    \f[B]return\f[R] \f[B]this\f[R];
  }
}
.EE
.PP
Because of this polymorphic implementation, \f[CR][Symbol.species]\f[R]
of derived subclasses would also return the constructor itself by
default.
.IP
.EX
\f[B]class\f[R] SubArrayBuffer \f[B]extends\f[R] ArrayBuffer {}
SubArrayBuffer[Symbol.species] === SubArrayBuffer; \f[I]// true\f[R]
.EE
.PP
When calling array buffer methods that do not mutate the existing object
but return a new array buffer instance (for example,
\f[CR]slice()\f[R]), the object\[cq]s
\f[CR]constructor[Symbol.species]\f[R] will be accessed.
The returned constructor will be used to construct the return value of
the array buffer method.
.SH EXAMPLES
.SS Species in ordinary objects
The \f[CR][Symbol.species]\f[R] property returns the default constructor
function, which is the \f[CR]ArrayBuffer\f[R] constructor for
\f[CR]ArrayBuffer\f[R].
.IP
.EX
ArrayBuffer[Symbol.species]; \f[I]// function ArrayBuffer()\f[R]
.EE
.SS Species in derived objects
In an instance of a custom \f[CR]ArrayBuffer\f[R] subclass, such as
\f[CR]MyArrayBuffer\f[R], the \f[CR]MyArrayBuffer\f[R] species is the
\f[CR]MyArrayBuffer\f[R] constructor.
However, you might want to overwrite this, in order to return parent
\f[CR]ArrayBuffer\f[R] objects in your derived class methods:
.IP
.EX
\f[B]class\f[R] MyArrayBuffer \f[B]extends\f[R] ArrayBuffer {
  \f[I]// Overwrite MyArrayBuffer species to the parent ArrayBuffer constructor\f[R]
  \f[B]static\f[R] \f[B]get\f[R] [Symbol.species]() {
    \f[B]return\f[R] ArrayBuffer;
  }
}
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]ArrayBuffer\f[R]
.IP \[bu] 2
\f[CR]Symbol.species\f[R]
