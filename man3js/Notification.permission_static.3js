.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "Notification.permission_static" "JS" "March 6, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Notification.permission_static \- Notification: permission static
property
.SH SYNOPSIS
\f[B]Secure context:\f[R] This feature is available only in secure
contexts (HTTPS).
.PP
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]permission\f[B]\f[R] read\-only static property of the
\f[CR]Notification\f[R] interface indicates the current permission
granted by the user for the current origin to display web notifications.
.SH VALUE
A string representing the current permission.
The value can be:
.TP
\f[B]granted\f[R]
The user has explicitly granted permission for the current origin to
display system notifications.
.TP
\f[B]denied\f[R]
The user has explicitly denied permission for the current origin to
display system notifications.
.TP
\f[B]default\f[R]
The user decision is unknown; in this case the application will act as
if permission was \f[CR]denied\f[R].
.SH EXAMPLES
The following snippet could be used if you wanted to first check whether
notifications are supported, then check if permission has been granted
for the current origin to send notifications, then request permission if
required, before then sending a notification.
.IP
.EX
\f[B]function\f[R] notifyMe() {
  \f[B]if\f[R] (!(\[dq]Notification\[dq] \f[B]in\f[R] window)) {
    \f[I]// Check if the browser supports notifications\f[R]
    alert(\[dq]This browser does not support desktop notification\[dq]);
  } \f[B]else\f[R] \f[B]if\f[R] (Notification.permission === \[dq]granted\[dq]) {
    \f[I]// Check whether notification permissions have already been granted;\f[R]
    \f[I]// if so, create a notification\f[R]
    \f[B]const\f[R] notification = \f[B]new\f[R] Notification(\[dq]Hi there!\[dq]);
    \f[I]// \&...\f[R]
  } \f[B]else\f[R] \f[B]if\f[R] (Notification.permission !== \[dq]denied\[dq]) {
    \f[I]// We need to ask the user for permission\f[R]
    Notification.requestPermission().then((permission) \f[B]=>\f[R] {
      \f[I]// If the user accepts, let\[aq]s create a notification\f[R]
      \f[B]if\f[R] (permission === \[dq]granted\[dq]) {
        \f[B]const\f[R] notification = \f[B]new\f[R] Notification(\[dq]Hi there!\[dq]);
        \f[I]// \&...\f[R]
      }
    });
  }

  \f[I]// At last, if the user has denied notifications, and you\f[R]
  \f[I]// want to be respectful there is no need to bother them anymore.\f[R]
}
.EE
.SH SEE ALSO
.IP \[bu] 2
Notifications API
.IP \[bu] 2
Using the Notifications API
.IP \[bu] 2
Permissions API
.IP \[bu] 2
Using the Permissions API
