.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "Intl" "JS" "May 31, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Intl \- Intl
.SH SYNOPSIS
The \f[B]\f[CB]Intl\f[B]\f[R] namespace object contains several
constructors as well as functionality common to the internationalization
constructors and other language sensitive functions.
Collectively, they comprise the ECMAScript Internationalization API,
which provides language sensitive string comparison, number formatting,
date and time formatting, and more.
.SH DESCRIPTION
Unlike most global objects, \f[CR]Intl\f[R] is not a constructor.
You cannot use it with the \f[CR]new\f[R] operator or invoke the
\f[CR]Intl\f[R] object as a function.
All properties and methods of \f[CR]Intl\f[R] are static (just like the
\f[CR]Math\f[R] object).
.PP
The internationalization constructors as well as several language
sensitive methods of other constructors (listed under See also) use a
common pattern for identifying locales and determining the one they will
actually use: they all accept \f[CR]locales\f[R] and \f[CR]options\f[R]
arguments, and negotiate the requested locale(s) against the locales
they support using an algorithm specified in the
\f[CR]options.localeMatcher\f[R] property.
.SS locales argument
The \f[CR]locales\f[R] argument is used to determine the locale used in
a given operation.
The JavaScript implementation examines \f[CR]locales\f[R], and then
computes a locale it understands that comes closest to satisfying the
expressed preference.
\f[CR]locales\f[R] may be:
.IP \[bu] 2
\f[CR]undefined\f[R] (or omitted): The implementation\[cq]s default
locale will be used.
.IP \[bu] 2
A locale: A locale identifier or an \f[CR]Intl.Locale\f[R] object that
wraps a locale identifier.
.IP \[bu] 2
A list of locales: Any other value, that will be converted into an
object and then treated as an array of locales.
.PP
In the latter two cases, the actual locale used is the best\-supported
locale determined by locale negotiation.
If a locale identifier is not a string or an object, a
\f[CR]TypeError\f[R] is thrown.
If a locale identifier is a string that\[cq]s syntactically invalid, a
\f[CR]RangeError\f[R] is thrown.
If a locale identifier is well\-formed but the implementation
doesn\[cq]t recognize it, it is ignored and the next locale in the list
is considered, eventually falling back to the system\[cq]s locale.
However, you shouldn\[cq]t rely on a particular locale name being
ignored, because the implementation may add data for any locale in the
future.
For example, \f[CR]new Intl.DateTimeFormat(\[dq]default\[dq])\f[R] uses
the implementation\[cq]s default locale only because
\f[CR]\[dq]default\[dq]\f[R] is syntactically valid but not recognized
as any locale.
.PP
A locale identifier is a string that consists of:
.IP "1." 3
A language subtag with 2\[en]3 or 5\[en]8 letters
.IP "2." 3
A script subtag with 4 letters \f[I](optional)\f[R]
.IP "3." 3
A region subtag with either 2 letters or 3 digits \f[I](optional)\f[R]
.IP "4." 3
One or more variant subtags (all of which must be unique), each with
either 5\[en]8 alphanumerals or a digit followed by 3 alphanumerals
\f[I](optional)\f[R]
.IP "5." 3
One or more BCP 47 extension sequences \f[I](optional)\f[R]
.IP "6." 3
A private\-use extension sequence \f[I](optional)\f[R]
.PP
Each subtag and sequence are separated by hyphens.
Locale identifiers are case\-insensitive ASCII.
However, it\[cq]s conventional to use title case (the first letter is
capitalized, successive letters are lower case) for script subtags,
upper case for region subtags, and lower case for everything else.
For example:
.IP \[bu] 2
\f[CR]\[dq]hi\[dq]\f[R]: Hindi (language)
.IP \[bu] 2
\f[CR]\[dq]de\-AT\[dq]\f[R]: German (language) as used in Austria
(region)
.IP \[bu] 2
\f[CR]\[dq]zh\-Hans\-CN\[dq]\f[R]: Chinese (language) written in
simplified characters (script) as used in China (region)
.IP \[bu] 2
\f[CR]\[dq]en\-emodeng\[dq]\f[R]: English (language) in the \[lq]Early
modern English\[rq] dialect (variant)
.PP
Subtags identifying languages, scripts, regions (including countries),
and (rarely used) variants are registered in the \c
.UR https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry
IANA Language Subtag Registry
.UE \c
\&.
This registry is periodically updated over time, and implementations may
not always be up to date, so don\[cq]t rely too much on subtags being
universally supported.
.PP
BCP 47 extension sequences consist of a single digit or letter (other
than \f[CR]\[dq]x\[dq]\f[R]) and one or more two\- to eight\-letter or
digit subtags separated by hyphens.
Only one sequence is permitted for each digit or letter:
\f[CR]\[dq]de\-a\-foo\-a\-foo\[dq]\f[R] is invalid.
BCP 47 extension subtags are defined in the \c
.UR https://github.com/unicode-org/cldr/tree/main/common/bcp47
Unicode CLDR Project
.UE \c
\&.
Currently only two extensions have defined semantics:
.IP \[bu] 2
The \f[CR]\[dq]u\[dq]\f[R] (Unicode) extension can be used to request
additional customization of \f[CR]Intl\f[R] API objects.
Examples:
.RS 2
.IP \[bu] 2
\f[CR]\[dq]de\-DE\-u\-co\-phonebk\[dq]\f[R]: Use the phonebook variant
of the German sort order, which interprets umlauted vowels as
corresponding character pairs: ä → ae, ö → oe, ü → ue.
.IP \[bu] 2
\f[CR]\[dq]th\-TH\-u\-nu\-thai\[dq]\f[R]: Use Thai digits (๐, ๑, ๒, ๓,
๔, ๕, ๖, ๗, ๘, ๙) in number formatting.
.IP \[bu] 2
\f[CR]\[dq]ja\-JP\-u\-ca\-japanese\[dq]\f[R]: Use the Japanese calendar
in date and time formatting, so that 2013 is expressed as the year 25 of
the Heisei period, or 平成 25.
.IP \[bu] 2
\f[CR]\[dq]en\-GB\-u\-ca\-islamic\[dq]\f[R]: use British English with
the Islamic (Hijri) calendar, where the Gregorian date 14 October, 2017
is the Hijri date 24 Muharram, 1439.
.RE
.IP \[bu] 2
The \f[CR]\[dq]t\[dq]\f[R] (transformed) extension indicates transformed
content: for example, text that was translated from another locale.
No \f[CR]Intl\f[R] functionality currently considers the
\f[CR]\[dq]t\[dq]\f[R] extension.
However, this extension sometimes contains a nested locale (with no
extensions): for example, the transformed extension in
\f[CR]\[dq]de\-t\-en\[dq]\f[R] contains the locale identifier for
English.
If a nested locale is present, it must be a valid locale identifier.
For example, because \f[CR]\[dq]en\-emodeng\-emodeng\[dq]\f[R] is
invalid (because it contains a duplicate \f[CR]emodeng\f[R] variant
subtag), \f[CR]\[dq]de\-t\-en\-emodeng\-emodeng\[dq]\f[R] is also
invalid.
.PP
Finally, a private\-use extension sequence using the letter
\f[CR]\[dq]x\[dq]\f[R] may appear, followed by one or more one\- to
eight\-letter or digit subtags separated by hyphens.
This allows applications to encode information for their own private
use, that will be ignored by all \f[CR]Intl\f[R] operations.
.SS options argument
The \f[CR]options\f[R] argument must be an object with properties that
vary between constructors and functions.
If the \f[CR]options\f[R] argument is not provided or is undefined,
default values are used for all properties.
.PP
One property is supported by all language sensitive constructors and
functions: The \f[CR]localeMatcher\f[R] property, whose value must be a
string \f[CR]\[dq]lookup\[dq]\f[R] or \f[CR]\[dq]best fit\[dq]\f[R] and
which selects one of the locale matching algorithms described below.
.SS Locale identification and negotiation
The list of locales specified by the \f[CR]locales\f[R] argument, after
Unicode extensions have been removed from them, is interpreted as a
prioritized request from the application.
The runtime compares it against the locales it has available and picks
the best one available.
Two matching algorithms exist: the \f[CR]\[dq]lookup\[dq]\f[R] matcher
follows the Lookup algorithm specified in \c
.UR https://datatracker.ietf.org/doc/html/rfc4647#section-3.4
BCP 47
.UE \c
; the \f[CR]\[dq]best fit\[dq]\f[R] matcher lets the runtime provide a
locale that\[cq]s at least, but possibly more, suited for the request
than the result of the Lookup algorithm.
If the application doesn\[cq]t provide a \f[CR]locales\f[R] argument, or
the runtime doesn\[cq]t have a locale that matches the request, then the
runtime\[cq]s default locale is used.
The matcher can be selected using a property of the \f[CR]options\f[R]
argument (see below).
.PP
If the selected locale identifier had a Unicode extension sequence, that
extension is now used to customize the constructed object or the
behavior of the function.
Each constructor or function supports only a subset of the keys defined
for the Unicode extension, and the supported values often depend on the
locale identifier.
For example, the \f[CR]\[dq]co\[dq]\f[R] key (collation) is only
supported by \f[CR]Intl.Collator\f[R], and its
\f[CR]\[dq]phonebk\[dq]\f[R] value is only supported for German.
.SH STATIC PROPERTIES
.TP
\f[B]Intl.Collator\f[R]
Constructor for collators, which are objects that enable
language\-sensitive string comparison.
.TP
\f[B]Intl.DateTimeFormat\f[R]
Constructor for objects that enable language\-sensitive date and time
formatting.
.TP
\f[B]Intl.DisplayNames\f[R]
Constructor for objects that enable the consistent translation of
language, region and script display names.
.TP
\f[B]Intl.DurationFormat\f[R] \f[I](experimental)\f[R]
Constructor for objects that enable locale\-sensitive duration
formatting.
.TP
\f[B]Intl.ListFormat\f[R]
Constructor for objects that enable language\-sensitive list formatting.
.TP
\f[B]Intl.Locale\f[R]
Constructor for objects that represents a Unicode locale identifier.
.TP
\f[B]Intl.NumberFormat\f[R]
Constructor for objects that enable language\-sensitive number
formatting.
.TP
\f[B]Intl.PluralRules\f[R]
Constructor for objects that enable plural\-sensitive formatting and
language\-specific rules for plurals.
.TP
\f[B]Intl.RelativeTimeFormat\f[R]
Constructor for objects that enable language\-sensitive relative time
formatting.
.TP
\f[B]Intl.Segmenter\f[R]
Constructor for objects that enable locale\-sensitive text segmentation.
.TP
\f[B]Intl[\[at]\[at]toStringTag]\f[R]
The initial value of the \f[CR]\[at]\[at]toStringTag\f[R] property is
the string \f[CR]\[dq]Intl\[dq]\f[R].
This property is used in \f[CR]Object.prototype.toString()\f[R].
.SH STATIC METHODS
.TP
\f[B]Intl.getCanonicalLocales()\f[R]
Returns canonical locale names.
.TP
\f[B]Intl.supportedValuesOf()\f[R]
Returns a sorted array containing the supported unique calendar,
collation, currency, numbering systems, or unit values supported by the
implementation.
.SH EXAMPLES
.SS Formatting dates and numbers
You can use \f[CR]Intl\f[R] to format dates and numbers in a form
that\[cq]s conventional for a specific language and region:
.IP
.EX
\f[B]const\f[R] count = 26254.39;
\f[B]const\f[R] date = \f[B]new\f[R] Date(\[dq]2012\-05\-24\[dq]);

\f[B]function\f[R] log(locale) {
  console.log(
    \[ga]${\f[B]new\f[R] Intl.DateTimeFormat(locale).format(date)} ${\f[B]new\f[R] Intl.NumberFormat(
      locale,
    ).format(count)}\[ga],
  );
}

log(\[dq]en\-US\[dq]); \f[I]// 5/24/2012 26,254.39\f[R]

log(\[dq]de\-DE\[dq]); \f[I]// 24.5.2012 26.254,39\f[R]
.EE
.SS Using the browser\[cq]s preferred language
Instead of passing a hardcoded locale name to the \f[CR]Intl\f[R]
methods, you can use the user\[cq]s preferred language provided by
\f[CR]navigator.language\f[R]:
.IP
.EX
\f[B]const\f[R] date = \f[B]new\f[R] Date(\[dq]2012\-05\-24\[dq]);

\f[B]const\f[R] formattedDate = \f[B]new\f[R] Intl.DateTimeFormat(navigator.language).format(date);
.EE
.PP
Alternatively, the \f[CR]navigator.languages\f[R] property provides a
sorted list of the user\[cq]s preferred languages.
This list can be passed directly to the \f[CR]Intl\f[R] constructors to
implement preference\-based fallback selection of locales.
The locale negotiation process is used to pick the most appropriate
locale available:
.IP
.EX
\f[B]const\f[R] count = 26254.39;

\f[B]const\f[R] formattedCount = \f[B]new\f[R] Intl.NumberFormat(navigator.languages).format(count);
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]String.prototype.localeCompare()\f[R]
.IP \[bu] 2
\f[CR]Number.prototype.toLocaleString()\f[R]
.IP \[bu] 2
\f[CR]Date.prototype.toLocaleString()\f[R]
.IP \[bu] 2
\f[CR]Date.prototype.toLocaleDateString()\f[R]
.IP \[bu] 2
\f[CR]Date.prototype.toLocaleTimeString()\f[R]
.IP \[bu] 2
\f[CR]Keyboard.getLayoutMap()\f[R]
.IP \[bu] 2
\f[CR]navigator.language\f[R]
.IP \[bu] 2
\f[CR]navigator.languages\f[R]
.IP \[bu] 2
\c
.UR https://norbertlindenberg.com/2012/12/ecmascript-internationalization-api/index.html
The ECMAScript Internationalization API
.UE \c
\ by Norbert Lindenberg (2012)
