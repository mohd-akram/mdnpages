.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "URL.PARSE_STATIC" "3JS" "September 25, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
URL.parse_static \- URL: parse() static method
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]URL.parse()\f[B]\f[R] static method of the \f[CR]URL\f[R]
interface returns a newly created \f[CR]URL\f[R] object representing the
URL defined by the parameters.
.PP
If the given base URL or the resulting URL are not parsable and valid
URLs, \f[CR]null\f[R] is returned.
This is an alternative to using the \f[CR]URL()\f[R] constructor to
construct a \f[CR]URL\f[R] within a try\&...catch block, or using
\f[CR]canParse()\f[R] to check the parameters and returning
\f[CR]null\f[R] if the method returns \f[CR]false\f[R].
.SH SYNTAX
.IP
.EX
URL.parse(url)
URL.parse(url, base)
.EE
.SS Parameters
.TP
\f[B]url\f[R]
A string or any other object with a stringifier that represents an
absolute URL or a relative reference to a URL.
If \f[CR]url\f[R] is a relative reference, \f[CR]base\f[R] is required,
and is used to resolve the final URL.
If \f[CR]url\f[R] is an absolute URL, a given \f[CR]base\f[R] will not
be used to create the resulting URL.
.TP
\f[B]base\f[R] \f[I](optional)\f[R]
A string representing the base URL to use in cases where \f[CR]url\f[R]
is a relative URL.
If not specified, it defaults to \f[CR]undefined\f[R].
.RS
.PP
When you specify a \f[CR]base\f[R] URL, the resolved URL is not simply a
concatenation of \f[CR]url\f[R] and \f[CR]base\f[R].
Relative references to the parent and current directory are resolved are
relative to the current directory of the \f[CR]base\f[R] URL, which
includes only path segments up until the last forward\-slash, but not
any after.
Relative references to the root are resolved relative to the base
origin.
For more information see Resolving relative references to a URL.
.RE
.RS
.PP
\f[B]Note:\f[R] The \f[CR]url\f[R] and \f[CR]base\f[R] arguments will
each be stringified from whatever value you pass, such as an
\f[CR]HTMLAnchorElement\f[R] or \f[CR]HTMLAreaElement\f[R] element, just
like with other Web APIs that accept a string.
In particular, you can use an existing \f[CR]URL\f[R] object for either
argument, and it will be stringified from the object\(cqs
\f[CR]href\f[R] property.
.RE
.SS Return value
A \f[CR]URL\f[R] if the parameters can be resolved to a valid URL;
\f[CR]null\f[R] otherwise.
.SH EXAMPLES
Resolving relative references to a URL and \f[CR]URL()\f[R] constructor
provide additional examples demonstrating how different \f[CR]url\f[R]
and \f[CR]base\f[R] values are resolved to a final absolute URL (though
primarily using \f[CR]URL()\f[R]).
.SS Using URL.parse()
This live example demonstrates how to use the \f[CR]URL.parse()\f[R]
static method for a few different absolute and relative reference
values.
.PP
First we check that the \f[CR]URL.parse()\f[R] method is supported using
the condition \f[CR]\(dqparse\(dq in URL\f[R].
If the method is supported we log the result of checking an absolute
URL, a relative reference and a base URL, a relative reference with a
more complicated base URL, a valid absolute URL with a valid base URL
(which is not used), and an invalid base URL that results in the method
returning \f[CR]null\f[R].
.PP
We also log the case when \f[CR]URL.parse()\f[R] is not supported.
.IP
.EX
\f[B]if\f[R] (\(dqparse\(dq \f[B]in\f[R] URL) {
  \f[I]// Absolute URL\f[R]
  \f[B]let\f[R] result = URL.parse(\(dqhttps://developer.mozilla.org/en\-US/docs\(dq);
  log(\(ga[1]: ${result.href}\(ga);

  \f[I]// Relative reference to a valid base URL\f[R]
  result = URL.parse(\(dqen\-US/docs\(dq, \(dqhttps://developer.mozilla.org\(dq);
  log(\(ga[2]: ${result.href}\(ga);

  \f[I]// Relative reference to a \(dqcomplicated\(dq valid base URL\f[R]
  \f[I]// (only the scheme and domain are used to resolve url)\f[R]
  result = URL.parse(
    \(dq/different/place\(dq,
    \(dqhttps://developer.mozilla.org:443/some/path?id=4\(dq,
  );
  log(\(ga[3]: ${result.href}\(ga);

  \f[I]// Absolute url argument (base URL ignored)\f[R]
  result = URL.parse(
    \(dqhttps://example.org/some/docs\(dq,
    \(dqhttps://developer.mozilla.org\(dq,
  );
  log(\(ga[4]: ${result.href}\(ga);

  \f[I]// Invalid base URL (missing colon)\f[R]
  result = URL.parse(\(dqen\-US/docs\(dq, \(dqhttps//developer.mozilla.org\(dq);
  log(\(ga[5]: ${result}\(ga);
} \f[B]else\f[R] {
  log(\(dqURL.parse() not supported\(dq);
}
.EE
.PP
Last of all, the code below demonstrates that the arguments don\(cqt
have to be strings, by passing an \f[CR]URL\f[R] object for the
\f[CR]base\f[R] parameter.
.IP
.EX
\f[B]if\f[R] (\(dqparse\(dq \f[B]in\f[R] URL) {
  \f[I]// Relative reference with base URL supplied as a URL object\f[R]
  result = URL.parse(\(dq/en\-US/docs\(dq, \f[B]new\f[R] URL(\(dqhttps://developer.mozilla.org/\(dq));
  log(\(ga[6]: ${result.href}\(ga);
}
.EE
.PP
The results of each of the checks are shown below.
.SH SEE ALSO
.IP \(bu 2
\f[CR]URL()\f[R] constructor, which throws if the passed parameters
define an invalid URL
.IP \(bu 2
\c
.UR https://github.com/zloirock/core-js#url-and-urlsearchparams
A polyfill of \f[CR]URL.parse()\f[R]
.UE \c
\ is available in \c
.UR https://github.com/zloirock/core-js
\f[CR]core\-js\f[R]
.UE \c
