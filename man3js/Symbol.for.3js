.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "SYMBOL.FOR" "3JS" "June 20, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Symbol.for \- Symbol.for()
.SH SYNOPSIS
The \f[B]\f[CB]Symbol.for()\f[B]\f[R] static method searches for
existing symbols in a runtime\-wide symbol registry with the given key
and returns it if found.
Otherwise a new symbol gets created in the global symbol registry with
this key.
.IP
.EX
console.log(Symbol.for(\(dqbar\(dq) === Symbol.for(\(dqbar\(dq));
\f[I]// Expected output: true\f[R]

console.log(Symbol(\(dqbar\(dq) === Symbol(\(dqbar\(dq));
\f[I]// Expected output: false\f[R]

\f[B]const\f[R] symbol1 = Symbol.for(\(dqfoo\(dq);

console.log(symbol1.toString());
\f[I]// Expected output: \(dqSymbol(foo)\(dq\f[R]
.EE
.SH SYNTAX
.IP
.EX
Symbol.for(key)
.EE
.SS Parameters
.TP
\f[B]key\f[R]
String, required.
The key for the symbol (and also used for the description of the
symbol).
.SS Return value
An existing symbol with the given key if found; otherwise, a new symbol
is created and returned.
.SH DESCRIPTION
In contrast to \f[CR]Symbol()\f[R], the \f[CR]Symbol.for()\f[R] function
creates a symbol available in a global symbol registry list.
\f[CR]Symbol.for()\f[R] does also not necessarily create a new symbol on
every call, but checks first if a symbol with the given \f[CR]key\f[R]
is already present in the registry.
In that case, that symbol is returned.
If no symbol with the given key is found, \f[CR]Symbol.for()\f[R] will
create a new global symbol.
.SH EXAMPLES
.SS Using Symbol.for()
.IP
.EX
Symbol.for(\(dqfoo\(dq); \f[I]// create a new global symbol\f[R]
Symbol.for(\(dqfoo\(dq); \f[I]// retrieve the already created symbol\f[R]

\f[I]// Same global symbol, but not locally\f[R]
Symbol.for(\(dqbar\(dq) === Symbol.for(\(dqbar\(dq); \f[I]// true\f[R]
Symbol(\(dqbar\(dq) === Symbol(\(dqbar\(dq); \f[I]// false\f[R]

\f[I]// The key is also used as the description\f[R]
\f[B]const\f[R] sym = Symbol.for(\(dqmario\(dq);
sym.toString(); \f[I]// \(dqSymbol(mario)\(dq\f[R]
.EE
.PP
To avoid name clashes with your global symbol keys and other (library
code) global symbols, it might be a good idea to prefix your symbols:
.IP
.EX
Symbol.for(\(dqmdn.foo\(dq);
Symbol.for(\(dqmdn.bar\(dq);
.EE
.SH SEE ALSO
.IP \(bu 2
\f[CR]Symbol.keyFor()\f[R]
