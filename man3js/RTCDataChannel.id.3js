.\" Automatically generated by Pandoc 3.4
.\"
.TH "RTCDataChannel.id" "JS" "April 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
RTCDataChannel.id \- RTCDataChannel: id property
.SH SYNOPSIS
The read\-only \f[CR]RTCDataChannel\f[R] property
\f[B]\f[CB]id\f[B]\f[R] returns an ID number (between 0 and 65,534)
which uniquely identifies the \f[CR]RTCDataChannel\f[R].
This ID is set at the time the data channel is created, either by the
user agent (if \f[CR]RTCDataChannel.negotiated\f[R] is \f[CR]false\f[R])
or by the site or app script (if \f[CR]negotiated\f[R] is
\f[CR]true\f[R]).
.PP
Each \f[CR]RTCPeerConnection\f[R] can therefore have up to a theoretical
maximum of 65,534 data channels on it, although the actual maximum may
vary from browser to browser.
.SH VALUE
An \f[CR]unsigned short\f[R] value (that is, an integer between 0 and
65,535) which uniquely identifies the data channel.
.PP
While the \f[CR]label\f[R] property doesn\[cq]t have to be unique, this
ID number is guaranteed to be unique among all data channels.
Additionally, known implementations of WebRTC use the same ID on both
peers.
A unique ID makes it easier for your code to do its own out\-of\-band
data channel\-related signaling.
.PP
This can be also useful for logging and debugging purposes.
.SH EXAMPLE
.IP
.EX
\f[B]const\f[R] pc = \f[B]new\f[R] RTCPeerConnection();
\f[B]const\f[R] dc = pc.createDataChannel(\[dq]my channel\[dq]);

console.log(\[ga]Channel id: ${dc.id}\[ga]);
.EE
.SH SEE ALSO
.IP \[bu] 2
WebRTC
.IP \[bu] 2
\f[CR]RTCDataChannel\f[R]
.IP \[bu] 2
\f[CR]RTCPeerConnection.createDataChannel()\f[R]
