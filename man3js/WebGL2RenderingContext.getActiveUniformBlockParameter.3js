.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "WebGL2RenderingContext.getActiveUniformBlockParameter" "JS" "September 28, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
WebGL2RenderingContext.getActiveUniformBlockParameter \-
WebGL2RenderingContext: getActiveUniformBlockParameter() method
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The
\f[B]\f[CB]WebGL2RenderingContext.getActiveUniformBlockParameter()\f[B]\f[R]
method of the WebGL 2 API retrieves information about an active uniform
block within a \f[CR]WebGLProgram\f[R].
.SH SYNTAX
.IP
.EX
getActiveUniformBlockParameter(program, uniformBlockIndex, pname)
.EE
.SS Parameters
.TP
\f[B]program\f[R]
A \f[CR]WebGLProgram\f[R] containing the active uniform block.
.TP
\f[B]uniformBlockIndex\f[R]
A \f[CR]GLuint\f[R] specifying the index of the active uniform block
within the program.
.TP
\f[B]pname\f[R]
A \f[CR]GLenum\f[R] specifying which information to query.
Possible values:
.RS
.TP
\f[B]gl.UNIFORM_BLOCK_BINDING\f[R]
Returns a \f[CR]GLuint\f[R] indicating the uniform buffer binding point.
.TP
\f[B]gl.UNIFORM_BLOCK_DATA_SIZE\f[R]
Returns a \f[CR]GLuint\f[R] indicating the minimum total buffer object
size.
.TP
\f[B]gl.UNIFORM_BLOCK_ACTIVE_UNIFORMS\f[R]
Returns a \f[CR]GLuint\f[R] indicating the number of active uniforms in
the uniform block.
.TP
\f[B]gl.UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES\f[R]
Returns a \f[CR]Uint32Array\f[R] indicating the list of active uniforms
in the uniform block.
.TP
\f[B]gl.UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER\f[R]
Returns a \f[CR]GLboolean\f[R] indicating whether the uniform block is
referenced by the vertex shader.
.TP
\f[B]gl.UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER\f[R]
Returns a \f[CR]GLboolean\f[R] indicating whether the uniform block is
referenced by the fragment shader.
.RE
.SS Return value
Depends on which information is requested using the \f[CR]pname\f[R]
parameter.
If an error occurs, \f[CR]null\f[R] is returned.
.SH EXAMPLES
.IP
.EX
\f[B]const\f[R] blockSize = gl.getActiveUniformBlockParameter(
  program,
  blockIndex,
  gl.UNIFORM_BLOCK_DATA_SIZE,
);
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]WebGL2RenderingContext.getActiveUniforms()\f[R]
