.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "CredentialsContainer.store" "JS" "July 26, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
CredentialsContainer.store \- CredentialsContainer: store() method
.SH SYNOPSIS
\f[B]Secure context:\f[R] This feature is available only in secure
contexts (HTTPS).
.PP
The \f[B]\f[CB]store()\f[B]\f[R] method of the
\f[CR]CredentialsContainer\f[R] stores a set of credentials for the user
inside a \f[CR]Credential\f[R] instance, returning this in a
\f[CR]Promise\f[R].
.RS
.PP
\f[B]Note:\f[R] This method is restricted to top\-level contexts.
Calls to it within an \f[CR]<iframe>\f[R] element will resolve without
effect.
.RE
.SH SYNTAX
.IP
.EX
store(credentials)
.EE
.SS Parameters
.TP
\f[B]credentials\f[R]
A valid \f[CR]Credential\f[R] instance.
.SS Return value
A \f[CR]Promise\f[R] that resolves to \f[CR]undefined\f[R].
.SS Exceptions
.TP
\f[B]NotAllowedError\f[R] \f[B]DOMException\f[R]
Thrown if there is also a credential of the same type as the current one
under operation.
.SH EXAMPLES
.SS Storing a password credential at successful authentication
This code would be executed after a user signs up or logs in and the
server confirms the credential is correct.
.IP
.EX
\f[I]// Check if the browser supports password credentials (and the Credential Management API)\f[R]
\f[B]if\f[R] (\[dq]PasswordCredential\[dq] \f[B]in\f[R] window) {
  \f[B]let\f[R] credential = \f[B]new\f[R] PasswordCredential({
    id: \[dq]example\-username\[dq],
    name: \[dq]Carina Anand\[dq], \f[I]// In case of a login, the name comes from the server.\f[R]
    password: \[dq]correct horse battery staple\[dq],
  });

  navigator.credentials.store(credential).then(
    () \f[B]=>\f[R] {
      console.info(\[dq]Credential stored in the user agent\[aq]s credential manager.\[dq]);
    },
    (err) \f[B]=>\f[R] {
      console.error(\[dq]Error while storing the credential: \[dq], err);
    },
  );
}
.EE
