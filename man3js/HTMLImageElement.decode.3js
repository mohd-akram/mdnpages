.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "HTMLIMAGEELEMENT.DECODE" "3JS" "July 26, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
HTMLImageElement.decode \- HTMLImageElement: decode() method
.SH SYNOPSIS
The \f[B]\f[CB]decode()\f[B]\f[R] method of the
\f[CR]HTMLImageElement\f[R] interface returns a \f[CR]Promise\f[R] that
resolves once the image is decoded and it is safe to append it to the
DOM.
.PP
This can be used to initiate loading of the image prior to attaching it
to an element in the DOM (or adding it to the DOM as a new element), so
that the image can be rendered immediately upon being added to the DOM.
This, in turn, prevents the rendering of the next frame after adding the
image to the DOM from causing a delay while the image loads.
.SH SYNTAX
.IP
.EX
decode()
.EE
.SS Parameters
None.
.SS Return value
A \f[CR]Promise\f[R] that fulfills with \f[CR]undefined\f[R] once the
image data is ready to be used.
.SS Exceptions
.TP
\f[B]EncodingError\f[R]
A \f[CR]DOMException\f[R] indicating that an error occurred while
decoding the image.
.SH USAGE NOTES
One potential use case for \f[CR]decode()\f[R]: when loading very large
images (for example, in an online photo album), you can present a low
resolution thumbnail image initially and then replace that image with
the full\-resolution image by instantiating a new
\f[CR]HTMLImageElement\f[R], setting its source to the full\-resolution
image\(cqs URL, then using \f[CR]decode()\f[R] to get a promise which is
resolved once the full\-resolution image is ready for use.
At that time, you can then replace the low\-resolution image with the
full\-resolution one that\(cqs now available.
.SH EXAMPLES
.SS Basic usage
The following example shows how to use the \f[CR]decode()\f[R] method to
control when an image is appended to the DOM.
.IP
.EX
\f[B]const\f[R] img = \f[B]new\f[R] Image();
img.src = \(dqnebula.jpg\(dq;
img
  .decode()
  .then(() \f[B]=>\f[R] {
    document.body.appendChild(img);
  })
  .catch((encodingError) \f[B]=>\f[R] {
    \f[I]// Do something with the error.\f[R]
  });
.EE
.RS
.PP
\f[B]Note:\f[R] Without a \f[CR]Promise\f[R]\-returning method, you
would add the image to the DOM in a \f[CR]load\f[R] event handler, and
handle the error in the \f[CR]error\f[R] event\(cqs handler.
.RE
.SS Avoiding empty images
In the below example, you\(cqll likely get an empty image shown on the
page as the image is downloaded:
.IP
.EX
\f[B]const\f[R] img = \f[B]new\f[R] Image();
img.src = \(dqimg/logo.png\(dq;
document.body.appendChild(img);
.EE
.PP
Using \f[CR]decode()\f[R] will delay inserting the image into the DOM
until it is fully downloaded and decoded, thereby avoiding the empty
image problem:
.IP
.EX
\f[B]async\f[R] \f[B]function\f[R] getImage() {
  \f[B]const\f[R] img = \f[B]new\f[R] Image();
  img.src = \(dqimg/logo.png\(dq;
  \f[B]await\f[R] img.decode();
  document.body.appendChild(img);
  \f[B]const\f[R] p = document.createElement(\(dqp\(dq);
  p.textContent = \(dqImage is fully loaded!\(dq;
  document.body.appendChild(p);
}
.EE
.PP
This is particularly useful if you\(cqre dynamically swapping an
existing image for a new one, and also prevents unrelated paints outside
of this code from being held up while the image is decoding.
.SH SEE ALSO
.IP \(bu 2
\c
.UR https://www.tunetheweb.com/blog/what-does-the-image-decoding-attribute-actually-do/
What does the image decoding attribute actually do?
.UE \c
\ on tunetheweb.com (2023)
.IP \(bu 2
The \f[CR]HTMLImageElement.decoding\f[R] property
