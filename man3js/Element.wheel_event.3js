'\" t
.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "Element.wheel_event" "JS" "December 22, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Element.wheel_event \- Element: wheel event
.SH SYNOPSIS
The \f[B]\f[CB]wheel\f[B]\f[R] event fires when the user rotates a wheel
button on a pointing device (typically a mouse).
.PP
This event replaces the non\-standard deprecated \f[CR]mousewheel\f[R]
event.
.RS
.PP
\f[B]Note:\f[R] Don\[cq]t confuse the \f[CR]wheel\f[R] event with the
\f[CR]scroll\f[R] event.
The default action of a \f[CR]wheel\f[R] event is
implementation\-specific, and doesn\[cq]t necessarily dispatch a
\f[CR]scroll\f[R] event.
Even when it does, the \f[CR]delta*\f[R] values in the \f[CR]wheel\f[R]
event don\[cq]t necessarily reflect the content\[cq]s scrolling
direction.
Therefore, do not rely on the \f[CR]wheel\f[R] event\[cq]s
\f[CR]delta*\f[R] properties to get the scrolling direction.
Instead, detect value changes of \f[CR]scrollLeft\f[R] and
\f[CR]scrollTop\f[R] of the target in the \f[CR]scroll\f[R] event.
.RE
.SH SYNTAX
Use the event name in methods like \f[CR]addEventListener()\f[R], or set
an event handler property.
.IP
.EX
addEventListener(\[dq]wheel\[dq], (event) \f[B]=>\f[R] {});

onwheel = (event) \f[B]=>\f[R] {};
.EE
.SH EVENT TYPE
A \f[CR]WheelEvent\f[R].
Inherits from \f[CR]MouseEvent\f[R], \f[CR]UIEvent\f[R] and
\f[CR]Event\f[R].
.SH EVENT PROPERTIES
\f[I]This interface inherits properties from its ancestors,
\f[CI]MouseEvent\f[I], \f[CI]UIEvent\f[I], and \f[CI]Event\f[I].\f[R]
.TP
\f[B]WheelEvent.deltaX\f[R] \f[I](read\-only)\f[R]
Returns a \f[CR]double\f[R] representing the horizontal scroll amount.
.TP
\f[B]WheelEvent.deltaY\f[R] \f[I](read\-only)\f[R]
Returns a \f[CR]double\f[R] representing the vertical scroll amount.
.TP
\f[B]WheelEvent.deltaZ\f[R] \f[I](read\-only)\f[R]
Returns a \f[CR]double\f[R] representing the scroll amount for the
z\-axis.
.TP
\f[B]WheelEvent.deltaMode\f[R] \f[I](read\-only)\f[R]
Returns an \f[CR]unsigned long\f[R] representing the unit of the
\f[CR]delta*\f[R] values\[cq] scroll amount.
Permitted values are:
.RS
.PP
.TS
tab(@);
lw(10.3n) lw(2.2n) lw(57.5n).
T{
Constant
T}@T{
Value
T}@T{
Description
T}
_
T{
\f[CR]WheelEvent.DOM_DELTA_PIXEL\f[R]
T}@T{
\f[CR]0x00\f[R]
T}@T{
The \f[CR]delta*\f[R] values are specified in pixels.
T}
T{
\f[CR]WheelEvent.DOM_DELTA_LINE\f[R]
T}@T{
\f[CR]0x01\f[R]
T}@T{
The \f[CR]delta*\f[R] values are specified in lines.
Each mouse click scrolls a line of content, where the method used to
calculate line height is browser dependent.
T}
T{
\f[CR]WheelEvent.DOM_DELTA_PAGE\f[R]
T}@T{
\f[CR]0x02\f[R]
T}@T{
The \f[CR]delta*\f[R] values are specified in pages.
Each mouse click scrolls a page of content.
T}
.TE
.RE
.TP
\f[B]WheelEvent.wheelDelta\f[R] \f[I](read\-only)\f[R] \f[I](deprecated)\f[R]
Returns an integer (32\-bit) representing the distance in pixels.
.TP
\f[B]WheelEvent.wheelDeltaX\f[R] \f[I](read\-only)\f[R] \f[I](deprecated)\f[R]
Returns an integer representing the horizontal scroll amount.
.TP
\f[B]WheelEvent.wheelDeltaY\f[R] \f[I](read\-only)\f[R] \f[I](deprecated)\f[R]
Returns an integer representing the vertical scroll amount.
.SH EXAMPLES
.SS Scaling an element via the wheel
This example shows how to scale an element using the mouse (or other
pointing device) wheel.
.IP
.EX
<\f[B]div\f[R]>Scale me with your mouse wheel.</\f[B]div\f[R]>
.EE
.IP
.EX
body {
  \f[B]min\-height\f[R]: 100vh;
  \f[B]margin\f[R]: 0;
  \f[B]display\f[R]: flex;
  \f[B]align\-items\f[R]: center;
  \f[B]justify\-content\f[R]: center;
}

div {
  \f[B]width\f[R]: 105px;
  \f[B]height\f[R]: 105px;
  \f[B]background\f[R]: #cdf;
  \f[B]padding\f[R]: 5px;
}
.EE
.IP
.EX
\f[B]function\f[R] zoom(event) {
  event.preventDefault();

  scale += event.deltaY * \-0.01;

  \f[I]// Restrict scale\f[R]
  scale = Math.min(Math.max(0.125, scale), 4);

  \f[I]// Apply scale transform\f[R]
  el.style.transform = \[ga]scale(${scale})\[ga];
}

\f[B]let\f[R] scale = 1;
\f[B]const\f[R] el = document.querySelector(\[dq]div\[dq]);
el.onwheel = zoom;
.EE
.SS addEventListener equivalent
The event handler can also be set up using the
\f[CR]addEventListener()\f[R] method:
.IP
.EX
el.addEventListener(\[dq]wheel\[dq], zoom, { passive: \f[B]false\f[R] });
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]WheelEvent\f[R]
