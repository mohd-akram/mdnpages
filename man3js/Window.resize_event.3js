.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "Window.resize_event" "JS" "November 29, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Window.resize_event \- Window: resize event
.SH SYNOPSIS
The \f[B]\f[CB]resize\f[B]\f[R] event fires when the document view
(window) has been resized.
.PP
This event is not cancelable and does not bubble.
.PP
In some earlier browsers it was possible to register \f[CR]resize\f[R]
event handlers on any HTML element.
It is still possible to set \f[CR]onresize\f[R] attributes or use
\f[CR]addEventListener()\f[R] to set a handler on any element.
However, \f[CR]resize\f[R] events are only fired on the
\f[CR]window\f[R] object (i.e.\ returned by
\f[CR]document.defaultView\f[R]).
Only handlers registered on the \f[CR]window\f[R] object will receive
\f[CR]resize\f[R] events.
.PP
While the \f[CR]resize\f[R] event fires only for the window nowadays,
you can get resize notifications for other elements using the
ResizeObserver API.
.PP
If the resize event is triggered too many times for your application,
see \c
.UR https://web.archive.org/web/20220714020647/https://bencentra.com/code/2015/02/27/optimizing-window-resize.html
Optimizing window.onresize
.UE \c
\ to control the time after which the event fires.
.SH SYNTAX
Use the event name in methods like \f[CR]addEventListener()\f[R], or set
an event handler property.
.IP
.EX
addEventListener(\[dq]resize\[dq], (event) \f[B]=>\f[R] {});

onresize = (event) \f[B]=>\f[R] {};
.EE
.SH EVENT TYPE
A generic \f[CR]Event\f[R].
.SH EXAMPLES
.SS Window size logger
The following example reports the window size each time it is resized.
.SS HTML
.IP
.EX
<\f[B]p\f[R]>Resize the browser window to fire the <\f[B]code\f[R]>resize</\f[B]code\f[R]> event.</\f[B]p\f[R]>
<\f[B]p\f[R]>Window height: <\f[B]span\f[R] id=\[dq]height\[dq]></\f[B]span\f[R]></\f[B]p\f[R]>
<\f[B]p\f[R]>Window width: <\f[B]span\f[R] id=\[dq]width\[dq]></\f[B]span\f[R]></\f[B]p\f[R]>
.EE
.SS JavaScript
.IP
.EX
\f[B]const\f[R] heightOutput = document.querySelector(\[dq]#height\[dq]);
\f[B]const\f[R] widthOutput = document.querySelector(\[dq]#width\[dq]);

\f[B]function\f[R] reportWindowSize() {
  heightOutput.textContent = window.innerHeight;
  widthOutput.textContent = window.innerWidth;
}

window.onresize = reportWindowSize;
.EE
.SS Result
.RS
.PP
\f[B]Note:\f[R] The example output here is in an \f[CR]<iframe>\f[R], so
the reported width and height values are for the \f[CR]<iframe>\f[R],
not the window that this page is in.
In particular, it will be hard to adjust the window size so as to see a
difference in the reported height.
.PP
The effect is easier to see if you \c
.UR https://yari-demos.prod.mdn.mozit.cloud/en-US/docs/Web/API/Window/resize_event/_sample_.window_size_logger.html
view the example in its own window
.UE \c
\&.
.RE
.SS addEventListener equivalent
You could set up the event handler using the
\f[CR]addEventListener()\f[R] method:
.IP
.EX
window.addEventListener(\[dq]resize\[dq], reportWindowSize);
.EE
