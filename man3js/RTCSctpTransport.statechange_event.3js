.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "RTCSCTPTRANSPORT.STATECHANGE_EVENT" "3JS" "May 2, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
RTCSctpTransport.statechange_event \- RTCSctpTransport: statechange
event
.SH SYNOPSIS
A \f[B]\f[CB]statechange\f[B]\f[R] event is sent to an
\f[CR]RTCSctpTransport\f[R] to provide notification when the
\f[CR]RTCSctpTransport.state\f[R] property has changed.
.SH SYNTAX
Use the event name in methods like \f[CR]addEventListener()\f[R], or set
an event handler property.
.IP
.EX
addEventListener(\(dqstatechange\(dq, (event) => { })

onstatechange = (event) => { }
.EE
.SH EVENT TYPE
A generic \f[CR]Event\f[R].
.SH EXAMPLES
Given an \f[CR]RTCSctpTransport\f[R], \f[CR]transport\f[R], and an
\f[CR]updateStatus()\f[R] function that presents connection state
information to the user, this code sets up an event handler to let the
user know when the transport is connected.
.IP
.EX
pc.addEventListener(
  \(dqstatechange\(dq,
  (event) \f[B]=>\f[R] {
    \f[B]switch\f[R] (transport.state) {
      \f[B]case\f[R] \(dqconnected\(dq:
        updateStatus(\(dqConnection started\(dq);
        \f[B]break\f[R];
    }
  },
  \f[B]false\f[R],
);
.EE
.PP
Using \f[CR]onstatechange\f[R], it looks like this:
.IP
.EX
transport.onstatechange = (event) \f[B]=>\f[R] {
  \f[B]switch\f[R] (transport.state) {
    \f[B]case\f[R] \(dqconnected\(dq:
      updateStatus(\(dqConnection started\(dq);
      \f[B]break\f[R];
  }
};
.EE
.SH SEE ALSO
.IP \(bu 2
WebRTC API
.IP \(bu 2
\f[CR]RTCSctpTransport.state\f[R]
