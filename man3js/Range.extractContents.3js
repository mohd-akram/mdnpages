.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "RANGE.EXTRACTCONTENTS" "3JS" "March 21, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Range.extractContents \- Range: extractContents() method
.SH SYNOPSIS
The \f[B]\f[CB]extractContents()\f[B]\f[R] method of the
\f[CR]Range\f[R] interface is similar to a combination of
\f[CR]Range.cloneContents()\f[R] and \f[CR]Range.deleteContents()\f[R].
It removes the child \f[CR]Node\f[R]s of the range from the document,
clones them, and returns them as a new \f[CR]DocumentFragment\f[R]
object.
For partially selected nodes, only the selected text is deleted, but all
containing parent nodes up to the common ancestor are cloned as well,
resulting in two copies of these nodes, one in the original document and
one in the extracted fragment.
.SH SYNTAX
.IP
.EX
extractContents()
.EE
.SS Parameters
None.
.SS Return value
A \f[CR]DocumentFragment\f[R] object.
.SH EXAMPLES
.SS Basic example
.IP
.EX
\f[B]const\f[R] range = document.createRange();
range.selectNode(document.getElementsByTagName(\(dqdiv\(dq).item(0));
\f[B]const\f[R] documentFragment = range.extractContents();
document.body.appendChild(documentFragment);
.EE
.SS Moving items between containers
This example lets you move items between two containers.
Select one or more item, and then click \(lqswap\(rq to move them to the
opposite container.
.SS HTML
.IP
.EX
<\f[B]p\f[R] id=\(dqlist1\(dq>123456</\f[B]p\f[R]>
<\f[B]button\f[R] id=\(dqswap\(dq>Swap selected item(s)</\f[B]button\f[R]>
<\f[B]p\f[R] id=\(dqlist2\(dq>abcdef</\f[B]p\f[R]>
.EE
.SS CSS
.IP
.EX
body {
  \f[B]pointer\-events\f[R]: none;
}

p {
  \f[B]border\f[R]: 1px solid;
  \f[B]font\-size\f[R]: 2em;
  \f[B]padding\f[R]: 0.3em;
}

button {
  \f[B]font\-size\f[R]: 1.2em;
  \f[B]padding\f[R]: 0.5em;
  \f[B]pointer\-events\f[R]: auto;
}
.EE
.SS JavaScript
.IP
.EX
\f[B]const\f[R] list1 = document.getElementById(\(dqlist1\(dq);
\f[B]const\f[R] list2 = document.getElementById(\(dqlist2\(dq);
\f[B]const\f[R] button = document.getElementById(\(dqswap\(dq);

button.addEventListener(\(dqclick\(dq, (e) \f[B]=>\f[R] {
  \f[B]const\f[R] selection = window.getSelection();

  \f[B]for\f[R] (\f[B]let\f[R] i = 0; i < selection.rangeCount; i++) {
    \f[B]const\f[R] range = selection.getRangeAt(i);

    \f[B]if\f[R] (
      range.commonAncestorContainer === list1 ||
      range.commonAncestorContainer.parentNode === list1
    ) {
      \f[B]const\f[R] documentFragment = range.extractContents();
      list2.appendChild(documentFragment);
    } \f[B]else\f[R] \f[B]if\f[R] (
      range.commonAncestorContainer === list2 ||
      range.commonAncestorContainer.parentNode === list2
    ) {
      \f[B]const\f[R] documentFragment = range.extractContents();
      list1.appendChild(documentFragment);
    }
  }
});
.EE
.SS Result
.SH SEE ALSO
.IP \(bu 2
The DOM interfaces index
