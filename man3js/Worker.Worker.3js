.\" Automatically generated by Pandoc 3.4
.\"
.TH "Worker.Worker" "JS" "November 22, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Worker.Worker \- Worker: Worker() constructor
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers, except for
Service Workers.
.PP
The \f[B]\f[CB]Worker()\f[B]\f[R] constructor creates a
\f[CR]Worker\f[R] object that executes the script at the specified URL.
This script must obey the same\-origin policy.
.RS
.PP
\f[B]Note:\f[R] There is a disagreement among browser manufacturers
about whether a data URL is of the same origin or not.
Though Firefox 10 and later accept data URLs, that\[cq]s not the case in
all other browsers.
.RE
.SH SYNTAX
.IP
.EX
new Worker(url)
new Worker(url, options)
.EE
.SS Parameters
.TP
\f[B]url\f[R]
A string representing the URL of the script the worker will execute.
It must obey the same\-origin policy.
The URL is resolved relative to the current HTML page\[cq]s location.
.RS
.RS
.PP
\f[B]Note:\f[R] Bundlers, including \c
.UR https://webpack.js.org/guides/web-workers/
webpack
.UE \c
, \c
.UR https://vite.dev/guide/features.html#web-workers
Vite
.UE \c
, and \c
.UR https://parceljs.org/languages/javascript/#web-workers
Parcel
.UE \c
, recommend passing URLs that are relative to \f[CR]import.meta.url\f[R]
to the \f[CR]Worker()\f[R] constructor.
For example:
.IP
.EX
\f[B]const\f[R] myWorker = \f[B]new\f[R] Worker(\f[B]new\f[R] URL(\[dq]worker.js\[dq], \f[B]import\f[R].meta.url));
.EE
.PP
This way, the path is relative to the current script instead of the
current HTML page, which allows the bundler to safely do optimizations
like renaming (because otherwise the \f[CR]worker.js\f[R] URL may point
to a file not controlled by the bundler, so it cannot make any
assumptions).
.RE
.RE
.TP
\f[B]options\f[R] \f[I](optional)\f[R]
An object containing option properties that can be set when creating the
object instance.
Available properties are as follows:
.RS
.TP
\f[B]type\f[R]
A string specifying the type of worker to create.
The value can be \f[CR]classic\f[R] or \f[CR]module\f[R].
If not specified, the default used is \f[CR]classic\f[R].
.TP
\f[B]credentials\f[R]
A string specifying the type of credentials to use for the worker.
The value can be \f[CR]omit\f[R], \f[CR]same\-origin\f[R], or
\f[I]\f[CI]include\f[I].
If not specified, or if type is \f[CI]classic\f[I], the default used is
\f[CI]same\-origin\f[I] (only include credentials for same\-origin
requests).\f[R]
.TP
\f[B]name\f[R]
A string specifying an identifying name for the
\f[CR]DedicatedWorkerGlobalScope\f[R] representing the scope of the
worker, which is mainly useful for debugging purposes.
.RE
.SS Exceptions
.TP
\f[B]SecurityError\f[R] \f[B]DOMException\f[R]
Thrown if the document is not allowed to start workers, e.g.\ if the URL
has an invalid syntax or if the same\-origin policy is violated.
.TP
\f[B]NetworkError\f[R] \f[B]DOMException\f[R]
Thrown if the MIME type of the worker script is incorrect.
It \f[I]should\f[R] always be \f[CR]text/javascript\f[R] (for historical
reasons other JavaScript MIME types may be accepted).
.TP
\f[B]SyntaxError\f[R] \f[B]DOMException\f[R]
Thrown if \f[I]aURL\f[R] cannot be parsed.
.SH EXAMPLES
The following code snippet shows creation of a \f[CR]Worker\f[R] object
using the \f[CR]Worker()\f[R] constructor and subsequent usage of the
object:
.IP
.EX
\f[B]const\f[R] myWorker = \f[B]new\f[R] Worker(\[dq]worker.js\[dq]);
\f[B]const\f[R] first = document.querySelector(\[dq]input#number1\[dq]);

first.onchange = () \f[B]=>\f[R] {
  myWorker.postMessage(first.value);
  console.log(\[dq]Message posted to worker\[dq]);
};
.EE
.PP
For a full example, see our \c
.UR https://github.com/mdn/dom-examples/tree/main/web-workers/simple-web-worker
Basic dedicated worker example
.UE \c
\ (\c
.UR https://mdn.github.io/dom-examples/web-workers/simple-web-worker/
run dedicated worker
.UE \c
).
.SH SEE ALSO
The \f[CR]Worker\f[R] interface it belongs to.
