.\" Automatically generated by Pandoc 3.4
.\"
.TH "DOMTokenList.remove" "JS" "August 14, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
DOMTokenList.remove \- DOMTokenList: remove() method
.SH SYNOPSIS
The \f[B]\f[CB]remove()\f[B]\f[R] method of the \f[CR]DOMTokenList\f[R]
interface removes the specified \f[I]tokens\f[R] from the list.
.SH SYNTAX
.IP
.EX
remove(token1)
remove(token1, token2)
remove(token1, token2, /* \&..., */ tokenN)
.EE
.SS Parameters
.TP
\f[B]token1\f[R], \&..., \f[B]tokenN\f[R]
A string representing the token you want to remove from the list.
If the string is not in the list, no error is thrown, and nothing
happens.
.SS Return value
None (\f[CR]undefined\f[R]).
.SH EXAMPLES
In the following example we retrieve the list of classes set on a
\f[CR]<span>\f[R] element as a \f[CR]DOMTokenList\f[R] using
\f[CR]Element.classList\f[R].
We then remove a token from the list, and write the list into the
\f[CR]<span>\f[R]\[cq]s \f[CR]Node.textContent\f[R].
.PP
First, the HTML:
.IP
.EX
<\f[B]span\f[R] id=\[dq]ab\[dq] class=\[dq]a b c\[dq]></\f[B]span\f[R]> <\f[B]span\f[R] id=\[dq]a\[dq] class=\[dq]a b c\[dq]></\f[B]span\f[R]>
.EE
.PP
Now the JavaScript:
.IP
.EX
\f[B]const\f[R] span = document.getElementById(\[dq]ab\[dq]);
\f[B]const\f[R] classes = span.classList;
classes.remove(\[dq]c\[dq]);
span.textContent = classes;
.EE
.PP
To remove multiple classes at once, you can supply multiple tokens.
The order you supply the tokens doesn\[cq]t have to match the order they
appear in the list:
.IP
.EX
\f[B]const\f[R] span2 = document.getElementById(\[dq]a\[dq]);
\f[B]const\f[R] classes2 = span2.classList;

classes2.remove(\[dq]c\[dq], \[dq]b\[dq]);
span2.textContent = classes2;
.EE
.PP
The output looks like this:
