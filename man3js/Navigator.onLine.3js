.\" Automatically generated by Pandoc 3.4
.\"
.TH "Navigator.onLine" "JS" "April 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Navigator.onLine \- Navigator: onLine property
.SH SYNOPSIS
Returns the online status of the browser.
The property returns a boolean value, with \f[CR]true\f[R] meaning
online and \f[CR]false\f[R] meaning offline.
The property sends updates whenever the browser\[cq]s ability to connect
to the network changes.
The update occurs when the user follows links or when a script requests
a remote page.
For example, the property should return \f[CR]false\f[R] when users
click links soon after they lose internet connection.
.PP
Browsers implement this property differently.
.PP
In Chrome and Safari, if the browser is not able to connect to a local
area network (LAN) or a router, it is offline; all other conditions
return \f[CR]true\f[R].
So while you can assume that the browser is offline when it returns a
\f[CR]false\f[R] value, you cannot assume that a true value necessarily
means that the browser can access the internet.
You could be getting false positives, such as in cases where the
computer is running a virtualization software that has virtual ethernet
adapters that are always \[lq]connected.\[rq] Therefore, if you really
want to determine the online status of the browser, you should develop
additional means for checking.
.PP
In Firefox, switching the browser to offline mode sends a
\f[CR]false\f[R] value.
Until Firefox 41, all other conditions returned a \f[CR]true\f[R] value;
testing actual behavior on Nightly 68 on Windows shows that it only
looks for LAN connection like Chrome and Safari giving false positives.
.PP
You can see changes in the network state by listening to the
\f[CR]online\f[R] and \f[CR]offline\f[R] events.
.SH VALUE
A boolean.
.SH EXAMPLES
.SS Basic usage
To check if you are online, query \f[CR]window.navigator.onLine\f[R], as
in the following example:
.IP
.EX
\f[B]if\f[R] (navigator.onLine) {
  console.log(\[dq]online\[dq]);
} \f[B]else\f[R] {
  console.log(\[dq]offline\[dq]);
}
.EE
.PP
If the browser doesn\[cq]t support \f[CR]navigator.onLine\f[R] the above
example will always come out as \f[CR]false\f[R]/\f[CR]undefined\f[R].
.SS Listening for changes in network status
To see changes in the network state, use \f[CR]addEventListener\f[R] to
listen for the events on \f[CR]window.online\f[R] and
\f[CR]window.offline\f[R], as in the following example:
.IP
.EX
window.addEventListener(\[dq]offline\[dq], (e) \f[B]=>\f[R] {
  console.log(\[dq]offline\[dq]);
});

window.addEventListener(\[dq]online\[dq], (e) \f[B]=>\f[R] {
  console.log(\[dq]online\[dq]);
});
.EE
