.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "Navigator.onLine" "JS" "February 15, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Navigator.onLine \- Navigator: onLine property
.SH SYNOPSIS
The \f[B]\f[CB]onLine\f[B]\f[R] property of the \f[CR]Navigator\f[R]
interface returns whether the device is connected to the network, with
\f[CR]true\f[R] meaning online and \f[CR]false\f[R] meaning offline.
The property\[cq]s value changes after the browser checks its network
connection, usually when the user follows links or when a script
requests a remote page.
For example, the property should return \f[CR]false\f[R] when users
click links soon after they lose internet connection.
When its value changes, an \f[CR]online\f[R] or \f[CR]offline\f[R] event
is fired on the \f[CR]window\f[R].
.PP
Browsers and operating systems leverage different heuristics to
determine whether the device is online.
In general, connection to LAN is considered online, even though the LAN
may not have Internet access.
For example, the computer may be running a virtualization software that
has virtual ethernet adapters that are always \[lq]connected\[rq].
On Windows, the online status is determined by whether it can reach a
Microsoft home server, which may be blocked by firewalls or VPNs, even
if the computer has Internet access.
Therefore, this property is inherently unreliable, and you should not
disable features based on the online status, only provide hints when the
user may seem offline.
.SH VALUE
A boolean.
.SH EXAMPLES
.SS Basic usage
To check if you are online, query \f[CR]window.navigator.onLine\f[R], as
in the following example:
.IP
.EX
\f[B]if\f[R] (navigator.onLine) {
  console.log(\[dq]online\[dq]);
} \f[B]else\f[R] {
  console.log(\[dq]offline\[dq]);
}
.EE
.PP
If the browser doesn\[cq]t support \f[CR]navigator.onLine\f[R] the above
example will always come out as \f[CR]false\f[R]/\f[CR]undefined\f[R].
.SS Listening for changes in network status
To see changes in the network state, use \f[CR]addEventListener\f[R] to
listen for the events on \f[CR]window.online\f[R] and
\f[CR]window.offline\f[R], as in the following example:
.IP
.EX
window.addEventListener(\[dq]offline\[dq], (e) \f[B]=>\f[R] {
  console.log(\[dq]offline\[dq]);
});

window.addEventListener(\[dq]online\[dq], (e) \f[B]=>\f[R] {
  console.log(\[dq]online\[dq]);
});
.EE
