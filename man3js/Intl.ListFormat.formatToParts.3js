.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "INTL.LISTFORMAT.FORMATTOPARTS" "3JS" "June 20, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Intl.ListFormat.formatToParts \-
Intl.ListFormat.prototype.formatToParts()
.SH SYNOPSIS
The \f[B]\f[CB]formatToParts()\f[B]\f[R] method of
\f[CR]Intl.ListFormat\f[R] instances returns an array of objects
representing each part of the formatted string that would be returned by
\f[CR]format()\f[R].
It is useful for building custom strings from the locale\-specific
tokens.
.IP
.EX
\f[B]const\f[R] vehicles = [\(dqMotorcycle\(dq, \(dqBus\(dq, \(dqCar\(dq];

\f[B]const\f[R] formatterEn = \f[B]new\f[R] Intl.ListFormat(\(dqen\(dq, {
  style: \(dqlong\(dq,
  type: \(dqconjunction\(dq,
});

\f[B]const\f[R] formatterFr = \f[B]new\f[R] Intl.ListFormat(\(dqfr\(dq, {
  style: \(dqlong\(dq,
  type: \(dqconjunction\(dq,
});

\f[B]const\f[R] partValuesEn = formatterEn.formatToParts(vehicles).map((p) \f[B]=>\f[R] p.value);
\f[B]const\f[R] partValuesFr = formatterFr.formatToParts(vehicles).map((p) \f[B]=>\f[R] p.value);

console.log(partValuesEn);
\f[I]// Expected output: \(dq[\(dqMotorcycle\(dq, \(dq, \(dq, \(dqBus\(dq, \(dq, and \(dq, \(dqCar\(dq]\(dq\f[R]
console.log(partValuesFr);
\f[I]// Expected output: \(dq[\(dqMotorcycle\(dq, \(dq, \(dq, \(dqBus\(dq, \(dq et \(dq, \(dqCar\(dq]\(dq\f[R]
.EE
.SH SYNTAX
.IP
.EX
formatToParts(list)
.EE
.SS Parameters
.TP
\f[B]list\f[R]
An iterable object, such as an Array, containing strings.
Omitting it results in formatting the empty array, which could be
slightly confusing, so it is advisable to always explicitly pass a list.
.SS Return value
An \f[CR]Array\f[R] of objects containing the formatted list in parts.
Each object has two properties, \f[CR]type\f[R] and \f[CR]value\f[R],
each containing a string.
The string concatenation of \f[CR]value\f[R], in the order provided,
will result in the same string as \f[CR]format()\f[R].
The \f[CR]type\f[R] may be one of the following:
.TP
\f[B]literal\f[R]
Any string that\(cqs a part of the format pattern; for example
\f[CR]\(dq, \(dq\f[R], \f[CR]\(dq, and\(dq\f[R], etc.
.TP
\f[B]element\f[R]
An element of the list, exactly as provided.
.SH EXAMPLES
.SS Using formatToParts()
.IP
.EX
\f[B]const\f[R] fruits = [\(dqApple\(dq, \(dqOrange\(dq, \(dqPineapple\(dq];
\f[B]const\f[R] myListFormat = \f[B]new\f[R] Intl.ListFormat(\(dqen\-GB\(dq, {
  style: \(dqlong\(dq,
  type: \(dqconjunction\(dq,
});

console.table(myListFormat.formatToParts(fruits));
\f[I]// [\f[R]
\f[I]//  { \(dqtype\(dq: \(dqelement\(dq, \(dqvalue\(dq: \(dqApple\(dq },\f[R]
\f[I]//  { \(dqtype\(dq: \(dqliteral\(dq, \(dqvalue\(dq: \(dq, \(dq },\f[R]
\f[I]//  { \(dqtype\(dq: \(dqelement\(dq, \(dqvalue\(dq: \(dqOrange\(dq },\f[R]
\f[I]//  { \(dqtype\(dq: \(dqliteral\(dq, \(dqvalue\(dq: \(dq and \(dq },\f[R]
\f[I]//  { \(dqtype\(dq: \(dqelement\(dq, \(dqvalue\(dq: \(dqPineapple\(dq }\f[R]
\f[I]// ]\f[R]
.EE
.SH SEE ALSO
.IP \(bu 2
\f[CR]Intl.ListFormat\f[R]
.IP \(bu 2
\f[CR]Intl.ListFormat.prototype.format()\f[R]
