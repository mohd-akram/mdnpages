.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "HTMLCanvasElement.height" "JS" "February 12, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
HTMLCanvasElement.height \- HTMLCanvasElement: height property
.SH SYNOPSIS
The \f[B]\f[CB]HTMLCanvasElement.height\f[B]\f[R] property is a positive
\f[CR]integer\f[R] reflecting the \f[CR]height\f[R] HTML attribute of
the \f[CR]<canvas>\f[R] element interpreted in CSS pixels.
When the attribute is not specified, or if it is set to an invalid
value, like a negative, the default value of \f[CR]150\f[R] is used.
.PP
When the \f[CR]height\f[R] property is set the drawing buffer is always
reset to blank \[em] this is true for all context types, and even when
the height is set to the same value.
If you need to restore the previous content, you can save it via
\f[CR]CanvasRenderingContext2D.getImageData()\f[R] and restore it via
\f[CR]CanvasRenderingContext2D.putImageData()\f[R].
.PP
This is one of the two properties, the other being
\f[CR]HTMLCanvasElement.width\f[R], that controls the size of the
canvas.
.SH VALUE
A number.
.SH EXAMPLES
Given this \f[CR]<canvas>\f[R] element:
.IP
.EX
<\f[B]canvas\f[R] id=\[dq]canvas\[dq] width=\[dq]300\[dq] height=\[dq]300\[dq]></\f[B]canvas\f[R]>
.EE
.PP
You can get the height of the canvas with the following code:
.IP
.EX
\f[B]const\f[R] canvas = document.getElementById(\[dq]canvas\[dq]);
console.log(canvas.height); \f[I]// 300\f[R]
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]HTMLCanvasElement\f[R]: Interface used to define the
\f[CR]HTMLCanvasElement.height\f[R] property
.IP \[bu] 2
\f[CR]HTMLCanvasElement.width\f[R]: Other property used to control the
size of the canvas
.IP \[bu] 2
\f[CR]HTMLEmbedElement.height\f[R]
.IP \[bu] 2
\f[CR]HTMLIFrameElement.height\f[R]
.IP \[bu] 2
\f[CR]HTMLImageElement.height\f[R]
.IP \[bu] 2
\f[CR]HTMLObjectElement.height\f[R]
.IP \[bu] 2
\f[CR]HTMLSourceElement.height\f[R]
.IP \[bu] 2
\f[CR]HTMLVideoElement.height\f[R]
