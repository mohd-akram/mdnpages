.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "XRPOSE.EMULATEDPOSITION" "3JS" "February 5, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
XRPose.emulatedPosition \- XRPose: emulatedPosition property
.SH SYNOPSIS
\f[B]Secure context:\f[R] This feature is available only in secure
contexts (HTTPS).
.PP
The \f[CR]emulatedPosition\f[R] read\-only attribute of the
\f[CR]XRPose\f[R] interface is a Boolean value indicating whether or not
both the \f[CR]position\f[R] component of the pose\(cqs
\f[CR]transform\f[R] is directly taken from the XR device, or it\(cqs
simulated or computed based on other sources.
.SH VALUE
A Boolean which is \f[CR]true\f[R] if the pose\(cqs position is computed
based on estimates or is derived from sources other than direct sensor
data.
If the position is precisely based on direct sensor inputs, the value is
\f[CR]false\f[R].
.SH USAGE NOTES
There are two basic categories of XR tracking systems.
A basic XR headset provides three degrees of freedom (3DoF), tracking
the pitch, yaw, and roll of the user\(cqs head.
No information is available about movement forward, backward, or to the
sides.
Any such data is taken from other sources, such as keyboard or mouse
inputs or game controllers.
As such, the position is considered to be emulated, so the
\f[CR]emulatedPosition\f[R] property is \f[CR]true\f[R].
.PP
Contrariwise, XR devices which can also track movement forward and
backward as well as laterally\(emsix degree of freedom (6DoF)
devices\(emdon\(cqt require any information from other sources to
determine the user\(cqs position, so the value of
\f[CR]emulatedPosition\f[R] is \f[CR]false\f[R].
.PP
The same notion applies not just to the user\(cqs head, but to any
object.
A hand controller that can directly report its position would have a
value of \f[CR]false\f[R] for this property as well.
If its position is computed as an offset from another object (such as by
basing it off the model representing the user\(cqs body), then this
value is \f[CR]true\f[R].
.PP
This information is important because devices whose position is emulated
are prone to their offset drifting relative to the real world space over
time.
This is because emulating a position based on accelerometer inputs and
models tends to introduce minor errors which accumulate over time.
