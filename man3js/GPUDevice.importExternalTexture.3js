.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "GPUDEVICE.IMPORTEXTERNALTEXTURE" "3JS" "June 18, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
GPUDevice.importExternalTexture \- GPUDevice: importExternalTexture()
method
.SH SYNOPSIS
\f[B]Secure context:\f[R] This feature is available only in secure
contexts (HTTPS).
.PP
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]importExternalTexture()\f[B]\f[R] method of the
\f[CR]GPUDevice\f[R] interface takes an \f[CR]HTMLVideoElement\f[R] or a
\f[CR]VideoFrame\f[R] object as an input and returns a
\f[CR]GPUExternalTexture\f[R] wrapper object containing a snapshot of
the video that can be used as a frame in GPU rendering operations.
.SH SYNTAX
.IP
.EX
importExternalTexture(descriptor)
.EE
.SS Parameters
.TP
\f[B]descriptor\f[R]
An object containing the following properties:
.RS
.TP
\f[B]colorSpace\f[R] \f[I](optional)\f[R]
An enumerated value specifying the color space to use for the video
frame.
Possible values are \f[CR]\(dqsrgb\(dq\f[R] and
\f[CR]\(dqdisplay\-p3\(dq\f[R].
If omitted, \f[CR]colorSpace\f[R] defaults to \f[CR]\(dqsrgb\(dq\f[R].
.TP
\f[B]label\f[R] \f[I](optional)\f[R]
A string providing a label that can be used to identify the object, for
example in \f[CR]GPUError\f[R] messages or console warnings.
.TP
\f[B]source\f[R]
The \f[CR]HTMLVideoElement\f[R] or \f[CR]VideoFrame\f[R] source of the
video snapshot.
.RE
.SS Return value
A \f[CR]GPUExternalTexture\f[R] object instance.
.PP
Note that the moment when the \f[CR]GPUExternalTexture\f[R] object
expires (is destroyed) depends on what its source is:
.IP \(bu 2
\f[CR]GPUExternalTexture\f[R] objects with an
\f[CR]HTMLVideoElement\f[R] source expire as soon as they are used (for
example in a bind group).
.IP \(bu 2
\f[CR]GPUExternalTexture\f[R] objects with an \f[CR]VideoFrame\f[R]
source expire only when the \f[CR]VideoFrame\f[R] is closed, for example
via a \f[CR]VideoFrame.close()\f[R] call.
.SS Validation
The following criteria must be met when calling
\f[B]\f[CB]importExternalTexture()\f[B]\f[R], otherwise a
\f[CR]GPUValidationError\f[R] is generated and an invalid
\f[CR]GPUExternalTexture\f[R] object is returned:
.IP \(bu 2
The video snapshot is usable (e.g., the video source is loaded properly,
and doesn\(cqt have a width or height of 0).
.SS Exceptions
.TP
\f[B]SecurityError\f[R] \f[B]DOMException\f[R]
Thrown if the video source data is cross\-origin.
.SH EXAMPLES
In the WebGPU samples \c
.UR https://webgpu.github.io/webgpu-samples/samples/videoUploading/
Video Uploading sample
.UE \c
, an \f[CR]importExternalTexture()\f[R] call is used as the value of a
bind group entry \f[CR]resource\f[R], specified when creating a
\f[CR]GPUBindGroup\f[R] via a \f[CR]GPUDevice.createBindGroup()\f[R]
call:
.IP
.EX
\f[I]// \&...\f[R]

\f[B]const\f[R] uniformBindGroup = device.createBindGroup({
  layout: pipeline.getBindGroupLayout(0),
  entries: [
    {
      binding: 1,
      resource: sampler,
    },
    {
      binding: 2,
      resource: device.importExternalTexture({
        source: video,
      }),
    },
  ],
});

\f[I]// \&...\f[R]
.EE
.SH SEE ALSO
.IP \(bu 2
The WebGPU API
