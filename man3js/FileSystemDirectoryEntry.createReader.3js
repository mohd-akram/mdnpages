.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "FileSystemDirectoryEntry.createReader" "JS" "February 20, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
FileSystemDirectoryEntry.createReader \- FileSystemDirectoryEntry:
createReader() method
.SH SYNOPSIS
The \f[CR]FileSystemDirectoryEntry\f[R] interface\[cq]s method
\f[B]\f[CB]createReader()\f[B]\f[R] returns a
\f[CR]FileSystemDirectoryReader\f[R] object which can be used to read
the entries in the directory.
.SH SYNTAX
.IP
.EX
createReader()
.EE
.SS Parameters
None.
.SS Return value
A \f[CR]FileSystemDirectoryReader\f[R] object which can be used to read
the directory\[cq]s entries.
.SH EXAMPLES
This example creates an async function called
\f[CR]readDirectory()\f[R], which fetches all of the entries in the
specified \f[CR]FileSystemDirectoryEntry\f[R] and returns them in an
array.
.IP
.EX
\f[B]async\f[R] \f[B]function\f[R] readDirectory(directory) {
  \f[B]const\f[R] dirReader = directory.createReader();
  \f[B]const\f[R] entries = [];

  \f[B]while\f[R] (\f[B]true\f[R]) {
    \f[B]const\f[R] results = \f[B]await\f[R] \f[B]new\f[R] Promise((resolve, reject) \f[B]=>\f[R] {
      dirReader.readEntries(resolve, reject);
    });

    \f[B]if\f[R] (!results.length) {
      \f[B]break\f[R];
    }

    \f[B]for\f[R] (\f[B]const\f[R] entry \f[B]of\f[R] results) {
      entries.push(entry);
    }
  }

  \f[B]return\f[R] entries;
}
.EE
.PP
This works by calling \f[CR]readEntries()\f[R] repetitively to get all
the entries in the directory, concatenating each batch to the array.
When it returns an empty array, all entries have been read, and the loop
ends.
.SH SEE ALSO
.IP \[bu] 2
File and Directory Entries API
.IP \[bu] 2
\f[CR]FileSystemDirectoryReader\f[R]
.IP \[bu] 2
\f[CR]FileSystemDirectoryEntry\f[R]
.IP \[bu] 2
\f[CR]FileSystemFileEntry\f[R]
.IP \[bu] 2
\f[CR]FileSystemEntry\f[R]
