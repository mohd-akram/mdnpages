.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "AUDIOCONTEXT.CREATEMEDIASTREAMDESTINATION" "3JS" "July 26, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
AudioContext.createMediaStreamDestination \- AudioContext:
createMediaStreamDestination() method
.SH SYNOPSIS
The \f[CR]createMediaStreamDestination()\f[R] method of the
\f[CR]AudioContext\f[R] Interface is used to create a new
\f[CR]MediaStreamAudioDestinationNode\f[R] object associated with a
WebRTC \f[CR]MediaStream\f[R] representing an audio stream, which may be
stored in a local file or sent to another computer.
.PP
The \f[CR]MediaStream\f[R] is created when the node is created and is
accessible via the \f[CR]MediaStreamAudioDestinationNode\f[R]\(cqs
\f[CR]stream\f[R] attribute.
This stream can be used in a similar way as a \f[CR]MediaStream\f[R]
obtained via \f[CR]navigator.getUserMedia\f[R] \(em it can, for example,
be sent to a remote peer using the \f[CR]addStream()\f[R] method of
\f[CR]RTCPeerConnection\f[R].
.PP
For more details about media stream destination nodes, check out the
\f[CR]MediaStreamAudioDestinationNode\f[R] reference page.
.SH SYNTAX
.IP
.EX
createMediaStreamDestination()
.EE
.SS Parameters
None.
.SS Return value
A \f[CR]MediaStreamAudioDestinationNode\f[R].
.SH EXAMPLES
In the following simple example, we create a
\f[CR]MediaStreamAudioDestinationNode\f[R], an \f[CR]OscillatorNode\f[R]
and a \f[CR]MediaRecorder\f[R] (the example will therefore only work in
Firefox and Chrome at this time.)
The \f[CR]MediaRecorder\f[R] is set up to record information from the
\f[CR]MediaStreamDestinationNode\f[R].
.PP
When the button is clicked, the oscillator starts, and the
\f[CR]MediaRecorder\f[R] is started.
When the button is stopped, the oscillator and \f[CR]MediaRecorder\f[R]
both stop.
Stopping the \f[CR]MediaRecorder\f[R] causes the
\f[CR]dataavailable\f[R] event to fire, and the event data is pushed
into the \f[CR]chunks\f[R] array.
After that, the \f[CR]stop\f[R] event fires, a new \f[CR]blob\f[R] is
made of type opus \(em which contains the data in the \f[CR]chunks\f[R]
array, and a new window (tab) is then opened that points to a URL
created from the blob.
.PP
From here, you can play and save the opus file.
.IP
.EX
<!doctype html>
<\f[B]html\f[R] lang=\(dqen\-US\(dq>
  <\f[B]head\f[R]>
    <\f[B]meta\f[R] charset=\(dqUTF\-8\(dq />
    <\f[B]title\f[R]>createMediaStreamDestination() demo</\f[B]title\f[R]>
  </\f[B]head\f[R]>
  <\f[B]body\f[R]>
    <\f[B]h1\f[R]>createMediaStreamDestination() demo</\f[B]h1\f[R]>

    <\f[B]p\f[R]>Encoding a pure sine wave to an Opus file</\f[B]p\f[R]>
    <\f[B]button\f[R]>Make sine wave</\f[B]button\f[R]>
    <\f[B]audio\f[R] controls></\f[B]audio\f[R]>
    <\f[B]script\f[R]>
      \f[B]const\f[R] b = document.querySelector(\(dqbutton\(dq);
      \f[B]let\f[R] clicked = \f[B]false\f[R];
      \f[B]const\f[R] chunks = [];
      \f[B]const\f[R] ac = \f[B]new\f[R] AudioContext();
      \f[B]const\f[R] osc = ac.createOscillator();
      \f[B]const\f[R] dest = ac.createMediaStreamDestination();
      \f[B]const\f[R] mediaRecorder = \f[B]new\f[R] MediaRecorder(dest.stream);
      osc.connect(dest);

      b.addEventListener(\(dqclick\(dq, (e) \f[B]=>\f[R] {
        \f[B]if\f[R] (!clicked) {
          mediaRecorder.start();
          osc.start(0);
          e.target.textContent = \(dqStop recording\(dq;
          clicked = \f[B]true\f[R];
        } \f[B]else\f[R] {
          mediaRecorder.stop();
          osc.stop(0);
          e.target.disabled = \f[B]true\f[R];
        }
      });

      mediaRecorder.ondataavailable = (evt) \f[B]=>\f[R] {
        \f[I]// Push each chunk (blobs) in an array\f[R]
        chunks.push(evt.data);
      };

      mediaRecorder.onstop = (evt) \f[B]=>\f[R] {
        \f[I]// Make blob out of our blobs, and open it.\f[R]
        \f[B]const\f[R] blob = \f[B]new\f[R] Blob(chunks, { type: \(dqaudio/ogg; codecs=opus\(dq });
        document.querySelector(\(dqaudio\(dq).src = URL.createObjectURL(blob);
      };
    </\f[B]script\f[R]>
  </\f[B]body\f[R]>
</\f[B]html\f[R]>
.EE
.RS
.PP
\f[B]Note:\f[R] You can \c
.UR https://mdn.github.io/webaudio-examples/create-media-stream-destination/index.html
view this example live
.UE \c
, or \c
.UR https://github.com/mdn/webaudio-examples/blob/main/create-media-stream-destination/index.html
study the source code
.UE \c
, on GitHub.
.RE
.SH SEE ALSO
.IP \(bu 2
Using the Web Audio API
