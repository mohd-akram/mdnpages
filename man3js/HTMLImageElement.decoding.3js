.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "HTMLImageElement.decoding" "JS" "August 10, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
HTMLImageElement.decoding \- HTMLImageElement: decoding property
.SH SYNOPSIS
The \f[B]\f[CB]decoding\f[B]\f[R] property of the
\f[CR]HTMLImageElement\f[R] interface provides a hint to the browser as
to how it should decode the image.
More specifically, whether it should wait for the image to be decoded
before presenting other content updates or not.
.SH VALUE
A string representing the decoding hint.
Possible values are:
.TP
\f[B]\[dq]sync\[dq]\f[R]
Decode the image synchronously for atomic presentation with other
content.
.TP
\f[B]\[dq]async\[dq]\f[R]
Decode the image asynchronously and allow other content to be rendered
before this completes.
.TP
\f[B]\[dq]auto\[dq]\f[R]
No preference for the decoding mode; the browser decides what is best
for the user.
This is the default value, but different browsers have different
defaults:
.RS
.IP \[bu] 2
Chromium defaults to \f[CR]\[dq]sync\[dq]\f[R].
.IP \[bu] 2
Firefox defaults to \f[CR]\[dq]async\[dq]\f[R].
.IP \[bu] 2
Safari defaults to \f[CR]\[dq]sync\[dq]\f[R] except in a small number of
circumstances.
.RE
.SH USAGE NOTES
The \f[CR]decoding\f[R] property provides a hint to the browser as to
whether it should perform image decoding along with other tasks in a
single step (\f[CR]\[dq]sync\[dq]\f[R]), or allow other content to be
rendered before this completes (\f[CR]\[dq]async\[dq]\f[R]).
In reality, the differences between the two values are often difficult
to perceive and, where there are differences, there is often a better
way.
.PP
For images that are inserted into the DOM inside the viewport,
\f[CR]\[dq]async\[dq]\f[R] can result in flashes of unstyled content,
while \f[CR]\[dq]sync\[dq]\f[R] can result in small amounts of jank.
Using the \f[CR]HTMLImageElement.decode()\f[R] method is usually a
better way to achieve atomic presentation without holding up other
content.
.PP
For images inserted into the DOM outside of the viewport, modern
browsers will usually decode them before they are scrolled into view and
there will be no noticeable difference using either value.
.SH EXAMPLES
In the below example, you\[cq]ll likely get an empty image shown on the
page as the image is downloaded.
Setting \f[CR]decoding\f[R] won\[cq]t prevent that.
.IP
.EX
\f[B]const\f[R] img = \f[B]new\f[R] Image();
img.decoding = \[dq]sync\[dq];
img.src = \[dq]img/logo.png\[dq];
document.body.appendChild(img);
.EE
.PP
Inserting an image after download can make the \f[CR]decoding\f[R]
property more relevant:
.IP
.EX
\f[B]async\f[R] \f[B]function\f[R] loadImage(url, elem) {
  \f[B]return\f[R] \f[B]new\f[R] Promise((resolve, reject) \f[B]=>\f[R] {
    elem.onload = () \f[B]=>\f[R] resolve(elem);
    elem.onerror = reject;
    elem.src = url;
  });
}

\f[B]const\f[R] img = \f[B]new\f[R] Image();
\f[B]await\f[R] loadImage(\[dq]img/logo.png\[dq], img);
\f[I]// Using \[ga]sync\[ga] can ensure other content is only updated with the image\f[R]
img.decoding = \[dq]sync\[dq];
document.body.appendChild(img);
\f[B]const\f[R] p = document.createElement(\[dq]p\[dq]);
p.textContent = \[dq]Image is fully loaded!\[dq];
document.body.appendChild(p);
.EE
.PP
A better solution, however, is to use the
\f[CR]HTMLImageElement.decode()\f[R] method to solve this problem.
It provides a way to asynchronously decode an image, delaying inserting
it into the DOM until it is fully downloaded and decoded, thereby
avoiding the empty image problem mentioned above.
This is particularly useful if you\[cq]re dynamically swapping an
existing image for a new one, and also prevents unrelated paints outside
of this code from being held up while the image is decoding.
.PP
Using \f[CR]img.decoding = \[dq]async\[dq]\f[R] may avoid holding up
other content from displaying if the decoding time is long:
.IP
.EX
\f[B]const\f[R] img = \f[B]new\f[R] Image();
img.decoding = \[dq]async\[dq];
img.src = \[dq]img/logo.png\[dq];
document.body.appendChild(img);
.EE
.SH SEE ALSO
.IP \[bu] 2
The \f[CR]HTMLImageElement.decode()\f[R] method
.IP \[bu] 2
The \f[CR]<img>\f[R] element \f[CR]decoding\f[R] attribute
.IP \[bu] 2
\c
.UR https://www.tunetheweb.com/blog/what-does-the-image-decoding-attribute-actually-do/
What does the image decoding attribute actually do?
.UE \c
\ on tunetheweb.com (2023)
