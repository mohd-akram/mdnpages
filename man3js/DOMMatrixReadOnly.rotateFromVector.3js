.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "DOMMatrixReadOnly.rotateFromVector" "JS" "February 2, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
DOMMatrixReadOnly.rotateFromVector \- DOMMatrixReadOnly:
rotateFromVector() method
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[CR]rotateFromVector()\f[R] method of the
\f[CR]DOMMatrixReadOnly\f[R] interface is returns a new
\f[CR]DOMMatrix\f[R] created by rotating the source matrix by the angle
between the specified vector and \f[CR](1, 0)\f[R].
The rotation angle is determined by the angle between the vector
\f[CR](1,0)T\f[R] and \f[CR](x,y)T\f[R] in the clockwise direction, or
\f[CR](+/\-)arctan(y/x)\f[R].
If \f[CR]x\f[R] and \f[CR]y\f[R] are both \f[CR]0\f[R], the angle is
specified as \f[CR]0\f[R].
The original matrix is not altered.
.PP
To mutate the matrix as you rotate it by the angle between the specified
vector and \f[CR](1, 0)\f[R], see
\f[CR]DOMMatrix.rotateFromVectorSelf()\f[R].
.SH SYNTAX
.IP
.EX
rotateFromVector()
rotateFromVector(rotX)
rotateFromVector(rotX, rotY)
.EE
.SS Parameters
.TP
\f[B]rotX\f[R] \f[I](optional)\f[R]
A number; The x\-coordinate of the x,y vector that determines the
rotation angle.
If undefined, \f[CR]0\f[R] is used.
.TP
\f[B]rotY\f[R] \f[I](optional)\f[R]
A number; The y\-coordinate of the x,y vector that determines the
rotation angle.
If undefined, \f[CR]0\f[R] is used.
.SS Return value
A \f[CR]DOMMatrix\f[R].
.SH EXAMPLES
.IP
.EX
\f[B]const\f[R] matrix = \f[B]new\f[R] DOMMatrix(); \f[I]// create a matrix\f[R]
console.log(matrix.toString()); \f[I]// original value\f[R]
\f[I]// output: \[dq]matrix(1, 0, 0, 1, 0, 0)\[dq]\f[R]

console.log(matrix.rotateFromVector().toString()); \f[I]// defaults to \[ga]0\[ga]\f[R]
\f[I]// output: matrix(1, 0, 0, 1, 0, 0)\f[R]

console.log(matrix.rotateFromVector(10, 20).toString());
\f[I]// matrix(0.447, 0.894, \-0.894, 0.447, 0, 0)\f[R]

console.log(matrix.rotateFromVector(\-5, 5).toString());
\f[I]// matrix(\-0.707, 0.707, \-0.707, \-0.707, 0, 0)\f[R]

console.log(matrix.toString()); \f[I]// matrix remains unchanged\f[R]
\f[I]// output: \[dq]matrix(1, 0, 0, 1, 0, 0)\[dq]\f[R]
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]DOMMatrix.rotateFromVectorSelf()\f[R]
.IP \[bu] 2
\f[CR]DOMMatrixReadOnly.rotate()\f[R]
.IP \[bu] 2
\f[CR]DOMMatrixReadOnly.rotateAxisAngle()\f[R]
.IP \[bu] 2
CSS \f[CR]transform\f[R] property and \f[CR]rotate3d()\f[R] function
.IP \[bu] 2
CSS \f[CR]rotate\f[R] property
.IP \[bu] 2
CSS transforms module
.IP \[bu] 2
SVG \f[CR]transform\f[R] attribute
.IP \[bu] 2
\f[CR]CanvasRenderingContext2D\f[R] interface and \f[CR]rotate()\f[R]
method
