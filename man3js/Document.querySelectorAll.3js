.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "Document.querySelectorAll" "JS" "May 24, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Document.querySelectorAll \- Document: querySelectorAll() method
.SH SYNOPSIS
The \f[CR]Document\f[R] method \f[B]\f[CB]querySelectorAll()\f[B]\f[R]
returns a static (not live) \f[CR]NodeList\f[R] representing a list of
the document\[cq]s elements that match the specified group of selectors.
.SH SYNTAX
.IP
.EX
querySelectorAll(selectors)
.EE
.SS Parameters
.TP
\f[B]selectors\f[R]
A string containing one or more selectors to match against.
This string must be a valid CSS selector string; if it\[cq]s not, a
\f[CR]SyntaxError\f[R] exception is thrown.
See Locating DOM elements using selectors for more information about
using selectors to identify elements.
Multiple selectors may be specified by separating them using commas.
.RS
.PP
\f[B]Note:\f[R] Characters which are not part of standard CSS syntax
must be escaped using a backslash character.
Since JavaScript also uses backslash escaping, special care must be
taken when writing string literals using these characters.
See Escaping special characters for more information.
.RE
.SS Return value
A non\-live \f[CR]NodeList\f[R] containing one \f[CR]Element\f[R] object
for each element that matches at least one of the specified selectors or
an empty \f[CR]NodeList\f[R] in case of no matches.
.RS
.PP
\f[B]Note:\f[R] If the specified \f[CR]selectors\f[R] include a CSS
pseudo\-element, the returned list is always empty.
.RE
.SS Exceptions
.TP
\f[B]SyntaxError\f[R] \f[B]DOMException\f[R]
Thrown if the syntax of the specified \f[CR]selectors\f[R] string is not
valid.
.SH EXAMPLES
.SS Obtaining a list of matches
To obtain a \f[CR]NodeList\f[R] of all of the \f[CR]<p>\f[R] elements in
the document:
.IP
.EX
\f[B]const\f[R] matches = document.querySelectorAll(\[dq]p\[dq]);
.EE
.PP
This example returns a list of all \f[CR]<div>\f[R] elements within the
document with a class of either \f[CR]note\f[R] or \f[CR]alert\f[R]:
.IP
.EX
\f[B]const\f[R] matches = document.querySelectorAll(\[dq]div.note, div.alert\[dq]);
.EE
.PP
Here, we get a list of \f[CR]<p>\f[R] elements whose immediate parent
element is a \f[CR]<div>\f[R] with the class \f[CR]highlighted\f[R] and
which are located inside a container whose ID is \f[CR]test\f[R].
.IP
.EX
\f[B]const\f[R] container = document.querySelector(\[dq]#test\[dq]);
\f[B]const\f[R] matches = container.querySelectorAll(\[dq]div.highlighted > p\[dq]);
.EE
.PP
This example uses an attribute selector to return a list of the
\f[CR]<iframe>\f[R] elements in the document that contain an attribute
named \f[CR]data\-src\f[R]:
.IP
.EX
\f[B]const\f[R] matches = document.querySelectorAll(\[dq]iframe[data\-src]\[dq]);
.EE
.PP
Here, an attribute selector is used to return a list of the list items
contained within a list whose ID is \f[CR]userlist\f[R] which have a
\f[CR]data\-active\f[R] attribute whose value is \f[CR]1\f[R]:
.IP
.EX
\f[B]const\f[R] container = document.querySelector(\[dq]#userlist\[dq]);
\f[B]const\f[R] matches = container.querySelectorAll(\[dq]li[data\-active=\[aq]1\[aq]]\[dq]);
.EE
.SS Accessing the matches
Once the \f[CR]NodeList\f[R] of matching elements is returned, you can
examine it just like any array.
If the array is empty (that is, its \f[CR]length\f[R] property is 0),
then no matches were found.
.PP
Otherwise, you can use standard array notation to access the contents of
the list.
You can use any common looping statement, such as:
.IP
.EX
\f[B]const\f[R] highlightedItems = userList.querySelectorAll(\[dq].highlighted\[dq]);

highlightedItems.forEach((userItem) \f[B]=>\f[R] {
  deleteUser(userItem);
});
.EE
.SH SEE ALSO
.IP \[bu] 2
Locating DOM elements using selectors
.IP \[bu] 2
Attribute selectors in the CSS Guide
.IP \[bu] 2
Attribute selectors in the MDN Learning Area
.IP \[bu] 2
\f[CR]Element.querySelector()\f[R] and
\f[CR]Element.querySelectorAll()\f[R]
.IP \[bu] 2
\f[CR]Document.querySelector()\f[R]
.IP \[bu] 2
\f[CR]DocumentFragment.querySelector()\f[R] and
\f[CR]DocumentFragment.querySelectorAll()\f[R]
