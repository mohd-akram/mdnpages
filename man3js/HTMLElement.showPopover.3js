.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "HTMLElement.showPopover" "JS" "February 25, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
HTMLElement.showPopover \- HTMLElement: showPopover() method
.SH SYNOPSIS
The \f[B]\f[CB]showPopover()\f[B]\f[R] method of the
\f[CR]HTMLElement\f[R] interface shows a popover element (i.e.\ one that
has a valid \f[CR]popover\f[R] attribute) by adding it to the top layer.
.PP
When \f[CR]showPopover()\f[R] is called on an element with the
\f[CR]popover\f[R] attribute that is currently hidden, a
\f[CR]beforetoggle\f[R] event will be fired, followed by the popover
showing, and then the \f[CR]toggle\f[R] event firing.
If the element is already showing, an error will be thrown.
.SH SYNTAX
.IP
.EX
showPopover()
showPopover(options)
.EE
.SS Parameters
.TP
\f[B]options\f[R] \f[I](optional)\f[R]
An object that can contain the following properties:
.RS
.TP
\f[B]source\f[R] \f[I](optional)\f[R]
An \f[CR]HTMLElement\f[R] reference; programmatically defines the
invoker of the popover associated with the show action, that is, its
control element.
Establishing a relationship between a popover and its invoker using the
\f[CR]source\f[R] option has two useful effects:
.RS
.IP \[bu] 2
The browser places the popover in a logical position in the keyboard
focus navigation order when shown.
This makes the popover more accessible to keyboard users (see also
Popover accessibility features).
.IP \[bu] 2
The browser creates an implicit anchor reference between the two, making
it very convenient to position popovers relative to their controls using
CSS anchor positioning.
See Popover anchor positioning for more details.
.RE
.RE
.SS Return value
None (\f[CR]undefined\f[R]).
.SS Exceptions
.TP
\f[B]InvalidStateError\f[R] \f[B]DOMException\f[R]
Thrown if the popover is already showing.
.SH EXAMPLES
The following example provides functionality to show a popover by
pressing a particular key on the keyboard.
.PP
First, some HTML:
.IP
.EX
<\f[B]div\f[R] id=\[dq]mypopover\[dq] popover>
  <\f[B]h2\f[R]>Help!</\f[B]h2\f[R]>

  <\f[B]p\f[R]>You can use the following commands to control the app</\f[B]p\f[R]>

  <\f[B]ul\f[R]>
    <\f[B]li\f[R]>Press <\f[B]ins\f[R]>C</\f[B]ins\f[R]> to order cheese</\f[B]li\f[R]>
    <\f[B]li\f[R]>Press <\f[B]ins\f[R]>T</\f[B]ins\f[R]> to order tofu</\f[B]li\f[R]>
    <\f[B]li\f[R]>Press <\f[B]ins\f[R]>B</\f[B]ins\f[R]> to order bacon</\f[B]li\f[R]>
    <\f[B]hr\f[R] />
    <\f[B]li\f[R]>Say \[dq]Service\[dq] to summon the robot waiter to take your order</\f[B]li\f[R]>
    <\f[B]li\f[R]>Say \[dq]Escape\[dq] to engage the ejector seat</\f[B]li\f[R]>
  </\f[B]ul\f[R]>
</\f[B]div\f[R]>
.EE
.PP
And now the JavaScript to wire up the functionality:
.IP
.EX
\f[B]const\f[R] popover = document.getElementById(\[dq]mypopover\[dq]);

document.addEventListener(\[dq]keydown\[dq], (event) \f[B]=>\f[R] {
  \f[B]if\f[R] (event.key === \[dq]h\[dq]) {
    popover.showPopover();
  }
});
.EE
.SH SEE ALSO
.IP \[bu] 2
Popover API
