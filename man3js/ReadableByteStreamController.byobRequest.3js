.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "READABLEBYTESTREAMCONTROLLER.BYOBREQUEST" "3JS" "April 22, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
ReadableByteStreamController.byobRequest \-
ReadableByteStreamController: byobRequest property
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]byobRequest\f[B]\f[R] read\-only property of the
\f[CR]ReadableByteStreamController\f[R] interface returns the current
BYOB request, or \f[CR]null\f[R] if there are no pending requests.
.PP
An underlying byte source should check this property, and use it to
write data to the stream if it exists (rather than using
\f[CR]ReadableByteStreamController.enqueue()\f[R]).
This will result in an efficient zero\-byte transfer of the data to the
consumer.
.SH VALUE
A \f[CR]ReadableStreamBYOBRequest\f[R] object instance, or
\f[CR]null\f[R].
.SH EXAMPLES
The example in Using readable byte streams > Creating a readable socket
push byte stream shows how you use a \f[CR]byobRequest\f[R] to transfer
data (if it exists), or otherwise copy the data to the stream\(cqs
internal queues using \f[CR]ReadableByteStreamController.enqueue()\f[R].
.PP
The relevant code is reproduced below.
If the \f[CR]byobRequest\f[R] exists, data is read into
\f[CR]controller.byobRequest.view\f[R], and then
\f[CR]ReadableStreamBYOBRequest.respond()\f[R] is called to signal the
amount of data that is ready to transfer.
.IP
.EX
\f[B]if\f[R] (controller.byobRequest) {
  \f[B]const\f[R] v = controller.byobRequest.view;
  bytesRead = socket.readInto(v.buffer, v.byteOffset, v.byteLength);
  \f[B]if\f[R] (bytesRead === 0) {
    controller.close();
  }
  controller.byobRequest.respond(bytesRead);
} \f[B]else\f[R] {
  \f[I]// Write to data using enqueue().\f[R]
}
.EE
.SH SEE ALSO
.IP \(bu 2
Using readable byte streams
.IP \(bu 2
\f[CR]ReadableByteStreamController\f[R]
