.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "Window.window" "JS" "September 25, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Window.window \- Window: window property
.SH SYNOPSIS
The \f[B]\f[CB]window\f[B]\f[R] property of a \f[CR]Window\f[R] object
points to the window object itself.
.PP
Thus, the following expressions all return the same window object:
.IP
.EX
window.window;
window.window.window;
window.window.window.window;
\f[I]// \&...\f[R]
.EE
.PP
In web pages, the window object is also a \f[I]global object\f[R].
This means:
.IP "1." 3
Global variables of your script are, in fact, properties of
\f[CR]window\f[R]:
.RS 4
.IP
.EX
\f[B]var\f[R] global = { data: 0 };
alert(global === window.global); \f[I]// displays \[dq]true\[dq]\f[R]
.EE
.RE
.IP "2." 3
You can access the built\-in properties of the window object without
having to prefix them with \f[CR]window.\f[R]:
.RS 4
.IP
.EX
setTimeout(\[dq]alert(\[aq]Hi!\[aq])\[dq], 50); \f[I]// equivalent to using window.setTimeout().\f[R]
alert(window === window.window); \f[I]// displays \[dq]true\[dq]\f[R]
.EE
.RE
.PP
The point of having the \f[CR]window\f[R] property refer to the object
itself, was likely to make it easy to refer to the global object.
Otherwise, you\[cq]d have to do a manual \f[CR]let window = this;\f[R]
assignment at the top of your script.
.PP
Another reason, is that without this property you wouldn\[cq]t be able
to write, for example,
\f[CR]window.open(\[aq]https://google.com/\[aq])\f[R].
You\[cq]d have to use \f[CR]open(\[aq]https://google.com/\[aq])\f[R]
instead.
.PP
Yet another reason to use this property, is for libraries which wish to
offer OOP\-versions, and non\-OOP versions (especially JavaScript
modules).
For example, if we refer to \[lq]this.window.location.href\[rq], a
JavaScript module could define a property called \[lq]window\[rq] inside
of a class it defined (since no global \[lq]window\[rq] variable exists
for it by default) which could be created after passing in a window
object to the module class\[cq] constructor.
Thus, \[lq]this.window\[rq] inside of its functions would refer to that
window object.
In the non\-namespaced version, \[lq]this.window\[rq] would refer back
to \[lq]window\[rq], and also be able to readily get the document
location.
Another advantage, is that the objects of such a class (even if the
class were defined outside of a module) could change their reference to
the window at will, they would not be able to do this if they had
hard\-coded a reference to \[lq]window\[rq].
The default in the class could still be set as the current window
object.
