'\" t
.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "SVGLengthList" "JS" "February 19, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
SVGLengthList \- SVGLengthList
.SH SYNOPSIS
.SH SVG LENGTH LIST INTERFACE
The \f[CR]SVGLengthList\f[R] defines a list of \f[CR]SVGLength\f[R]
objects.
.PP
An \f[CR]SVGLengthList\f[R] object can be designated as read only, which
means that attempts to modify the object will result in an exception
being thrown.
.PP
An \f[CR]SVGLengthList\f[R] is indexable and can be accessed like an
array.
.SS Interface overview
Also implement
None
Methods
void clear()
\f[CR]SVGLength\f[R] initialize(in \f[CR]SVGLength\f[R] newItem)
\f[CR]SVGLength\f[R] getItem(in unsigned long index)
\f[CR]SVGLength\f[R] insertItemBefore(in \f[CR]SVGLength\f[R] newItem,
in unsigned long index)
\f[CR]SVGLength\f[R] replaceItem(in \f[CR]SVGLength\f[R] newItem, in
unsigned long index)
\f[CR]SVGLength\f[R] removeItem(in unsigned long index)
\f[CR]SVGLength\f[R] appendItem(in \f[CR]SVGLength\f[R] newItem)
Properties
readonly unsigned long numberOfItems
readonly unsigned long length \f[I](non\-standard)\f[R]
Normative document
SVG 1.1 (2nd Edition)
.SH INSTANCE PROPERTIES
.PP
.TS
tab(@);
lw(31.1n) lw(11.2n) lw(27.7n).
T{
Name
T}@T{
Type
T}@T{
Description
T}
_
T{
\f[CR]numberOfItems\f[R]
T}@T{
unsigned long
T}@T{
The number of items in the list.
T}
T{
\f[CR]length\f[R] \f[I](non\-standard)\f[R]
T}@T{
unsigned long
T}@T{
The number of items in the list.
T}
.TE
.SH INSTANCE METHODS
Name & Arguments
Return
Description
clear()
void
Clears all existing current items from the list, with the result being
an empty list.
Exceptions:
a \f[CR]DOMException\f[R] with code NO_MODIFICATION_ALLOWED_ERR is
raised when the list corresponds to a read only attribute or when the
object itself is read only.
initialize(in \f[CR]SVGLength\f[R] newItem)
\f[CR]SVGLength\f[R]
Clears all existing current items from the list and re\-initializes the
list to hold the single item specified by the parameter.
If the inserted item is already in a list, it is removed from its
previous list before it is inserted into this list.
The inserted item is the item itself and not a copy.
The return value is the item inserted into the list.
Exceptions:
a \f[CR]DOMException\f[R] with code NO_MODIFICATION_ALLOWED_ERR is
raised when the list corresponds to a read only attribute or when the
object itself is read only.
getItem(in unsigned long index)
\f[CR]SVGLength\f[R]
Returns the specified item from the list.
The returned item is the item itself and not a copy.
Any changes made to the item are immediately reflected in the list.
The first item is number 0.
Exceptions:
a \f[CR]DOMException\f[R] with code NO_MODIFICATION_ALLOWED_ERR is
raised when the list corresponds to a read only attribute or when the
object itself is read only.
insertItemBefore(in \f[CR]SVGLength\f[R] newItem, in unsigned long
index)
\f[CR]SVGLength\f[R]
Inserts a new item into the list at the specified position.
The first item is number 0.
If newItem is already in a list, it is removed from its previous list
before it is inserted into this list.
The inserted item is the item itself and not a copy.
If the item is already in this list, note that the index of the item to
insert before is before the removal of the item.
If the index is equal to 0, then the new item is inserted at the front
of the list.
If the index is greater than or equal to numberOfItems, then the new
item is appended to the end of the list.
Exceptions:
a \f[CR]DOMException\f[R] with code NO_MODIFICATION_ALLOWED_ERR is
raised when the list corresponds to a read only attribute or when the
object itself is read only.
replaceItem(in \f[CR]SVGLength\f[R] newItem, in unsigned long index)
\f[CR]SVGLength\f[R]
Replaces an existing item in the list with a new item.
If newItem is already in a list, it is removed from its previous list
before it is inserted into this list.
The inserted item is the item itself and not a copy.
If the item is already in this list, note that the index of the item to
replace is before the removal of the item.
Exceptions:
a \f[CR]DOMException\f[R] with code NO_MODIFICATION_ALLOWED_ERR is
raised when the list corresponds to a read only attribute or when the
object itself is read only.
a \f[CR]DOMException\f[R] with code INDEX_SIZE_ERR is raised if the
index number is greater than or equal to numberOfItems.
removeItem(in unsigned long index)
\f[CR]SVGLength\f[R]
Removes an existing item from the list.
Exceptions:
a \f[CR]DOMException\f[R] with code NO_MODIFICATION_ALLOWED_ERR is
raised when the list corresponds to a read only attribute or when the
object itself is read only.
a \f[CR]DOMException\f[R] with code INDEX_SIZE_ERR is raised if the
index number is greater than or equal to numberOfItems.
appendItem(in \f[CR]SVGLength\f[R] newItem)
\f[CR]SVGLength\f[R]
Inserts a new item at the end of the list.
If newItem is already in a list, it is removed from its previous list
before it is inserted into this list.
The inserted item is the item itself and not a copy.
Exceptions:
a \f[CR]DOMException\f[R] with code NO_MODIFICATION_ALLOWED_ERR is
raised when the list corresponds to a read only attribute or when the
object itself is read only.
