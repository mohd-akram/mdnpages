.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "SVGLengthList" "JS" "February 2, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
SVGLengthList \- SVGLengthList
.SH SYNOPSIS
The \f[B]\f[CB]SVGLengthList\f[B]\f[R] interface defines a list of
\f[CR]SVGLength\f[R] objects.
It is used for the \f[CR]baseVal\f[R] and \f[CR]animVal\f[R] properties
of \f[CR]SVGAnimatedLengthList\f[R].
.PP
An \f[CR]SVGLengthList\f[R] object can be designated as read only, which
means that attempts to modify the object will result in an exception
being thrown.
.PP
An \f[CR]SVGLengthList\f[R] object is indexable and can be accessed like
an array.
.SH INSTANCE PROPERTIES
.TP
\f[B]length\f[R]
The number of items in the list.
.TP
\f[B]numberOfItems\f[R]
The number of items in the list.
.SH INSTANCE METHODS
.TP
\f[B]appendItem()\f[R]
Inserts a new item at the end of the list.
.TP
\f[B]clear()\f[R]
Clears all existing items from the list, with the result being an empty
list.
.TP
\f[B]initialize()\f[R]
Clears all existing items from the list and re\-initializes the list to
hold the single item specified by the parameter.
.TP
\f[B]getItem()\f[R]
Returns the specified item from the list.
.TP
\f[B]insertItemBefore()\f[R]
Inserts a new item into the list at the specified position.
.TP
\f[B]removeItem()\f[R]
Removes an existing item from the list.
.TP
\f[B]replaceItem()\f[R]
Replaces an existing item in the list with a new item.
.SH EXAMPLES
.SS Using SVGLengthList
An \f[CR]SVGLengthList\f[R] object can be retrieved from an
\f[CR]SVGAnimatedLengthList\f[R] object, which itself is retrievable
from many animatable length attributes, such as
\f[CR]SVGTextPositioningElement.x\f[R].
.SS HTML
.IP
.EX
<\f[B]svg\f[R]
  viewBox=\[dq]0 0 200 100\[dq]
  xmlns=\[dq]http://www.w3.org/2000/svg\[dq]
  width=\[dq]200\[dq]
  height=\[dq]100\[dq]>
  <\f[B]text\f[R] id=\[dq]text1\[dq] x=\[dq]10\[dq] y=\[dq]50\[dq]>Hello</\f[B]text\f[R]>
</\f[B]svg\f[R]>
<\f[B]button\f[R] id=\[dq]equally\-distribute\[dq]>Equally distribute letters</\f[B]button\f[R]>
<\f[B]button\f[R] id=\[dq]reset\-spacing\[dq]>Reset spacing</\f[B]button\f[R]>
<\f[B]div\f[R]>
  <\f[B]b\f[R]>Current <\f[B]code\f[R]>SVGLengthList</\f[B]code\f[R]></\f[B]b\f[R]>
  <\f[B]pre\f[R]><\f[B]output\f[R] id=\[dq]output\[dq]></\f[B]output\f[R]></\f[B]pre\f[R]>
</\f[B]div\f[R]>
.EE
.SS JavaScript
.IP
.EX
\f[B]const\f[R] text = document.getElementById(\[dq]text1\[dq]);
\f[B]const\f[R] output = document.getElementById(\[dq]output\[dq]);
\f[B]const\f[R] list = text.x.baseVal;
\f[B]function\f[R] equallyDistribute() {
  list.clear();
  \f[B]for\f[R] (\f[B]let\f[R] i = 0; i < text.textContent.length; i++) {
    \f[B]const\f[R] length = text.ownerSVGElement.createSVGLength();
    length.value = i * 20 + 10;
    list.appendItem(length);
  }
  printList();
}
\f[B]function\f[R] resetSpacing() {
  \f[B]const\f[R] length = text.ownerSVGElement.createSVGLength();
  length.value = 10;
  list.initialize(length);
  printList();
}
\f[B]function\f[R] printList() {
  output.textContent = \[dq]\[dq];
  \f[B]for\f[R] (\f[B]let\f[R] i = 0; i < list.length; i++) {
    output.innerText += list.getItem(i).value + \[dq]\[rs]n\[dq];
  }
}
printList();

document
  .getElementById(\[dq]equally\-distribute\[dq])
  .addEventListener(\[dq]click\[dq], equallyDistribute);
document
  .getElementById(\[dq]reset\-spacing\[dq])
  .addEventListener(\[dq]click\[dq], resetSpacing);
.EE
.SS Result
.SH SEE ALSO
.IP \[bu] 2
\f[CR]SVGNumberList\f[R]
.IP \[bu] 2
\f[CR]SVGPointList\f[R]
.IP \[bu] 2
\f[CR]SVGStringList\f[R]
.IP \[bu] 2
\f[CR]SVGTransformList\f[R]
