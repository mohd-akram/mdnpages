.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "XRINPUTSOURCE.HANDEDNESS" "3JS" "July 25, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
XRInputSource.handedness \- XRInputSource: handedness property
.SH SYNOPSIS
\f[B]Secure context:\f[R] This feature is available only in secure
contexts (HTTPS).
.PP
The read\-only \f[CR]XRInputSource\f[R] property
\f[B]\f[CB]handedness\f[B]\f[R] indicates which of the user\(cqs hands
the WebXR input source is associated with, or if it\(cqs not associated
with a hand at all.
.SH VALUE
A string indicating whether the input controller is held in one of the
user\(cqs hands, and if it is, which hand.
The value is one of the following:
.TP
\f[B]none\f[R]
The input controller is not associated with one of the user\(cqs hands.
.TP
\f[B]left\f[R]
The input controller is being held in, worn on, or is attached to the
user\(cqs left hand.
.TP
\f[B]right\f[R]
The input controller is being held in, worn on, or is attached to the
user\(cqs right hand.
.SH USAGE NOTES
If the input source is not a device associated with a user\(cqs hand
(whether by being held, attached, or worn), the value of
\f[CR]handedness\f[R] is \f[CR]none\f[R].
This may indicate, for example, an input source which isn\(cqt
hand\-held, such as controls built into a headset or an input device
attached to the head or body.
.SH EXAMPLES
One important usage scenario for \f[CR]handedness\f[R] is to determine
which hand a controller is in so you can draw a representation of that
hand (or the device that hand is controlling) in virtual space.
.IP
.EX
\f[B]function\f[R] updateInputSources(session, frame, refSpace) {
  \f[B]for\f[R] (\f[B]const\f[R] source \f[B]of\f[R] session.inputSources) {
    \f[B]if\f[R] (source.gripSpace) {
      \f[B]const\f[R] gripPose = frame.getPose(source.gripSpace, refSpace);

      \f[B]if\f[R] (gripPose) {
        myRenderHandObject(gripPose, inputSource.handedness);
      }
    }
  }
}
.EE
.PP
This function, which would be called every animation frame (or possibly
just periodically, depending on the degree of smoothness required and
any performance constraints), scans the list of input sources looking
for any which have a \f[CR]gripSpace\f[R] which isn\(cqt
\f[CR]null\f[R].
If a \f[CR]gripSpace\f[R] is present, that means the input source is a
hand\-held device of some sort, so it should be rendered visibly if
possible.
.PP
If \f[CR]gripSpace\f[R] is non\-\f[CR]null\f[R], the function proceeds
to get the pose for the \f[CR]gripSpace\f[R] transformed into the
current reference space.
Assuming that\(cqs then valid, a function called
\f[CR]myRenderHandObject()\f[R] is called with the grip\(cqs pose and
the value of \f[CR]handedness\f[R].
It then draws the appropriate model positioned and formed for the
correct hand.
.SH SEE ALSO
.IP \(bu 2
WebXR Device API
.IP \(bu 2
Inputs and input sources
.IP \(bu 2
Using gamepads in WebXR applications
