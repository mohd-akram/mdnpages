.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "GPUVALIDATIONERROR" "3JS" "June 18, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
GPUValidationError \- GPUValidationError
.SH SYNOPSIS
\f[B]Secure context:\f[R] This feature is available only in secure
contexts (HTTPS).
.PP
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]GPUValidationError\f[B]\f[R] interface of the WebGPU API
describes an application error indicating that an operation did not pass
the WebGPU API\(cqs validation constraints.
.PP
It represents one of the types of errors surfaced by
\f[CR]GPUDevice.popErrorScope\f[R] and the \f[CR]uncapturederror\f[R]
event.
.PP
Validation errors occur whenever invalid inputs are given to a WebGPU
call.
These are consistent, predictable, and should not occur provided your
app is well\-formed.
They will occur in the same way on every device your code runs on, so
once you\(cqve fixed any errors that show up during development you
probably don\(cqt need to observe them directly most of the time.
An exception to that rule is if you\(cqre consuming user\-supplied
assets, shaders, etc., in which case watching for validation errors
while loading could be helpful.
.RS
.PP
\f[B]Note:\f[R] We have attempted to provide useful information to help
you understand why validation errors are occurring in your WebGPU code
in \(lqValidation\(rq sections where appropriate, which list criteria to
meet to avoid validation errors.
See for example the \f[CR]GPUDevice.createBindGroup()\f[R] Validation
section.
.RE
.SH CONSTRUCTOR
.TP
\f[B]GPUValidationError()\f[R]
Creates a new \f[CR]GPUValidationError\f[R] object instance.
.SH INSTANCE PROPERTIES
The \f[CR]message\f[R] property is inherited from its parent,
\f[CR]GPUError\f[R]:
.TP
\f[B]message\f[R] \f[I](experimental)\f[R] \f[I](read\-only)\f[R]
A string providing a human\-readable message that explains why the error
occurred.
.SH EXAMPLES
The following example uses an error scope to capture a suspected
validation error, logging it to the console.
.IP
.EX
device.pushErrorScope(\(dqvalidation\(dq);

\f[B]let\f[R] sampler = device.createSampler({
  maxAnisotropy: 0, \f[I]// Invalid, maxAnisotropy must be at least 1.\f[R]
});

device.popErrorScope().then((error) \f[B]=>\f[R] {
  \f[B]if\f[R] (error) {
    \f[I]// error is a GPUValidationError object instance\f[R]
    sampler = \f[B]null\f[R];
    console.error(\(gaAn error occurred while creating sampler: ${error.message}\(ga);
  }
});
.EE
.SH SEE ALSO
.IP \(bu 2
The WebGPU API
.IP \(bu 2
\c
.UR https://toji.dev/webgpu-best-practices/error-handling
WebGPU Error Handling best practices
.UE \c
