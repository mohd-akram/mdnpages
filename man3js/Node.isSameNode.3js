.\" Automatically generated by Pandoc 3.2.1
.\"
.TH "Node.isSameNode" "JS" "July 26, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Node.isSameNode \- Node: isSameNode() method
.SH SYNOPSIS
The \f[B]\f[CB]isSameNode()\f[B]\f[R] method of the \f[CR]Node\f[R]
interface is a legacy alias the for the \f[CR]===\f[R] strict equality
operator.
That is, it tests whether two nodes are the same (in other words,
whether they reference the same object).
.RS
.PP
\f[B]Note:\f[R] There is no need to use \f[CR]isSameNode()\f[R]; instead
use the \f[CR]===\f[R] strict equality operator.
.RE
.SH SYNTAX
.IP
.EX
isSameNode(otherNode)
.EE
.SS Parameters
.TP
\f[B]otherNode\f[R]
The \f[CR]Node\f[R] to test against.
> \f[B]Note:\f[R] > This parameter is not optional, but can be set to
\f[CR]null\f[R].
.SS Return value
A boolean value that is \f[CR]true\f[R] if both nodes are strictly
equal, \f[CR]false\f[R] if not.
.SH EXAMPLE
In this example, we create three \f[CR]<div>\f[R] blocks.
The first and third have the same contents and attributes, while the
second is different.
Then we run some JavaScript to compare the nodes using
\f[CR]isSameNode()\f[R] and output the results.
.SS HTML
.IP
.EX
<\f[B]div\f[R]>This is the first element.</\f[B]div\f[R]>
<\f[B]div\f[R]>This is the second element.</\f[B]div\f[R]>
<\f[B]div\f[R]>This is the first element.</\f[B]div\f[R]>

<\f[B]p\f[R] id=\[dq]output\[dq]></\f[B]p\f[R]>
.EE
.SS JavaScript
.IP
.EX
\f[B]const\f[R] output = document.getElementById(\[dq]output\[dq]);
\f[B]const\f[R] divList = document.getElementsByTagName(\[dq]div\[dq]);

output.innerText += \[ga]div 0 same as div 0: ${divList[0].isSameNode(
  divList[0],
)}\[rs]n\[ga];
output.innerText += \[ga]div 0 same as div 1: ${divList[0].isSameNode(
  divList[1],
)}\[rs]n\[ga];
output.innerText += \[ga]div 0 same as div 2: ${divList[0].isSameNode(
  divList[2],
)}\[rs]n\[ga];
.EE
.SS Results
.SH SEE ALSO
.IP \[bu] 2
\f[CR]Node.isEqualNode()\f[R]
