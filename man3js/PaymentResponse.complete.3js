.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "PaymentResponse.complete" "JS" "July 26, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
PaymentResponse.complete \- PaymentResponse: complete() method
.SH SYNOPSIS
\f[B]Secure context:\f[R] This feature is available only in secure
contexts (HTTPS).
.PP
The \f[CR]PaymentRequest\f[R] method \f[B]\f[CB]complete()\f[B]\f[R] of
the Payment Request API notifies the user agent that the user
interaction is over, and causes any remaining user interface to be
closed.
.PP
This method must be called after the user accepts the payment request
and the \f[CR]Promise\f[R] returned by the
\f[CR]PaymentRequest.show()\f[R] method is resolved.
.SH SYNTAX
.IP
.EX
complete()
complete(result)
.EE
.SS Parameters
.TP
\f[B]result\f[R] \f[I](optional)\f[R]
A string indicating the state of the payment operation upon completion.
It must be one of the following:
.RS
.TP
\f[B]success\f[R]
The payment was successfully processed.
The user agent may or may not present some form of \[lq]payment
successful\[rq] indication to the user.
.TP
\f[B]fail\f[R]
The payment was not successfully processed.
The failure may or may not be announced to the user by the user agent,
depending on its design.
.TP
\f[B]unknown\f[R]
The success or failure status of the transaction is unknown or
irrelevant, and the user agent should not present any notification, even
if it normally would.
\f[I]This is the default value.\f[R]
.RS
.PP
\f[B]Note:\f[R] In older versions of the specification, an empty string,
\f[CR]\[dq]\[dq]\f[R], was used instead of \f[CR]unknown\f[R] to
indicate a completion without a known result state.
See the Browser compatibility section below for details.
.RE
.RE
.SS Return value
A \f[CR]Promise\f[R] which resolves with no input value once the payment
interface has been fully closed.
If an error occurs, the promise instead rejects, returning one of the
exceptions listed below.
.SS Exceptions
.TP
\f[B]AbortError\f[R] \f[B]DOMException\f[R]
Returned if the document in which the payment request is taking place
became inactive while the user interface was shown.
.TP
\f[B]InvalidStateError\f[R] \f[B]DOMException\f[R]
Returned if the payment has already completed, or \f[CR]complete()\f[R]
was called while a request to retry the payment is pending.
You can\[cq]t treat a payment as complete after requesting that the
payment be tried again.
.SH EXAMPLES
The following example sends payment information to a secure server using
the Fetch API.
It calls \f[CR]complete()\f[R] with an answer appropriate to the status
in the response.
.IP
.EX
\f[I]// Initialization of PaymentRequest arguments are excerpted for the\f[R]
\f[I]//   sake of brevity.\f[R]
\f[B]const\f[R] payment = \f[B]new\f[R] PaymentRequest(supportedInstruments, details, options);

payment
  .show()
  .then((paymentResponse) \f[B]=>\f[R] {
    \f[B]const\f[R] fetchOptions = {
      method: \[dq]POST\[dq],
      credentials: include,
      body: JSON.stringify(paymentResponse),
    };
    \f[B]const\f[R] serverPaymentRequest = \f[B]new\f[R] Request(\[dq]secure/payment/endpoint\[dq]);
    fetch(serverPaymentRequest, fetchOptions)
      .then((response) \f[B]=>\f[R] {
        \f[B]if\f[R] (response.status < 400) {
          paymentResponse.complete(\[dq]success\[dq]);
        } \f[B]else\f[R] {
          paymentResponse.complete(\[dq]fail\[dq]);
        }
      })
      .catch((reason) \f[B]=>\f[R] {
        paymentResponse.complete(\[dq]fail\[dq]);
      });
  })
  .catch((err) \f[B]=>\f[R] {
    console.error(\[dq]Uh oh, something bad happened\[dq], err.message);
  });
.EE
