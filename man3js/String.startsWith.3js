.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "String.startsWith" "JS" "February 11, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
String.startsWith \- String.prototype.startsWith()
.SH SYNOPSIS
The \f[B]\f[CB]startsWith()\f[B]\f[R] method of \f[CR]String\f[R] values
determines whether this string begins with the characters of a specified
string, returning \f[CR]true\f[R] or \f[CR]false\f[R] as appropriate.
.IP
.EX
\f[B]const\f[R] str1 = \[dq]Saturday night plans\[dq];

console.log(str1.startsWith(\[dq]Sat\[dq]));
\f[I]// Expected output: true\f[R]

console.log(str1.startsWith(\[dq]Sat\[dq], 3));
\f[I]// Expected output: false\f[R]
.EE
.SH SYNTAX
.IP
.EX
startsWith(searchString)
startsWith(searchString, position)
.EE
.SS Parameters
.TP
\f[B]searchString\f[R]
The characters to be searched for at the start of this string.
Cannot be a regex.
All values that are not regexes are coerced to strings, so omitting it
or passing \f[CR]undefined\f[R] causes \f[CR]startsWith()\f[R] to search
for the string \f[CR]\[dq]undefined\[dq]\f[R], which is rarely what you
want.
.TP
\f[B]position\f[R] \f[I](optional)\f[R]
The start position at which \f[CR]searchString\f[R] is expected to be
found (the index of \f[CR]searchString\f[R]\[cq]s first character).
Defaults to \f[CR]0\f[R].
.SS Return value
\f[B]\f[CB]true\f[B]\f[R] if the given characters are found at the
beginning of the string, including when \f[CR]searchString\f[R] is an
empty string; otherwise, \f[B]\f[CB]false\f[B]\f[R].
.SS Exceptions
.TP
\f[B]TypeError\f[R]
Thrown if \f[CR]searchString\f[R] is a regex.
.SH DESCRIPTION
This method lets you determine whether or not a string begins with
another string.
This method is case\-sensitive.
.SH EXAMPLES
.SS Using startsWith()
.IP
.EX
\f[B]const\f[R] str = \[dq]To be, or not to be, that is the question.\[dq];

console.log(str.startsWith(\[dq]To be\[dq])); \f[I]// true\f[R]
console.log(str.startsWith(\[dq]not to be\[dq])); \f[I]// false\f[R]
console.log(str.startsWith(\[dq]not to be\[dq], 10)); \f[I]// true\f[R]
.EE
.SH SEE ALSO
.IP \[bu] 2
\c
.UR https://github.com/zloirock/core-js#ecmascript-string-and-regexp
Polyfill of \f[CR]String.prototype.startsWith\f[R] in
\f[CR]core\-js\f[R]
.UE \c
.IP \[bu] 2
\f[CR]String.prototype.endsWith()\f[R]
.IP \[bu] 2
\f[CR]String.prototype.includes()\f[R]
.IP \[bu] 2
\f[CR]String.prototype.indexOf()\f[R]
.IP \[bu] 2
\f[CR]String.prototype.lastIndexOf()\f[R]
