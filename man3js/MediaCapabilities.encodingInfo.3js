.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "MediaCapabilities.encodingInfo" "JS" "July 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
MediaCapabilities.encodingInfo \- MediaCapabilities: encodingInfo()
method
.SH SYNOPSIS
The \f[B]\f[CB]MediaCapabilities.encodingInfo()\f[B]\f[R] method, part
of the \f[CR]MediaCapabilities\f[R] interface of the Media Capabilities
API, returns a promise with the tested media configuration\[cq]s
capabilities information.
This contains the three boolean properties \f[CR]supported\f[R],
\f[CR]smooth\f[R], and \f[CR]powerefficient\f[R], which describe how
compatible the device is with the type of media.
.SH SYNTAX
.IP
.EX
encodingInfo(configuration)
.EE
.SS Parameters
.TP
\f[B]configuration\f[R]
An object with a property \f[CR]type\f[R] and \f[I]either\f[R] a
\f[CR]video\f[R] or \f[CR]audio\f[R] property containing a configuration
of the appropriate type:
.RS
.TP
\f[B]type\f[R]
The type of media being tested.
This takes one of two values:
.RS
.TP
\f[B]record\f[R]
Represents a configuration for recording of media, e.g.\ using
\f[CR]MediaRecorder\f[R].
.TP
\f[B]webrtc\f[R]
Represents a configuration meant to be transmitted over electronic means
(e.g.\ using \f[CR]RTCPeerConnection\f[R]).
\f[B]Note:\f[R] Firefox uses \f[CR]transmission\f[R] for this type, and
\f[CR]webrtc\f[R] does not work.
.TP
\f[B]transmission\f[R] \f[I](non\-standard)\f[R]
The synonym of \f[CR]webrtc\f[R] to be used in Firefox.
.RE
.TP
\f[B]video\f[R]
Configuration object for a video media source.
This has the following properties:
.RS
.TP
\f[B]contentType\f[R]
String containing a valid video MIME type, and (optionally) a
\f[CR]codecs\f[R] parameter.
.TP
\f[B]width\f[R]
The width of the video.
.TP
\f[B]height\f[R]
The height of the video.
.TP
\f[B]bitrate\f[R]
The number of bits used to encode one second of the video file.
.TP
\f[B]framerate\f[R]
The number of frames making up one second of video playback.
.RE
.TP
\f[B]audio\f[R]
Configuration object for an audio media source.
This has the following properties:
.RS
.TP
\f[B]contentType\f[R]
String containing a valid audio MIME type, and (optionally) a
\f[CR]codecs\f[R] parameter.
.TP
\f[B]channels\f[R]
The number of channels used by the audio track.
.TP
\f[B]bitrate\f[R]
The number of bits used to encode one second of the audio file.
.TP
\f[B]samplerate\f[R]
The number of audio samples making up one second of the audio file.
.RE
.RE
.SS Return value
A \f[CR]Promise\f[R] fulfilling with an object containing three Boolean
attributes:
.TP
\f[B]supported\f[R]
\f[CR]true\f[R] if the media content can be decoded at all.
Otherwise, it is \f[CR]false\f[R].
.TP
\f[B]smooth\f[R]
\f[CR]true\f[R] if playback of the media will be smooth (of high
quality).
Otherwise it is \f[CR]false\f[R].
.TP
\f[B]powerEfficient\f[R]
\f[CR]true\f[R] if playback of the media will be power efficient.
Otherwise, it is \f[CR]false\f[R].
.PP
Browsers will report a supported media configuration as
\f[CR]smooth\f[R] and \f[CR]powerEfficient\f[R] until stats on this
device have been recorded.
All supported audio codecs are reported to be power efficient.
.SS Exceptions
.TP
\f[B]TypeError\f[R]
Thrown if the \f[CR]configuration\f[R] passed to the
\f[CR]encodingInfo()\f[R] method is invalid, which may be for any of the
following reasons:
.RS
.IP \[bu] 2
the type is not video or audio,
.IP \[bu] 2
the \f[CR]contentType\f[R] is not a valid codec MIME type,
.IP \[bu] 2
there is some other error in the media configuration passed to the
method, including omitting any of the \f[CR]configuration\f[R] elements.
.RE
.SH EXAMPLES
.IP
.EX
\f[I]//Create media configuration to be tested\f[R]
\f[B]const\f[R] mediaConfig = {
  type: \[dq]record\[dq], \f[I]// or \[aq]transmission\[aq]\f[R]
  video: {
    contentType: \[dq]video/webm;codecs=vp8.0\[dq], \f[I]// valid content type\f[R]
    width: 1920, \f[I]// width of the video\f[R]
    height: 1080, \f[I]// height of the video\f[R]
    bitrate: 120000, \f[I]// number of bits used to encode 1s of video\f[R]
    framerate: 48, \f[I]// number of frames making up that 1s.\f[R]
  },
};

\f[I]// check support and performance\f[R]
navigator.mediaCapabilities.encodingInfo(mediaConfig).then((result) \f[B]=>\f[R] {
  console.log(
    \[ga]This configuration is ${result.supported ? \[dq]\[dq] : \[dq]not \[dq]}supported,\[ga],
  );
  console.log(\[ga]${result.smooth ? \[dq]\[dq] : \[dq]not \[dq]}smooth, and\[ga]);
  console.log(\[ga]${result.powerEfficient ? \[dq]\[dq] : \[dq]not \[dq]}power efficient.\[ga]);
});
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]MediaCapabilities.decodingInfo()\f[R]
