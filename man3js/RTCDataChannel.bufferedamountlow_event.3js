.\" Automatically generated by Pandoc 3.1.12.3
.\"
.TH "RTCDataChannel.bufferedamountlow_event" "JS" "July 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
RTCDataChannel.bufferedamountlow_event \- RTCDataChannel:
bufferedamountlow event
.SH SYNOPSIS
A \f[B]\f[CB]bufferedamountlow\f[B]\f[R] event is sent to an
\f[CR]RTCDataChannel\f[R] when the number of bytes currently in the
outbound data transfer buffer falls below the threshold specified in
\f[CR]bufferedAmountLowThreshold\f[R].
\f[CR]bufferedamountlow\f[R] events aren\[cq]t sent if
\f[CR]bufferedAmountLowThreshold\f[R] is 0.
.PP
This event is not cancelable and does not bubble.
.SH SYNTAX
Use the event name in methods like \f[CR]addEventListener()\f[R], or set
an event handler property.
.IP
.EX
addEventListener(\[dq]bufferedamountlow\[dq], (event) \f[B]=>\f[R] {});

onbufferedamountlow = (event) \f[B]=>\f[R] {};
.EE
.SH EVENT TYPE
A generic \f[CR]Event\f[R].
.SH EXAMPLES
This example sets up a handler for \f[CR]bufferedamountlow\f[R] to
request more data any time the data channel\[cq]s buffer falls below the
number of bytes specified by \f[CR]bufferedAmountLowThreshold\f[R],
which we have set to 65536.
In other words, we\[cq]ll try to keep at least 64kB of data in the
buffer, reading 64kB at a time from the source.
.IP
.EX
\f[B]let\f[R] pc = \f[B]new\f[R] RTCPeerConnection();
\f[B]let\f[R] dc = pc.createDataChannel(\[dq]SendFile\[dq]);
\f[I]// source data object\f[R]
\f[B]let\f[R] source = (dc.bufferedAmountLowThreshold = 65536);

pc.addEventListener(
  \[dq]bufferedamountlow\[dq],
  (ev) \f[B]=>\f[R] {
    \f[B]if\f[R] (source.position <= source.length) {
      dc.send(source.readFile(65536));
    }
  },
  \f[B]false\f[R],
);
.EE
.PP
After creating the \f[CR]RTCPeerConnection\f[R], this calls
\f[CR]RTCPeerConnection.createDataChannel()\f[R] to create the data
channel.
Then a listener is created for \f[CR]bufferedamountlow\f[R] to refill
the incoming data buffer any time its contents fall below 65536 bytes.
.PP
You can also set up a listener for \f[CR]bufferedamountlow\f[R] using
its event handler property, \f[CR]onbufferedamountlow\f[R]:
.IP
.EX
pc.onbufferedamountlow = (ev) \f[B]=>\f[R] {
  \f[B]if\f[R] (source.position <= source.length) {
    dc.send(source.readFile(65536));
  }
};
.EE
.SH SEE ALSO
.IP \[bu] 2
WebRTC API
.IP \[bu] 2
\f[CR]RTCDataChannel\f[R]
.IP \[bu] 2
\f[CR]RTCDataChannel.bufferedAmountLowThreshold\f[R]
