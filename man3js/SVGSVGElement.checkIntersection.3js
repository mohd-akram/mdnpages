.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "SVGSVGELEMENT.CHECKINTERSECTION" "3JS" "February 2, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
SVGSVGElement.checkIntersection \- SVGSVGElement: checkIntersection()
method
.SH SYNOPSIS
The \f[CR]checkIntersection()\f[R] method of the
\f[CR]SVGSVGElement\f[R] interface checks if the rendered content of the
given element intersects the supplied rectangle.
.PP
Each candidate graphics element is to be considered a match only if the
same graphics element can be a target of pointer events as defined in
\f[CR]pointer\-events\f[R] processing.
.SH SYNTAX
.IP
.EX
checkIntersection(element, rect)
.EE
.SS Parameters
.TP
\f[B]element\f[R]
An \f[CR]Element\f[R] representing the SVG graphics element to check.
.TP
\f[B]rect\f[R]
An \f[CR]SVGRect\f[R] object that defines the rectangle to check
against.
.SS Return value
A boolean.
.SH EXAMPLES
.SS Checking if an Element Intersects a Rectangle
.IP
.EX
<\f[B]svg\f[R] id=\(dqexampleSVG\(dq width=\(dq200\(dq height=\(dq200\(dq>
  <\f[B]rect\f[R]
    id=\(dqcheckRect\(dq
    x=\(dq10\(dq
    y=\(dq10\(dq
    width=\(dq100\(dq
    height=\(dq100\(dq
    fill=\(dqnone\(dq
    stroke=\(dqred\(dq />
  <\f[B]circle\f[R] id=\(dqtargetElement\(dq cx=\(dq80\(dq cy=\(dq80\(dq r=\(dq50\(dq fill=\(dqblue\(dq />
</\f[B]svg\f[R]>
<\f[B]button\f[R] id=\(dqcheckIntersectionBtn\(dq>Check Intersection</\f[B]button\f[R]>
<\f[B]pre\f[R] id=\(dqresult\(dq></\f[B]pre\f[R]>
.EE
.IP
.EX
\f[B]const\f[R] svgElement = document.getElementById(\(dqexampleSVG\(dq);
\f[B]const\f[R] checkRect = document.getElementById(\(dqcheckRect\(dq);
\f[B]const\f[R] targetElement = document.getElementById(\(dqtargetElement\(dq);
\f[B]const\f[R] resultDisplay = document.getElementById(\(dqresult\(dq);

document
  .getElementById(\(dqcheckIntersectionBtn\(dq)
  .addEventListener(\(dqclick\(dq, () \f[B]=>\f[R] {
    \f[B]const\f[R] rect = svgElement.createSVGRect();
    rect.x = checkRect.x.baseVal.value;
    rect.y = checkRect.y.baseVal.value;
    rect.width = checkRect.width.baseVal.value;
    rect.height = checkRect.height.baseVal.value;

    \f[B]const\f[R] isIntersecting = svgElement.checkIntersection(targetElement, rect);
    resultDisplay.textContent = \(gaDoes the circle intersect with the rectangle? ${isIntersecting}\(ga;
  });
.EE
.SH SEE ALSO
.IP \(bu 2
\f[CR]SVGSVGElement.checkEnclosure()\f[R]
