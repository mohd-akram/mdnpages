.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "MEDIATRACKCONSTRAINTS" "3JS" "May 14, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
MediaTrackConstraints \- MediaTrackConstraints
.SH SYNOPSIS
The \f[B]\f[CB]MediaTrackConstraints\f[B]\f[R] dictionary is used to
describe a set of capabilities and the value or values each can take on.
A constraints dictionary is passed into \f[CR]applyConstraints()\f[R] to
allow a script to establish a set of exact (required) values or ranges
and/or preferred values or ranges of values for the track, and the most
recently\-requested set of custom constraints can be retrieved by
calling \f[CR]getConstraints()\f[R].
.SH CONSTRAINTS
The following types are used to specify a constraint for a property.
They allow you to specify one or more \f[CR]exact\f[R] values from which
one must be the parameter\(cqs value, or a set of \f[CR]ideal\f[R]
values which should be used if possible.
You can also specify a single value (or an array of values) which the
user agent will do its best to match once all more stringent constraints
have been applied.
.PP
To learn more about how constraints work, see Capabilities, constraints,
and settings.
.RS
.PP
\f[B]Note:\f[R] \f[CR]min\f[R] and \f[CR]exact\f[R] values are not
permitted in constraints used in
\f[CR]MediaDevices.getDisplayMedia()\f[R] calls \(em they produce a
\f[CR]TypeError\f[R] \(em but they are allowed in constraints used in
\f[CR]MediaStreamTrack.applyConstraints()\f[R] calls.
.RE
.SS ConstrainBoolean
The \f[CR]ConstrainBoolean\f[R] constraint type is used to specify a
constraint for a property whose value is a Boolean value.
Its value may either be set to a Boolean (\f[CR]true\f[R] or
\f[CR]false\f[R]) or an object containing the following properties:
.TP
\f[B]exact\f[R]
A Boolean which must be the value of the property.
If the property can\(cqt be set to this value, matching will fail.
.TP
\f[B]ideal\f[R]
A Boolean specifying an ideal value for the property.
If possible, this value will be used, but if it\(cqs not possible, the
user agent will use the closest possible match.
.SS ConstrainDouble
The \f[CR]ConstrainDouble\f[R] constraint type is used to specify a
constraint for a property whose value is a double\-precision
floating\-point number.
Its value may either be set to a number or an object containing the
following properties:
.TP
\f[B]max\f[R]
A decimal number specifying the largest permissible value of the
property it describes.
If the value cannot remain equal to or less than this value, matching
will fail.
.TP
\f[B]min\f[R]
A decimal number specifying the smallest permissible value of the
property it describes.
If the value cannot remain equal to or greater than this value, matching
will fail.
.TP
\f[B]exact\f[R]
A decimal number specifying a specific, required, value the property
must have to be considered acceptable.
.TP
\f[B]ideal\f[R]
A decimal number specifying an ideal value for the property.
If possible, this value will be used, but if it\(cqs not possible, the
user agent will use the closest possible match.
.SS ConstrainDOMString
The \f[CR]ConstrainDOMString\f[R] constraint type is used to specify a
constraint for a property whose value is a string.
Its value may either be set to a string, an array of strings, or an
object containing the following properties:
.TP
\f[B]exact\f[R]
A string or an array of strings, one of which must be the value of the
property.
If the property can\(cqt be set to one of the listed values, matching
will fail.
.TP
\f[B]ideal\f[R]
A string or an array of strings, specifying ideal values for the
property.
If possible, one of the listed values will be used, but if it\(cqs not
possible, the user agent will use the closest possible match.
.SS ConstrainULong
The \f[CR]ConstrainULong\f[R] constraint type is used to specify a
constraint for a property whose value is an integer.
Its value may either be set to a number or an object containing the
following properties:
.TP
\f[B]max\f[R]
An integer specifying the largest permissible value of the property it
describes.
If the value cannot remain equal to or less than this value, matching
will fail.
.TP
\f[B]min\f[R]
An integer specifying the smallest permissible value of the property it
describes.
If the value cannot remain equal to or greater than this value, matching
will fail.
.TP
\f[B]exact\f[R]
An integer specifying a specific, required, value the property must have
to be considered acceptable.
.TP
\f[B]ideal\f[R]
An integer specifying an ideal value for the property.
If possible, this value will be used, but if it\(cqs not possible, the
user agent will use the closest possible match.
.SH INSTANCE PROPERTIES
Some combination\(embut not necessarily all\(emof the following
properties will exist on the object.
This may be because a given browser doesn\(cqt support the property, or
because it doesn\(cqt apply.
For example, because RTP doesn\(cqt provide some of these values during
negotiation of a WebRTC connection, a track associated with a
\f[CR]RTCPeerConnection\f[R] will not include certain values, such as
\f[CR]facingMode\f[R] or \f[CR]groupId\f[R].
.SS Instance properties of all media tracks
.TP
\f[B]deviceId\f[R]
A \f[CR]ConstrainDOMString\f[R] object specifying a device ID or an
array of device IDs which are acceptable and/or required.
.TP
\f[B]groupId\f[R]
A \f[CR]ConstrainDOMString\f[R] object specifying a group ID or an array
of group IDs which are acceptable and/or required.
.SS Instance properties of audio tracks
.TP
\f[B]autoGainControl\f[R]
A \f[CR]ConstrainBoolean\f[R] object which specifies whether automatic
gain control is preferred and/or required.
.TP
\f[B]channelCount\f[R]
A \f[CR]ConstrainULong\f[R] specifying the channel count or range of
channel counts which are acceptable and/or required.
.TP
\f[B]echoCancellation\f[R]
A \f[CR]ConstrainBoolean\f[R] object specifying whether or not echo
cancellation is preferred and/or required.
.TP
\f[B]latency\f[R]
A \f[CR]ConstrainDouble\f[R] specifying the latency or range of
latencies which are acceptable and/or required.
.TP
\f[B]noiseSuppression\f[R]
A \f[CR]ConstrainBoolean\f[R] which specifies whether noise suppression
is preferred and/or required.
.TP
\f[B]sampleRate\f[R]
A \f[CR]ConstrainULong\f[R] specifying the sample rate or range of
sample rates which are acceptable and/or required.
.TP
\f[B]sampleSize\f[R]
A \f[CR]ConstrainULong\f[R] specifying the sample size or range of
sample sizes which are acceptable and/or required.
.TP
\f[B]volume\f[R] \f[I](deprecated)\f[R] \f[I](non\-standard)\f[R]
A \f[CR]ConstrainDouble\f[R] specifying the volume or range of volumes
which are acceptable and/or required.
.SS Instance properties of image tracks
.TP
whiteBalanceMode
A \f[CR]String\f[R] specifying one of \f[CR]\(dqnone\(dq\f[R],
\f[CR]\(dqmanual\(dq\f[R], \f[CR]\(dqsingle\-shot\(dq\f[R], or
\f[CR]\(dqcontinuous\(dq\f[R].
.TP
exposureMode
A \f[CR]String\f[R] specifying one of \f[CR]\(dqnone\(dq\f[R],
\f[CR]\(dqmanual\(dq\f[R], \f[CR]\(dqsingle\-shot\(dq\f[R], or
\f[CR]\(dqcontinuous\(dq\f[R].
.TP
focusMode
A \f[CR]String\f[R] specifying one of \f[CR]\(dqnone\(dq\f[R],
\f[CR]\(dqmanual\(dq\f[R], \f[CR]\(dqsingle\-shot\(dq\f[R], or
\f[CR]\(dqcontinuous\(dq\f[R].
.TP
pointsOfInterest
The pixel coordinates on the sensor of one or more points of interest.
This is either an object in the form { x:\f[I]value\f[R],
y:\f[I]value\f[R] } or an array of such objects, where \f[I]value\f[R]
is a double\-precision integer.
.TP
exposureCompensation
A \f[CR]ConstrainDouble\f[R] (a double\-precision integer) specifying
f\-stop adjustment by up to Â±3.
.TP
colorTemperature
A \f[CR]ConstrainDouble\f[R] (a double\-precision integer) specifying a
desired color temperature in degrees kelvin.
.TP
iso
A \f[CR]ConstrainDouble\f[R] (a double\-precision integer) specifying a
desired iso setting.
.TP
brightness
A \f[CR]ConstrainDouble\f[R] (a double\-precision integer) specifying a
desired brightness setting.
.TP
contrast
A \f[CR]ConstrainDouble\f[R] (a double\-precision integer) specifying
the degree of difference between light and dark.
.TP
saturation
A \f[CR]ConstrainDouble\f[R] (a double\-precision integer) specifying
the degree of color intensity.
.TP
sharpness
A \f[CR]ConstrainDouble\f[R] (a double\-precision integer) specifying
the intensity of edges.
.TP
focusDistance
A \f[CR]ConstrainDouble\f[R] (a double\-precision integer) specifying
distance to a focused object.
.TP
zoom
A \f[CR]ConstrainDouble\f[R] (a double\-precision integer) specifying
the desired focal length.
.TP
torch
A boolean value defining whether the fill light is continuously
connected, meaning it stays on as long as the track is active.
.SS Instance properties of video tracks
.TP
\f[B]aspectRatio\f[R]
A \f[CR]ConstrainDouble\f[R] specifying the video aspect ratio or range
of aspect ratios which are acceptable and/or required.
.TP
\f[B]facingMode\f[R]
A \f[CR]ConstrainDOMString\f[R] object specifying a facing or an array
of facings which are acceptable and/or required.
.TP
\f[B]frameRate\f[R]
A \f[CR]ConstrainDouble\f[R] specifying the frame rate or range of frame
rates which are acceptable and/or required.
.TP
\f[B]height\f[R]
A \f[CR]ConstrainULong\f[R] specifying the video height or range of
heights which are acceptable and/or required.
.TP
\f[B]width\f[R]
A \f[CR]ConstrainULong\f[R] specifying the video width or range of
widths which are acceptable and/or required.
.TP
resizeMode
A \f[CR]ConstrainDOMString\f[R] object specifying a mode or an array of
modes the UA can use to derive the resolution of a video track.
Allowed values are \f[CR]none\f[R] and \f[CR]crop\-and\-scale\f[R].
\f[CR]none\f[R] means that the user agent uses the resolution provided
by the camera, its driver or the OS.
\f[CR]crop\-and\-scale\f[R] means that the user agent can use cropping
and downscaling on the camera output in order to satisfy other
constraints that affect the resolution.
.SS Instance properties of shared screen tracks
These constraints apply to the \f[CR]video\f[R] property of the object
passed into \f[CR]getDisplayMedia()\f[R] to obtain a stream for screen
sharing.
.TP
\f[B]displaySurface\f[R]
A \f[CR]ConstrainDOMString\f[R] which specifies the types of display
surface that may be selected by the user.
This may be a single one of the following strings, or a list of them to
allow multiple source surfaces:
.RS
.TP
\f[B]browser\f[R]
The stream contains the contents of a single browser tab selected by the
user.
.TP
\f[B]monitor\f[R]
The stream\(cqs video track contains the entire contents of one or more
of the user\(cqs screens.
.TP
\f[B]window\f[R]
The stream contains a single window selected by the user for sharing.
.RE
.TP
\f[B]logicalSurface\f[R]
A \f[CR]ConstrainBoolean\f[R] value which may contain a single Boolean
value or a set of them, indicating whether or not to allow the user to
choose source surfaces which do not directly correspond to display
areas.
These may include backing buffers for windows to allow capture of window
contents that are hidden by other windows in front of them, or buffers
containing larger documents that need to be scrolled through to see the
entire contents in their windows.
.TP
\f[B]suppressLocalAudioPlayback\f[R] \f[I](experimental)\f[R]
A \f[CR]ConstrainBoolean\f[R] value describing the requested or
mandatory constraints placed upon the value of the
\f[CR]suppressLocalAudioPlayback\f[R] constrainable property.
This property controls whether the audio playing in a tab will continue
to be played out of a user\(cqs local speakers when the tab is captured.
.SH SEE ALSO
.IP \(bu 2
Media Capture and Streams API
.IP \(bu 2
Capabilities, constraints, and settings
.IP \(bu 2
Screen Capture API
.IP \(bu 2
Using the Screen Capture API
.IP \(bu 2
\f[CR]MediaDevices.getUserMedia()\f[R]
.IP \(bu 2
\f[CR]MediaStreamTrack.getConstraints()\f[R]
.IP \(bu 2
\f[CR]MediaStreamTrack.applyConstraints()\f[R]
.IP \(bu 2
\f[CR]MediaDevices.getSupportedConstraints()\f[R]
.IP \(bu 2
\f[CR]MediaTrackSupportedConstraints\f[R]
.IP \(bu 2
\f[CR]MediaStreamTrack.getSettings()\f[R]
