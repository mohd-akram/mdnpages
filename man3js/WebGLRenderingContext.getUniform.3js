'\" t
.\" Automatically generated by Pandoc 3.4
.\"
.TH "WebGLRenderingContext.getUniform" "JS" "September 28, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
WebGLRenderingContext.getUniform \- WebGLRenderingContext: getUniform()
method
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]WebGLRenderingContext.getUniform()\f[B]\f[R] method of
the WebGL API returns the value of a uniform variable at a given
location.
.SH SYNTAX
.IP
.EX
getUniform(program, location)
.EE
.SS Parameters
.TP
\f[B]program\f[R]
A \f[CR]WebGLProgram\f[R] containing the uniform attribute.
.TP
\f[B]location\f[R]
A \f[CR]WebGLUniformLocation\f[R] object containing the location of the
uniform attribute to get.
.SS Return value
The returned type depends on the uniform type:
.PP
.TS
tab(@);
l l.
T{
Uniform type
T}@T{
Returned type
T}
_
T{
WebGL 1 only
T}@T{
T}
T{
\f[CR]boolean\f[R]
T}@T{
\[ga]GLBoolean\[ga]
T}
T{
\f[CR]int\f[R]
T}@T{
\[ga]GLint\[ga]
T}
T{
\f[CR]float\f[R]
T}@T{
\[ga]GLfloat\[ga]
T}
T{
\f[CR]vec2\f[R]
T}@T{
\[ga]Float32Array\[ga] (with 2 elements)
T}
T{
\f[CR]ivec2\f[R]
T}@T{
\[ga]Int32Array\[ga] (with 2 elements)
T}
T{
\f[CR]bvec2\f[R]
T}@T{
\[ga]Array\[ga] of \[ga]GLBoolean\[ga] (with 2 elements)
T}
T{
\f[CR]vec3\f[R]
T}@T{
\[ga]Float32Array\[ga] (with 3 elements)
T}
T{
\f[CR]ivec3\f[R]
T}@T{
\[ga]Int32Array\[ga] (with 3 elements)
T}
T{
\f[CR]bvec3\f[R]
T}@T{
\[ga]Array\[ga] of \[ga]GLBoolean\[ga] (with 3 elements)
T}
T{
\f[CR]vec4\f[R]
T}@T{
\[ga]Float32Array\[ga] (with 4 elements)
T}
T{
\f[CR]ivec4\f[R]
T}@T{
\[ga]Int32Array\[ga] (with 4 elements)
T}
T{
\f[CR]bvec4\f[R]
T}@T{
\[ga]Array\[ga] of \[ga]GLBoolean\[ga] (with 4 elements)
T}
T{
\f[CR]mat2\f[R]
T}@T{
\[ga]Float32Array\[ga] (with 4 elements)
T}
T{
\f[CR]mat3\f[R]
T}@T{
\[ga]Float32Array\[ga] (with 9 elements)
T}
T{
\f[CR]mat4\f[R]
T}@T{
\[ga]Float32Array\[ga] (with 16 elements)
T}
T{
\f[CR]sampler2D\f[R]
T}@T{
\[ga]GLint\[ga]
T}
T{
\f[CR]samplerCube\f[R]
T}@T{
\[ga]GLint\[ga]
T}
T{
Additionally available in WebGL 2
T}@T{
T}
T{
\f[CR]uint\f[R]
T}@T{
\[ga]GLuint\[ga]
T}
T{
\f[CR]uvec2\f[R]
T}@T{
\[ga]Uint32Array\[ga] (with 2 elements)
T}
T{
\f[CR]uvec3\f[R]
T}@T{
\[ga]Uint32Array\[ga] (with 3 elements)
T}
T{
\f[CR]uvec4\f[R]
T}@T{
\[ga]Uint32Array\[ga] (with 4 elements)
T}
T{
\f[CR]mat2x3\f[R]
T}@T{
\[ga]Float32Array\[ga] (with 6 elements)
T}
T{
\f[CR]mat2x4\f[R]
T}@T{
\[ga]Float32Array\[ga] (with 8 elements)
T}
T{
\f[CR]mat3x2\f[R]
T}@T{
\[ga]Float32Array\[ga] (with 6 elements)
T}
T{
\f[CR]mat3x4\f[R]
T}@T{
\[ga]Float32Array\[ga] (with 12 elements)
T}
T{
\f[CR]mat4x2\f[R]
T}@T{
\[ga]Float32Array\[ga] (with 8 elements)
T}
T{
\f[CR]mat4x3\f[R]
T}@T{
\[ga]Float32Array\[ga] (with 12 elements)
T}
T{
any sampler type
T}@T{
\[ga]GLint\[ga]
T}
.TE
.SH EXAMPLES
.IP
.EX
\f[B]const\f[R] loc = gl.getUniformLocation(program, \[dq]u_foobar\[dq]);
gl.getUniform(program, loc);
.EE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]WebGLUniformLocation\f[R]
.IP \[bu] 2
\f[CR]WebGLRenderingContext.getActiveUniform()\f[R]
