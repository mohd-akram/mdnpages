.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "HTMLMediaElement.ended_event" "JS" "September 10, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
HTMLMediaElement.ended_event \- HTMLMediaElement: ended event
.SH SYNOPSIS
The \f[CR]ended\f[R] event is fired when playback or streaming has
stopped because the end of the media was reached or because no further
data is available.
.PP
This event occurs based upon \f[CR]HTMLMediaElement\f[R]
(\f[CR]<audio>\f[R] and \f[CR]<video>\f[R]) fire \f[CR]ended\f[R] when
playback reaches the end of the media.
.PP
This event is not cancelable and does not bubble.
.RS
.PP
\f[B]Note:\f[R] The \f[CR]ended\f[R] event doesn\[cq]t fire if the
\f[CR]loop\f[R] property is \f[CR]true\f[R] and \f[CR]playbackRate\f[R]
is non\-negative.
.RE
.SH SYNTAX
Use the event name in methods like \f[CR]addEventListener()\f[R], or set
an event handler property.
.IP
.EX
addEventListener(\[dq]ended\[dq], (event) \f[B]=>\f[R] {});

onended = (event) \f[B]=>\f[R] {};
.EE
.SH EVENT TYPE
A generic \f[CR]Event\f[R].
.SH EXAMPLES
These examples add an event listener for the HTMLMediaElement\[cq]s
\f[CR]ended\f[R] event, then post a message when that event handler has
reacted to the event firing.
.PP
Using \f[CR]addEventListener()\f[R]:
.IP
.EX
\f[B]const\f[R] video = document.querySelector(\[dq]video\[dq]);

video.addEventListener(\[dq]ended\[dq], (event) \f[B]=>\f[R] {
  console.log(
    \[dq]Video stopped either because it has finished playing or no further data is available.\[dq],
  );
});
.EE
.PP
Using the \f[CR]onended\f[R] event handler property:
.IP
.EX
\f[B]const\f[R] video = document.querySelector(\[dq]video\[dq]);

video.onended = (event) \f[B]=>\f[R] {
  console.log(
    \[dq]Video stopped either because it has finished playing or no further data is available.\[dq],
  );
};
.EE
.SH RELATED EVENTS
.IP \[bu] 2
The HTMLMediaElement \f[CR]playing\f[R] event
.IP \[bu] 2
The HTMLMediaElement \f[CR]waiting\f[R] event
.IP \[bu] 2
The HTMLMediaElement \f[CR]seeking\f[R] event
.IP \[bu] 2
The HTMLMediaElement \f[CR]seeked\f[R] event
.IP \[bu] 2
The HTMLMediaElement \f[CR]loadedmetadata\f[R] event
.IP \[bu] 2
The HTMLMediaElement \f[CR]loadeddata\f[R] event
.IP \[bu] 2
The HTMLMediaElement \f[CR]canplay\f[R] event
.IP \[bu] 2
The HTMLMediaElement \f[CR]canplaythrough\f[R] event
.IP \[bu] 2
The HTMLMediaElement \f[CR]durationchange\f[R] event
.IP \[bu] 2
The HTMLMediaElement \f[CR]timeupdate\f[R] event
.IP \[bu] 2
The HTMLMediaElement \f[CR]play\f[R] event
.IP \[bu] 2
The HTMLMediaElement \f[CR]pause\f[R] event
.IP \[bu] 2
The HTMLMediaElement \f[CR]ratechange\f[R] event
.IP \[bu] 2
The HTMLMediaElement \f[CR]volumechange\f[R] event
.IP \[bu] 2
The HTMLMediaElement \f[CR]suspend\f[R] event
.IP \[bu] 2
The HTMLMediaElement \f[CR]emptied\f[R] event
.IP \[bu] 2
The HTMLMediaElement \f[CR]stalled\f[R] event
.SH SEE ALSO
.IP \[bu] 2
\f[CR]HTMLAudioElement\f[R]
.IP \[bu] 2
\f[CR]HTMLVideoElement\f[R]
.IP \[bu] 2
\f[CR]<audio>\f[R]
.IP \[bu] 2
\f[CR]<video>\f[R]
.IP \[bu] 2
Media Capture and Streams
.RS 2
.IP \[bu] 2
\f[CR]MediaStreamTrack\f[R]: \f[CR]ended\f[R] event
.RE
.IP \[bu] 2
Web Audio API
.RS 2
.IP \[bu] 2
Web audio API: ended event
.RE
