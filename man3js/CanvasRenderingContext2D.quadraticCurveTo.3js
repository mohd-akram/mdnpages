.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "CanvasRenderingContext2D.quadraticCurveTo" "JS" "April 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
CanvasRenderingContext2D.quadraticCurveTo \- CanvasRenderingContext2D:
quadraticCurveTo() method
.SH SYNOPSIS
The \f[B]\f[CB]CanvasRenderingContext2D.quadraticCurveTo()\f[B]\f[R]
method of the Canvas 2D API adds a quadratic Bézier curve to the current
sub\-path.
It requires two points: the first one is a control point and the second
one is the end point.
The starting point is the latest point in the current path, which can be
changed using \f[CR]moveTo()\f[R] before creating the quadratic Bézier
curve.
.SH SYNTAX
.IP
.EX
quadraticCurveTo(cpx, cpy, x, y)
.EE
.SS Parameters
.TP
\f[B]cpx\f[R]
The x\-axis coordinate of the control point.
.TP
\f[B]cpy\f[R]
The y\-axis coordinate of the control point.
.TP
\f[B]x\f[R]
The x\-axis coordinate of the end point.
.TP
\f[B]y\f[R]
The y\-axis coordinate of the end point.
.SS Return value
None (\f[CR]undefined\f[R]).
.SH EXAMPLES
.SS How quadraticCurveTo works
This example shows how a quadratic Bézier curve is drawn.
.SS HTML
.IP
.EX
<\f[B]canvas\f[R] id=\[dq]canvas\[dq]></\f[B]canvas\f[R]>
.EE
.SS JavaScript
.IP
.EX
\f[B]const\f[R] canvas = document.getElementById(\[dq]canvas\[dq]);
\f[B]const\f[R] ctx = canvas.getContext(\[dq]2d\[dq]);

\f[I]// Quadratic Bézier curve\f[R]
ctx.beginPath();
ctx.moveTo(50, 20);
ctx.quadraticCurveTo(230, 30, 50, 100);
ctx.stroke();

\f[I]// Start and end points\f[R]
ctx.fillStyle = \[dq]blue\[dq];
ctx.beginPath();
ctx.arc(50, 20, 5, 0, 2 * Math.PI); \f[I]// Start point\f[R]
ctx.arc(50, 100, 5, 0, 2 * Math.PI); \f[I]// End point\f[R]
ctx.fill();

\f[I]// Control point\f[R]
ctx.fillStyle = \[dq]red\[dq];
ctx.beginPath();
ctx.arc(230, 30, 5, 0, 2 * Math.PI);
ctx.fill();
.EE
.SS Result
In this example, the control point is red and the start and end points
are blue.
.SS A simple quadratic curve
This example draws a simple quadratic Bézier curve using
\f[CR]quadraticCurveTo()\f[R].
.SS HTML
.IP
.EX
<\f[B]canvas\f[R] id=\[dq]canvas\[dq]></\f[B]canvas\f[R]>
.EE
.SS JavaScript
The curve begins at the point specified by \f[CR]moveTo()\f[R]: (20,
110).
The control point is placed at (230, 150).
The curve ends at (250, 20).
.IP
.EX
\f[B]const\f[R] canvas = document.getElementById(\[dq]canvas\[dq]);
\f[B]const\f[R] ctx = canvas.getContext(\[dq]2d\[dq]);

ctx.beginPath();
ctx.moveTo(20, 110);
ctx.quadraticCurveTo(230, 150, 250, 20);
ctx.stroke();
.EE
.SS Result
.SH SEE ALSO
.IP \[bu] 2
The interface defining this method: \f[CR]CanvasRenderingContext2D\f[R]
.IP \[bu] 2
Bézier curve
