.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "Date.getTime" "JS" "February 11, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
Date.getTime \- Date.prototype.getTime()
.SH SYNOPSIS
The \f[B]\f[CB]getTime()\f[B]\f[R] method of \f[CR]Date\f[R] instances
returns the number of milliseconds for this date since the epoch, which
is defined as the midnight at the beginning of January 1, 1970, UTC.
.IP
.EX
\f[B]const\f[R] moonLanding = \f[B]new\f[R] Date(\[dq]July 20, 69 20:17:40 GMT+00:00\[dq]);

\f[I]// Milliseconds since Jan 1, 1970, 00:00:00.000 GMT\f[R]
console.log(moonLanding.getTime());
\f[I]// Expected output: \-14182940000\f[R]
.EE
.SH SYNTAX
.IP
.EX
getTime()
.EE
.SS Parameters
None.
.SS Return value
A number representing the timestamp, in milliseconds, of this date.
Returns \f[CR]NaN\f[R] if the date is invalid.
.SH DESCRIPTION
\f[CR]Date\f[R] objects are fundamentally represented by a timestamp,
and this method allows you to retrieve the timestamp.
You can use this method to help assign a date and time to another
\f[CR]Date\f[R] object.
This method is functionally equivalent to the \f[CR]valueOf()\f[R]
method.
.SH EXAMPLES
.SS Using getTime() for copying dates
Constructing a date object with the identical time value.
.IP
.EX
\f[I]// Since month is zero based, birthday will be January 10, 1995\f[R]
\f[B]const\f[R] birthday = \f[B]new\f[R] Date(1994, 12, 10);
\f[B]const\f[R] copy = \f[B]new\f[R] Date();
copy.setTime(birthday.getTime());
.EE
.SS Measuring execution time
Subtracting two subsequent \f[CR]getTime()\f[R] calls on newly generated
\f[CR]Date\f[R] objects, give the time span between these two calls.
This can be used to calculate the executing time of some operations.
See also \f[CR]Date.now()\f[R] to prevent instantiating unnecessary
\f[CR]Date\f[R] objects.
.IP
.EX
\f[B]let\f[R] end, start;

start = \f[B]new\f[R] Date();
\f[B]for\f[R] (\f[B]let\f[R] i = 0; i < 1000; i++) {
  Math.sqrt(i);
}
end = \f[B]new\f[R] Date();

console.log(\[ga]Operation took ${end.getTime() \- start.getTime()} msec\[ga]);
.EE
.RS
.PP
\f[B]Note:\f[R] In browsers that support the Performance API\[cq]s
high\-resolution time feature, \f[CR]Performance.now()\f[R] can provide
more reliable and precise measurements of elapsed time than
\f[CR]Date.now()\f[R].
.RE
.SH SEE ALSO
.IP \[bu] 2
\f[CR]Date.prototype.setTime()\f[R]
.IP \[bu] 2
\f[CR]Date.prototype.valueOf()\f[R]
.IP \[bu] 2
\f[CR]Date.now()\f[R]
