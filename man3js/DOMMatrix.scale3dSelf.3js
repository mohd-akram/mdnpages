.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "DOMMATRIX.SCALE3DSELF" "3JS" "March 18, 2025" "JavaScript" "JavaScript Reference Manual"
.SH NAME
DOMMatrix.scale3dSelf \- DOMMatrix: scale3dSelf() method
.SH SYNOPSIS
\f[B]Note:\f[R] This feature is available in Web Workers.
.PP
The \f[B]\f[CB]scale3dSelf()\f[B]\f[R] method of the
\f[CR]DOMMatrix\f[R] interface is a mutable transformation method that
modifies a matrix by applying a specified scaling factor to all three
axes, centered on the given origin, with a default origin of
\f[CR](0, 0, 0)\f[R], returning the 3D\-scaled matrix.
.PP
To 3D\-scale a matrix without mutating it, see
\f[CR]DOMMatrixReadOnly.scale3d()\f[R], which creates a new scaled
matrix while leaving the original unchanged.
.SH SYNTAX
.IP
.EX
scale3dSelf()
scale3dSelf(scale)
scale3dSelf(scale, originX)
scale3dSelf(scale, originX, originY)
scale3dSelf(scale, originX, originY, originZ)
.EE
.SS Parameters
.TP
\f[B]scale\f[R]
A multiplier; the scale value.
If no scale is supplied, this defaults to \f[CR]1\f[R].
If scale is not 1, the \f[CR]is2D\f[R] property of the current matrix is
set to \f[CR]false\f[R].
.TP
\f[B]originX\f[R] \f[I](optional)\f[R]
An x\-coordinate for the origin of the transformation.
If no origin is supplied, this defaults to \f[CR]0\f[R].
.TP
\f[B]originY\f[R] \f[I](optional)\f[R]
A y\-coordinate for the origin of the transformation.
If no origin is supplied, this defaults to \f[CR]0\f[R].
.TP
\f[B]originZ\f[R] \f[I](optional)\f[R]
A z\-coordinate for the origin of the transformation.
If no origin is supplied, this defaults to \f[CR]0\f[R].
.SS Return value
Returns itself; a \f[CR]DOMMatrix\f[R].
.SH EXAMPLES
.IP
.EX
\f[B]const\f[R] matrix = \f[B]new\f[R] DOMMatrix();
console.log(matrix.scale3dSelf(2).toString());
\f[I]/* matrix3d(\f[R]
\f[I]    2, 0, 0, 0, \f[R]
\f[I]    0, 2, 0, 0, \f[R]
\f[I]    0, 0, 2, 0, \f[R]
\f[I]    0, 0, 0, 1) */\f[R]
console.log(matrix.scale3dSelf(3.1, 25, 25, 1.25).toString());
\f[I]/* matrix3d(\f[R]
\f[I]    6.2, 0, 0, 0,\f[R]
\f[I]    0, 6.2, 0, 0, \f[R]
\f[I]    0, 0, 6.2, 0, \f[R]
\f[I]    \-105, \-105, \-5.25, 1) */\f[R]
console.log(matrix.toString());
\f[I]/* matrix3d(\f[R]
\f[I]    6.2, 0, 0, 0, \f[R]
\f[I]    0, 6.2, 0, 0, \f[R]
\f[I]    0, 0, 6.2, 0, \f[R]
\f[I]    \-105, \-105, \-5.25, 1) (same as above) */\f[R]
.EE
.SH SEE ALSO
.IP \(bu 2
\f[CR]DOMMatrixReadOnly.scale3d()\f[R]
.IP \(bu 2
\f[CR]DOMMatrix.scaleSelf()\f[R]
.IP \(bu 2
CSS \f[CR]transform\f[R] property and the \f[CR]scale3d()\f[R] and
\f[CR]matrix3d()\f[R] functions
.IP \(bu 2
CSS transforms module
.IP \(bu 2
SVG \f[CR]transform\f[R] attribute
.IP \(bu 2
\f[CR]CanvasRenderingContext2D\f[R] interface \f[CR]transform()\f[R]
method
