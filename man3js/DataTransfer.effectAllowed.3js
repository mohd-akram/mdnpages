.\" Automatically generated by Pandoc 3.7.0.1
.\"
.TH "DATATRANSFER.EFFECTALLOWED" "3JS" "April 7, 2023" "JavaScript" "JavaScript Reference Manual"
.SH NAME
DataTransfer.effectAllowed \- DataTransfer: effectAllowed property
.SH SYNOPSIS
The \f[B]\f[CB]DataTransfer.effectAllowed\f[B]\f[R] property specifies
the effect that is allowed for a drag operation.
The \f[I]copy\f[R] operation is used to indicate that the data being
dragged will be copied from its present location to the drop location.
The \f[I]move\f[R] operation is used to indicate that the data being
dragged will be moved, and the \f[I]link\f[R] operation is used to
indicate that some form of relationship or connection will be created
between the source and drop locations.
.PP
This property should be set in the \f[CR]dragstart\f[R] event to set the
desired drag effect for the drag source.
Within the \f[CR]dragenter\f[R] and \f[CR]dragover\f[R] event handlers,
this property will be set to whatever value was assigned during the
\f[CR]dragstart\f[R] event, thus \f[CR]effectAllowed\f[R] may be used to
determine which effect is permitted.
.PP
Assigning a value to \f[CR]effectAllowed\f[R] in events other than
\f[CR]dragstart\f[R] has no effect.
.SH VALUE
A string representing the drag operation that is allowed.
The possible values are:
.TP
\f[B]none\f[R]
The item may not be dropped.
.TP
\f[B]copy\f[R]
A copy of the source item may be made at the new location.
.TP
\f[B]copyLink\f[R]
A copy or link operation is permitted.
.TP
\f[B]copyMove\f[R]
A copy or move operation is permitted.
.TP
\f[B]link\f[R]
A link may be established to the source at the new location.
.TP
\f[B]linkMove\f[R]
A link or move operation is permitted.
.TP
\f[B]move\f[R]
An item may be moved to a new location.
.TP
\f[B]all\f[R]
All operations are permitted.
.TP
\f[B]uninitialized\f[R]
The default value when the effect has not been set, equivalent to all.
.PP
Assigning any other value to \f[CR]effectAllowed\f[R] has no effect and
the old value is retained.
.SH EXAMPLES
.SS Setting effectAllowed
In this example we set \f[CR]effectAllowed\f[R] to
\f[CR]\(dqmove\(dq\f[R] in the \f[CR]dragstart\f[R] handler.
.SS HTML
.IP
.EX
<\f[B]div\f[R]>
  <\f[B]p\f[R] id=\(dqsource\(dq draggable=\(dqtrue\(dq>
    Select this element, drag it to the Drop Zone and then release the selection
    to move the element.
  </\f[B]p\f[R]>
</\f[B]div\f[R]>
<\f[B]div\f[R] id=\(dqtarget\(dq>Drop Zone</\f[B]div\f[R]>
<\f[B]pre\f[R] id=\(dqoutput\(dq></\f[B]pre\f[R]>
<\f[B]button\f[R] id=\(dqreset\(dq>Reset</\f[B]button\f[R]>
.EE
.SS CSS
.IP
.EX
div {
  \f[B]margin\f[R]: 0em;
  \f[B]padding\f[R]: 2em;
}

source {
  \f[B]color\f[R]: blue;
  \f[B]border\f[R]: 1px solid black;
}

target {
  \f[B]border\f[R]: 1px solid black;
}

output {
  \f[B]height\f[R]: 100px;
  \f[B]overflow\f[R]: scroll;
}
.EE
.SS JavaScript
.IP
.EX
\f[B]function\f[R] dragstartHandler(ev) {
  log(\(gadragstart: effectAllowed = ${ev.dataTransfer.effectAllowed}\(ga);

  \f[I]// Add this element\(aqs id to the drag payload so the drop handler will\f[R]
  \f[I]// know which element to add to its tree\f[R]
  ev.dataTransfer.setData(\(dqtext\(dq, ev.target.id);
  ev.dataTransfer.effectAllowed = \(dqmove\(dq;
}

\f[B]function\f[R] dropHandler(ev) {
  log(\(gadrop: effectAllowed = ${ev.dataTransfer.effectAllowed}\(ga);

  ev.preventDefault();
  \f[I]// Get the id of the target and add the element to the target\(aqs DOM\f[R]
  \f[B]const\f[R] data = ev.dataTransfer.getData(\(dqtext\(dq);
  ev.target.appendChild(document.getElementById(data));
}

\f[B]function\f[R] dragoverHandler(ev) {
  log(\(gadragover: effectAllowed = ${ev.dataTransfer.effectAllowed}\(ga);
  ev.preventDefault();
}

\f[B]const\f[R] source = document.querySelector(\(dq#source\(dq);
\f[B]const\f[R] target = document.querySelector(\(dq#target\(dq);

source.addEventListener(\(dqdragstart\(dq, dragstartHandler);
target.addEventListener(\(dqdragover\(dq, dragoverHandler);
target.addEventListener(\(dqdrop\(dq, dropHandler);

\f[B]function\f[R] log(message) {
  \f[B]const\f[R] output = document.querySelector(\(dq#output\(dq);
  output.textContent = \(ga${output.textContent}\(rsn${message}\(ga;
  output.scrollTop = output.scrollHeight;
}

\f[B]const\f[R] reset = document.querySelector(\(dq#reset\(dq);
reset.addEventListener(\(dqclick\(dq, () \f[B]=>\f[R] document.location.reload());
.EE
.SS Result
.SH SEE ALSO
.IP \(bu 2
Drag and drop
.IP \(bu 2
Drag Operations
.IP \(bu 2
Recommended Drag Types
.IP \(bu 2
\c
.UR https://codepen.io/tech_query/pen/MqGgap
DataTransfer test \- Paste or Drag
.UE \c
