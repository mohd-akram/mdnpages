.\" Automatically generated by Pandoc 3.6.2
.\"
.TH "RTCPeerConnection.getSenders" "JS" "March 25, 2024" "JavaScript" "JavaScript Reference Manual"
.SH NAME
RTCPeerConnection.getSenders \- RTCPeerConnection: getSenders() method
.SH SYNOPSIS
The \f[B]\f[CB]getSenders()\f[B]\f[R] method of the
\f[CR]RTCPeerConnection\f[R] interface returns an array of
\f[CR]RTCRtpSender\f[R] objects, each of which represents the RTP sender
responsible for transmitting one track\[cq]s data.
A sender object provides methods and properties for examining and
controlling the encoding and transmission of the track\[cq]s data.
.SH SYNTAX
.IP
.EX
getSenders()
.EE
.SS Return value
An array of \f[CR]RTCRtpSender\f[R] objects, one for each track on the
connection.
The array is empty if there are no RTP senders on the connection.
.PP
The order of the returned \f[CR]RTCRtpSender\f[R] instances is not
defined by the specification, and may change from one call to
\f[CR]getSenders()\f[R] to the next.
.PP
The array does not include senders associated with transceivers that
have been stopped (following offer/answer).
.SH EXAMPLE
In this example, a \f[CR]setMuting()\f[R] function is shown.
This function takes as input an \f[CR]RTCPeerConnection\f[R],
\f[CR]pc\f[R], and a Boolean, \f[CR]muting\f[R].
The function gets the list of the peer connection\[cq]s senders and
iterates over every sender, setting the corresponding media track\[cq]s
\f[CR]enabled\f[R] to the inverse of the specified \f[CR]muting\f[R].
.IP
.EX
\f[B]function\f[R] setMuting(pc, muting) {
  \f[B]let\f[R] senderList = pc.getSenders();

  senderList.forEach((sender) \f[B]=>\f[R] {
    sender.track.enabled = !muting;
  });
}
.EE
.SH SEE ALSO
.IP \[bu] 2
WebRTC
.IP \[bu] 2
\f[CR]RTCRtpSender\f[R]
